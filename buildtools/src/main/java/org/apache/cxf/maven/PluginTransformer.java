begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|JarEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|JarOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugins
operator|.
name|shade
operator|.
name|resource
operator|.
name|ResourceTransformer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Content
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|JDOMException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|input
operator|.
name|SAXBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|output
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|output
operator|.
name|XMLOutputter
import|;
end_import

begin_class
specifier|public
class|class
name|PluginTransformer
implements|implements
name|ResourceTransformer
block|{
specifier|public
specifier|static
specifier|final
name|String
name|XSI_NS
init|=
literal|"http://www.w3.org/2001/XMLSchema-instance"
decl_stmt|;
name|String
name|resource
decl_stmt|;
name|Document
name|doc
decl_stmt|;
specifier|public
name|PluginTransformer
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|canTransformResource
parameter_list|(
name|String
name|r
parameter_list|)
block|{
name|r
operator|=
name|r
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
if|if
condition|(
name|resource
operator|!=
literal|null
operator|&&
name|resource
operator|.
name|toLowerCase
argument_list|()
operator|.
name|equals
argument_list|(
name|r
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|processResource
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
block|{
name|Document
name|r
decl_stmt|;
try|try
block|{
name|r
operator|=
operator|new
name|SAXBuilder
argument_list|()
operator|.
name|build
argument_list|(
name|is
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOMException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|doc
operator|==
literal|null
condition|)
block|{
name|doc
operator|=
name|r
expr_stmt|;
name|Element
name|el
init|=
name|doc
operator|.
name|getRootElement
argument_list|()
decl_stmt|;
name|el
operator|.
name|setAttribute
argument_list|(
literal|"name"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|el
operator|.
name|setAttribute
argument_list|(
literal|"provider"
argument_list|,
literal|"cxf.apache.org"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Element
name|root
init|=
name|r
operator|.
name|getRootElement
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|itr
init|=
name|root
operator|.
name|getChildren
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|itr
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Content
name|n
init|=
operator|(
name|Content
operator|)
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|itr
operator|.
name|remove
argument_list|()
expr_stmt|;
name|doc
operator|.
name|getRootElement
argument_list|()
operator|.
name|addContent
argument_list|(
name|n
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|boolean
name|hasTransformedResource
parameter_list|()
block|{
return|return
name|doc
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|modifyOutputStream
parameter_list|(
name|JarOutputStream
name|jos
parameter_list|)
throws|throws
name|IOException
block|{
name|jos
operator|.
name|putNextEntry
argument_list|(
operator|new
name|JarEntry
argument_list|(
name|resource
argument_list|)
argument_list|)
expr_stmt|;
operator|new
name|XMLOutputter
argument_list|(
name|Format
operator|.
name|getPrettyFormat
argument_list|()
argument_list|)
operator|.
name|output
argument_list|(
name|doc
argument_list|,
name|jos
argument_list|)
expr_stmt|;
name|doc
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

