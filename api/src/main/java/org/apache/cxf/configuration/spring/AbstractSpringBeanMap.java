begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|java
operator|.
name|beans
operator|.
name|PropertyDescriptor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|BeanUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|BeansException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|BeanInitializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|InitializingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContextAware
import|;
end_import

begin_class
specifier|abstract
class|class
name|AbstractSpringBeanMap
parameter_list|<
name|X
parameter_list|,
name|V
parameter_list|>
implements|implements
name|ApplicationContextAware
implements|,
name|InitializingBean
implements|,
name|MapProvider
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|6825008027450218536L
decl_stmt|;
specifier|protected
name|ApplicationContext
name|context
decl_stmt|;
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|type
decl_stmt|;
specifier|protected
name|String
name|idsProperty
decl_stmt|;
specifier|protected
name|String
name|staticFieldName
decl_stmt|;
specifier|protected
name|ConcurrentHashMap
argument_list|<
name|X
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|idToBeanName
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|X
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|ConcurrentHashMap
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
name|putStore
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
argument_list|(
literal|4
argument_list|,
literal|0.75f
argument_list|,
literal|4
argument_list|)
decl_stmt|;
specifier|public
name|void
name|setApplicationContext
parameter_list|(
name|ApplicationContext
name|ctx
parameter_list|)
throws|throws
name|BeansException
block|{
name|this
operator|.
name|context
operator|=
name|ctx
expr_stmt|;
block|}
specifier|public
name|void
name|afterPropertiesSet
parameter_list|()
throws|throws
name|Exception
block|{
name|processBeans
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
name|createMap
parameter_list|()
block|{
return|return
operator|new
name|SpringBeanMapWrapper
argument_list|()
return|;
block|}
specifier|protected
specifier|abstract
name|void
name|processBeans
parameter_list|(
name|ApplicationContext
name|beanFactory
parameter_list|)
function_decl|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|getBeanListForId
parameter_list|(
name|X
name|id
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|lst
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tmpLst
init|=
name|idToBeanName
operator|.
name|putIfAbsent
argument_list|(
name|id
argument_list|,
name|lst
argument_list|)
decl_stmt|;
if|if
condition|(
name|tmpLst
operator|!=
literal|null
condition|)
block|{
name|lst
operator|=
name|tmpLst
expr_stmt|;
block|}
return|return
name|lst
return|;
block|}
specifier|protected
name|Collection
argument_list|<
name|X
argument_list|>
name|getIds
parameter_list|(
name|Object
name|bean
parameter_list|)
block|{
try|try
block|{
name|PropertyDescriptor
name|pd
init|=
name|BeanUtils
operator|.
name|getPropertyDescriptor
argument_list|(
name|bean
operator|.
name|getClass
argument_list|()
argument_list|,
name|idsProperty
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|pd
operator|.
name|getReadMethod
argument_list|()
decl_stmt|;
name|Object
name|o
init|=
name|method
operator|.
name|invoke
argument_list|(
name|bean
argument_list|,
operator|new
name|Object
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|Collection
condition|)
block|{
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Collection
argument_list|<
name|?
argument_list|>
operator|)
name|method
operator|.
name|invoke
argument_list|(
name|bean
argument_list|,
operator|new
name|Object
index|[
literal|0
index|]
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|X
name|ar
index|[]
init|=
operator|(
name|X
index|[]
operator|)
name|o
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|ar
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BeanInitializationException
argument_list|(
literal|"Could not retrieve ids."
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BeanInitializationException
argument_list|(
literal|"Could not access id getter."
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InvocationTargetException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BeanInitializationException
argument_list|(
literal|"Could not invoke id getter."
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SecurityException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BeanInitializationException
argument_list|(
literal|"Could not invoke id getter."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Object
name|postProcessBeforeInitialization
parameter_list|(
name|Object
name|bean
parameter_list|,
name|String
name|beanName
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|bean
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getIdsProperty
parameter_list|()
block|{
return|return
name|idsProperty
return|;
block|}
specifier|public
name|void
name|setIdsProperty
parameter_list|(
name|String
name|idsProperty
parameter_list|)
block|{
name|this
operator|.
name|idsProperty
operator|=
name|idsProperty
expr_stmt|;
block|}
specifier|public
name|String
name|getStaticFieldName
parameter_list|()
block|{
return|return
name|staticFieldName
return|;
block|}
specifier|public
name|void
name|setStaticFieldName
parameter_list|(
name|String
name|staticFieldName
parameter_list|)
block|{
name|this
operator|.
name|staticFieldName
operator|=
name|staticFieldName
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|boolean
name|containsKey
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
return|return
name|idToBeanName
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
operator|||
name|putStore
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|containsValue
parameter_list|(
name|Object
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|Set
argument_list|<
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
argument_list|>
name|entrySet
parameter_list|()
block|{
name|Set
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
argument_list|>
name|entries
init|=
operator|new
name|LinkedHashSet
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|X
name|k
range|:
name|keySet
argument_list|()
control|)
block|{
name|entries
operator|.
name|add
argument_list|(
operator|new
name|Entry
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
argument_list|(
name|this
argument_list|,
name|k
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|entries
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|V
name|get
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|idToBeanName
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|names
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|name
range|:
name|names
control|)
block|{
name|context
operator|.
name|getBean
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|V
name|v
init|=
operator|(
name|V
operator|)
name|context
operator|.
name|getBean
argument_list|(
name|names
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|V
name|tmpV
init|=
name|putStore
operator|.
name|putIfAbsent
argument_list|(
operator|(
name|X
operator|)
name|key
argument_list|,
name|v
argument_list|)
decl_stmt|;
if|if
condition|(
name|tmpV
operator|!=
literal|null
condition|)
block|{
name|v
operator|=
name|tmpV
expr_stmt|;
block|}
name|idToBeanName
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
return|return
name|v
return|;
block|}
else|else
block|{
return|return
name|putStore
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
block|}
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|idToBeanName
operator|.
name|isEmpty
argument_list|()
operator|&&
name|putStore
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|X
argument_list|>
name|keySet
parameter_list|()
block|{
name|Set
argument_list|<
name|X
argument_list|>
name|keys
init|=
operator|new
name|LinkedHashSet
argument_list|<
name|X
argument_list|>
argument_list|()
decl_stmt|;
name|keys
operator|.
name|addAll
argument_list|(
name|putStore
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addAll
argument_list|(
name|idToBeanName
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|keys
return|;
block|}
specifier|public
name|V
name|put
parameter_list|(
name|X
name|key
parameter_list|,
name|V
name|value
parameter_list|)
block|{
comment|// Make sure we don't take the key from Spring any more
name|idToBeanName
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
return|return
name|putStore
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|void
name|putAll
parameter_list|(
name|Map
argument_list|<
name|?
extends|extends
name|X
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|m
parameter_list|)
block|{
name|putStore
operator|.
name|putAll
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
specifier|public
name|V
name|remove
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
name|V
name|v
init|=
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|v
operator|!=
literal|null
condition|)
block|{
name|idToBeanName
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|v
operator|=
name|putStore
operator|.
name|get
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
return|return
name|v
return|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|idToBeanName
operator|.
name|size
argument_list|()
operator|+
name|putStore
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|V
argument_list|>
name|values
parameter_list|()
block|{
name|List
argument_list|<
name|V
argument_list|>
name|values
init|=
operator|new
name|ArrayList
argument_list|<
name|V
argument_list|>
argument_list|()
decl_stmt|;
name|values
operator|.
name|addAll
argument_list|(
name|putStore
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|X
name|id
range|:
name|idToBeanName
operator|.
name|keySet
argument_list|()
control|)
block|{
name|values
operator|.
name|add
argument_list|(
name|get
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
specifier|public
specifier|static
class|class
name|Entry
parameter_list|<
name|X
parameter_list|,
name|V
parameter_list|>
implements|implements
name|Map
operator|.
name|Entry
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
block|{
specifier|private
name|AbstractSpringBeanMap
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
name|map
decl_stmt|;
specifier|private
name|X
name|key
decl_stmt|;
specifier|public
name|Entry
parameter_list|(
name|AbstractSpringBeanMap
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
name|map
parameter_list|,
name|X
name|key
parameter_list|)
block|{
name|this
operator|.
name|map
operator|=
name|map
expr_stmt|;
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
block|}
specifier|public
name|X
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
specifier|public
name|V
name|getValue
parameter_list|()
block|{
return|return
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|V
name|setValue
parameter_list|(
name|V
name|value
parameter_list|)
block|{
return|return
name|map
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|SpringBeanMapWrapper
extends|extends
name|ConcurrentHashMap
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
implements|implements
name|Map
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|8693455914470226111L
decl_stmt|;
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|containsKey
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|containsValue
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|containsValue
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
argument_list|<
name|X
argument_list|,
name|V
argument_list|>
argument_list|>
name|entrySet
parameter_list|()
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|entrySet
argument_list|()
return|;
block|}
specifier|public
name|V
name|get
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|X
argument_list|>
name|keySet
parameter_list|()
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|public
name|V
name|put
parameter_list|(
name|X
name|key
parameter_list|,
name|V
name|value
parameter_list|)
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|void
name|putAll
parameter_list|(
name|Map
argument_list|<
name|?
extends|extends
name|X
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|t
parameter_list|)
block|{
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|putAll
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|V
name|remove
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|remove
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|V
argument_list|>
name|values
parameter_list|()
block|{
return|return
name|AbstractSpringBeanMap
operator|.
name|this
operator|.
name|values
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

