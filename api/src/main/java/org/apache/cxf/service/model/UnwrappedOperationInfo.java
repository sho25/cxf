begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_class
specifier|public
class|class
name|UnwrappedOperationInfo
extends|extends
name|OperationInfo
block|{
name|OperationInfo
name|wrappedOp
decl_stmt|;
specifier|public
name|UnwrappedOperationInfo
parameter_list|(
name|OperationInfo
name|op
parameter_list|)
block|{
name|super
argument_list|(
name|op
argument_list|)
expr_stmt|;
name|wrappedOp
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|OperationInfo
name|getWrappedOperation
parameter_list|()
block|{
return|return
name|wrappedOp
return|;
block|}
specifier|public
name|boolean
name|isUnwrapped
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|FaultInfo
name|addFault
parameter_list|(
name|QName
name|name
parameter_list|,
name|QName
name|message
parameter_list|)
block|{
return|return
name|wrappedOp
operator|.
name|addFault
argument_list|(
name|name
argument_list|,
name|message
argument_list|)
return|;
block|}
specifier|public
name|FaultInfo
name|getFault
parameter_list|(
name|QName
name|name
parameter_list|)
block|{
return|return
name|wrappedOp
operator|.
name|getFault
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|FaultInfo
argument_list|>
name|getFaults
parameter_list|()
block|{
return|return
name|wrappedOp
operator|.
name|getFaults
argument_list|()
return|;
block|}
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|wrappedOp
operator|.
name|getProperty
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|wrappedOp
operator|.
name|getProperty
argument_list|(
name|name
argument_list|,
name|cls
argument_list|)
return|;
block|}
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|v
parameter_list|)
block|{
name|wrappedOp
operator|.
name|setProperty
argument_list|(
name|name
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addExtensor
parameter_list|(
name|Object
name|el
parameter_list|)
block|{
name|wrappedOp
operator|.
name|addExtensor
argument_list|(
name|el
argument_list|)
expr_stmt|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getExtensor
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|wrappedOp
operator|.
name|getExtensor
argument_list|(
name|cls
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|List
argument_list|<
name|T
argument_list|>
name|getExtensors
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|wrappedOp
operator|.
name|getExtensors
argument_list|(
name|cls
argument_list|)
return|;
block|}
block|}
end_class

end_unit

