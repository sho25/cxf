begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaAnnotated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaElement
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|MessagePartInfo
extends|extends
name|AbstractPropertiesHolder
implements|implements
name|NamedItem
block|{
specifier|private
name|QName
name|pname
decl_stmt|;
specifier|private
name|AbstractMessageContainer
name|mInfo
decl_stmt|;
specifier|private
name|boolean
name|isElement
decl_stmt|;
specifier|private
name|QName
name|typeName
decl_stmt|;
specifier|private
name|QName
name|elementName
decl_stmt|;
specifier|private
name|QName
name|concreteName
decl_stmt|;
specifier|private
name|XmlSchemaAnnotated
name|xmlSchema
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|typeClass
decl_stmt|;
specifier|private
name|int
name|index
decl_stmt|;
specifier|public
name|MessagePartInfo
parameter_list|(
name|QName
name|n
parameter_list|,
name|AbstractMessageContainer
name|info
parameter_list|)
block|{
name|mInfo
operator|=
name|info
expr_stmt|;
name|pname
operator|=
name|n
expr_stmt|;
block|}
comment|/**      * @return Returns the name.      */
specifier|public
name|QName
name|getName
parameter_list|()
block|{
return|return
name|pname
return|;
block|}
comment|/**      * @param n The name to set.      */
specifier|public
name|void
name|setName
parameter_list|(
name|QName
name|n
parameter_list|)
block|{
name|pname
operator|=
name|n
expr_stmt|;
block|}
specifier|public
name|QName
name|getConcreteName
parameter_list|()
block|{
return|return
name|concreteName
return|;
block|}
specifier|public
name|void
name|setConcreteName
parameter_list|(
name|QName
name|concreteName
parameter_list|)
block|{
name|this
operator|.
name|concreteName
operator|=
name|concreteName
expr_stmt|;
block|}
specifier|public
name|boolean
name|isElement
parameter_list|()
block|{
return|return
name|isElement
return|;
block|}
specifier|public
name|void
name|setElement
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|isElement
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|QName
name|getElementQName
parameter_list|()
block|{
if|if
condition|(
name|isElement
condition|)
block|{
return|return
name|elementName
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|QName
name|getTypeQName
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isElement
condition|)
block|{
return|return
name|typeName
return|;
block|}
elseif|else
if|if
condition|(
name|xmlSchema
operator|instanceof
name|XmlSchemaElement
condition|)
block|{
return|return
operator|(
operator|(
name|XmlSchemaElement
operator|)
name|xmlSchema
operator|)
operator|.
name|getSchemaTypeName
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|setTypeQName
parameter_list|(
name|QName
name|qn
parameter_list|)
block|{
name|isElement
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|concreteName
operator|==
literal|null
condition|)
block|{
name|concreteName
operator|=
operator|new
name|QName
argument_list|(
literal|null
argument_list|,
name|pname
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|typeName
operator|=
name|qn
expr_stmt|;
block|}
specifier|public
name|void
name|setElementQName
parameter_list|(
name|QName
name|qn
parameter_list|)
block|{
name|isElement
operator|=
literal|true
expr_stmt|;
name|elementName
operator|=
name|qn
expr_stmt|;
name|concreteName
operator|=
name|qn
expr_stmt|;
block|}
specifier|public
name|AbstractMessageContainer
name|getMessageInfo
parameter_list|()
block|{
return|return
name|mInfo
return|;
block|}
specifier|public
name|XmlSchemaAnnotated
name|getXmlSchema
parameter_list|()
block|{
return|return
name|xmlSchema
return|;
block|}
specifier|public
name|void
name|setXmlSchema
parameter_list|(
name|XmlSchemaAnnotated
name|xmlSchema
parameter_list|)
block|{
name|this
operator|.
name|xmlSchema
operator|=
name|xmlSchema
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getTypeClass
parameter_list|()
block|{
return|return
name|typeClass
return|;
block|}
specifier|public
name|void
name|setTypeClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|typeClass
parameter_list|)
block|{
name|this
operator|.
name|typeClass
operator|=
name|typeClass
expr_stmt|;
block|}
specifier|public
name|int
name|getIndex
parameter_list|()
block|{
return|return
name|index
return|;
block|}
specifier|public
name|void
name|setIndex
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|new
name|StringBuilder
argument_list|()
operator|.
name|append
argument_list|(
literal|"[MessagePartInfo name="
argument_list|)
operator|.
name|append
argument_list|(
name|getName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", ConcreteName="
argument_list|)
operator|.
name|append
argument_list|(
name|getConcreteName
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

