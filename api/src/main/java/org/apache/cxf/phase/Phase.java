begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
package|;
end_package

begin_class
specifier|public
class|class
name|Phase
implements|implements
name|Comparable
block|{
comment|// can be removed from once defined as default value in configuration metadata for bus
specifier|public
specifier|static
specifier|final
name|String
name|SETUP
init|=
literal|"setup"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SETUP_ENDING
init|=
literal|"setup-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_LOGICAL
init|=
literal|"pre-logical"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_LOGICAL_ENDING
init|=
literal|"pre-logical-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USER_LOGICAL
init|=
literal|"user-logical"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USER_LOGICAL_ENDING
init|=
literal|"user-logical-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_LOGICAL
init|=
literal|"post-logical"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_LOGICAL_ENDING
init|=
literal|"post-logical-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_MARSHAL
init|=
literal|"pre-marshal"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MARSHAL
init|=
literal|"marshal"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_MARSHAL
init|=
literal|"post-marshal"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MARSHAL_ENDING
init|=
literal|"marshal-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_PROTOCOL
init|=
literal|"pre-protocol"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_PROTOCOL_FRONTEND
init|=
literal|"pre-protocol-frontend"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_PROTOCOL_ENDING
init|=
literal|"pre-protocol-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USER_PROTOCOL
init|=
literal|"user-protocol"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USER_PROTOCOL_ENDING
init|=
literal|"user-protocol-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_PROTOCOL
init|=
literal|"post-protocol"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_PROTOCOL_ENDING
init|=
literal|"post-protocol-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PREPARE_SEND
init|=
literal|"prepare-send"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PREPARE_SEND_ENDING
init|=
literal|"prepare-send-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_STREAM
init|=
literal|"pre-stream"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_STREAM_ENDING
init|=
literal|"pre-stream-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USER_STREAM
init|=
literal|"user-stream"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USER_STREAM_ENDING
init|=
literal|"user-stream-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_STREAM
init|=
literal|"post-stream"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_STREAM_ENDING
init|=
literal|"post-stream-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|WRITE
init|=
literal|"write"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|WRITE_ENDING
init|=
literal|"write-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SEND
init|=
literal|"send"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SEND_ENDING
init|=
literal|"send-ending"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RECEIVE
init|=
literal|"receive"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|READ
init|=
literal|"read"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROTOCOL
init|=
literal|"protocol"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|UNMARSHAL
init|=
literal|"unmarshal"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PRE_INVOKE
init|=
literal|"pre-invoke"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INVOKE
init|=
literal|"invoke"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POST_INVOKE
init|=
literal|"post-invoke"
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|int
name|priority
decl_stmt|;
specifier|public
name|Phase
parameter_list|()
block|{     }
specifier|public
name|Phase
parameter_list|(
name|String
name|n
parameter_list|,
name|int
name|p
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|n
expr_stmt|;
name|this
operator|.
name|priority
operator|=
name|p
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|n
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|n
expr_stmt|;
block|}
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
specifier|public
name|void
name|setPriority
parameter_list|(
name|int
name|p
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|p
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|Phase
name|p
init|=
operator|(
name|Phase
operator|)
name|o
decl_stmt|;
return|return
name|p
operator|.
name|priority
operator|==
name|priority
operator|&&
name|p
operator|.
name|name
operator|.
name|equals
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|Phase
name|p
init|=
operator|(
name|Phase
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|priority
operator|==
name|p
operator|.
name|priority
condition|)
block|{
return|return
name|name
operator|.
name|compareTo
argument_list|(
name|p
operator|.
name|name
argument_list|)
return|;
block|}
return|return
name|priority
operator|-
name|p
operator|.
name|priority
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Phase("
operator|+
name|getName
argument_list|()
operator|+
literal|")"
return|;
block|}
block|}
end_class

end_unit

