begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|builder
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Attr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|builder
operator|.
name|primitive
operator|.
name|PrimitiveAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|PolicyComponent
import|;
end_import

begin_comment
comment|/**  * XmlPrimitiveAssertion is a primitive implementation of an AssertionBuilder  * that simply wraps the underlying xml element.  *   */
end_comment

begin_class
specifier|public
class|class
name|XmlPrimitiveAssertion
extends|extends
name|PrimitiveAssertion
block|{
specifier|private
name|Element
name|element
decl_stmt|;
comment|/**      * Constructs a XmlPrimitiveAssertion from an xml element.      *       * @param e the xml element      */
specifier|public
name|XmlPrimitiveAssertion
parameter_list|(
name|Element
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|element
operator|=
name|e
expr_stmt|;
block|}
comment|/**      * Returns the wrapped element.      *       * @return the wrapped element      */
specifier|public
name|Element
name|getValue
parameter_list|()
block|{
return|return
name|element
return|;
block|}
comment|/**      * Throws an UnsupportedOperationException since an assertion of an unknown      * element can't be fully normalized due to it's unknown composite.      */
specifier|public
name|PolicyComponent
name|normalize
parameter_list|(
name|boolean
name|isDeep
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|protected
name|PolicyAssertion
name|cloneMandatory
parameter_list|()
block|{
name|Element
name|e
init|=
operator|(
name|Element
operator|)
name|element
operator|.
name|cloneNode
argument_list|(
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|isOptional
argument_list|()
condition|)
block|{
name|Attr
name|att
init|=
name|PolicyConstants
operator|.
name|findOptionalAttribute
argument_list|(
name|e
argument_list|)
decl_stmt|;
if|if
condition|(
name|att
operator|!=
literal|null
condition|)
block|{
name|e
operator|.
name|removeAttributeNode
argument_list|(
name|att
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|XmlPrimitiveAssertion
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
end_class

end_unit

