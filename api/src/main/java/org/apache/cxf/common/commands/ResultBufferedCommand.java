begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|ResultBufferedCommand
extends|extends
name|ForkedCommand
block|{
specifier|private
name|ByteArrayOutputStream
name|bosOut
decl_stmt|;
specifier|private
name|ByteArrayOutputStream
name|bosError
decl_stmt|;
specifier|public
name|ResultBufferedCommand
parameter_list|()
block|{
name|init
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ResultBufferedCommand
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|super
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
specifier|public
name|InputStream
name|getOutput
parameter_list|()
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|this
operator|.
name|bosOut
operator|.
name|toByteArray
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|BufferedReader
name|getBufferedOutputReader
parameter_list|()
block|{
return|return
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|this
operator|.
name|bosOut
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|InputStream
name|getError
parameter_list|()
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|bosError
operator|.
name|toByteArray
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|BufferedReader
name|getBufferedErrorReader
parameter_list|()
block|{
return|return
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|bosError
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|void
name|init
parameter_list|()
block|{
name|bosOut
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|bosError
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|setOutputStream
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|bosOut
argument_list|)
argument_list|)
expr_stmt|;
name|setErrorStream
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|bosError
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

