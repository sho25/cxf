begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipFile
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipInputStream
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|JarResource
block|{
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getJarContents
parameter_list|(
name|URL
name|jarLocation
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|getJarContents
argument_list|(
name|jarLocation
operator|.
name|openStream
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getJarContents
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|load
argument_list|(
name|is
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getJarContents
parameter_list|(
name|String
name|jarLocation
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|getJarContents
argument_list|(
operator|new
name|File
argument_list|(
name|jarLocation
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getJarContents
parameter_list|(
name|File
name|jarFile
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|load
argument_list|(
name|jarFile
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|load
parameter_list|(
name|File
name|jarFile
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|jarContents
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
name|ZipFile
name|zf
init|=
operator|new
name|ZipFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
for|for
control|(
name|Enumeration
argument_list|<
name|?
extends|extends
name|ZipEntry
argument_list|>
name|e
init|=
name|zf
operator|.
name|entries
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ZipEntry
name|ze
init|=
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|ze
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
continue|continue;
block|}
name|jarContents
operator|.
name|add
argument_list|(
name|ze
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|zf
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ZipException
name|ze
parameter_list|)
block|{
name|ze
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|jarContents
return|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|load
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|jarContents
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
name|ZipInputStream
name|zis
init|=
operator|new
name|ZipInputStream
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|ZipEntry
name|ze
init|=
name|zis
operator|.
name|getNextEntry
argument_list|()
decl_stmt|;
while|while
condition|(
name|ze
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ze
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
continue|continue;
block|}
name|jarContents
operator|.
name|add
argument_list|(
name|ze
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ze
operator|=
name|zis
operator|.
name|getNextEntry
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done."
argument_list|)
expr_stmt|;
block|}
return|return
name|jarContents
return|;
block|}
block|}
end_class

end_unit

