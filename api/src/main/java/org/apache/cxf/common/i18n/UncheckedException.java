begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_class
specifier|public
class|class
name|UncheckedException
extends|extends
name|java
operator|.
name|lang
operator|.
name|RuntimeException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|protected
specifier|final
name|Message
name|message
decl_stmt|;
specifier|public
name|UncheckedException
parameter_list|(
name|Message
name|msg
parameter_list|)
block|{
name|message
operator|=
name|msg
expr_stmt|;
block|}
specifier|public
name|UncheckedException
parameter_list|(
name|Message
name|msg
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|super
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|message
operator|=
name|msg
expr_stmt|;
block|}
specifier|public
name|UncheckedException
parameter_list|(
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
name|cause
argument_list|)
expr_stmt|;
name|message
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|UncheckedException
parameter_list|(
name|Logger
name|log
parameter_list|,
name|String
name|msg
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|message
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
name|msg
argument_list|,
name|log
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UncheckedException
parameter_list|(
name|ResourceBundle
name|bundle
parameter_list|,
name|String
name|msg
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|message
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
name|msg
argument_list|,
name|bundle
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UncheckedException
parameter_list|(
name|Logger
name|log
parameter_list|,
name|String
name|msg
parameter_list|,
name|Throwable
name|t
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|super
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|message
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
name|msg
argument_list|,
name|log
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UncheckedException
parameter_list|(
name|ResourceBundle
name|bundle
parameter_list|,
name|String
name|msg
parameter_list|,
name|Throwable
name|t
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|super
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|message
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
name|msg
argument_list|,
name|bundle
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|!=
name|message
condition|)
block|{
return|return
name|message
operator|.
name|getCode
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|!=
name|message
condition|)
block|{
return|return
name|message
operator|.
name|toString
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

