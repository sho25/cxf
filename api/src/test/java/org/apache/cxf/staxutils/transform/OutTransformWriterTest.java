begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|transform
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|OutTransformWriterTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testDefaultNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|outMap
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com}*"
argument_list|,
literal|"{http://testbeans.com/v2}*"
argument_list|)
expr_stmt|;
name|OutTransformWriter
name|transformWriter
init|=
operator|new
name|OutTransformWriter
argument_list|(
name|writer
argument_list|,
name|outMap
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|"http://testbeans.com/v2"
argument_list|)
decl_stmt|;
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|TestBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|Marshaller
name|m
init|=
name|context
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
name|m
operator|.
name|marshal
argument_list|(
operator|new
name|TestBean
argument_list|()
argument_list|,
name|transformWriter
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"<?xml version='1.0' encoding='UTF-8'?>"
operator|+
literal|"<testBean xmlns=\"http://testbeans.com/v2\"><bean/></testBean>"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|os
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNamespaceConversion
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|outMap
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com}testBean"
argument_list|,
literal|"{http://testbeans.com/v2}testBean"
argument_list|)
expr_stmt|;
name|outMap
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com}bean"
argument_list|,
literal|"{http://testbeans.com/v3}bean"
argument_list|)
expr_stmt|;
name|OutTransformWriter
name|transformWriter
init|=
operator|new
name|OutTransformWriter
argument_list|(
name|writer
argument_list|,
name|outMap
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|TestBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|Marshaller
name|m
init|=
name|context
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
name|m
operator|.
name|marshal
argument_list|(
operator|new
name|TestBean
argument_list|()
argument_list|,
name|transformWriter
argument_list|)
expr_stmt|;
name|String
name|xmlPI
init|=
literal|"<?xml version='1.0' encoding='UTF-8'?>"
decl_stmt|;
name|String
name|start
init|=
literal|"<ps1:testBean xmlns:ps1=\"http://testbeans.com/v2\""
decl_stmt|;
name|String
name|expected1
init|=
name|xmlPI
operator|+
name|start
operator|+
literal|" xmlns:ps2=\"http://testbeans.com/v3\"><ps2:bean/></ps1:testBean>"
decl_stmt|;
name|String
name|expected2
init|=
name|xmlPI
operator|+
name|start
operator|+
literal|"><ps2:bean xmlns:ps2=\"http://testbeans.com/v3\"/></ps1:testBean>"
decl_stmt|;
name|String
name|out
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Output \""
operator|+
name|out
operator|+
literal|"\" does not match expected values"
argument_list|,
name|expected1
operator|.
name|equals
argument_list|(
name|out
argument_list|)
operator|||
name|expected2
operator|.
name|equals
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNamespaceConversionAndDefaultNS
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|outMap
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com}testBean"
argument_list|,
literal|"{http://testbeans.com/v2}testBean"
argument_list|)
expr_stmt|;
name|outMap
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com}bean"
argument_list|,
literal|"{http://testbeans.com/v3}bean"
argument_list|)
expr_stmt|;
name|OutTransformWriter
name|transformWriter
init|=
operator|new
name|OutTransformWriter
argument_list|(
name|writer
argument_list|,
name|outMap
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|"http://testbeans.com/v2"
argument_list|)
decl_stmt|;
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|TestBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|Marshaller
name|m
init|=
name|context
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
name|m
operator|.
name|marshal
argument_list|(
operator|new
name|TestBean
argument_list|()
argument_list|,
name|transformWriter
argument_list|)
expr_stmt|;
name|String
name|xmlPI
init|=
literal|"<?xml version='1.0' encoding='UTF-8'?>"
decl_stmt|;
name|String
name|start
init|=
literal|"<testBean xmlns=\"http://testbeans.com/v2\""
decl_stmt|;
name|String
name|expected1
init|=
name|xmlPI
operator|+
name|start
operator|+
literal|" xmlns:ps2=\"http://testbeans.com/v3\"><ps2:bean/></testBean>"
decl_stmt|;
name|String
name|expected2
init|=
name|xmlPI
operator|+
name|start
operator|+
literal|"><ps2:bean xmlns:ps2=\"http://testbeans.com/v3\"/></testBean>"
decl_stmt|;
name|String
name|out
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Output \""
operator|+
name|out
operator|+
literal|"\" does not match expected values"
argument_list|,
name|expected1
operator|.
name|equals
argument_list|(
name|out
argument_list|)
operator|||
name|expected2
operator|.
name|equals
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"testBean"
argument_list|,
name|namespace
operator|=
literal|"http://testbeans.com"
argument_list|)
specifier|public
specifier|static
class|class
name|TestBean
block|{
specifier|private
name|TestBean2
name|bean
init|=
operator|new
name|TestBean2
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"bean"
argument_list|,
name|namespace
operator|=
literal|"http://testbeans.com"
argument_list|)
specifier|public
name|void
name|setBean
parameter_list|(
name|TestBean2
name|bean
parameter_list|)
block|{
name|this
operator|.
name|bean
operator|=
name|bean
expr_stmt|;
block|}
specifier|public
name|TestBean2
name|getBean
parameter_list|()
block|{
return|return
name|bean
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|TestBean2
block|{     }
comment|// additional test cases
annotation|@
name|Test
specifier|public
name|void
name|testReplaceSimpleElement
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
literal|"<ns:test xmlns:ns=\"http://bar\"><ns:a>1</ns:a></ns:test>"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
operator|new
name|OutTransformWriter
argument_list|(
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|,
literal|null
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"{http://bar}a"
argument_list|,
literal|"{http://bar}a=1 2 3"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|is
argument_list|)
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|os
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|reader
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|bos
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"<ns:test xmlns:ns=\"http://bar\"><ns:a>1 2 3</ns:a></ns:test>"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithComplexRequestSameNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/transform/header/element}*"
argument_list|,
literal|"{http://cxf.apache.org/transform/header/element}*"
argument_list|)
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/complexReqIn1.xml"
argument_list|,
name|inMap
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|reader2
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|OutTransformWriter
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/complexReq1.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithComplexRequestMultipleNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/transform/header/element}*"
argument_list|,
literal|"{http://cxf.apache.org/transform/header/otherelement}*"
argument_list|)
expr_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/transform/test}*"
argument_list|,
literal|"{http://cxf.apache.org/transform/othertest}*"
argument_list|)
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/complexReqIn2.xml"
argument_list|,
name|inMap
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|reader2
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/complexReq2.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithComplexTransformationNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/transform/header/element}*"
argument_list|,
literal|"{http://cxf.apache.org/transform/header/otherelement}*"
argument_list|)
expr_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/transform/test}*"
argument_list|,
literal|"{http://cxf.apache.org/transform/othertest}*"
argument_list|)
expr_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://schemas.xmlsoap.org/soap/envelope/}Envelope"
argument_list|,
literal|"{http://schemas.xmlsoap.org/soap/envelope/}TheEnvelope"
argument_list|)
expr_stmt|;
comment|// set the block original reader flag to true
name|XMLStreamReader
name|reader
init|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/complexReqIn3.xml"
argument_list|,
name|inMap
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|reader2
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/complexReq3.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithComplexTransformationNamespace2
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com/double}*"
argument_list|,
literal|"{http://testbeans.com/double/v2}*"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://testbeans.com}*"
argument_list|,
literal|"{http://testbeans.com/v3}*"
argument_list|)
expr_stmt|;
comment|// the namespaces are prefixed in the input
name|XMLStreamReader
name|reader
init|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/doubleBeanIn1.xml"
argument_list|,
name|map
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|reader2
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/doubleBean.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// the child elements with the default namespace that is declared in the elements
name|reader
operator|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/doubleBeanIn2.xml"
argument_list|,
name|map
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|reader2
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/doubleBean.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// the child elements with the default namespace that is declared in their parent element
name|reader
operator|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/doubleBeanIn3.xml"
argument_list|,
name|map
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|reader2
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/doubleBean.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// writing each child separately (as the soap header children are serialized)
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
operator|new
name|OutTransformWriter
argument_list|(
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|,
name|map
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|boolean
name|nsset
init|=
literal|"ns3"
operator|.
name|equals
argument_list|(
name|writer
operator|.
name|getNamespaceContext
argument_list|()
operator|.
name|getPrefix
argument_list|(
literal|"http://testbeans.com/double"
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"ns3"
argument_list|,
literal|"testDoubleBean"
argument_list|,
literal|"http://testbeans.com/double"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|nsset
condition|)
block|{
name|writer
operator|.
name|writeNamespace
argument_list|(
literal|"ns3"
argument_list|,
literal|"http://testbeans.com/double"
argument_list|)
expr_stmt|;
block|}
name|nsset
operator|=
literal|""
operator|.
name|equals
argument_list|(
name|writer
operator|.
name|getNamespaceContext
argument_list|()
operator|.
name|getPrefix
argument_list|(
literal|"http://testbeans.com"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|""
argument_list|,
literal|"bean"
argument_list|,
literal|"http://testbeans.com"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|nsset
condition|)
block|{
name|writer
operator|.
name|writeNamespace
argument_list|(
literal|""
argument_list|,
literal|"http://testbeans.com"
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|nsset
operator|=
literal|""
operator|.
name|equals
argument_list|(
name|writer
operator|.
name|getNamespaceContext
argument_list|()
operator|.
name|getPrefix
argument_list|(
literal|"http://testbeans.com"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|""
argument_list|,
literal|"beanNext"
argument_list|,
literal|"http://testbeans.com"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|nsset
condition|)
block|{
name|writer
operator|.
name|writeNamespace
argument_list|(
literal|""
argument_list|,
literal|"http://testbeans.com"
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|reader
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|os
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reader2
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/doubleBean.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|org
operator|.
name|junit
operator|.
name|Ignore
specifier|public
name|void
name|testRemoveOneNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|inMap
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/vgop/serviceorder/v1_0}result"
argument_list|,
literal|"result"
argument_list|)
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|TransformTestUtils
operator|.
name|createOutTransformedStreamReader
argument_list|(
literal|"../resources/complexReqIn5.xml"
argument_list|,
name|inMap
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|reader2
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|InTransformReader
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"../resources/complexReq5.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|TransformTestUtils
operator|.
name|verifyReaders
argument_list|(
name|reader2
argument_list|,
name|reader
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithReplaceAppend
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"requestValue"
argument_list|,
literal|"{http://cxf.apache.org/hello_world_soap_http/types}requestType"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"requestValue"
argument_list|,
literal|"{http://cxf.apache.org/hello_world_soap_http/types}greetMe"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/greetMeReqIn1.xml"
argument_list|,
literal|"../resources/greetMeReq.xml"
argument_list|,
name|transformElements
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithReplaceAppendDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"requestValue"
argument_list|,
literal|"{http://cxf.apache.org/hello_world_soap_http/types}requestType"
argument_list|)
expr_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"{http://cxf.apache.org/hello_world_soap_http/types}requestDate"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"requestValue"
argument_list|,
literal|"{http://cxf.apache.org/hello_world_soap_http/types}greetMe"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|dropElements
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|dropElements
operator|.
name|add
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformAttributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformAttributes
operator|.
name|put
argument_list|(
literal|"num"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|transformAttributes
operator|.
name|put
argument_list|(
literal|"nombre"
argument_list|,
literal|"{http://cxf.apache.org/hello_world_soap_http/types}name"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/greetMeReqIn2.xml"
argument_list|,
literal|"../resources/greetMeReq.xml"
argument_list|,
name|transformElements
argument_list|,
name|appendElements
argument_list|,
name|dropElements
argument_list|,
name|transformAttributes
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithChangeNamespaces
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"*"
argument_list|,
literal|"{http://cxf.apache.org/hello_world_soap_http/types}*"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/greetMeReqIn3.xml"
argument_list|,
literal|"../resources/greetMeReq.xml"
argument_list|,
name|transformElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithDeleteAttributes
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformAttributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformAttributes
operator|.
name|put
argument_list|(
literal|"{http://www.w3.org/2001/XMLSchema-instance}type"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/greetMeReqIn4.xml"
argument_list|,
literal|"../resources/greetMeReq.xml"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|transformAttributes
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPreInclude1
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}ItemId"
argument_list|,
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}IdType=ASIN"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/amazonIn1.xml"
argument_list|,
literal|"../resources/amazon.xml"
argument_list|,
literal|null
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPreInclude2
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}ItemId"
argument_list|,
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}IdType=ASIN"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/amazonIn1nospace.xml"
argument_list|,
literal|"../resources/amazon.xml"
argument_list|,
literal|null
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPreWrap1
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"payload"
argument_list|,
literal|"{http://www.w3.org/2003/05/soap-envelope}Envelope"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://apache.org/cxf/calculator/types}add"
argument_list|,
literal|"{http://www.w3.org/2003/05/soap-envelope}Body"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/AddRequestIn2.xml"
argument_list|,
literal|"../resources/AddRequest2.xml"
argument_list|,
name|transformElements
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPreWrap2
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"payload"
argument_list|,
literal|"{http://www.w3.org/2003/05/soap-envelope}Envelope"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://apache.org/cxf/calculator/types}add"
argument_list|,
literal|"{http://www.w3.org/2003/05/soap-envelope}Body"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/AddRequestIn2nospace.xml"
argument_list|,
literal|"../resources/AddRequest2.xml"
argument_list|,
name|transformElements
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPostInclude1
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}Request/"
argument_list|,
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}ItemId=0486411214"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/amazonIn2.xml"
argument_list|,
literal|"../resources/amazon.xml"
argument_list|,
literal|null
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPostInclude2
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}Request/"
argument_list|,
literal|"{http://xml.amazon.com/AWSECommerceService/2004-08-01}ItemId=0486411214"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/amazonIn2nospace.xml"
argument_list|,
literal|"../resources/amazon.xml"
argument_list|,
literal|null
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPostWrap1
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://www.w3.org/2003/05/soap-envelope}Body/"
argument_list|,
literal|"{http://apache.org/cxf/calculator/types}add"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/AddRequestIn1.xml"
argument_list|,
literal|"../resources/AddRequest.xml"
argument_list|,
literal|null
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPostWrap2
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"{http://www.w3.org/2003/05/soap-envelope}Body/"
argument_list|,
literal|"{http://apache.org/cxf/calculator/types}add"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/AddRequestIn1nospace.xml"
argument_list|,
literal|"../resources/AddRequest.xml"
argument_list|,
literal|null
argument_list|,
name|appendElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWithAppendPostWrapReplaceDrop
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"payload"
argument_list|,
literal|"{http://www.w3.org/2003/05/soap-envelope}Envelope"
argument_list|)
expr_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"params"
argument_list|,
literal|"{http://apache.org/cxf/calculator/types}add"
argument_list|)
expr_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"i1"
argument_list|,
literal|"{http://apache.org/cxf/calculator/types}arg0"
argument_list|)
expr_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"i2"
argument_list|,
literal|"{http://apache.org/cxf/calculator/types}arg1"
argument_list|)
expr_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"i3"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appendElements
operator|.
name|put
argument_list|(
literal|"payload/"
argument_list|,
literal|"{http://www.w3.org/2003/05/soap-envelope}Body"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|dropElements
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|dropElements
operator|.
name|add
argument_list|(
literal|"param"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/AddRequestIn3.xml"
argument_list|,
literal|"../resources/AddRequest3.xml"
argument_list|,
name|transformElements
argument_list|,
name|appendElements
argument_list|,
name|dropElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOldSTSTransform
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512}*"
argument_list|,
literal|"{http://schemas.xmlsoap.org/ws/2005/02/trust}*"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/wstrustReqSTRCIn1.xml"
argument_list|,
literal|"../resources/wstrustReqSTRC.xml"
argument_list|,
name|transformElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPreservePrefixBindings
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|transformElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|transformElements
operator|.
name|put
argument_list|(
literal|"{urn:abc}*"
argument_list|,
literal|"{urn:a}*"
argument_list|)
expr_stmt|;
name|TransformTestUtils
operator|.
name|transformOutStreamAndCompare
argument_list|(
literal|"../resources/multiNSIn1.xml"
argument_list|,
literal|"../resources/multiNS.xml"
argument_list|,
name|transformElements
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceDefaultNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
literal|"<test xmlns=\"http://bar\"><a>1</a></test>"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
operator|new
name|OutTransformWriter
argument_list|(
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|is
argument_list|)
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|os
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|reader
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|bos
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"<ps1:test xmlns:ps1=\"http://bar\"><ps1:a>1</ps1:a></ps1:test>"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

