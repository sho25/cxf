begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|strategy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|URIMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jra
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jra
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jra
operator|.
name|HttpResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jra
operator|.
name|Post
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jra
operator|.
name|Put
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|HttpConstants
operator|.
name|DELETE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|HttpConstants
operator|.
name|GET
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|HttpConstants
operator|.
name|POST
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|HttpConstants
operator|.
name|PUT
import|;
end_import

begin_comment
comment|/**  * A strategy to map BindingOperationInfos to URI/Verb combos utilizing the  *<a href="http://jra.codehaus.org">Java Rest Annotations</a>.  */
end_comment

begin_class
specifier|public
class|class
name|JRAStrategy
implements|implements
name|ResourceStrategy
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|JRAStrategy
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|boolean
name|map
parameter_list|(
name|BindingOperationInfo
name|bop
parameter_list|,
name|Method
name|m
parameter_list|,
name|URIMapper
name|mapper
parameter_list|)
block|{
name|HttpResource
name|r
init|=
name|m
operator|.
name|getAnnotation
argument_list|(
name|HttpResource
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|String
name|verb
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|isAnnotationPresent
argument_list|(
name|Get
operator|.
name|class
argument_list|)
condition|)
block|{
name|verb
operator|=
name|GET
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|m
operator|.
name|isAnnotationPresent
argument_list|(
name|Post
operator|.
name|class
argument_list|)
condition|)
block|{
name|verb
operator|=
name|POST
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|m
operator|.
name|isAnnotationPresent
argument_list|(
name|Put
operator|.
name|class
argument_list|)
condition|)
block|{
name|verb
operator|=
name|PUT
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|m
operator|.
name|isAnnotationPresent
argument_list|(
name|Delete
operator|.
name|class
argument_list|)
condition|)
block|{
name|verb
operator|=
name|DELETE
expr_stmt|;
block|}
else|else
block|{
name|verb
operator|=
name|POST
expr_stmt|;
block|}
name|mapper
operator|.
name|bind
argument_list|(
name|bop
argument_list|,
name|r
operator|.
name|location
argument_list|()
argument_list|,
name|verb
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Mapping method "
operator|+
name|m
operator|.
name|getName
argument_list|()
operator|+
literal|" to resource "
operator|+
name|r
operator|.
name|location
argument_list|()
operator|+
literal|" and verb "
operator|+
name|verb
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

