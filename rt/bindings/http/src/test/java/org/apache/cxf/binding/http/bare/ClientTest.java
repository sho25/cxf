begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|bare
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|BindingFactoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|AbstractRestTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|http
operator|.
name|HttpBindingFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|Customers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|bare
operator|.
name|CustomerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|bare
operator|.
name|GetCustomer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|bare
operator|.
name|GetCustomers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ServerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ClientTest
extends|extends
name|AbstractRestTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|BindingFactoryManager
name|bfm
init|=
name|getBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|BindingFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|bfm
operator|.
name|registerBindingFactory
argument_list|(
name|HttpBindingFactory
operator|.
name|HTTP_BINDING_ID
argument_list|,
operator|new
name|HttpBindingFactory
argument_list|()
argument_list|)
expr_stmt|;
name|JaxWsServerFactoryBean
name|sf
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setServiceClass
argument_list|(
name|CustomerService
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setWrapped
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:9002/foo/"
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setServiceBean
argument_list|(
operator|new
name|CustomerService
argument_list|()
argument_list|)
expr_stmt|;
comment|//sf.setBindingId(HttpBindingFactory.HTTP_BINDING_ID);
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"contextMatchStrategy"
argument_list|,
literal|"stem"
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|ServerImpl
name|svr
init|=
operator|(
name|ServerImpl
operator|)
name|sf
operator|.
name|create
argument_list|()
decl_stmt|;
name|svr
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|ClientImpl
name|client
init|=
operator|new
name|ClientImpl
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|svr
operator|.
name|getEndpoint
argument_list|()
argument_list|)
decl_stmt|;
name|Object
index|[]
name|objects
init|=
name|client
operator|.
name|invoke
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/jra"
argument_list|,
literal|"getCustomers"
argument_list|)
argument_list|,
operator|new
name|GetCustomers
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|objects
argument_list|)
expr_stmt|;
name|Customers
name|c
init|=
operator|(
name|Customers
operator|)
name|objects
index|[
literal|0
index|]
decl_stmt|;
name|Customer
name|customer
init|=
name|c
operator|.
name|getCustomer
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Dan Diephouse"
argument_list|,
name|customer
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|GetCustomer
name|getCustomer
init|=
operator|new
name|GetCustomer
argument_list|()
decl_stmt|;
name|getCustomer
operator|.
name|setId
argument_list|(
name|customer
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|objects
operator|=
name|client
operator|.
name|invoke
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/jra"
argument_list|,
literal|"getCustomer"
argument_list|)
argument_list|,
name|getCustomer
argument_list|)
expr_stmt|;
name|customer
operator|=
operator|(
name|Customer
operator|)
name|objects
index|[
literal|0
index|]
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dan Diephouse"
argument_list|,
name|customer
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//
comment|//        objects = client.invoke(new QName("http://cxf.apache.org/jra", "deleteCustomer"),
comment|//        customer.getId());
comment|//        assertTrue(objects == null || objects.length == 0);
comment|//
name|svr
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

