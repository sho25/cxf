begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|object
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|AbstractCXFTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Conduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiatorManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|MessageObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|local
operator|.
name|LocalConduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|local
operator|.
name|LocalTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ObjectBindingTest
extends|extends
name|AbstractCXFTest
block|{
specifier|private
name|Message
name|response
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testServer
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerFactoryBean
name|sfb
init|=
operator|new
name|ServerFactoryBean
argument_list|()
decl_stmt|;
name|sfb
operator|.
name|setBindingId
argument_list|(
name|ObjectBindingFactory
operator|.
name|BINDING_ID
argument_list|)
expr_stmt|;
name|sfb
operator|.
name|setServiceClass
argument_list|(
name|EchoImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|sfb
operator|.
name|setAddress
argument_list|(
literal|"local://Echo"
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|sfb
operator|.
name|create
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|content
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|content
operator|.
name|add
argument_list|(
literal|"Hello"
argument_list|)
expr_stmt|;
name|ServiceInfo
name|serviceInfo
init|=
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getService
argument_list|()
decl_stmt|;
name|BindingInfo
name|bi
init|=
name|serviceInfo
operator|.
name|getBindings
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|BindingOperationInfo
name|bop
init|=
name|bi
operator|.
name|getOperations
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|bop
operator|.
name|getOperationInfo
argument_list|()
argument_list|)
expr_stmt|;
name|MessageImpl
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|setContent
argument_list|(
name|List
operator|.
name|class
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|ExchangeImpl
name|ex
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|ex
operator|.
name|setInMessage
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|ex
operator|.
name|put
argument_list|(
name|BindingOperationInfo
operator|.
name|class
argument_list|,
name|bop
argument_list|)
expr_stmt|;
name|Conduit
name|c
init|=
name|getLocalConduit
argument_list|(
literal|"local://Echo"
argument_list|)
decl_stmt|;
name|ex
operator|.
name|setConduit
argument_list|(
name|c
argument_list|)
expr_stmt|;
operator|new
name|ObjectDispatchOutInterceptor
argument_list|()
operator|.
name|handleMessage
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|ex
operator|.
name|setConduit
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|c
operator|.
name|setMessageObserver
argument_list|(
operator|new
name|MessageObserver
argument_list|()
block|{
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|response
operator|=
name|message
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|c
operator|.
name|prepare
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|c
operator|.
name|close
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|content2
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|response
operator|.
name|getContent
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|content2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|content2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClient
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientFactoryBean
name|cfb
init|=
operator|new
name|ClientFactoryBean
argument_list|()
decl_stmt|;
name|cfb
operator|.
name|setBindingId
argument_list|(
name|ObjectBindingFactory
operator|.
name|BINDING_ID
argument_list|)
expr_stmt|;
name|cfb
operator|.
name|setServiceClass
argument_list|(
name|EchoImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|cfb
operator|.
name|setAddress
argument_list|(
literal|"local://Echo"
argument_list|)
expr_stmt|;
name|Client
name|client
init|=
name|cfb
operator|.
name|create
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|content
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|content
operator|.
name|add
argument_list|(
literal|"Hello"
argument_list|)
expr_stmt|;
specifier|final
name|Destination
name|d
init|=
name|getLocalDestination
argument_list|(
literal|"local://Echo"
argument_list|)
decl_stmt|;
name|d
operator|.
name|setMessageObserver
argument_list|(
operator|new
name|MessageObserver
argument_list|()
block|{
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|inMsg
parameter_list|)
block|{
comment|// formulate the response message
name|MessageImpl
name|outMsg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|outMsg
operator|.
name|setContent
argument_list|(
name|List
operator|.
name|class
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|outMsg
operator|.
name|put
argument_list|(
name|LocalConduit
operator|.
name|DIRECT_DISPATCH
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|inMsg
operator|.
name|getExchange
argument_list|()
operator|.
name|setInMessage
argument_list|(
name|outMsg
argument_list|)
expr_stmt|;
try|try
block|{
name|Conduit
name|backChannel
init|=
name|d
operator|.
name|getBackChannel
argument_list|(
name|inMsg
argument_list|)
decl_stmt|;
name|backChannel
operator|.
name|prepare
argument_list|(
name|outMsg
argument_list|)
expr_stmt|;
name|backChannel
operator|.
name|close
argument_list|(
name|outMsg
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|Object
index|[]
name|res
init|=
name|client
operator|.
name|invoke
argument_list|(
literal|"echo"
argument_list|,
name|content
operator|.
name|toArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello"
argument_list|,
name|res
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClientServer
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientFactoryBean
name|cfb
init|=
operator|new
name|ClientFactoryBean
argument_list|()
decl_stmt|;
name|cfb
operator|.
name|setBindingId
argument_list|(
name|ObjectBindingFactory
operator|.
name|BINDING_ID
argument_list|)
expr_stmt|;
name|cfb
operator|.
name|setServiceClass
argument_list|(
name|EchoImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|cfb
operator|.
name|setAddress
argument_list|(
literal|"local://Echo"
argument_list|)
expr_stmt|;
name|Client
name|client
init|=
name|cfb
operator|.
name|create
argument_list|()
decl_stmt|;
name|ServerFactoryBean
name|sfb
init|=
operator|new
name|ServerFactoryBean
argument_list|()
decl_stmt|;
name|sfb
operator|.
name|setBindingId
argument_list|(
name|ObjectBindingFactory
operator|.
name|BINDING_ID
argument_list|)
expr_stmt|;
name|sfb
operator|.
name|setServiceClass
argument_list|(
name|EchoImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|sfb
operator|.
name|setAddress
argument_list|(
literal|"local://Echo"
argument_list|)
expr_stmt|;
name|sfb
operator|.
name|create
argument_list|()
expr_stmt|;
name|Object
index|[]
name|res
init|=
name|client
operator|.
name|invoke
argument_list|(
literal|"echo"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"Hello"
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello"
argument_list|,
name|res
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Destination
name|getLocalDestination
parameter_list|(
name|String
name|string
parameter_list|)
throws|throws
name|BusException
throws|,
name|IOException
block|{
name|DestinationFactoryManager
name|dfm
init|=
name|getBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|DestinationFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|DestinationFactory
name|df
init|=
name|dfm
operator|.
name|getDestinationFactory
argument_list|(
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|)
decl_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|()
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|string
argument_list|)
expr_stmt|;
return|return
name|df
operator|.
name|getDestination
argument_list|(
name|ei
argument_list|,
name|getBus
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Conduit
name|getLocalConduit
parameter_list|(
name|String
name|string
parameter_list|)
throws|throws
name|BusException
throws|,
name|IOException
block|{
name|ConduitInitiatorManager
name|cim
init|=
name|getBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|ConduitInitiatorManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ConduitInitiator
name|ci
init|=
name|cim
operator|.
name|getConduitInitiator
argument_list|(
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|)
decl_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|()
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|string
argument_list|)
expr_stmt|;
return|return
name|ci
operator|.
name|getConduit
argument_list|(
name|ei
argument_list|,
name|getBus
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

