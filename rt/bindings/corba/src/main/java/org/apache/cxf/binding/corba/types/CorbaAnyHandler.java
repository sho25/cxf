begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|CorbaBindingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|CorbaTypeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Any
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaAnyHandler
extends|extends
name|CorbaObjectHandler
block|{
specifier|private
name|Any
name|value
decl_stmt|;
specifier|private
name|CorbaObjectHandler
name|containedType
decl_stmt|;
specifier|private
name|CorbaTypeMap
name|typeMap
decl_stmt|;
specifier|public
name|CorbaAnyHandler
parameter_list|(
name|QName
name|anyName
parameter_list|,
name|QName
name|anyIdlType
parameter_list|,
name|TypeCode
name|anyTC
parameter_list|,
name|Object
name|anyType
parameter_list|)
block|{
name|super
argument_list|(
name|anyName
argument_list|,
name|anyIdlType
argument_list|,
name|anyTC
argument_list|,
name|anyType
argument_list|)
expr_stmt|;
name|value
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|Any
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
name|void
name|setAnyContainedType
parameter_list|(
name|CorbaObjectHandler
name|obj
parameter_list|)
block|{
name|containedType
operator|=
name|obj
expr_stmt|;
block|}
specifier|public
name|CorbaObjectHandler
name|getAnyContainedType
parameter_list|()
block|{
return|return
name|containedType
return|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|value
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|void
name|setTypeMap
parameter_list|(
name|CorbaTypeMap
name|tm
parameter_list|)
block|{
name|typeMap
operator|=
name|tm
expr_stmt|;
block|}
specifier|public
name|CorbaTypeMap
name|getTypeMap
parameter_list|()
block|{
return|return
name|typeMap
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|Any
name|v
parameter_list|)
throws|throws
name|CorbaBindingException
block|{
name|value
operator|=
name|v
expr_stmt|;
block|}
block|}
end_class

end_unit

