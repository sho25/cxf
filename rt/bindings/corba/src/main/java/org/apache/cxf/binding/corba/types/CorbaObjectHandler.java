begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|CorbaStreamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Any
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TCKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_comment
comment|// This class serves as a base for all other specific object type handlers and
end_comment

begin_comment
comment|// provides basic functionality that is common for all objects.
end_comment

begin_class
specifier|public
class|class
name|CorbaObjectHandler
block|{
specifier|protected
name|QName
name|name
decl_stmt|;
specifier|protected
name|QName
name|idlType
decl_stmt|;
specifier|protected
name|TypeCode
name|typeCode
decl_stmt|;
specifier|protected
name|CorbaType
name|type
decl_stmt|;
specifier|protected
name|boolean
name|isAnon
decl_stmt|;
specifier|protected
name|boolean
name|isRecursive
decl_stmt|;
specifier|public
name|CorbaObjectHandler
parameter_list|()
block|{     }
specifier|public
name|CorbaObjectHandler
parameter_list|(
name|QName
name|objName
parameter_list|,
name|QName
name|objIdlType
parameter_list|,
name|TypeCode
name|objTC
parameter_list|,
name|Object
name|objType
parameter_list|)
block|{
name|name
operator|=
name|objName
expr_stmt|;
name|idlType
operator|=
name|objIdlType
expr_stmt|;
name|typeCode
operator|=
name|objTC
expr_stmt|;
name|type
operator|=
operator|(
name|CorbaType
operator|)
name|objType
expr_stmt|;
block|}
specifier|public
name|QName
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|String
name|getSimpleName
parameter_list|()
block|{
return|return
name|name
operator|.
name|getLocalPart
argument_list|()
return|;
block|}
specifier|public
name|QName
name|getIdlType
parameter_list|()
block|{
return|return
name|idlType
return|;
block|}
specifier|public
name|TypeCode
name|getTypeCode
parameter_list|()
block|{
return|return
name|typeCode
return|;
block|}
specifier|public
name|TCKind
name|getTypeCodeKind
parameter_list|()
block|{
return|return
name|typeCode
operator|.
name|kind
argument_list|()
return|;
block|}
specifier|public
name|CorbaType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|public
name|void
name|setAnonymousType
parameter_list|(
name|boolean
name|anon
parameter_list|)
block|{
name|isAnon
operator|=
name|anon
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAnonymousType
parameter_list|()
block|{
return|return
name|isAnon
return|;
block|}
specifier|public
name|void
name|setRecursive
parameter_list|(
name|boolean
name|rec
parameter_list|)
block|{
name|isRecursive
operator|=
name|rec
expr_stmt|;
block|}
specifier|public
name|boolean
name|isRecursive
parameter_list|()
block|{
return|return
name|isRecursive
return|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{             }
specifier|public
name|void
name|setIntoAny
parameter_list|(
name|Any
name|value
parameter_list|,
name|CorbaStreamable
name|stream
parameter_list|,
name|boolean
name|output
parameter_list|)
block|{
name|value
operator|.
name|insert_Streamable
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

