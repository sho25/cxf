begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Enum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Enumerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaEnumHandler
extends|extends
name|CorbaObjectHandler
block|{
specifier|private
name|String
name|value
decl_stmt|;
specifier|private
name|long
name|index
decl_stmt|;
specifier|public
name|CorbaEnumHandler
parameter_list|(
name|QName
name|enumName
parameter_list|,
name|QName
name|enumIdlType
parameter_list|,
name|TypeCode
name|enumTC
parameter_list|,
name|Object
name|enumType
parameter_list|)
block|{
name|super
argument_list|(
name|enumName
argument_list|,
name|enumIdlType
argument_list|,
name|enumTC
argument_list|,
name|enumType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|val
parameter_list|)
block|{
name|value
operator|=
name|val
expr_stmt|;
name|Enum
name|enumType
init|=
operator|(
name|Enum
operator|)
name|this
operator|.
name|type
decl_stmt|;
name|List
argument_list|<
name|Enumerator
argument_list|>
name|enumerators
init|=
name|enumType
operator|.
name|getEnumerator
argument_list|()
decl_stmt|;
name|index
operator|=
operator|-
literal|1
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enumerators
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Enumerator
name|e
init|=
name|enumerators
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|val
argument_list|)
condition|)
block|{
name|index
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
block|}
specifier|public
name|long
name|getIndex
parameter_list|()
block|{
return|return
name|index
return|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|value
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

