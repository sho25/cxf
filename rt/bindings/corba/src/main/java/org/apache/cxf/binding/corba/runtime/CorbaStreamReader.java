begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|NamespaceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|events
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|events
operator|.
name|Namespace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaTypeEventProducer
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaStreamReader
implements|implements
name|XMLStreamReader
block|{
specifier|private
name|CorbaTypeEventProducer
name|eventProducer
decl_stmt|;
specifier|private
name|int
name|currentState
decl_stmt|;
specifier|public
name|CorbaStreamReader
parameter_list|(
name|CorbaTypeEventProducer
name|evProducer
parameter_list|)
block|{
name|eventProducer
operator|=
name|evProducer
expr_stmt|;
name|currentState
operator|=
name|XMLStreamConstants
operator|.
name|START_DOCUMENT
expr_stmt|;
block|}
specifier|public
name|QName
name|getName
parameter_list|()
block|{
return|return
name|eventProducer
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|public
name|char
index|[]
name|getTextCharacters
parameter_list|()
block|{
return|return
name|eventProducer
operator|.
name|getText
argument_list|()
operator|.
name|toCharArray
argument_list|()
return|;
block|}
specifier|public
name|int
name|getEventType
parameter_list|()
block|{
return|return
name|currentState
return|;
block|}
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
return|return
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
return|;
block|}
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
return|return
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|hasNext
parameter_list|()
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|currentState
operator|==
name|XMLStreamConstants
operator|.
name|START_DOCUMENT
condition|)
block|{
return|return
literal|true
return|;
block|}
name|boolean
name|hasNextEvent
init|=
name|eventProducer
operator|.
name|hasNext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|hasNextEvent
operator|&&
name|currentState
operator|!=
name|XMLStreamConstants
operator|.
name|END_DOCUMENT
condition|)
block|{
name|currentState
operator|=
name|XMLStreamConstants
operator|.
name|END_DOCUMENT
expr_stmt|;
name|hasNextEvent
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|hasNextEvent
return|;
block|}
specifier|public
name|int
name|next
parameter_list|()
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|currentState
operator|==
name|XMLStreamConstants
operator|.
name|START_DOCUMENT
condition|)
block|{
name|currentState
operator|=
literal|0
expr_stmt|;
return|return
name|XMLStreamConstants
operator|.
name|START_DOCUMENT
return|;
block|}
comment|// ensure we catch end_document state
name|hasNext
argument_list|()
expr_stmt|;
if|if
condition|(
name|currentState
operator|!=
name|XMLStreamConstants
operator|.
name|END_DOCUMENT
condition|)
block|{
name|currentState
operator|=
name|eventProducer
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
return|return
name|currentState
return|;
block|}
specifier|public
name|int
name|getTextLength
parameter_list|()
block|{
return|return
name|eventProducer
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isStartElement
parameter_list|()
block|{
return|return
name|currentState
operator|==
name|XMLStreamConstants
operator|.
name|START_ELEMENT
return|;
block|}
specifier|public
name|boolean
name|isCharacters
parameter_list|()
block|{
return|return
name|currentState
operator|==
name|XMLStreamConstants
operator|.
name|CHARACTERS
return|;
block|}
specifier|public
name|boolean
name|isEndElement
parameter_list|()
block|{
return|return
name|currentState
operator|==
name|XMLStreamConstants
operator|.
name|END_ELEMENT
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|XMLStreamException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|int
name|getAttributeCount
parameter_list|()
block|{
name|List
argument_list|<
name|Attribute
argument_list|>
name|currentAttributes
init|=
name|eventProducer
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentAttributes
operator|!=
literal|null
condition|)
block|{
return|return
name|currentAttributes
operator|.
name|size
argument_list|()
return|;
block|}
return|return
literal|0
return|;
block|}
specifier|public
name|String
name|getAttributeLocalName
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
name|String
name|ret
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|Attribute
argument_list|>
name|currentAttributes
init|=
name|eventProducer
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentAttributes
operator|!=
literal|null
condition|)
block|{
name|Attribute
name|a
init|=
name|currentAttributes
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|a
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|QName
name|getAttributeName
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
name|QName
name|ret
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|Attribute
argument_list|>
name|currentAttributes
init|=
name|eventProducer
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentAttributes
operator|!=
literal|null
condition|)
block|{
name|Attribute
name|a
init|=
name|currentAttributes
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|a
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|String
name|getAttributeNamespace
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
name|String
name|ret
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|Attribute
argument_list|>
name|currentAttributes
init|=
name|eventProducer
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentAttributes
operator|!=
literal|null
condition|)
block|{
name|Attribute
name|a
init|=
name|currentAttributes
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|a
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|String
name|getAttributePrefix
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getAttributeType
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
return|return
literal|"CDATA"
return|;
block|}
specifier|public
name|String
name|getAttributeValue
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
name|String
name|ret
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|Attribute
argument_list|>
name|currentAttributes
init|=
name|eventProducer
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentAttributes
operator|!=
literal|null
condition|)
block|{
name|Attribute
name|a
init|=
name|currentAttributes
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|a
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|String
name|getAttributeValue
parameter_list|(
name|String
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getCharacterEncodingScheme
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getElementText
parameter_list|()
throws|throws
name|XMLStreamException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getEncoding
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Location
name|getLocation
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
operator|new
name|Location
argument_list|()
block|{
specifier|public
name|int
name|getCharacterOffset
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|int
name|getColumnNumber
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|int
name|getLineNumber
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|String
name|getPublicId
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getSystemId
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
specifier|public
name|NamespaceContext
name|getNamespaceContext
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|int
name|getNamespaceCount
parameter_list|()
block|{
name|List
argument_list|<
name|Namespace
argument_list|>
name|namespaces
init|=
name|eventProducer
operator|.
name|getNamespaces
argument_list|()
decl_stmt|;
if|if
condition|(
name|namespaces
operator|!=
literal|null
condition|)
block|{
return|return
name|namespaces
operator|.
name|size
argument_list|()
return|;
block|}
return|return
literal|0
return|;
block|}
specifier|public
name|String
name|getNamespacePrefix
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
name|List
argument_list|<
name|Namespace
argument_list|>
name|namespaces
init|=
name|eventProducer
operator|.
name|getNamespaces
argument_list|()
decl_stmt|;
if|if
condition|(
name|namespaces
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Namespace
name|ns
init|=
name|namespaces
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
if|if
condition|(
name|ns
operator|!=
literal|null
condition|)
block|{
return|return
name|ns
operator|.
name|getPrefix
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
name|List
argument_list|<
name|Namespace
argument_list|>
name|namespaces
init|=
name|eventProducer
operator|.
name|getNamespaces
argument_list|()
decl_stmt|;
if|if
condition|(
name|namespaces
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Namespace
name|ns
init|=
name|namespaces
operator|.
name|get
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
if|if
condition|(
name|ns
operator|!=
literal|null
condition|)
block|{
return|return
name|ns
operator|.
name|getNamespaceURI
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getPIData
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getPITarget
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|arg0
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|eventProducer
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|int
name|getTextCharacters
parameter_list|(
name|int
name|arg0
parameter_list|,
name|char
index|[]
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|,
name|int
name|arg3
parameter_list|)
throws|throws
name|XMLStreamException
block|{
comment|// TODO Auto-generated method stub
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Not implemented"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getTextStart
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Not Implemented"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|hasText
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Not implemented"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isAttributeSpecified
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isStandalone
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isWhiteSpace
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|int
name|nextTag
parameter_list|()
throws|throws
name|XMLStreamException
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Not Implemented"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|require
parameter_list|(
name|int
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|String
name|arg2
parameter_list|)
throws|throws
name|XMLStreamException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|boolean
name|standaloneSet
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

