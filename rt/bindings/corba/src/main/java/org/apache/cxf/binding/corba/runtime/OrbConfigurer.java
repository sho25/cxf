begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|CorbaBindingFactory
import|;
end_import

begin_class
specifier|public
class|class
name|OrbConfigurer
block|{
specifier|private
name|CorbaBindingFactory
name|factory
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|orbArgs
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Properties
name|orbProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
specifier|public
name|OrbConfigurer
parameter_list|()
block|{     }
specifier|public
name|void
name|setOrbArgs
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
name|orbArgs
operator|=
name|args
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getOrbArgs
parameter_list|()
block|{
return|return
name|orbArgs
return|;
block|}
specifier|public
name|Properties
name|getOrbProperties
parameter_list|()
block|{
return|return
name|orbProperties
return|;
block|}
specifier|public
name|void
name|setOrbProperties
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
name|orbProperties
operator|=
name|props
expr_stmt|;
block|}
specifier|public
name|void
name|setFactory
parameter_list|(
name|CorbaBindingFactory
name|cFactory
parameter_list|)
block|{
name|this
operator|.
name|factory
operator|=
name|cFactory
expr_stmt|;
block|}
specifier|public
name|CorbaBindingFactory
name|getFactory
parameter_list|()
block|{
return|return
name|factory
return|;
block|}
annotation|@
name|PostConstruct
specifier|public
name|void
name|register
parameter_list|()
block|{
if|if
condition|(
name|factory
operator|!=
literal|null
condition|)
block|{
name|factory
operator|.
name|getOrbConfig
argument_list|()
operator|.
name|setOrbArgs
argument_list|(
name|orbArgs
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getOrbConfig
argument_list|()
operator|.
name|setOrbProperties
argument_list|(
name|orbProperties
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

