begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ORB
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaPrimitiveSequenceEventProducer
extends|extends
name|AbstractNoStartEndEventProducer
block|{
comment|// No start and end elements for the sequence
specifier|public
name|CorbaPrimitiveSequenceEventProducer
parameter_list|(
name|CorbaObjectHandler
name|h
parameter_list|,
name|ServiceInfo
name|service
parameter_list|,
name|ORB
name|orbRef
parameter_list|)
block|{
name|CorbaSequenceHandler
name|handler
init|=
operator|(
name|CorbaSequenceHandler
operator|)
name|h
decl_stmt|;
name|iterator
operator|=
name|handler
operator|.
name|getElements
argument_list|()
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|orb
operator|=
name|orbRef
expr_stmt|;
name|serviceInfo
operator|=
name|service
expr_stmt|;
block|}
block|}
end_class

end_unit

