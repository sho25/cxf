begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|CorbaBindingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaPrimitiveHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|W3CConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|ClassWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|FieldVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|MethodVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|Opcodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Any
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ORB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TCKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|CorbaAnyHelper
block|{
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|QName
argument_list|,
name|QName
argument_list|>
name|SCHEMA_TO_IDL_TYPES
init|=
operator|new
name|HashMap
argument_list|<
name|QName
argument_list|,
name|QName
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|QName
argument_list|,
name|QName
argument_list|>
name|IDL_TO_SCHEMA_TYPES
init|=
operator|new
name|HashMap
argument_list|<
name|QName
argument_list|,
name|QName
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Constructor
argument_list|<
name|?
argument_list|>
name|fixedAnyConstructor
decl_stmt|;
specifier|private
name|CorbaAnyHelper
parameter_list|()
block|{
comment|//utility class
block|}
specifier|public
specifier|static
name|Any
name|createAny
parameter_list|(
name|ORB
name|orb
parameter_list|)
block|{
name|Any
name|value
init|=
name|orb
operator|.
name|create_any
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"com.sun.corba.se.impl.corba.AnyImpl"
operator|.
name|equals
argument_list|(
name|value
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|value
operator|=
name|createFixedAny
argument_list|(
name|orb
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|value
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isPrimitiveSchemaType
parameter_list|(
name|QName
name|schemaType
parameter_list|)
block|{
return|return
name|SCHEMA_TO_IDL_TYPES
operator|.
name|get
argument_list|(
name|schemaType
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isPrimitiveIdlType
parameter_list|(
name|QName
name|idlType
parameter_list|)
block|{
return|return
name|IDL_TO_SCHEMA_TYPES
operator|.
name|get
argument_list|(
name|idlType
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
specifier|static
name|QName
name|convertPrimitiveSchemaToIdlType
parameter_list|(
name|QName
name|schemaType
parameter_list|)
block|{
return|return
name|SCHEMA_TO_IDL_TYPES
operator|.
name|get
argument_list|(
name|schemaType
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|QName
name|convertPrimitiveIdlToSchemaType
parameter_list|(
name|QName
name|idlType
parameter_list|)
block|{
return|return
name|IDL_TO_SCHEMA_TYPES
operator|.
name|get
argument_list|(
name|idlType
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|QName
name|getPrimitiveIdlTypeFromTypeCode
parameter_list|(
name|TypeCode
name|tc
parameter_list|)
block|{
name|TCKind
name|type
init|=
name|tc
operator|.
name|kind
argument_list|()
decl_stmt|;
name|QName
name|result
init|=
literal|null
decl_stmt|;
switch|switch
condition|(
name|type
operator|.
name|value
argument_list|()
condition|)
block|{
case|case
name|TCKind
operator|.
name|_tk_boolean
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_BOOLEAN
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_char
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_CHAR
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_wchar
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_WCHAR
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_octet
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_OCTET
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_short
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_SHORT
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ushort
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_USHORT
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_long
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_LONG
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ulong
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_ULONG
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_longlong
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_LONGLONG
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ulonglong
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_ULONGLONG
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_float
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_FLOAT
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_double
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_DOUBLE
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_string
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_STRING
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_wstring
case|:
name|result
operator|=
name|CorbaConstants
operator|.
name|NT_CORBA_WSTRING
expr_stmt|;
break|break;
default|default:
name|result
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|public
specifier|static
name|void
name|insertPrimitiveIntoAny
parameter_list|(
name|Any
name|a
parameter_list|,
name|CorbaPrimitiveHandler
name|primitive
parameter_list|)
throws|throws
name|CorbaBindingException
block|{
assert|assert
name|primitive
operator|!=
literal|null
assert|;
switch|switch
condition|(
name|primitive
operator|.
name|getTypeCode
argument_list|()
operator|.
name|kind
argument_list|()
operator|.
name|value
argument_list|()
condition|)
block|{
case|case
name|TCKind
operator|.
name|_tk_boolean
case|:
name|a
operator|.
name|insert_boolean
argument_list|(
operator|(
name|Boolean
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_char
case|:
name|a
operator|.
name|insert_char
argument_list|(
operator|(
name|Character
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_wchar
case|:
name|a
operator|.
name|insert_wchar
argument_list|(
operator|(
name|Character
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_octet
case|:
name|a
operator|.
name|insert_octet
argument_list|(
operator|(
name|Byte
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_short
case|:
name|a
operator|.
name|insert_short
argument_list|(
operator|(
name|Short
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ushort
case|:
name|a
operator|.
name|insert_ushort
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|shortValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_long
case|:
name|a
operator|.
name|insert_long
argument_list|(
operator|(
name|Integer
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ulong
case|:
name|a
operator|.
name|insert_ulong
argument_list|(
operator|(
operator|(
name|BigInteger
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_longlong
case|:
name|a
operator|.
name|insert_longlong
argument_list|(
operator|(
name|Long
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ulonglong
case|:
name|a
operator|.
name|insert_ulonglong
argument_list|(
operator|(
operator|(
name|BigInteger
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_float
case|:
name|a
operator|.
name|insert_float
argument_list|(
operator|(
name|Float
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_double
case|:
name|a
operator|.
name|insert_double
argument_list|(
operator|(
name|Double
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_string
case|:
name|a
operator|.
name|insert_string
argument_list|(
operator|(
name|String
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_wstring
case|:
name|a
operator|.
name|insert_wstring
argument_list|(
operator|(
name|String
operator|)
name|primitive
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|CorbaBindingException
argument_list|(
literal|"Unable to insert type into any.  Kind = "
operator|+
name|primitive
operator|.
name|getTypeCode
argument_list|()
operator|.
name|kind
argument_list|()
operator|.
name|value
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|void
name|extractPrimitiveFromAny
parameter_list|(
name|Any
name|a
parameter_list|,
name|CorbaPrimitiveHandler
name|primitive
parameter_list|)
block|{
assert|assert
name|primitive
operator|!=
literal|null
assert|;
switch|switch
condition|(
name|primitive
operator|.
name|getTypeCode
argument_list|()
operator|.
name|kind
argument_list|()
operator|.
name|value
argument_list|()
condition|)
block|{
case|case
name|TCKind
operator|.
name|_tk_boolean
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_boolean
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_char
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Character
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_char
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_wchar
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Character
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_wchar
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_octet
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_octet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_short
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_short
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ushort
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_ushort
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_long
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_long
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ulong
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_ulong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_longlong
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_longlong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_ulonglong
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|BigInteger
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_ulonglong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_float
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_float
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_double
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
name|a
operator|.
name|extract_double
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_string
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|a
operator|.
name|extract_string
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TCKind
operator|.
name|_tk_wstring
case|:
name|primitive
operator|.
name|setValue
argument_list|(
name|a
operator|.
name|extract_wstring
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|CorbaBindingException
argument_list|(
literal|"Unable to extract type from any.  Kind = "
operator|+
name|primitive
operator|.
name|getTypeCode
argument_list|()
operator|.
name|kind
argument_list|()
operator|.
name|value
argument_list|()
argument_list|)
throw|;
block|}
block|}
comment|// NOTE: We have an issue when we get a schema type of String.  We don't know whether this means
comment|// that we have an IDL type of wchar, string, or wstring.  To be safe, we'll simply use a CORBA
comment|// string for the mapping.
static|static
block|{
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_BOOLEAN
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_BOOLEAN
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_BYTE
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_CHAR
argument_list|)
expr_stmt|;
comment|//SCHEMA_TO_IDL_TYPES.put(W3CConstants.NT_SCHEMA_STRING, CorbaConstants.NT_CORBA_WCHAR);
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_UBYTE
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_OCTET
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_SHORT
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_SHORT
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_USHORT
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_USHORT
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_INT
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_LONG
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_UINT
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_ULONG
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_LONG
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_LONGLONG
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_ULONG
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_ULONGLONG
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_FLOAT
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_FLOAT
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_DOUBLE
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_DOUBLE
argument_list|)
expr_stmt|;
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_STRING
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_STRING
argument_list|)
expr_stmt|;
comment|//SCHEMA_TO_IDL_TYPES.put(W3CConstants.NT_SCHEMA_STRING, CorbaConstants.NT_CORBA_WSTRING);
name|SCHEMA_TO_IDL_TYPES
operator|.
name|put
argument_list|(
name|W3CConstants
operator|.
name|NT_SCHEMA_ANYTYPE
argument_list|,
name|CorbaConstants
operator|.
name|NT_CORBA_ANY
argument_list|)
expr_stmt|;
block|}
static|static
block|{
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_BOOLEAN
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_BOOLEAN
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_CHAR
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_BYTE
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_WCHAR
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_STRING
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_OCTET
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_UBYTE
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_SHORT
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_SHORT
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_USHORT
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_USHORT
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_LONG
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_INT
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_ULONG
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_UINT
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_LONGLONG
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_LONG
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_ULONGLONG
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_ULONG
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_FLOAT
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_FLOAT
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_DOUBLE
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_DOUBLE
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_STRING
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_STRING
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_WSTRING
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_STRING
argument_list|)
expr_stmt|;
name|IDL_TO_SCHEMA_TYPES
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_ANY
argument_list|,
name|W3CConstants
operator|.
name|NT_SCHEMA_ANYTYPE
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|Any
name|createFixedAny
parameter_list|(
name|ORB
name|orb
parameter_list|,
name|Any
name|any
parameter_list|)
block|{
name|createFixedAnyConstructor
argument_list|()
expr_stmt|;
try|try
block|{
return|return
operator|(
name|Any
operator|)
name|fixedAnyConstructor
operator|.
name|newInstance
argument_list|(
name|orb
argument_list|,
name|any
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return
name|any
return|;
block|}
block|}
specifier|private
specifier|static
specifier|synchronized
name|void
name|createFixedAnyConstructor
parameter_list|()
block|{
if|if
condition|(
name|fixedAnyConstructor
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|ASMHelper
name|helper
init|=
operator|new
name|ASMHelper
argument_list|()
decl_stmt|;
name|ClassWriter
name|cw
init|=
name|helper
operator|.
name|createClassWriter
argument_list|()
decl_stmt|;
name|FieldVisitor
name|fv
decl_stmt|;
name|cw
operator|.
name|visit
argument_list|(
name|Opcodes
operator|.
name|V1_6
argument_list|,
name|Opcodes
operator|.
name|ACC_PUBLIC
operator|+
name|Opcodes
operator|.
name|ACC_SUPER
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|null
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|cw
operator|.
name|visitSource
argument_list|(
literal|"FixedAnyImpl.java"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fv
operator|=
name|cw
operator|.
name|visitField
argument_list|(
literal|0
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|addFixedAnyConstructor
argument_list|(
name|helper
argument_list|,
name|cw
argument_list|)
expr_stmt|;
name|addInsertOverride
argument_list|(
name|helper
argument_list|,
name|cw
argument_list|)
expr_stmt|;
name|addExtractOverride
argument_list|(
name|helper
argument_list|,
name|cw
argument_list|)
expr_stmt|;
name|addWriteOverride
argument_list|(
name|helper
argument_list|,
name|cw
argument_list|)
expr_stmt|;
name|addReadOverride
argument_list|(
name|helper
argument_list|,
name|cw
argument_list|)
expr_stmt|;
name|cw
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|byte
index|[]
name|b
init|=
name|cw
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|c
init|=
name|helper
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.binding.corba.utils.FixedAnyImpl"
argument_list|,
name|CorbaAnyHelper
operator|.
name|class
argument_list|,
name|b
argument_list|)
decl_stmt|;
try|try
block|{
name|fixedAnyConstructor
operator|=
name|c
operator|.
name|getConstructor
argument_list|(
name|ORB
operator|.
name|class
argument_list|,
name|Any
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//shouldn't happen since we generated that constructor
block|}
block|}
specifier|private
specifier|static
name|void
name|addReadOverride
parameter_list|(
name|ASMHelper
name|helper
parameter_list|,
name|ClassWriter
name|cw
parameter_list|)
block|{
name|MethodVisitor
name|mv
init|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"read_value"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/InputStream;Lorg/omg/CORBA/TypeCode;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|54
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|IFNULL
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|55
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEINTERFACE
argument_list|,
literal|"org/omg/CORBA/portable/Streamable"
argument_list|,
literal|"_read"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/InputStream;)V"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Label
name|l3
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|GOTO
argument_list|,
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|57
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|"read_value"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/InputStream;Lorg/omg/CORBA/TypeCode;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|59
argument_list|,
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|Label
name|l4
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l4
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"is"
argument_list|,
literal|"Lorg/omg/CORBA/portable/InputStream;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"t"
argument_list|,
literal|"Lorg/omg/CORBA/TypeCode;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addWriteOverride
parameter_list|(
name|ASMHelper
name|helper
parameter_list|,
name|ClassWriter
name|cw
parameter_list|)
block|{
name|MethodVisitor
name|mv
init|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"write_value"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/OutputStream;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|61
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|IFNULL
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|62
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|Label
name|l3
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEINTERFACE
argument_list|,
literal|"org/omg/CORBA/portable/Streamable"
argument_list|,
literal|"_write"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/OutputStream;)V"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|GOTO
argument_list|,
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|64
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|"write_value"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/OutputStream;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|66
argument_list|,
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|Label
name|l4
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l4
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"os"
argument_list|,
literal|"Lorg/omg/CORBA/portable/OutputStream;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addExtractOverride
parameter_list|(
name|ASMHelper
name|helper
parameter_list|,
name|ClassWriter
name|cw
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
name|MethodVisitor
name|mv
init|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"extract_Streamable"
argument_list|,
literal|"()Lorg/omg/CORBA/portable/Streamable;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|47
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|IFNULL
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|48
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|ARETURN
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|50
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|"extract_Streamable"
argument_list|,
literal|"()Lorg/omg/CORBA/portable/Streamable;"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|ARETURN
argument_list|)
expr_stmt|;
name|Label
name|l3
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addInsertOverride
parameter_list|(
name|ASMHelper
name|helper
parameter_list|,
name|ClassWriter
name|cw
parameter_list|)
block|{
name|MethodVisitor
name|mv
init|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"insert_Streamable"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/Streamable;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|43
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|"insert_Streamable"
argument_list|,
literal|"(Lorg/omg/CORBA/portable/Streamable;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|44
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|PUTFIELD
argument_list|,
literal|"org/apache/cxf/binding/corba/utils/FixedAnyImpl"
argument_list|,
literal|"obj"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|45
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|Label
name|l3
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"s"
argument_list|,
literal|"Lorg/omg/CORBA/portable/Streamable;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addFixedAnyConstructor
parameter_list|(
name|ASMHelper
name|helper
parameter_list|,
name|ClassWriter
name|cw
parameter_list|)
block|{
name|MethodVisitor
name|mv
init|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"<init>"
argument_list|,
literal|"(Lorg/omg/CORBA/ORB;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|36
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitTypeInsn
argument_list|(
name|Opcodes
operator|.
name|CHECKCAST
argument_list|,
literal|"com/sun/corba/se/spi/orb/ORB"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|"<init>"
argument_list|,
literal|"(Lcom/sun/corba/se/spi/orb/ORB;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|37
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"orb"
argument_list|,
literal|"Lorg/omg/CORBA/ORB;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"<init>"
argument_list|,
literal|"(Lorg/omg/CORBA/ORB;Lorg/omg/CORBA/Any;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|39
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitTypeInsn
argument_list|(
name|Opcodes
operator|.
name|CHECKCAST
argument_list|,
literal|"com/sun/corba/se/spi/orb/ORB"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"com/sun/corba/se/impl/corba/AnyImpl"
argument_list|,
literal|"<init>"
argument_list|,
literal|"(Lcom/sun/corba/se/spi/orb/ORB;Lorg/omg/CORBA/Any;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|40
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|l2
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"orb"
argument_list|,
literal|"Lorg/omg/CORBA/ORB;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"any"
argument_list|,
literal|"Lorg/omg/CORBA/Any;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

