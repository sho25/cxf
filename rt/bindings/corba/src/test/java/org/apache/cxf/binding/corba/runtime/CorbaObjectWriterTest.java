begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaArrayHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaObjectReferenceHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaPrimitiveHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaSequenceHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaStructHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Array
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Exception
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|MemberType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Struct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ORB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|StructMember
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TCKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|portable
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|portable
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaObjectWriterTest
extends|extends
name|Assert
block|{
specifier|private
specifier|static
name|ORB
name|orb
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
name|java
operator|.
name|util
operator|.
name|Properties
name|props
init|=
name|System
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"yoko.orb.id"
argument_list|,
literal|"CXF-CORBA-Binding"
argument_list|)
expr_stmt|;
name|orb
operator|=
name|ORB
operator|.
name|init
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
if|if
condition|(
name|orb
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|orb
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Exception
name|ex
parameter_list|)
block|{
comment|// Do nothing.  Throw an Exception?
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteBoolean
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Boolean
name|boolValue
init|=
name|Boolean
operator|.
name|TRUE
decl_stmt|;
name|writer
operator|.
name|writeBoolean
argument_list|(
name|boolValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|boolean
name|b
init|=
name|iStream
operator|.
name|read_boolean
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|b
operator|==
name|boolValue
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteChar
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Character
name|charValue
init|=
operator|new
name|Character
argument_list|(
literal|'c'
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeChar
argument_list|(
name|charValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|char
name|c
init|=
name|iStream
operator|.
name|read_char
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|c
operator|==
name|charValue
operator|.
name|charValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWChar
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Character
name|wcharValue
init|=
operator|new
name|Character
argument_list|(
literal|'w'
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeChar
argument_list|(
name|wcharValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|char
name|wc
init|=
name|iStream
operator|.
name|read_char
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|wc
operator|==
name|wcharValue
operator|.
name|charValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteShort
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Short
name|shortValue
init|=
operator|new
name|Short
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|123
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeShort
argument_list|(
name|shortValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|short
name|s
init|=
name|iStream
operator|.
name|read_short
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|s
operator|==
name|shortValue
operator|.
name|shortValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteUShort
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Integer
name|ushortValue
init|=
operator|new
name|Integer
argument_list|(
literal|123
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeUShort
argument_list|(
name|ushortValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|int
name|us
init|=
name|iStream
operator|.
name|read_ushort
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|us
operator|==
name|ushortValue
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteLong
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Integer
name|longValue
init|=
operator|new
name|Integer
argument_list|(
operator|-
literal|1234567
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeLong
argument_list|(
name|longValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|int
name|l
init|=
name|iStream
operator|.
name|read_long
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|l
operator|==
name|longValue
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteULong
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|long
name|ulongValue
init|=
literal|1234567L
decl_stmt|;
name|writer
operator|.
name|writeULong
argument_list|(
name|ulongValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|long
name|ul
init|=
name|iStream
operator|.
name|read_ulong
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|ul
operator|==
name|ulongValue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteLongLong
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Long
name|longlongValue
init|=
operator|new
name|Long
argument_list|(
literal|"-12345678900"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeLongLong
argument_list|(
name|longlongValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|long
name|ll
init|=
name|iStream
operator|.
name|read_longlong
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|ll
operator|==
name|longlongValue
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteULongLong
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|BigInteger
name|ulonglongValue
init|=
operator|new
name|BigInteger
argument_list|(
literal|"12345678900"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeULongLong
argument_list|(
name|ulonglongValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|long
name|ul
init|=
name|iStream
operator|.
name|read_ulonglong
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|ul
operator|==
name|ulonglongValue
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteFloat
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Float
name|floatValue
init|=
operator|new
name|Float
argument_list|(
operator|(
name|float
operator|)
literal|123456.78
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeFloat
argument_list|(
name|floatValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|float
name|f
init|=
name|iStream
operator|.
name|read_float
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|f
operator|==
name|floatValue
operator|.
name|floatValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteDouble
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|Double
name|doubleValue
init|=
operator|new
name|Double
argument_list|(
literal|987654.321
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeDouble
argument_list|(
name|doubleValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|double
name|d
init|=
name|iStream
operator|.
name|read_double
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|d
operator|==
name|doubleValue
operator|.
name|doubleValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteString
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|String
name|stringValue
init|=
operator|new
name|String
argument_list|(
literal|"String"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeString
argument_list|(
name|stringValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|String
name|s
init|=
name|iStream
operator|.
name|read_string
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|s
operator|.
name|equals
argument_list|(
name|stringValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWString
parameter_list|()
block|{
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|String
name|wstringValue
init|=
operator|new
name|String
argument_list|(
literal|"String"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeWString
argument_list|(
name|wstringValue
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|String
name|s
init|=
name|iStream
operator|.
name|read_wstring
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|s
operator|.
name|equals
argument_list|(
name|wstringValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteArray
parameter_list|()
block|{
name|int
name|data
index|[]
init|=
block|{
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|5
block|,
literal|8
block|,
literal|13
block|,
literal|21
block|}
decl_stmt|;
comment|// create an array of longs
name|QName
name|longIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"long"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|arrayIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"array"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|Array
name|arrayType
init|=
operator|new
name|Array
argument_list|()
decl_stmt|;
name|arrayType
operator|.
name|setBound
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|arrayType
operator|.
name|setElemtype
argument_list|(
name|longIdlType
argument_list|)
expr_stmt|;
comment|// name and respoitory ID of the array are not needed for this test
comment|// build the object holder for an array.
name|TypeCode
name|arrayTC
init|=
name|orb
operator|.
name|create_array_tc
argument_list|(
name|data
operator|.
name|length
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_long
argument_list|)
argument_list|)
decl_stmt|;
name|CorbaArrayHandler
name|obj
init|=
operator|new
name|CorbaArrayHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"Array"
argument_list|)
argument_list|,
name|arrayIdlType
argument_list|,
name|arrayTC
argument_list|,
name|arrayType
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|data
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|CorbaPrimitiveHandler
name|nestedObj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"item"
argument_list|)
argument_list|,
name|longIdlType
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_long
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|nestedObj
operator|.
name|setValueFromData
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|data
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addElement
argument_list|(
name|nestedObj
argument_list|)
expr_stmt|;
block|}
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeArray
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|data
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|int
name|val
init|=
name|iStream
operator|.
name|read_long
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|val
operator|==
name|data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteSequence
parameter_list|()
block|{
name|String
name|data
index|[]
init|=
block|{
literal|"one"
block|,
literal|"one"
block|,
literal|"two"
block|,
literal|"three"
block|,
literal|"five"
block|,
literal|"eight"
block|,
literal|"thirteen"
block|,
literal|"twenty-one"
block|}
decl_stmt|;
comment|// create an sequence of strings
name|QName
name|stringIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"string"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|seqIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"sequence"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|Sequence
name|seqType
init|=
operator|new
name|Sequence
argument_list|()
decl_stmt|;
name|seqType
operator|.
name|setBound
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|seqType
operator|.
name|setElemtype
argument_list|(
name|stringIdlType
argument_list|)
expr_stmt|;
comment|// name and respoitory ID of the sequence are not needed for this test
comment|// build the object holder for a sequence.
name|TypeCode
name|seqTC
init|=
name|orb
operator|.
name|create_sequence_tc
argument_list|(
name|data
operator|.
name|length
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_string
argument_list|)
argument_list|)
decl_stmt|;
name|CorbaSequenceHandler
name|obj
init|=
operator|new
name|CorbaSequenceHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"Seq"
argument_list|)
argument_list|,
name|seqIdlType
argument_list|,
name|seqTC
argument_list|,
name|seqType
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|data
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|CorbaPrimitiveHandler
name|nestedObj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"item"
argument_list|)
argument_list|,
name|stringIdlType
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_string
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|nestedObj
operator|.
name|setValueFromData
argument_list|(
name|data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addElement
argument_list|(
name|nestedObj
argument_list|)
expr_stmt|;
block|}
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeSequence
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|int
name|length
init|=
name|iStream
operator|.
name|read_long
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|length
condition|;
operator|++
name|i
control|)
block|{
name|String
name|val
init|=
name|iStream
operator|.
name|read_string
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|val
operator|.
name|equals
argument_list|(
name|data
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteStruct
parameter_list|()
block|{
comment|// create the following struct
comment|// struct TestStruct {
comment|//     long member1;
comment|//     string member2;
comment|//     boolean member3;
comment|// }
name|int
name|member1
init|=
literal|12345
decl_stmt|;
name|String
name|member2
init|=
literal|"54321"
decl_stmt|;
name|boolean
name|member3
init|=
literal|true
decl_stmt|;
name|QName
name|structIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"struct"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|longIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"long"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|stringIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"string"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|boolIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"boolean"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|Struct
name|structType
init|=
operator|new
name|Struct
argument_list|()
decl_stmt|;
name|structType
operator|.
name|setName
argument_list|(
literal|"TestStruct"
argument_list|)
expr_stmt|;
name|MemberType
name|m1
init|=
operator|new
name|MemberType
argument_list|()
decl_stmt|;
name|m1
operator|.
name|setIdltype
argument_list|(
name|longIdlType
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setName
argument_list|(
literal|"member1"
argument_list|)
expr_stmt|;
name|MemberType
name|m2
init|=
operator|new
name|MemberType
argument_list|()
decl_stmt|;
name|m2
operator|.
name|setIdltype
argument_list|(
name|stringIdlType
argument_list|)
expr_stmt|;
name|m2
operator|.
name|setName
argument_list|(
literal|"member2"
argument_list|)
expr_stmt|;
name|MemberType
name|m3
init|=
operator|new
name|MemberType
argument_list|()
decl_stmt|;
name|m3
operator|.
name|setIdltype
argument_list|(
name|boolIdlType
argument_list|)
expr_stmt|;
name|m3
operator|.
name|setName
argument_list|(
literal|"member3"
argument_list|)
expr_stmt|;
name|structType
operator|.
name|getMember
argument_list|()
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|structType
operator|.
name|getMember
argument_list|()
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|structType
operator|.
name|getMember
argument_list|()
operator|.
name|add
argument_list|(
name|m3
argument_list|)
expr_stmt|;
comment|// build the object holder
name|StructMember
index|[]
name|structMembers
init|=
operator|new
name|StructMember
index|[
literal|3
index|]
decl_stmt|;
name|structMembers
index|[
literal|0
index|]
operator|=
operator|new
name|StructMember
argument_list|(
literal|"member1"
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_long
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|structMembers
index|[
literal|1
index|]
operator|=
operator|new
name|StructMember
argument_list|(
literal|"member2"
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_string
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|structMembers
index|[
literal|2
index|]
operator|=
operator|new
name|StructMember
argument_list|(
literal|"member3"
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_boolean
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|TypeCode
name|structTC
init|=
name|orb
operator|.
name|create_struct_tc
argument_list|(
literal|"IDL:org.apache.cxf.TestStruct/1.0"
argument_list|,
literal|"TestStruct"
argument_list|,
name|structMembers
argument_list|)
decl_stmt|;
name|CorbaStructHandler
name|obj
init|=
operator|new
name|CorbaStructHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"TestStruct"
argument_list|)
argument_list|,
name|structIdlType
argument_list|,
name|structTC
argument_list|,
name|structType
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|memberObj1
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"member1"
argument_list|)
argument_list|,
name|longIdlType
argument_list|,
name|structMembers
index|[
literal|0
index|]
operator|.
name|type
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|memberObj2
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"member2"
argument_list|)
argument_list|,
name|stringIdlType
argument_list|,
name|structMembers
index|[
literal|1
index|]
operator|.
name|type
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|memberObj3
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"member3"
argument_list|)
argument_list|,
name|boolIdlType
argument_list|,
name|structMembers
index|[
literal|2
index|]
operator|.
name|type
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|memberObj1
operator|.
name|setValueFromData
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|member1
argument_list|)
argument_list|)
expr_stmt|;
name|memberObj2
operator|.
name|setValueFromData
argument_list|(
name|member2
argument_list|)
expr_stmt|;
name|memberObj3
operator|.
name|setValueFromData
argument_list|(
name|Boolean
operator|.
name|toString
argument_list|(
name|member3
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addMember
argument_list|(
name|memberObj1
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addMember
argument_list|(
name|memberObj2
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addMember
argument_list|(
name|memberObj3
argument_list|)
expr_stmt|;
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeStruct
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|int
name|readMember1
init|=
name|iStream
operator|.
name|read_long
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|readMember1
operator|==
name|member1
argument_list|)
expr_stmt|;
name|String
name|readMember2
init|=
name|iStream
operator|.
name|read_string
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|readMember2
operator|.
name|equals
argument_list|(
name|member2
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|readMember3
init|=
name|iStream
operator|.
name|read_boolean
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|readMember3
operator|==
name|member3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteException
parameter_list|()
block|{
comment|// create the following exception
comment|// exception TestExcept {
comment|//     short code;
comment|//     string message;
comment|// }
name|short
name|code
init|=
literal|12345
decl_stmt|;
name|String
name|message
init|=
literal|"54321"
decl_stmt|;
name|String
name|reposID
init|=
literal|"IDL:org.apache.cxf.TestException/1.0"
decl_stmt|;
name|QName
name|exceptIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"exception"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|shortIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"short"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|QName
name|stringIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"string"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|Exception
name|exceptType
init|=
operator|new
name|Exception
argument_list|()
decl_stmt|;
name|exceptType
operator|.
name|setName
argument_list|(
literal|"TestException"
argument_list|)
expr_stmt|;
name|exceptType
operator|.
name|setRepositoryID
argument_list|(
name|reposID
argument_list|)
expr_stmt|;
name|MemberType
name|m1
init|=
operator|new
name|MemberType
argument_list|()
decl_stmt|;
name|m1
operator|.
name|setIdltype
argument_list|(
name|shortIdlType
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setName
argument_list|(
literal|"code"
argument_list|)
expr_stmt|;
name|MemberType
name|m2
init|=
operator|new
name|MemberType
argument_list|()
decl_stmt|;
name|m2
operator|.
name|setIdltype
argument_list|(
name|stringIdlType
argument_list|)
expr_stmt|;
name|m2
operator|.
name|setName
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|exceptType
operator|.
name|getMember
argument_list|()
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|exceptType
operator|.
name|getMember
argument_list|()
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
comment|// build the object holder
name|StructMember
index|[]
name|exceptMembers
init|=
operator|new
name|StructMember
index|[
literal|2
index|]
decl_stmt|;
name|exceptMembers
index|[
literal|0
index|]
operator|=
operator|new
name|StructMember
argument_list|(
literal|"code"
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_short
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|exceptMembers
index|[
literal|1
index|]
operator|=
operator|new
name|StructMember
argument_list|(
literal|"message"
argument_list|,
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_string
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|TypeCode
name|exceptTC
init|=
name|orb
operator|.
name|create_exception_tc
argument_list|(
name|reposID
argument_list|,
literal|"TestException"
argument_list|,
name|exceptMembers
argument_list|)
decl_stmt|;
name|CorbaExceptionHandler
name|obj
init|=
operator|new
name|CorbaExceptionHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"TestException"
argument_list|)
argument_list|,
name|exceptIdlType
argument_list|,
name|exceptTC
argument_list|,
name|exceptType
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|member1
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"code"
argument_list|)
argument_list|,
name|shortIdlType
argument_list|,
name|exceptMembers
index|[
literal|0
index|]
operator|.
name|type
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|member1
operator|.
name|setValueFromData
argument_list|(
name|Short
operator|.
name|toString
argument_list|(
name|code
argument_list|)
argument_list|)
expr_stmt|;
name|CorbaPrimitiveHandler
name|member2
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
operator|new
name|QName
argument_list|(
literal|"message"
argument_list|)
argument_list|,
name|stringIdlType
argument_list|,
name|exceptMembers
index|[
literal|1
index|]
operator|.
name|type
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|member2
operator|.
name|setValueFromData
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addMember
argument_list|(
name|member1
argument_list|)
expr_stmt|;
name|obj
operator|.
name|addMember
argument_list|(
name|member2
argument_list|)
expr_stmt|;
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeException
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|String
name|readId
init|=
name|iStream
operator|.
name|read_string
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|readId
operator|.
name|equals
argument_list|(
name|reposID
argument_list|)
argument_list|)
expr_stmt|;
name|short
name|readCode
init|=
name|iStream
operator|.
name|read_short
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|readCode
operator|==
name|code
argument_list|)
expr_stmt|;
name|String
name|readMessage
init|=
name|iStream
operator|.
name|read_string
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|readMessage
operator|.
name|equals
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteObject
parameter_list|()
throws|throws
name|IOException
block|{
name|URL
name|refUrl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/references/account.ref"
argument_list|)
decl_stmt|;
name|String
name|oRef
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|refUrl
operator|.
name|openStream
argument_list|()
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|objRef
init|=
name|orb
operator|.
name|string_to_object
argument_list|(
name|oRef
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|objRef
argument_list|)
expr_stmt|;
comment|// create a test object
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Object
name|objectType
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Object
argument_list|()
decl_stmt|;
name|objectType
operator|.
name|setRepositoryID
argument_list|(
literal|"IDL:Account:1.0"
argument_list|)
expr_stmt|;
name|objectType
operator|.
name|setBinding
argument_list|(
operator|new
name|QName
argument_list|(
literal|"AccountCORBABinding"
argument_list|)
argument_list|)
expr_stmt|;
name|QName
name|objectName
init|=
operator|new
name|QName
argument_list|(
literal|"TestObject"
argument_list|)
decl_stmt|;
name|QName
name|objectIdlType
init|=
operator|new
name|QName
argument_list|(
literal|"corbaatm:TestObject"
argument_list|)
decl_stmt|;
name|TypeCode
name|objectTC
init|=
name|orb
operator|.
name|create_interface_tc
argument_list|(
literal|"IDL:Account:1.0"
argument_list|,
literal|"TestObject"
argument_list|)
decl_stmt|;
name|CorbaObjectReferenceHandler
name|obj
init|=
operator|new
name|CorbaObjectReferenceHandler
argument_list|(
name|objectName
argument_list|,
name|objectIdlType
argument_list|,
name|objectTC
argument_list|,
name|objectType
argument_list|)
decl_stmt|;
name|obj
operator|.
name|setReference
argument_list|(
name|objRef
argument_list|)
expr_stmt|;
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|CorbaObjectWriter
name|writer
init|=
operator|new
name|CorbaObjectWriter
argument_list|(
name|oStream
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeObjectReference
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|resultObj
init|=
name|iStream
operator|.
name|read_Object
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|resultObj
operator|.
name|_is_equivalent
argument_list|(
name|obj
operator|.
name|getReference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

