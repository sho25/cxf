begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|NamespaceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaStreamWriterTest
extends|extends
name|Assert
block|{
specifier|private
name|CorbaStreamWriter
name|writer
decl_stmt|;
specifier|private
name|NamespaceContext
name|mock
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|mock
operator|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|NamespaceContext
operator|.
name|class
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|CorbaStreamWriter
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetNamespaceContext
parameter_list|()
throws|throws
name|Exception
block|{
name|writer
operator|.
name|setNamespaceContext
argument_list|(
name|mock
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
literal|"checking namespace context. "
argument_list|,
name|mock
argument_list|,
name|writer
operator|.
name|getNamespaceContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

