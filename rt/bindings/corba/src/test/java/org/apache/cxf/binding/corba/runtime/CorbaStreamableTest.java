begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|CorbaStreamable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
operator|.
name|CorbaPrimitiveHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ORB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TCKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|portable
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|portable
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaStreamableTest
extends|extends
name|Assert
block|{
specifier|private
specifier|static
name|ORB
name|orb
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|java
operator|.
name|util
operator|.
name|Properties
name|props
init|=
name|System
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"yoko.orb.id"
argument_list|,
literal|"CXF-CORBA-Binding"
argument_list|)
expr_stmt|;
name|orb
operator|=
name|ORB
operator|.
name|init
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|orb
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|orb
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// Do nothing.  Throw an Exception?
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateStreamable
parameter_list|()
block|{
name|QName
name|objName
init|=
operator|new
name|QName
argument_list|(
literal|"object"
argument_list|)
decl_stmt|;
name|QName
name|objIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"short"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|TypeCode
name|objTypeCode
init|=
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_short
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|obj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
name|objName
argument_list|,
name|objIdlType
argument_list|,
name|objTypeCode
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CorbaStreamable
name|streamable
init|=
operator|new
name|CorbaStreamableImpl
argument_list|(
name|obj
argument_list|,
name|objName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetStreamableAttributes
parameter_list|()
block|{
name|QName
name|objName
init|=
operator|new
name|QName
argument_list|(
literal|"object"
argument_list|)
decl_stmt|;
name|QName
name|objIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"float"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|TypeCode
name|objTypeCode
init|=
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_float
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|obj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
name|objName
argument_list|,
name|objIdlType
argument_list|,
name|objTypeCode
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CorbaStreamable
name|streamable
init|=
operator|new
name|CorbaStreamableImpl
argument_list|(
name|obj
argument_list|,
name|objName
argument_list|)
decl_stmt|;
name|TypeCode
name|type
init|=
name|streamable
operator|.
name|_type
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|type
operator|.
name|kind
argument_list|()
operator|.
name|value
argument_list|()
operator|==
name|objTypeCode
operator|.
name|kind
argument_list|()
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|CorbaPrimitiveHandler
name|storedObj
init|=
operator|(
name|CorbaPrimitiveHandler
operator|)
name|streamable
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|storedObj
argument_list|)
expr_stmt|;
name|int
name|mode
init|=
name|streamable
operator|.
name|getMode
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|mode
operator|==
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ARG_OUT
operator|.
name|value
argument_list|)
expr_stmt|;
name|String
name|name
init|=
name|streamable
operator|.
name|getName
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|name
operator|.
name|equals
argument_list|(
name|objName
operator|.
name|getLocalPart
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetStreamableAttributes
parameter_list|()
block|{
name|QName
name|objName
init|=
operator|new
name|QName
argument_list|(
literal|"object"
argument_list|)
decl_stmt|;
name|QName
name|objIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"boolean"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|TypeCode
name|objTypeCode
init|=
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_boolean
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|obj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
name|objName
argument_list|,
name|objIdlType
argument_list|,
name|objTypeCode
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CorbaStreamable
name|streamable
init|=
operator|new
name|CorbaStreamableImpl
argument_list|(
name|obj
argument_list|,
name|objName
argument_list|)
decl_stmt|;
name|streamable
operator|.
name|setMode
argument_list|(
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ARG_IN
operator|.
name|value
argument_list|)
expr_stmt|;
name|int
name|mode
init|=
name|streamable
operator|.
name|getMode
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|mode
operator|==
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ARG_IN
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadStreamable
parameter_list|()
block|{
name|QName
name|objName
init|=
operator|new
name|QName
argument_list|(
literal|"object"
argument_list|)
decl_stmt|;
name|QName
name|objIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"char"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|TypeCode
name|objTypeCode
init|=
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_char
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|obj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
name|objName
argument_list|,
name|objIdlType
argument_list|,
name|objTypeCode
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CorbaStreamable
name|streamable
init|=
operator|new
name|CorbaStreamableImpl
argument_list|(
name|obj
argument_list|,
name|objName
argument_list|)
decl_stmt|;
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|oStream
operator|.
name|write_char
argument_list|(
literal|'c'
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|streamable
operator|.
name|_read
argument_list|(
name|iStream
argument_list|)
expr_stmt|;
name|CorbaPrimitiveHandler
name|streamableObj
init|=
operator|(
name|CorbaPrimitiveHandler
operator|)
name|streamable
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|Object
name|o
init|=
name|streamableObj
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|o
operator|instanceof
name|Character
argument_list|)
expr_stmt|;
name|Character
name|charValue
init|=
operator|(
name|Character
operator|)
name|o
decl_stmt|;
name|assertTrue
argument_list|(
name|charValue
operator|.
name|charValue
argument_list|()
operator|==
literal|'c'
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteStreamable
parameter_list|()
block|{
name|QName
name|objName
init|=
operator|new
name|QName
argument_list|(
literal|"object"
argument_list|)
decl_stmt|;
name|QName
name|objIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"wstring"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|TypeCode
name|objTypeCode
init|=
name|orb
operator|.
name|get_primitive_tc
argument_list|(
name|TCKind
operator|.
name|tk_wstring
argument_list|)
decl_stmt|;
name|CorbaPrimitiveHandler
name|obj
init|=
operator|new
name|CorbaPrimitiveHandler
argument_list|(
name|objName
argument_list|,
name|objIdlType
argument_list|,
name|objTypeCode
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|obj
operator|.
name|setValueFromData
argument_list|(
literal|"TestWString"
argument_list|)
expr_stmt|;
name|CorbaStreamable
name|streamable
init|=
operator|new
name|CorbaStreamableImpl
argument_list|(
name|obj
argument_list|,
name|objName
argument_list|)
decl_stmt|;
name|OutputStream
name|oStream
init|=
name|orb
operator|.
name|create_output_stream
argument_list|()
decl_stmt|;
name|streamable
operator|.
name|_write
argument_list|(
name|oStream
argument_list|)
expr_stmt|;
name|InputStream
name|iStream
init|=
name|oStream
operator|.
name|create_input_stream
argument_list|()
decl_stmt|;
name|String
name|value
init|=
name|iStream
operator|.
name|read_wstring
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"TestWString"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

