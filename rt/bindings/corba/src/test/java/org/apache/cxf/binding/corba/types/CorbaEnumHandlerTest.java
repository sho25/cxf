begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|types
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Enum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|Enumerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|ORB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|TypeCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|CorbaEnumHandlerTest
block|{
specifier|private
name|ORB
name|orb
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|java
operator|.
name|util
operator|.
name|Properties
name|props
init|=
name|System
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"yoko.orb.id"
argument_list|,
literal|"CXF-CORBA-Server-Binding"
argument_list|)
expr_stmt|;
name|orb
operator|=
name|ORB
operator|.
name|init
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|orb
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|orb
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// Do nothing.  Throw an Exception?
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCorbaEnumHandler
parameter_list|()
block|{
name|Enum
name|enumType
init|=
operator|new
name|Enum
argument_list|()
decl_stmt|;
name|enumType
operator|.
name|setName
argument_list|(
literal|"EnumType"
argument_list|)
expr_stmt|;
name|enumType
operator|.
name|setRepositoryID
argument_list|(
literal|"IDL:EnumType:1.0"
argument_list|)
expr_stmt|;
name|Enumerator
name|enumerator0
init|=
operator|new
name|Enumerator
argument_list|()
decl_stmt|;
name|enumerator0
operator|.
name|setValue
argument_list|(
literal|"ENUM0"
argument_list|)
expr_stmt|;
name|Enumerator
name|enumerator1
init|=
operator|new
name|Enumerator
argument_list|()
decl_stmt|;
name|enumerator1
operator|.
name|setValue
argument_list|(
literal|"ENUM1"
argument_list|)
expr_stmt|;
name|Enumerator
name|enumerator2
init|=
operator|new
name|Enumerator
argument_list|()
decl_stmt|;
name|enumerator2
operator|.
name|setValue
argument_list|(
literal|"ENUM2"
argument_list|)
expr_stmt|;
name|enumType
operator|.
name|getEnumerator
argument_list|()
operator|.
name|add
argument_list|(
name|enumerator0
argument_list|)
expr_stmt|;
name|enumType
operator|.
name|getEnumerator
argument_list|()
operator|.
name|add
argument_list|(
name|enumerator1
argument_list|)
expr_stmt|;
name|enumType
operator|.
name|getEnumerator
argument_list|()
operator|.
name|add
argument_list|(
name|enumerator2
argument_list|)
expr_stmt|;
name|QName
name|enumName
init|=
operator|new
name|QName
argument_list|(
literal|"EnumType"
argument_list|)
decl_stmt|;
name|QName
name|enumIdlType
init|=
operator|new
name|QName
argument_list|(
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|,
literal|"EnumType"
argument_list|,
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|)
decl_stmt|;
name|String
index|[]
name|members
init|=
operator|new
name|String
index|[
literal|3
index|]
decl_stmt|;
name|members
index|[
literal|0
index|]
operator|=
name|enumerator0
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|members
index|[
literal|1
index|]
operator|=
name|enumerator1
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|members
index|[
literal|2
index|]
operator|=
name|enumerator2
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|TypeCode
name|enumTC
init|=
name|orb
operator|.
name|create_enum_tc
argument_list|(
name|enumType
operator|.
name|getRepositoryID
argument_list|()
argument_list|,
name|enumType
operator|.
name|getName
argument_list|()
argument_list|,
name|members
argument_list|)
decl_stmt|;
name|CorbaEnumHandler
name|obj
init|=
operator|new
name|CorbaEnumHandler
argument_list|(
name|enumName
argument_list|,
name|enumIdlType
argument_list|,
name|enumTC
argument_list|,
name|enumType
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|obj
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setValue
argument_list|(
name|members
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|obj
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|enumerator1
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|obj
operator|.
name|getIndex
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

