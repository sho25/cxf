begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPPart
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
operator|.
name|NullResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|ParseBodyTest
block|{
specifier|static
specifier|final
name|String
index|[]
name|DATA
init|=
block|{
literal|"<SOAP-ENV:Body xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n"
operator|+
literal|"<foo>\n<bar/>\n</foo>\n</SOAP-ENV:Body>"
block|,
literal|"<SOAP-ENV:Body xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<foo>\n<bar/>\n</foo>\n</SOAP-ENV:Body>"
block|,
literal|"<SOAP-ENV:Body xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<foo>\n<bar/>\n</foo></SOAP-ENV:Body>"
block|}
decl_stmt|;
specifier|private
name|XMLStreamReader
name|xmlReader
decl_stmt|;
specifier|private
name|MessageFactory
name|factory
decl_stmt|;
specifier|private
name|SOAPMessage
name|soapMessage
decl_stmt|;
specifier|private
name|void
name|prepare
parameter_list|(
name|int
name|n
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|data
init|=
name|DATA
index|[
name|n
index|]
decl_stmt|;
comment|//System.out.println("Original[" + n + "]: " + data);
name|xmlReader
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//reader should be on the start element for the
name|assertEquals
argument_list|(
name|XMLStreamConstants
operator|.
name|START_ELEMENT
argument_list|,
name|xmlReader
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Body"
argument_list|,
name|xmlReader
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
name|soapMessage
operator|=
name|factory
operator|.
name|createMessage
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUsingStaxUtilsCopyWithSAAJWriterData0
parameter_list|()
throws|throws
name|Exception
block|{
name|testUsingStaxUtilsCopyWithSAAJWriter
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUsingStaxUtilsCopyWithSAAJWriterData1
parameter_list|()
throws|throws
name|Exception
block|{
name|testUsingStaxUtilsCopyWithSAAJWriter
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUsingStaxUtilsCopyWithSAAJWriterData2
parameter_list|()
throws|throws
name|Exception
block|{
name|testUsingStaxUtilsCopyWithSAAJWriter
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadSOAPFault
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|inStream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"soap12-fault.xml"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|inStream
argument_list|)
decl_stmt|;
name|SoapMessage
name|msg
init|=
operator|new
name|SoapMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|Exchange
name|ex
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|ex
operator|.
name|setInMessage
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|SOAPMessage
name|saajMsg
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|(
name|SOAPConstants
operator|.
name|SOAP_1_2_PROTOCOL
argument_list|)
operator|.
name|createMessage
argument_list|()
decl_stmt|;
name|SOAPPart
name|part
init|=
name|saajMsg
operator|.
name|getSOAPPart
argument_list|()
decl_stmt|;
name|SAAJStreamWriter
name|writer
init|=
operator|new
name|SAAJStreamWriter
argument_list|(
name|part
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|doc
argument_list|,
name|writer
argument_list|)
expr_stmt|;
comment|//Source s = new StaxSource(StaxUtils.createXMLStreamReader(doc));
comment|//part.setContent(s);
name|saajMsg
operator|.
name|saveChanges
argument_list|()
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|SOAPMessage
operator|.
name|class
argument_list|,
name|saajMsg
argument_list|)
expr_stmt|;
name|doc
operator|=
name|part
expr_stmt|;
comment|// System.out.println("OUTPUT: " + StaxUtils.toString(doc));
name|byte
index|[]
name|docbytes
init|=
name|getMessageBytes
argument_list|(
name|doc
argument_list|)
decl_stmt|;
comment|// System.out.println("OUTPUT: " + new String(docbytes));
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|docbytes
argument_list|)
argument_list|)
decl_stmt|;
name|DocumentBuilderFactory
name|dbf
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|dbf
operator|.
name|setValidating
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dbf
operator|.
name|setIgnoringComments
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dbf
operator|.
name|setIgnoringElementContentWhitespace
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dbf
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|db
init|=
name|dbf
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|db
operator|.
name|setEntityResolver
argument_list|(
operator|new
name|NullResolver
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|db
argument_list|,
name|reader
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testUsingStaxUtilsCopyWithSAAJWriter
parameter_list|(
name|int
name|n
parameter_list|)
throws|throws
name|Exception
block|{
name|prepare
argument_list|(
name|n
argument_list|)
expr_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|xmlReader
argument_list|,
operator|new
name|SAAJStreamWriter
argument_list|(
name|soapMessage
operator|.
name|getSOAPPart
argument_list|()
argument_list|,
name|soapMessage
operator|.
name|getSOAPPart
argument_list|()
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|DOMSource
name|bodySource
init|=
operator|new
name|DOMSource
argument_list|(
name|soapMessage
operator|.
name|getSOAPPart
argument_list|()
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
decl_stmt|;
name|xmlReader
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|bodySource
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|buf
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|xmlReader
argument_list|,
name|buf
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|buf
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|//System.out.println("UsingStaxUtilsCopyWithSAAJWriter: " + result);
name|assertEquals
argument_list|(
name|DATA
index|[
name|n
index|]
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
specifier|private
name|byte
index|[]
name|getMessageBytes
parameter_list|(
name|Document
name|doc
parameter_list|)
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outputStream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|byteArrayWriter
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|outputStream
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|writeDocument
argument_list|(
name|doc
argument_list|,
name|byteArrayWriter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|byteArrayWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
return|return
name|outputStream
operator|.
name|toByteArray
argument_list|()
return|;
block|}
block|}
end_class

end_unit

