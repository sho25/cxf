begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|Soap11
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|ReadHeadersInterceptorTest
block|{
specifier|private
specifier|static
specifier|final
name|byte
index|[]
name|TEST_SOAP
init|=
operator|(
literal|"<soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'"
operator|+
literal|" xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'"
operator|+
literal|" xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:bar='tmp:bar'>"
operator|+
literal|"<soap:Body>"
operator|+
literal|"<ns2:payload xmlns:ns2='urn:tmp:foo'/>"
operator|+
literal|"</soap:Body>"
operator|+
literal|"</soap:Envelope>"
operator|)
operator|.
name|getBytes
argument_list|()
decl_stmt|;
specifier|private
name|ReadHeadersInterceptor
name|interceptor
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|interceptor
operator|=
operator|new
name|ReadHeadersInterceptor
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotAddNSContext
parameter_list|()
throws|throws
name|Exception
block|{
name|SoapMessage
name|message
init|=
name|setUpMessage
argument_list|()
decl_stmt|;
name|interceptor
operator|.
name|handleMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsc
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|message
operator|.
name|get
argument_list|(
literal|"soap.body.ns.context"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|nsc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddNSContext
parameter_list|()
throws|throws
name|Exception
block|{
name|SoapMessage
name|message
init|=
name|setUpMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.binding.soap.addNamespaceContext"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|interceptor
operator|.
name|handleMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsc
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|message
operator|.
name|get
argument_list|(
literal|"soap.body.ns.context"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nsc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema-instance"
argument_list|,
name|nsc
operator|.
name|get
argument_list|(
literal|"xsi"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema"
argument_list|,
name|nsc
operator|.
name|get
argument_list|(
literal|"xs"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"tmp:bar"
argument_list|,
name|nsc
operator|.
name|get
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SoapMessage
name|setUpMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|SoapMessage
name|message
init|=
operator|new
name|SoapMessage
argument_list|(
name|Soap11
operator|.
name|getInstance
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|XMLStreamReader
operator|.
name|class
argument_list|,
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|TEST_SOAP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|message
return|;
block|}
block|}
end_class

end_unit

