begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|Soap11
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|Soap12
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|SystemPropertyAction
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|SAAJFactoryResolver
block|{
specifier|public
specifier|static
specifier|final
name|String
name|MESSAGE_FACTORY_KEY
init|=
literal|"org.apache.cxf.binding.soap.messageFactoryClassName"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOAP_FACTORY_KEY
init|=
literal|"org.apache.cxf.binding.soap.soapFactoryClassName"
decl_stmt|;
specifier|private
name|SAAJFactoryResolver
parameter_list|()
block|{
comment|//utility class
block|}
specifier|public
specifier|static
name|MessageFactory
name|createMessageFactory
parameter_list|(
name|SoapVersion
name|version
parameter_list|)
throws|throws
name|SOAPException
block|{
name|MessageFactory
name|messageFactory
decl_stmt|;
name|String
name|messageFactoryClassName
init|=
name|SystemPropertyAction
operator|.
name|getProperty
argument_list|(
name|MESSAGE_FACTORY_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|messageFactoryClassName
operator|!=
literal|null
condition|)
block|{
name|messageFactory
operator|=
name|newInstanceCxfSAAJFactory
argument_list|(
name|messageFactoryClassName
argument_list|,
name|MessageFactory
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|version
operator|instanceof
name|Soap11
condition|)
block|{
try|try
block|{
name|messageFactory
operator|=
name|MessageFactory
operator|.
name|newInstance
argument_list|(
name|SOAPConstants
operator|.
name|SOAP_1_1_PROTOCOL
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|messageFactory
operator|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|version
operator|instanceof
name|Soap12
condition|)
block|{
try|try
block|{
name|messageFactory
operator|=
name|MessageFactory
operator|.
name|newInstance
argument_list|(
name|SOAPConstants
operator|.
name|SOAP_1_2_PROTOCOL
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|messageFactory
operator|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|messageFactory
operator|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
return|return
name|messageFactory
return|;
block|}
specifier|public
specifier|static
name|SOAPFactory
name|createSOAPFactory
parameter_list|(
name|SoapVersion
name|version
parameter_list|)
throws|throws
name|SOAPException
block|{
name|SOAPFactory
name|soapFactory
decl_stmt|;
name|String
name|soapFactoryClassName
init|=
name|SystemPropertyAction
operator|.
name|getProperty
argument_list|(
name|SOAP_FACTORY_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|soapFactoryClassName
operator|!=
literal|null
condition|)
block|{
name|soapFactory
operator|=
name|newInstanceCxfSAAJFactory
argument_list|(
name|soapFactoryClassName
argument_list|,
name|SOAPFactory
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|version
operator|instanceof
name|Soap11
condition|)
block|{
try|try
block|{
name|soapFactory
operator|=
name|SOAPFactory
operator|.
name|newInstance
argument_list|(
name|SOAPConstants
operator|.
name|SOAP_1_1_PROTOCOL
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|soapFactory
operator|=
name|SOAPFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|version
operator|instanceof
name|Soap12
condition|)
block|{
try|try
block|{
name|soapFactory
operator|=
name|SOAPFactory
operator|.
name|newInstance
argument_list|(
name|SOAPConstants
operator|.
name|SOAP_1_2_PROTOCOL
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|soapFactory
operator|=
name|SOAPFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|soapFactory
operator|=
name|SOAPFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
return|return
name|soapFactory
return|;
block|}
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|T
name|newInstanceCxfSAAJFactory
parameter_list|(
name|String
name|factoryName
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
throws|throws
name|SOAPException
block|{
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|klass
init|=
name|Class
operator|.
name|forName
argument_list|(
name|factoryName
argument_list|)
decl_stmt|;
return|return
name|cls
operator|.
name|cast
argument_list|(
name|klass
operator|.
name|newInstance
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|cnfe
parameter_list|)
block|{
throw|throw
operator|new
name|SOAPException
argument_list|(
literal|"Provider "
operator|+
name|factoryName
operator|+
literal|" could not be instantiated: "
operator|+
name|cnfe
argument_list|,
name|cnfe
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InstantiationException
name|ie
parameter_list|)
block|{
throw|throw
operator|new
name|SOAPException
argument_list|(
literal|"Provider "
operator|+
name|factoryName
operator|+
literal|" could not be instantiated: "
operator|+
name|ie
argument_list|,
name|ie
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|iae
parameter_list|)
block|{
throw|throw
operator|new
name|SOAPException
argument_list|(
literal|"Provider "
operator|+
name|factoryName
operator|+
literal|" could not be instantiated: "
operator|+
name|iae
argument_list|,
name|iae
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

