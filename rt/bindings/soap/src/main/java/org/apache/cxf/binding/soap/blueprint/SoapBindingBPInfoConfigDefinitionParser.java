begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|blueprint
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableBeanMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutablePassThroughMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapBindingConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|blueprint
operator|.
name|AbstractBPBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|Metadata
import|;
end_import

begin_class
specifier|public
class|class
name|SoapBindingBPInfoConfigDefinitionParser
extends|extends
name|AbstractBPBeanDefinitionParser
block|{
specifier|public
name|Metadata
name|parse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
name|context
operator|.
name|getComponentDefinitionRegistry
argument_list|()
operator|.
name|containsComponentDefinition
argument_list|(
name|SoapVersionTypeConverter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|MutablePassThroughMetadata
name|md
init|=
name|context
operator|.
name|createMetadata
argument_list|(
name|MutablePassThroughMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|md
operator|.
name|setObject
argument_list|(
operator|new
name|SoapVersionTypeConverter
argument_list|()
argument_list|)
expr_stmt|;
name|md
operator|.
name|setId
argument_list|(
name|SoapVersionTypeConverter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|getComponentDefinitionRegistry
argument_list|()
operator|.
name|registerTypeConverter
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
name|MutableBeanMetadata
name|cxfBean
init|=
name|context
operator|.
name|createMetadata
argument_list|(
name|MutableBeanMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|cxfBean
operator|.
name|setRuntimeClass
argument_list|(
name|SoapBindingConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|parseAttributes
argument_list|(
name|element
argument_list|,
name|context
argument_list|,
name|cxfBean
argument_list|)
expr_stmt|;
name|parseChildElements
argument_list|(
name|element
argument_list|,
name|context
argument_list|,
name|cxfBean
argument_list|)
expr_stmt|;
return|return
name|cxfBean
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|mapElement
parameter_list|(
name|ParserContext
name|ctx
parameter_list|,
name|MutableBeanMetadata
name|bean
parameter_list|,
name|Element
name|el
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
literal|"version"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
operator|||
literal|"mtomEnabled"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
operator|||
literal|"style"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
operator|||
literal|"use"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|bean
operator|.
name|addProperty
argument_list|(
name|name
argument_list|,
name|parseMapData
argument_list|(
name|ctx
argument_list|,
name|bean
argument_list|,
name|el
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

