begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|jbi
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLOutputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|jbi
operator|.
name|JBIMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|PhaseInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JBIFaultOutInterceptorTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testPhase
parameter_list|()
throws|throws
name|Exception
block|{
name|PhaseInterceptor
argument_list|<
name|JBIMessage
argument_list|>
name|interceptor
init|=
operator|new
name|JBIFaultOutInterceptor
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Phase
operator|.
name|MARSHAL
argument_list|,
name|interceptor
operator|.
name|getPhase
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoWriter
parameter_list|()
throws|throws
name|Exception
block|{
name|PhaseInterceptor
argument_list|<
name|JBIMessage
argument_list|>
name|interceptor
init|=
operator|new
name|JBIFaultOutInterceptor
argument_list|()
decl_stmt|;
try|try
block|{
name|JBIMessage
name|msg
init|=
operator|new
name|JBIMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|interceptor
operator|.
name|handleMessage
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// ok
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoFault
parameter_list|()
throws|throws
name|Exception
block|{
name|PhaseInterceptor
argument_list|<
name|JBIMessage
argument_list|>
name|interceptor
init|=
operator|new
name|JBIFaultOutInterceptor
argument_list|()
decl_stmt|;
try|try
block|{
name|JBIMessage
name|msg
init|=
operator|new
name|JBIMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|XMLStreamWriter
operator|.
name|class
argument_list|,
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createXMLStreamWriter
argument_list|(
operator|new
name|ByteArrayOutputStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|interceptor
operator|.
name|handleMessage
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// ok
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyFault
parameter_list|()
throws|throws
name|Exception
block|{
name|PhaseInterceptor
argument_list|<
name|JBIMessage
argument_list|>
name|interceptor
init|=
operator|new
name|JBIFaultOutInterceptor
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createXMLStreamWriter
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|JBIMessage
name|msg
init|=
operator|new
name|JBIMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|XMLStreamWriter
operator|.
name|class
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|,
operator|new
name|Exception
argument_list|(
literal|"My fault"
argument_list|)
argument_list|)
expr_stmt|;
name|interceptor
operator|.
name|handleMessage
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"fault"
argument_list|,
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getFirstChild
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDetailedFault
parameter_list|()
throws|throws
name|Exception
block|{
name|PhaseInterceptor
argument_list|<
name|JBIMessage
argument_list|>
name|interceptor
init|=
operator|new
name|JBIFaultOutInterceptor
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createXMLStreamWriter
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|JBIMessage
name|msg
init|=
operator|new
name|JBIMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|Fault
name|f
init|=
operator|new
name|Fault
argument_list|(
operator|new
name|Message
argument_list|(
literal|"FAULT"
argument_list|,
operator|(
name|ResourceBundle
operator|)
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|f
operator|.
name|getOrCreateDetail
argument_list|()
expr_stmt|;
name|f
operator|.
name|getDetail
argument_list|()
operator|.
name|appendChild
argument_list|(
name|f
operator|.
name|getDetail
argument_list|()
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createElementNS
argument_list|(
literal|"urn:test"
argument_list|,
literal|"myDetails"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|XMLStreamWriter
operator|.
name|class
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|,
name|f
argument_list|)
expr_stmt|;
name|interceptor
operator|.
name|handleMessage
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"urn:test"
argument_list|,
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getFirstChild
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"myDetails"
argument_list|,
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getFirstChild
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

