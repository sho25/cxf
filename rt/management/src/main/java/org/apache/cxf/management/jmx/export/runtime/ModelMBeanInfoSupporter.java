begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|jmx
operator|.
name|export
operator|.
name|runtime
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|Descriptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanOperationInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanParameterInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|DescriptorSupport
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanAttributeInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanConstructorInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanInfoSupport
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanNotificationInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedResource
import|;
end_import

begin_class
specifier|public
class|class
name|ModelMBeanInfoSupporter
block|{
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|ModelMBeanAttributeInfo
argument_list|>
name|attributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ModelMBeanAttributeInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|ModelMBeanNotificationInfo
argument_list|>
name|notifications
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ModelMBeanNotificationInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|Constructor
argument_list|<
name|?
argument_list|>
argument_list|,
name|ModelMBeanConstructorInfo
argument_list|>
name|constructors
init|=
operator|new
name|HashMap
argument_list|<
name|Constructor
argument_list|<
name|?
argument_list|>
argument_list|,
name|ModelMBeanConstructorInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|ModelMBeanOperationInfo
argument_list|>
name|operations
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ModelMBeanOperationInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|ModelMBeanInfoSupporter
parameter_list|()
block|{      }
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|attributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|notifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|constructors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|operations
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|addModelMBeanMethod
parameter_list|(
name|String
name|name
parameter_list|,
name|String
index|[]
name|paramTypes
parameter_list|,
name|String
index|[]
name|paramNames
parameter_list|,
name|String
index|[]
name|paramDescs
parameter_list|,
name|String
name|description
parameter_list|,
name|String
name|rtype
parameter_list|,
name|Descriptor
name|desc
parameter_list|)
block|{
name|MBeanParameterInfo
index|[]
name|params
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|paramTypes
operator|!=
literal|null
condition|)
block|{
name|params
operator|=
operator|new
name|MBeanParameterInfo
index|[
name|paramTypes
operator|.
name|length
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|paramTypes
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|params
index|[
name|i
index|]
operator|=
operator|new
name|MBeanParameterInfo
argument_list|(
name|paramNames
index|[
name|i
index|]
argument_list|,
name|paramTypes
index|[
name|i
index|]
argument_list|,
name|paramDescs
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
name|operations
operator|.
name|put
argument_list|(
name|name
argument_list|,
operator|new
name|ModelMBeanOperationInfo
argument_list|(
name|name
argument_list|,
name|description
argument_list|,
name|params
argument_list|,
name|rtype
argument_list|,
name|MBeanOperationInfo
operator|.
name|ACTION
argument_list|,
name|desc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addModelMBeanNotification
parameter_list|(
name|String
index|[]
name|type
parameter_list|,
name|String
name|className
parameter_list|,
name|String
name|description
parameter_list|,
name|Descriptor
name|desc
parameter_list|)
block|{
name|notifications
operator|.
name|put
argument_list|(
name|className
argument_list|,
operator|new
name|ModelMBeanNotificationInfo
argument_list|(
name|type
argument_list|,
name|className
argument_list|,
name|description
argument_list|,
name|desc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|checkAttribute
parameter_list|(
name|String
name|attributeName
parameter_list|)
block|{
return|return
name|attributes
operator|.
name|containsKey
argument_list|(
name|attributeName
argument_list|)
return|;
block|}
specifier|public
name|void
name|addModelMBeanAttribute
parameter_list|(
name|String
name|fname
parameter_list|,
name|String
name|ftype
parameter_list|,
name|boolean
name|read
parameter_list|,
name|boolean
name|write
parameter_list|,
name|boolean
name|is
parameter_list|,
name|String
name|description
parameter_list|,
name|Descriptor
name|desc
parameter_list|)
block|{
name|attributes
operator|.
name|put
argument_list|(
name|fname
argument_list|,
operator|new
name|ModelMBeanAttributeInfo
argument_list|(
name|fname
argument_list|,
name|ftype
argument_list|,
name|description
argument_list|,
name|read
argument_list|,
name|write
argument_list|,
name|is
argument_list|,
name|desc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addModelMBeanConstructor
parameter_list|(
name|Constructor
argument_list|<
name|?
argument_list|>
name|c
parameter_list|,
name|String
name|description
parameter_list|,
name|Descriptor
name|desc
parameter_list|)
block|{
name|this
operator|.
name|constructors
operator|.
name|put
argument_list|(
name|c
argument_list|,
operator|new
name|ModelMBeanConstructorInfo
argument_list|(
name|description
argument_list|,
name|c
argument_list|,
name|desc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ModelMBeanInfo
name|buildModelMBeanInfo
parameter_list|(
name|Descriptor
name|desc
parameter_list|)
block|{
name|ModelMBeanOperationInfo
index|[]
name|ops
init|=
name|operations
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|ModelMBeanOperationInfo
index|[
name|operations
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|ModelMBeanAttributeInfo
index|[]
name|atts
init|=
name|attributes
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|ModelMBeanAttributeInfo
index|[
name|attributes
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|ModelMBeanConstructorInfo
index|[]
name|cons
init|=
name|constructors
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|ModelMBeanConstructorInfo
index|[
name|constructors
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|ModelMBeanNotificationInfo
index|[]
name|notifs
init|=
name|notifications
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|ModelMBeanNotificationInfo
index|[
name|notifications
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
return|return
operator|new
name|ModelMBeanInfoSupport
argument_list|(
literal|"javax.management.modelmbean.ModelMBeanInfo"
argument_list|,
literal|"description"
argument_list|,
name|atts
argument_list|,
name|cons
argument_list|,
name|ops
argument_list|,
name|notifs
argument_list|,
name|desc
argument_list|)
return|;
block|}
specifier|public
name|Descriptor
name|buildAttributeDescriptor
parameter_list|(
name|ManagedAttribute
name|ma
parameter_list|,
name|String
name|attributeName
parameter_list|,
name|boolean
name|is
parameter_list|,
name|boolean
name|read
parameter_list|,
name|boolean
name|write
parameter_list|)
block|{
name|Descriptor
name|desc
init|=
operator|new
name|DescriptorSupport
argument_list|()
decl_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"name"
argument_list|,
name|attributeName
argument_list|)
expr_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"descriptorType"
argument_list|,
literal|"attribute"
argument_list|)
expr_stmt|;
if|if
condition|(
name|read
condition|)
block|{
if|if
condition|(
name|is
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"getMethod"
argument_list|,
literal|"is"
operator|+
name|attributeName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"getMethod"
argument_list|,
literal|"get"
operator|+
name|attributeName
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|write
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"setMethod"
argument_list|,
literal|"set"
operator|+
name|attributeName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ma
operator|.
name|currencyTimeLimit
argument_list|()
operator|>=
operator|-
literal|1
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"currencyTimeLimit"
argument_list|,
name|ma
operator|.
name|currencyTimeLimit
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ma
operator|.
name|persistPolicy
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"persistPolicy"
argument_list|,
name|ma
operator|.
name|persistPolicy
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ma
operator|.
name|persistPeriod
argument_list|()
operator|>=
operator|-
literal|1
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"persistPeriod"
argument_list|,
name|ma
operator|.
name|persistPeriod
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ma
operator|.
name|defaultValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"default"
argument_list|,
name|ma
operator|.
name|defaultValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|desc
return|;
block|}
specifier|public
name|Descriptor
name|buildOperationDescriptor
parameter_list|(
name|ManagedOperation
name|mo
parameter_list|,
name|String
name|operationName
parameter_list|)
block|{
name|Descriptor
name|desc
init|=
operator|new
name|DescriptorSupport
argument_list|()
decl_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"name"
argument_list|,
name|operationName
argument_list|)
expr_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"descriptorType"
argument_list|,
literal|"operation"
argument_list|)
expr_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"role"
argument_list|,
literal|"operation"
argument_list|)
expr_stmt|;
if|if
condition|(
name|mo
operator|.
name|description
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"displayName"
argument_list|,
name|mo
operator|.
name|description
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mo
operator|.
name|currencyTimeLimit
argument_list|()
operator|>=
operator|-
literal|1
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"currencyTimeLimit"
argument_list|,
name|mo
operator|.
name|currencyTimeLimit
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|desc
return|;
block|}
specifier|public
name|Descriptor
name|buildAttributeOperationDescriptor
parameter_list|(
name|String
name|operationName
parameter_list|)
block|{
name|Descriptor
name|desc
init|=
operator|new
name|DescriptorSupport
argument_list|()
decl_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"name"
argument_list|,
name|operationName
argument_list|)
expr_stmt|;
name|desc
operator|.
name|setField
argument_list|(
literal|"descriptorType"
argument_list|,
literal|"operation"
argument_list|)
expr_stmt|;
if|if
condition|(
name|operationName
operator|.
name|indexOf
argument_list|(
literal|"set"
argument_list|)
operator|==
literal|0
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"role"
argument_list|,
literal|"setter"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"role"
argument_list|,
literal|"getter"
argument_list|)
expr_stmt|;
block|}
return|return
name|desc
return|;
block|}
specifier|public
name|Descriptor
name|buildMBeanDescriptor
parameter_list|(
name|ManagedResource
name|mr
parameter_list|)
block|{
name|Descriptor
name|desc
init|=
operator|new
name|DescriptorSupport
argument_list|()
decl_stmt|;
if|if
condition|(
name|mr
operator|.
name|componentName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"name"
argument_list|,
name|mr
operator|.
name|componentName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|desc
operator|.
name|setField
argument_list|(
literal|"descriptorType"
argument_list|,
literal|"mbean"
argument_list|)
expr_stmt|;
if|if
condition|(
name|mr
operator|.
name|description
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"displayName"
argument_list|,
name|mr
operator|.
name|description
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|persistLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"persistLocation"
argument_list|,
name|mr
operator|.
name|persistLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|persistName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"persistName"
argument_list|,
name|mr
operator|.
name|persistName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|log
argument_list|()
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"log"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"log"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|persistPolicy
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"persistPolicy"
argument_list|,
name|mr
operator|.
name|persistPolicy
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|persistPeriod
argument_list|()
operator|>=
operator|-
literal|1
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"persistPeriod"
argument_list|,
name|mr
operator|.
name|persistPeriod
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|logFile
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"logFile"
argument_list|,
name|mr
operator|.
name|logFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mr
operator|.
name|currencyTimeLimit
argument_list|()
operator|>=
operator|-
literal|1
condition|)
block|{
name|desc
operator|.
name|setField
argument_list|(
literal|"currencyTimeLimit"
argument_list|,
name|mr
operator|.
name|currencyTimeLimit
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|desc
return|;
block|}
block|}
end_class

end_unit

