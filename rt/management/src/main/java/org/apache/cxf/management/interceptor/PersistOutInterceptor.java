begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CacheAndWriteOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStreamCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|persistence
operator|.
name|ExchangeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|persistence
operator|.
name|ExchangeDataDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|persistence
operator|.
name|ExchangeDataFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|persistence
operator|.
name|ExchangeDataProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|AbstractPhaseInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|OperationInfo
import|;
end_import

begin_class
specifier|public
class|class
name|PersistOutInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CXF_CONSOLE_ADDITIONAL_PROPERTY_PREFIX
init|=
literal|"org.apache.cxf.management.interceptor.prefix"
decl_stmt|;
specifier|private
name|ExchangeDataDAO
name|exchangeDataDAO
decl_stmt|;
specifier|private
name|ExchangeDataFilter
name|exchangeDataFilter
decl_stmt|;
specifier|public
name|PersistOutInterceptor
parameter_list|()
block|{
name|super
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
expr_stmt|;
block|}
class|class
name|PersistOutInterceptorCallback
implements|implements
name|CachedOutputStreamCallback
block|{
specifier|private
specifier|final
name|Message
name|message
decl_stmt|;
specifier|private
specifier|final
name|OutputStream
name|origStream
decl_stmt|;
specifier|private
specifier|final
name|ExchangeData
name|exchange
decl_stmt|;
name|PersistOutInterceptorCallback
parameter_list|(
specifier|final
name|Message
name|msg
parameter_list|,
specifier|final
name|OutputStream
name|os
parameter_list|,
specifier|final
name|ExchangeData
name|ex
parameter_list|)
block|{
name|this
operator|.
name|message
operator|=
name|msg
expr_stmt|;
name|this
operator|.
name|origStream
operator|=
name|os
expr_stmt|;
name|this
operator|.
name|exchange
operator|=
name|ex
expr_stmt|;
block|}
specifier|public
name|void
name|onClose
parameter_list|(
name|CachedOutputStream
name|cos
parameter_list|)
block|{
name|String
name|id
init|=
operator|(
name|String
operator|)
name|this
operator|.
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|LoggingMessage
operator|.
name|ID_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|==
literal|null
condition|)
block|{
name|id
operator|=
name|LoggingMessage
operator|.
name|nextId
argument_list|()
expr_stmt|;
name|this
operator|.
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|put
argument_list|(
name|LoggingMessage
operator|.
name|ID_KEY
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|cos
operator|.
name|writeCacheTo
argument_list|(
name|buffer
argument_list|,
name|cos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|exchange
operator|.
name|setResponseSize
argument_list|(
operator|(
name|int
operator|)
name|cos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|exchange
operator|.
name|setResponse
argument_list|(
name|buffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// ignore
block|}
try|try
block|{
comment|// empty out the cache
name|cos
operator|.
name|lockOutputStream
argument_list|()
expr_stmt|;
name|cos
operator|.
name|resetOut
argument_list|(
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// ignore
block|}
name|this
operator|.
name|message
operator|.
name|setContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|,
name|this
operator|.
name|origStream
argument_list|)
expr_stmt|;
if|if
condition|(
name|PersistOutInterceptor
operator|.
name|this
operator|.
name|exchangeDataFilter
operator|==
literal|null
operator|||
name|PersistOutInterceptor
operator|.
name|this
operator|.
name|exchangeDataFilter
operator|.
name|shouldPersist
argument_list|(
name|this
operator|.
name|exchange
argument_list|)
condition|)
block|{
try|try
block|{
name|PersistOutInterceptor
operator|.
name|this
operator|.
name|exchangeDataDAO
operator|.
name|save
argument_list|(
name|this
operator|.
name|exchange
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|onFlush
parameter_list|(
name|CachedOutputStream
name|cos
parameter_list|)
block|{          }
block|}
specifier|private
specifier|static
name|void
name|addProperty
parameter_list|(
name|ExchangeData
name|exchange
parameter_list|,
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|ExchangeDataProperty
name|exchangeProperty
init|=
operator|new
name|ExchangeDataProperty
argument_list|()
decl_stmt|;
name|exchangeProperty
operator|.
name|setExchangeData
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|exchangeProperty
operator|.
name|setName
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|exchangeProperty
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|exchange
operator|.
name|getProperties
argument_list|()
operator|==
literal|null
condition|)
block|{
name|exchange
operator|.
name|setProperties
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ExchangeDataProperty
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|exchange
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|exchangeProperty
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addPropertiesFrom
parameter_list|(
name|ExchangeData
name|exchange
parameter_list|,
name|Message
name|message
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|message
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|equals
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
operator|.
name|ENCODING
argument_list|)
condition|)
block|{
name|exchange
operator|.
name|setEncoding
argument_list|(
operator|(
name|String
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|equals
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
operator|.
name|REQUEST_URI
argument_list|)
condition|)
block|{
name|exchange
operator|.
name|setUri
argument_list|(
operator|(
name|String
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|equals
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|)
condition|)
block|{
if|if
condition|(
name|entry
operator|.
name|getValue
argument_list|()
operator|instanceof
name|Map
condition|)
block|{
name|List
argument_list|<
name|?
argument_list|>
name|userAgents
init|=
call|(
name|List
argument_list|<
name|?
argument_list|>
call|)
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
literal|"user-agent"
argument_list|)
decl_stmt|;
if|if
condition|(
name|userAgents
operator|!=
literal|null
operator|&&
operator|!
name|userAgents
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|exchange
operator|.
name|setUserAgent
argument_list|(
name|userAgents
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|entry
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|addProperty
argument_list|(
name|exchange
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"org.apache.cxf.message.Message."
argument_list|)
operator|&&
operator|(
name|entry
operator|.
name|getValue
argument_list|()
operator|instanceof
name|String
operator|||
name|entry
operator|.
name|getValue
argument_list|()
operator|instanceof
name|Integer
operator|||
name|entry
operator|.
name|getValue
argument_list|()
operator|instanceof
name|Boolean
operator|)
condition|)
block|{
name|addProperty
argument_list|(
name|exchange
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
name|CXF_CONSOLE_ADDITIONAL_PROPERTY_PREFIX
argument_list|)
condition|)
block|{
name|addProperty
argument_list|(
name|exchange
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|substring
argument_list|(
name|CXF_CONSOLE_ADDITIONAL_PROPERTY_PREFIX
operator|.
name|length
argument_list|()
argument_list|)
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|ExchangeData
name|exchangeData
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|getInMessage
argument_list|()
operator|.
name|getContent
argument_list|(
name|ExchangeData
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|exchangeData
operator|!=
literal|null
condition|)
block|{
specifier|final
name|OutputStream
name|os
init|=
name|message
operator|.
name|getContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|os
operator|==
literal|null
condition|)
block|{
return|return;
block|}
try|try
block|{
name|Service
name|service
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|getService
argument_list|()
decl_stmt|;
name|String
name|serviceName
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|service
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|OperationInfo
name|opInfo
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|getBindingOperationInfo
argument_list|()
operator|.
name|getOperationInfo
argument_list|()
decl_stmt|;
name|String
name|operationName
init|=
name|opInfo
operator|==
literal|null
condition|?
literal|null
else|:
name|opInfo
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
decl_stmt|;
if|if
condition|(
name|operationName
operator|==
literal|null
condition|)
block|{
name|Object
name|nameProperty
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.resource.operation.name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|nameProperty
operator|!=
literal|null
condition|)
block|{
name|operationName
operator|=
literal|"\""
operator|+
name|nameProperty
operator|.
name|toString
argument_list|()
operator|+
literal|"\""
expr_stmt|;
block|}
block|}
name|exchangeData
operator|.
name|setServiceName
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
name|exchangeData
operator|.
name|setOperation
argument_list|(
name|operationName
argument_list|)
expr_stmt|;
comment|// add all additional properties
name|addPropertiesFrom
argument_list|(
name|exchangeData
argument_list|,
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|getInMessage
argument_list|()
argument_list|)
expr_stmt|;
name|addPropertiesFrom
argument_list|(
name|exchangeData
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// TODO: handle exception
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
comment|// Write the output while caching it for the log message
specifier|final
name|CacheAndWriteOutputStream
name|newOut
init|=
operator|new
name|CacheAndWriteOutputStream
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|,
name|newOut
argument_list|)
expr_stmt|;
name|newOut
operator|.
name|registerCallback
argument_list|(
operator|new
name|PersistOutInterceptorCallback
argument_list|(
name|message
argument_list|,
name|os
argument_list|,
name|exchangeData
argument_list|)
argument_list|)
expr_stmt|;
name|exchangeData
operator|.
name|setOutDate
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|message
operator|.
name|getContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|exchangeData
operator|.
name|setStatus
argument_list|(
literal|"ERROR"
argument_list|)
expr_stmt|;
name|Exception
name|exception
init|=
name|message
operator|.
name|getContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
decl_stmt|;
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
if|if
condition|(
name|exception
operator|.
name|getCause
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|exchangeData
operator|.
name|setExceptionType
argument_list|(
name|exception
operator|.
name|getCause
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|exception
operator|.
name|getCause
argument_list|()
operator|.
name|printStackTrace
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|stringWriter
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|exchangeData
operator|.
name|setExceptionType
argument_list|(
name|exception
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|exception
operator|.
name|printStackTrace
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|stringWriter
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|exchangeData
operator|.
name|setStackTrace
argument_list|(
name|stringWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|exchangeData
operator|.
name|setStatus
argument_list|(
literal|"OK"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setExchangeDataDAO
parameter_list|(
name|ExchangeDataDAO
name|exchangeDataDAO
parameter_list|)
block|{
name|this
operator|.
name|exchangeDataDAO
operator|=
name|exchangeDataDAO
expr_stmt|;
block|}
specifier|public
name|void
name|setExchangeDataFilter
parameter_list|(
name|ExchangeDataFilter
name|exchangeDataFilter
parameter_list|)
block|{
name|this
operator|.
name|exchangeDataFilter
operator|=
name|exchangeDataFilter
expr_stmt|;
block|}
block|}
end_class

end_unit

