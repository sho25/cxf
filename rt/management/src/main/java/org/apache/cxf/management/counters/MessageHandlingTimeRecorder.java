begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|counters
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|FaultMode
import|;
end_import

begin_comment
comment|/* recoder the message actually handle begin and end time */
end_comment

begin_class
specifier|public
class|class
name|MessageHandlingTimeRecorder
block|{
specifier|private
name|Exchange
name|exchange
decl_stmt|;
specifier|private
name|long
name|beginTime
decl_stmt|;
specifier|private
name|long
name|endTime
decl_stmt|;
specifier|private
name|FaultMode
name|faultMode
decl_stmt|;
specifier|private
name|boolean
name|oneWay
decl_stmt|;
specifier|public
name|MessageHandlingTimeRecorder
parameter_list|(
name|Exchange
name|ex
parameter_list|)
block|{
name|exchange
operator|=
name|ex
expr_stmt|;
name|exchange
operator|.
name|put
argument_list|(
name|MessageHandlingTimeRecorder
operator|.
name|class
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isOneWay
parameter_list|()
block|{
return|return
name|oneWay
return|;
block|}
specifier|public
name|void
name|setOneWay
parameter_list|(
name|boolean
name|ow
parameter_list|)
block|{
name|oneWay
operator|=
name|ow
expr_stmt|;
block|}
specifier|public
name|Exchange
name|getHandleExchange
parameter_list|()
block|{
return|return
name|exchange
return|;
block|}
specifier|public
name|void
name|beginHandling
parameter_list|()
block|{
name|beginTime
operator|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|/
literal|1000
expr_stmt|;
block|}
specifier|public
name|void
name|endHandling
parameter_list|()
block|{
name|endTime
operator|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|/
literal|1000
expr_stmt|;
block|}
specifier|public
name|long
name|getEndTime
parameter_list|()
block|{
return|return
name|endTime
return|;
block|}
specifier|public
name|long
name|getHandlingTime
parameter_list|()
block|{
return|return
name|endTime
operator|-
name|beginTime
return|;
block|}
specifier|public
name|FaultMode
name|getFaultMode
parameter_list|()
block|{
return|return
name|faultMode
return|;
block|}
specifier|public
name|void
name|setFaultMode
parameter_list|(
name|FaultMode
name|faultMode
parameter_list|)
block|{
name|this
operator|.
name|faultMode
operator|=
name|faultMode
expr_stmt|;
block|}
block|}
end_class

end_unit

