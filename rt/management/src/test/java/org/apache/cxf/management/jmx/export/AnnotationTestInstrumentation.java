begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|jmx
operator|.
name|export
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|JMException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|ManagedComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedNotification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedOperationParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedOperationParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|annotation
operator|.
name|ManagedResource
import|;
end_import

begin_class
annotation|@
name|ManagedResource
argument_list|(
name|componentName
operator|=
literal|"AnnotationTest"
argument_list|,
name|description
operator|=
literal|"My Managed Bean"
argument_list|,
name|persistPolicy
operator|=
literal|"OnUpdate"
argument_list|,
name|currencyTimeLimit
operator|=
literal|15
argument_list|,
name|log
operator|=
literal|false
argument_list|,
name|logFile
operator|=
literal|"jmx.log"
argument_list|,
name|persistPeriod
operator|=
literal|200
argument_list|,
name|persistLocation
operator|=
literal|"/local/work"
argument_list|,
name|persistName
operator|=
literal|"bar.jmx"
argument_list|)
annotation|@
name|ManagedNotifications
argument_list|(
block|{
annotation|@
name|ManagedNotification
argument_list|(
name|name
operator|=
literal|"My Notification"
argument_list|,
name|notificationTypes
operator|=
block|{
literal|"type.foo"
block|,
literal|"type.bar"
block|}
argument_list|)
block|}
argument_list|)
specifier|public
class|class
name|AnnotationTestInstrumentation
implements|implements
name|ManagedComponent
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|nickName
decl_stmt|;
specifier|private
name|int
name|age
decl_stmt|;
specifier|private
name|boolean
name|isSuperman
decl_stmt|;
annotation|@
name|ManagedAttribute
argument_list|(
name|description
operator|=
literal|"The Age Attribute"
argument_list|,
name|currencyTimeLimit
operator|=
literal|15
argument_list|)
specifier|public
name|int
name|getAge
parameter_list|()
block|{
return|return
name|age
return|;
block|}
specifier|public
name|void
name|setAge
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|this
operator|.
name|age
operator|=
name|a
expr_stmt|;
block|}
annotation|@
name|ManagedOperation
argument_list|(
name|currencyTimeLimit
operator|=
literal|30
argument_list|)
specifier|public
name|long
name|myOperation
parameter_list|()
block|{
return|return
literal|1L
return|;
block|}
annotation|@
name|ManagedAttribute
argument_list|(
name|description
operator|=
literal|"The Name Attribute"
argument_list|,
name|currencyTimeLimit
operator|=
literal|20
argument_list|,
name|defaultValue
operator|=
literal|"bar"
argument_list|,
name|persistPolicy
operator|=
literal|"OnUpdate"
argument_list|)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|n
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|n
expr_stmt|;
block|}
annotation|@
name|ManagedAttribute
argument_list|(
name|defaultValue
operator|=
literal|"bar"
argument_list|,
name|persistPeriod
operator|=
literal|300
argument_list|)
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|ManagedAttribute
argument_list|(
name|defaultValue
operator|=
literal|"barasd"
argument_list|,
name|description
operator|=
literal|"The Nick Name Attribute"
argument_list|)
specifier|public
name|String
name|getNickName
parameter_list|()
block|{
return|return
name|this
operator|.
name|nickName
return|;
block|}
specifier|public
name|void
name|setNickName
parameter_list|(
name|String
name|n
parameter_list|)
block|{
name|this
operator|.
name|nickName
operator|=
name|n
expr_stmt|;
block|}
annotation|@
name|ManagedAttribute
argument_list|(
name|description
operator|=
literal|"The Is Superman Attribute"
argument_list|)
specifier|public
name|void
name|setSuperman
parameter_list|(
name|boolean
name|superman
parameter_list|)
block|{
name|this
operator|.
name|isSuperman
operator|=
name|superman
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSuperman
parameter_list|()
block|{
return|return
name|isSuperman
return|;
block|}
annotation|@
name|ManagedOperation
argument_list|(
name|description
operator|=
literal|"Add Two Numbers Together"
argument_list|)
annotation|@
name|ManagedOperationParameters
argument_list|(
block|{
annotation|@
name|ManagedOperationParameter
argument_list|(
name|name
operator|=
literal|"x"
argument_list|,
name|description
operator|=
literal|"Left operand"
argument_list|)
block|,
annotation|@
name|ManagedOperationParameter
argument_list|(
name|name
operator|=
literal|"y"
argument_list|,
name|description
operator|=
literal|"Right operand"
argument_list|)
block|}
argument_list|)
specifier|public
name|int
name|add
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
return|return
name|x
operator|+
name|y
return|;
block|}
specifier|public
name|ObjectName
name|getObjectName
parameter_list|()
throws|throws
name|JMException
block|{
return|return
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.cxf:type=AnnotationTestInstrumentation"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

