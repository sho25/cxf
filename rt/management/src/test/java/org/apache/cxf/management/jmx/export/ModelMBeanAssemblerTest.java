begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|jmx
operator|.
name|export
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanAttributeInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanNotificationInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanOperationInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MalformedObjectNameException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|ModelMBeanOperationInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|modelmbean
operator|.
name|RequiredModelMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|jmx
operator|.
name|export
operator|.
name|runtime
operator|.
name|ModelMBeanAssembler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ModelMBeanAssemblerTest
extends|extends
name|Assert
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|AGE_ATTRIBUTE
init|=
literal|"Age"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|NAME_ATTRIBUTE
init|=
literal|"Name"
decl_stmt|;
specifier|protected
specifier|static
name|AnnotationTestInstrumentation
name|ati
init|=
operator|new
name|AnnotationTestInstrumentation
argument_list|()
decl_stmt|;
specifier|protected
name|MBeanServer
name|server
decl_stmt|;
specifier|protected
name|ObjectName
name|ton
decl_stmt|;
annotation|@
name|Before
specifier|public
specifier|final
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|server
operator|=
name|MBeanServerFactory
operator|.
name|createMBeanServer
argument_list|()
expr_stmt|;
try|try
block|{
name|onSetUp
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|releaseServer
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|releaseServer
argument_list|()
expr_stmt|;
name|onTearDown
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|releaseServer
parameter_list|()
block|{
name|MBeanServerFactory
operator|.
name|releaseMBeanServer
argument_list|(
name|this
operator|.
name|getServer
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onTearDown
parameter_list|()
throws|throws
name|Exception
block|{
comment|// unregister the mbean client
name|server
operator|.
name|unregisterMBean
argument_list|(
name|ton
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onSetUp
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|ton
operator|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.cxf:Type=testInstrumentation"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedObjectNameException
decl||
name|NullPointerException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
comment|//create the mbean and register it
name|ModelMBeanInfo
name|mbi
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|RequiredModelMBean
name|rtMBean
decl_stmt|;
name|rtMBean
operator|=
operator|(
name|RequiredModelMBean
operator|)
name|server
operator|.
name|instantiate
argument_list|(
literal|"javax.management.modelmbean.RequiredModelMBean"
argument_list|)
expr_stmt|;
name|rtMBean
operator|.
name|setModelMBeanInfo
argument_list|(
name|mbi
argument_list|)
expr_stmt|;
name|rtMBean
operator|.
name|setManagedResource
argument_list|(
name|ati
argument_list|,
literal|"ObjectReference"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerMBean
argument_list|(
name|rtMBean
argument_list|,
name|ton
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MBeanServer
name|getServer
parameter_list|()
block|{
return|return
name|server
return|;
block|}
comment|//the client get and set the ModelObject and setup the ManagerBean
annotation|@
name|Test
specifier|public
name|void
name|testRegisterOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect number of operations registered"
argument_list|,
literal|10
argument_list|,
name|info
operator|.
name|getOperations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMBeanInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"MBeanInfo should not be null"
argument_list|,
name|info
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMBeanAttributeInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|MBeanAttributeInfo
index|[]
name|inf
init|=
name|info
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid number of Attributes returned"
argument_list|,
literal|4
argument_list|,
name|inf
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|inf
operator|.
name|length
condition|;
name|x
operator|++
control|)
block|{
name|assertNotNull
argument_list|(
literal|"MBeanAttributeInfo should not be null"
argument_list|,
name|inf
index|[
name|x
index|]
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Description for MBeanAttributeInfo should not be null"
argument_list|,
name|inf
index|[
name|x
index|]
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMBeanOperationInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|MBeanOperationInfo
index|[]
name|inf
init|=
name|info
operator|.
name|getOperations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid number of Operations returned"
argument_list|,
literal|10
argument_list|,
name|inf
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|inf
operator|.
name|length
condition|;
name|x
operator|++
control|)
block|{
name|assertNotNull
argument_list|(
literal|"MBeanOperationInfo should not be null"
argument_list|,
name|inf
index|[
name|x
index|]
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Description for MBeanOperationInfo should not be null"
argument_list|,
name|inf
index|[
name|x
index|]
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDescriptionNotNull
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The MBean description should not be null"
argument_list|,
name|info
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetAttribute
parameter_list|()
throws|throws
name|Exception
block|{
name|getServer
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|ton
argument_list|,
operator|new
name|Attribute
argument_list|(
name|AGE_ATTRIBUTE
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The Age should be "
argument_list|,
literal|12
argument_list|,
name|ati
operator|.
name|getAge
argument_list|()
argument_list|)
expr_stmt|;
name|getServer
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|ton
argument_list|,
operator|new
name|Attribute
argument_list|(
name|NAME_ATTRIBUTE
argument_list|,
literal|"Rob Harrop"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The name should be "
argument_list|,
literal|"Rob Harrop"
argument_list|,
name|ati
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAttribute
parameter_list|()
throws|throws
name|Exception
block|{
name|ati
operator|.
name|setName
argument_list|(
literal|"John Smith"
argument_list|)
expr_stmt|;
name|Object
name|val
init|=
name|getServer
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|ton
argument_list|,
name|NAME_ATTRIBUTE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect result"
argument_list|,
literal|"John Smith"
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOperationInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Object
name|result
init|=
name|getServer
argument_list|()
operator|.
name|invoke
argument_list|(
name|ton
argument_list|,
literal|"add"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|Integer
operator|.
name|valueOf
argument_list|(
literal|20
argument_list|)
block|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|30
argument_list|)
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"int"
block|,
literal|"int"
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect result"
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|50
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAttributeHasCorrespondingOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|ModelMBeanOperationInfo
name|myOperation
init|=
name|info
operator|.
name|getOperation
argument_list|(
literal|"myOperation"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"get operation should not be null"
argument_list|,
name|myOperation
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect myOperation return type"
argument_list|,
literal|"long"
argument_list|,
name|myOperation
operator|.
name|getReturnType
argument_list|()
argument_list|)
expr_stmt|;
name|ModelMBeanOperationInfo
name|add
init|=
name|info
operator|.
name|getOperation
argument_list|(
literal|"add"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"set operation should not be null"
argument_list|,
name|add
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect add method description"
argument_list|,
literal|"Add Two Numbers Together"
argument_list|,
name|add
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotificationMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|ModelMBeanInfo
name|info
init|=
name|getMBeanInfoFromAssembler
argument_list|()
decl_stmt|;
name|MBeanNotificationInfo
index|[]
name|notifications
init|=
name|info
operator|.
name|getNotifications
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect number of notifications"
argument_list|,
literal|1
argument_list|,
name|notifications
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect notification name"
argument_list|,
literal|"My Notification"
argument_list|,
name|notifications
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|notifTypes
init|=
name|notifications
index|[
literal|0
index|]
operator|.
name|getNotifTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect number of notification types"
argument_list|,
literal|2
argument_list|,
name|notifTypes
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Notification type.foo not found"
argument_list|,
literal|"type.foo"
argument_list|,
name|notifTypes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Notification type.bar not found"
argument_list|,
literal|"type.bar"
argument_list|,
name|notifTypes
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ModelMBeanInfo
name|getMBeanInfoFromAssembler
parameter_list|()
block|{
name|ModelMBeanAssembler
name|assembler
init|=
operator|new
name|ModelMBeanAssembler
argument_list|()
decl_stmt|;
return|return
name|assembler
operator|.
name|getModelMbeanInfo
argument_list|(
name|AnnotationTestInstrumentation
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

