begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|javascript
operator|.
name|fortest
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_comment
comment|/**  * A second test class to test references.  */
end_comment

begin_class
annotation|@
name|XmlType
argument_list|(
name|namespace
operator|=
literal|"uri:org.apache.cxf.javascript.testns3"
argument_list|)
specifier|public
class|class
name|TestBean2
block|{
specifier|public
name|TestBean2
parameter_list|()
block|{
name|stringItem
operator|=
literal|"testBean2.stringItem"
expr_stmt|;
block|}
specifier|public
name|TestBean2
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|stringItem
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"TestBean2 "
operator|+
name|stringItem
return|;
block|}
comment|//CHECKSTYLE:OFF
specifier|public
name|String
name|stringItem
decl_stmt|;
comment|//CHECKSTYLE:ON
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|TestBean2
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|TestBean2
name|other
init|=
operator|(
name|TestBean2
operator|)
name|obj
decl_stmt|;
return|return
name|stringItem
operator|.
name|equals
argument_list|(
name|other
operator|.
name|stringItem
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|stringItem
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

