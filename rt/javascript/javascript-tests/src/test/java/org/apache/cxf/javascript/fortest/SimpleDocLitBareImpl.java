begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|javascript
operator|.
name|fortest
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.apache.cxf.javascript.fortest.SimpleDocLitBare"
argument_list|,
name|targetNamespace
operator|=
literal|"uri:org.apache.cxf.javascript.fortest"
argument_list|)
specifier|public
class|class
name|SimpleDocLitBareImpl
implements|implements
name|SimpleDocLitBare
block|{
specifier|private
name|String
name|lastString
decl_stmt|;
specifier|private
name|int
name|lastInt
decl_stmt|;
specifier|private
name|double
name|lastDouble
decl_stmt|;
specifier|private
name|TestBean1
name|lastBean1
decl_stmt|;
specifier|private
name|TestBean1
index|[]
name|lastBean1Array
decl_stmt|;
specifier|private
name|CountDownLatch
name|oneWayLatch
decl_stmt|;
specifier|public
name|void
name|resetLastValues
parameter_list|()
block|{
name|lastString
operator|=
literal|null
expr_stmt|;
name|lastInt
operator|=
operator|-
literal|1
expr_stmt|;
name|lastDouble
operator|=
operator|-
literal|1
expr_stmt|;
name|lastBean1
operator|=
literal|null
expr_stmt|;
name|lastBean1Array
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|int
name|basicTypeFunctionReturnInt
parameter_list|(
name|String
name|s
parameter_list|,
name|double
name|d
parameter_list|)
block|{
name|lastString
operator|=
name|s
expr_stmt|;
name|lastDouble
operator|=
name|d
expr_stmt|;
return|return
literal|44
return|;
block|}
specifier|public
name|String
name|basicTypeFunctionReturnString
parameter_list|(
name|String
name|s
parameter_list|,
name|int
name|i
parameter_list|,
name|double
name|d
parameter_list|)
block|{
name|lastString
operator|=
name|s
expr_stmt|;
name|lastInt
operator|=
name|i
expr_stmt|;
name|lastDouble
operator|=
name|d
expr_stmt|;
return|return
literal|"If you are the University of Wisconsin Police, where are your Badgers?"
return|;
block|}
specifier|public
name|void
name|beanFunction
parameter_list|(
name|TestBean1
name|bean
parameter_list|,
name|TestBean1
index|[]
name|beans
parameter_list|)
block|{
name|lastBean1
operator|=
name|bean
expr_stmt|;
name|lastBean1Array
operator|=
name|beans
expr_stmt|;
block|}
specifier|public
name|TestBean1
name|functionReturnTestBean1
parameter_list|()
block|{
name|TestBean1
name|bean1
init|=
operator|new
name|TestBean1
argument_list|()
decl_stmt|;
name|bean1
operator|.
name|intItem
operator|=
literal|42
expr_stmt|;
return|return
name|bean1
return|;
block|}
specifier|public
name|String
name|compliant
parameter_list|(
name|TestBean1
name|green
parameter_list|)
block|{
name|lastBean1
operator|=
name|green
expr_stmt|;
return|return
name|green
operator|.
name|stringItem
return|;
block|}
specifier|public
name|TestBean2
name|compliantNoArgs
parameter_list|()
block|{
return|return
operator|new
name|TestBean2
argument_list|(
literal|"horsefeathers"
argument_list|)
return|;
block|}
specifier|public
name|String
name|getLastString
parameter_list|()
block|{
return|return
name|lastString
return|;
block|}
specifier|public
name|int
name|getLastInt
parameter_list|()
block|{
return|return
name|lastInt
return|;
block|}
specifier|public
name|double
name|getLastDouble
parameter_list|()
block|{
return|return
name|lastDouble
return|;
block|}
specifier|public
name|TestBean1
name|getLastBean1
parameter_list|()
block|{
return|return
name|lastBean1
return|;
block|}
specifier|public
name|TestBean1
index|[]
name|getLastBean1Array
parameter_list|()
block|{
return|return
name|lastBean1Array
return|;
block|}
specifier|public
name|String
name|actionMethod
parameter_list|(
name|String
name|param
parameter_list|)
block|{
name|lastString
operator|=
name|param
expr_stmt|;
if|if
condition|(
name|oneWayLatch
operator|!=
literal|null
condition|)
block|{
name|oneWayLatch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
return|return
name|param
return|;
block|}
specifier|public
name|void
name|oneWay
parameter_list|(
name|String
name|param
parameter_list|)
block|{
name|lastString
operator|=
name|param
expr_stmt|;
if|if
condition|(
name|oneWayLatch
operator|!=
literal|null
condition|)
block|{
name|oneWayLatch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|prepareToWaitForOneWay
parameter_list|()
block|{
name|oneWayLatch
operator|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|waitForOneWay
parameter_list|()
block|{
if|if
condition|(
name|oneWayLatch
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|oneWayLatch
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
comment|//
block|}
name|oneWayLatch
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

