begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|javascript
operator|.
name|fortest
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_comment
comment|/**  * Wrapper class.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|namespace
operator|=
literal|"uri:org.apache.cxf.javascript.testns"
argument_list|)
comment|// specify alphabetical order explicitly to remind us that there is JavaScript code that knows this order!
annotation|@
name|XmlType
argument_list|(
name|namespace
operator|=
literal|"uri:org.apache.cxf.javascript.testns"
argument_list|,
name|propOrder
operator|=
block|{
literal|"d"
block|,
literal|"f"
block|,
literal|"i"
block|,
literal|"l"
block|,
literal|"s"
block|}
argument_list|)
specifier|public
class|class
name|BasicTypeFunctionReturnStringWrapper
block|{
specifier|private
name|String
name|s
decl_stmt|;
specifier|private
name|int
name|i
decl_stmt|;
specifier|private
name|long
name|l
decl_stmt|;
specifier|private
name|float
name|f
decl_stmt|;
specifier|private
name|double
name|d
decl_stmt|;
specifier|public
name|String
name|getS
parameter_list|()
block|{
return|return
name|s
return|;
block|}
specifier|public
name|void
name|setS
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|this
operator|.
name|s
operator|=
name|s
expr_stmt|;
block|}
specifier|public
name|int
name|getI
parameter_list|()
block|{
return|return
name|i
return|;
block|}
specifier|public
name|void
name|setI
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|this
operator|.
name|i
operator|=
name|i
expr_stmt|;
block|}
specifier|public
name|long
name|getL
parameter_list|()
block|{
return|return
name|l
return|;
block|}
specifier|public
name|void
name|setL
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|this
operator|.
name|l
operator|=
name|l
expr_stmt|;
block|}
specifier|public
name|float
name|getF
parameter_list|()
block|{
return|return
name|f
return|;
block|}
specifier|public
name|void
name|setF
parameter_list|(
name|float
name|f
parameter_list|)
block|{
name|this
operator|.
name|f
operator|=
name|f
expr_stmt|;
block|}
specifier|public
name|double
name|getD
parameter_list|()
block|{
return|return
name|d
return|;
block|}
specifier|public
name|void
name|setD
parameter_list|(
name|double
name|d
parameter_list|)
block|{
name|this
operator|.
name|d
operator|=
name|d
expr_stmt|;
block|}
block|}
end_class

end_unit

