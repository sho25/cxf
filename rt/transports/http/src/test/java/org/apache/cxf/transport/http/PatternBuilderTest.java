begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * A {@code PatternBuilderTest} is ...  *  * @author Guillaume Sauthier  */
end_comment

begin_class
specifier|public
class|class
name|PatternBuilderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testPatternBuilder
parameter_list|()
block|{
name|Pattern
name|pattern
init|=
literal|null
decl_stmt|;
comment|// Simple matching
name|pattern
operator|=
name|PatternBuilder
operator|.
name|build
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"localhost-after"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"before-localhost"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
comment|// List matching
name|pattern
operator|=
name|PatternBuilder
operator|.
name|build
argument_list|(
literal|"localhost|othername"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"othername"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"somename"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
comment|// Name with dots matching
name|pattern
operator|=
name|PatternBuilder
operator|.
name|build
argument_list|(
literal|"www.apache.org"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www.apache.org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www1apache1org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
comment|// Wildcards matching 1/2
name|pattern
operator|=
name|PatternBuilder
operator|.
name|build
argument_list|(
literal|"*.apache.org"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www.apache.org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"svn.apache.org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"apache.org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|".apache.org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
comment|// not very useful ...
comment|// Wildcards matching 2/2
name|pattern
operator|=
name|PatternBuilder
operator|.
name|build
argument_list|(
literal|"www.apache.*"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www.apache.org"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www.apache.net"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www.apache"
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pattern
operator|.
name|matcher
argument_list|(
literal|"www.apache."
argument_list|)
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
comment|// not very useful ...
block|}
block|}
end_class

end_unit

