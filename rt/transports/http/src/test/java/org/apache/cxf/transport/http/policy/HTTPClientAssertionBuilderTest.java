begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|policy
operator|.
name|impl
operator|.
name|ClientPolicyCalculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http
operator|.
name|configuration
operator|.
name|HTTPClientPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|builder
operator|.
name|jaxb
operator|.
name|JaxbAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Assertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|HTTPClientAssertionBuilderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBuildAssertion
parameter_list|()
throws|throws
name|Exception
block|{
name|HTTPClientAssertionBuilder
name|ab
init|=
operator|new
name|HTTPClientAssertionBuilder
argument_list|()
decl_stmt|;
name|Assertion
name|a
init|=
name|ab
operator|.
name|buildAssertion
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|a
operator|instanceof
name|JaxbAssertion
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|instanceof
name|HTTPClientAssertionBuilder
operator|.
name|HTTPClientPolicyAssertion
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ClientPolicyCalculator
argument_list|()
operator|.
name|getDataClassName
argument_list|()
argument_list|,
name|a
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|a
operator|.
name|isOptional
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHTTPCLientPolicyAssertionEqual
parameter_list|()
throws|throws
name|Exception
block|{
name|HTTPClientAssertionBuilder
name|ab
init|=
operator|new
name|HTTPClientAssertionBuilder
argument_list|()
decl_stmt|;
name|JaxbAssertion
argument_list|<
name|HTTPClientPolicy
argument_list|>
name|a
init|=
name|ab
operator|.
name|buildAssertion
argument_list|()
decl_stmt|;
name|a
operator|.
name|setData
argument_list|(
operator|new
name|HTTPClientPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|equal
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
name|JaxbAssertion
argument_list|<
name|HTTPClientPolicy
argument_list|>
name|b
init|=
name|ab
operator|.
name|buildAssertion
argument_list|()
decl_stmt|;
name|b
operator|.
name|setData
argument_list|(
operator|new
name|HTTPClientPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|equal
argument_list|(
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|HTTPClientPolicy
name|pa
init|=
operator|new
name|HTTPClientPolicy
argument_list|()
decl_stmt|;
name|a
operator|.
name|setData
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|equal
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
name|HTTPClientPolicy
name|pb
init|=
operator|new
name|HTTPClientPolicy
argument_list|()
decl_stmt|;
name|b
operator|.
name|setData
argument_list|(
name|pb
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|equal
argument_list|(
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|pa
operator|.
name|setDecoupledEndpoint
argument_list|(
literal|"http://localhost:9999/decoupled_endpoint"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|a
operator|.
name|equal
argument_list|(
name|b
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

