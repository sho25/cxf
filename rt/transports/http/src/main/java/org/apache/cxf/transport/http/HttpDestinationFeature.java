begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|AbstractFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Programmatically configure a http destination. This can also be used as a DOSGi  * intent.  */
end_comment

begin_class
specifier|public
class|class
name|HttpDestinationFeature
extends|extends
name|AbstractFeature
block|{
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|HttpDestinationFeature
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|HttpDestinationConfig
name|destinationConfig
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|Server
name|server
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|Destination
name|destination
init|=
name|server
operator|.
name|getDestination
argument_list|()
decl_stmt|;
if|if
condition|(
name|destinationConfig
operator|!=
literal|null
operator|&&
name|destination
operator|instanceof
name|AbstractHTTPDestination
condition|)
block|{
name|destinationConfig
operator|.
name|apply
argument_list|(
operator|(
name|AbstractHTTPDestination
operator|)
name|destination
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setDestinationConfig
parameter_list|(
name|HttpDestinationConfig
name|destinationConfig
parameter_list|)
block|{
name|this
operator|.
name|destinationConfig
operator|=
name|destinationConfig
expr_stmt|;
block|}
block|}
end_class

end_unit

