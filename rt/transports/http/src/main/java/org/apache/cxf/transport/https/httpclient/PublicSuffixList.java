begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/*  * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more  * information on the Apache Software Foundation, please see  *<http://www.apache.org/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|https
operator|.
name|httpclient
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Public suffix is a set of DNS names or wildcards concatenated with dots. It represents  * the part of a domain name which is not under the control of the individual registrant  *<p>  * An up-to-date list of suffixes can be obtained from  *<a href="http://publicsuffix.org/">publicsuffix.org</a>  *  * Copied from httpclient  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|PublicSuffixList
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|rules
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|exceptions
decl_stmt|;
specifier|public
name|PublicSuffixList
parameter_list|(
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|rules
parameter_list|,
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|exceptions
parameter_list|)
block|{
if|if
condition|(
name|rules
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Domain suffix rules are null"
argument_list|)
throw|;
block|}
if|if
condition|(
name|exceptions
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Domain suffix exceptions are null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|rules
operator|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|rules
argument_list|)
expr_stmt|;
name|this
operator|.
name|exceptions
operator|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|exceptions
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getRules
parameter_list|()
block|{
return|return
name|rules
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getExceptions
parameter_list|()
block|{
return|return
name|exceptions
return|;
block|}
block|}
end_class

end_unit

