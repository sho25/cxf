begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|AbstractHTTPDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|AbstractHTTPTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|http
operator|.
name|AddressType
import|;
end_import

begin_class
specifier|public
class|class
name|ServletTransportFactory
extends|extends
name|AbstractHTTPTransportFactory
implements|implements
name|DestinationFactory
block|{
specifier|private
name|ServletController
name|controller
decl_stmt|;
specifier|public
name|ServletTransportFactory
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|super
operator|.
name|setBus
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|ids
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"http://cxf.apache.org/transports/http"
block|,
literal|"http://cxf.apache.org/transports/http/configuration"
block|,
literal|"http://schemas.xmlsoap.org/wsdl/http"
block|,
literal|"http://schemas.xmlsoap.org/wsdl/http/"
block|,         }
argument_list|)
decl_stmt|;
name|this
operator|.
name|setTransportIds
argument_list|(
name|ids
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ServletTransportFactory
parameter_list|()
block|{     }
specifier|public
name|void
name|setServletController
parameter_list|(
name|ServletController
name|c
parameter_list|)
block|{
name|controller
operator|=
name|c
expr_stmt|;
block|}
annotation|@
name|Resource
argument_list|(
name|name
operator|=
literal|"cxf"
argument_list|)
specifier|public
name|void
name|setBus
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|super
operator|.
name|setBus
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Destination
name|getDestination
parameter_list|(
name|EndpointInfo
name|endpointInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|AbstractHTTPDestination
name|d
init|=
name|registry
operator|.
name|getDestinationForPath
argument_list|(
name|endpointInfo
operator|.
name|getAddress
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
block|{
name|String
name|path
init|=
name|registry
operator|.
name|getTrimmedPath
argument_list|(
name|endpointInfo
operator|.
name|getAddress
argument_list|()
argument_list|)
decl_stmt|;
name|d
operator|=
operator|new
name|ServletDestination
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|registry
argument_list|,
name|endpointInfo
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|registry
operator|.
name|addDestination
argument_list|(
name|path
argument_list|,
name|d
argument_list|)
expr_stmt|;
if|if
condition|(
name|controller
operator|!=
literal|null
operator|&&
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|controller
operator|.
name|getLastBaseURL
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|ad
init|=
name|d
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getAddress
argument_list|()
decl_stmt|;
if|if
condition|(
name|ad
operator|!=
literal|null
operator|&&
operator|(
name|ad
operator|.
name|equals
argument_list|(
name|path
argument_list|)
operator|||
name|ad
operator|.
name|equals
argument_list|(
name|controller
operator|.
name|getLastBaseURL
argument_list|()
operator|+
name|path
argument_list|)
operator|)
condition|)
block|{
name|d
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|setAddress
argument_list|(
name|controller
operator|.
name|getLastBaseURL
argument_list|()
operator|+
name|path
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getExtensor
argument_list|(
name|AddressType
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|d
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getExtensor
argument_list|(
name|AddressType
operator|.
name|class
argument_list|)
operator|.
name|setLocation
argument_list|(
name|controller
operator|.
name|getLastBaseURL
argument_list|()
operator|+
name|path
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
return|return
name|d
return|;
block|}
block|}
end_class

end_unit

