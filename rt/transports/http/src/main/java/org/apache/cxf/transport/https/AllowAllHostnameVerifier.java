begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|https
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_comment
comment|/**  * Allow all hostnames. This is only suitable for use in testing, and NOT in production!  */
end_comment

begin_class
class|class
name|AllowAllHostnameVerifier
implements|implements
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|HostnameVerifier
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AllowAllHostnameVerifier
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|verify
parameter_list|(
name|String
name|host
parameter_list|,
name|SSLSession
name|session
parameter_list|)
block|{
try|try
block|{
name|Certificate
index|[]
name|certs
init|=
name|session
operator|.
name|getPeerCertificates
argument_list|()
decl_stmt|;
return|return
name|certs
operator|!=
literal|null
operator|&&
name|certs
index|[
literal|0
index|]
operator|instanceof
name|X509Certificate
return|;
block|}
catch|catch
parameter_list|(
name|SSLException
name|e
parameter_list|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isLoggable
argument_list|(
name|Level
operator|.
name|FINE
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|FINE
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"HostnameVerifier, socket reset for TTL"
argument_list|)
throw|;
block|}
block|}
specifier|public
name|boolean
name|verify
parameter_list|(
specifier|final
name|String
name|host
parameter_list|,
specifier|final
name|String
name|certHostname
parameter_list|)
block|{
return|return
name|certHostname
operator|!=
literal|null
operator|&&
operator|!
name|certHostname
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
end_class

end_unit

