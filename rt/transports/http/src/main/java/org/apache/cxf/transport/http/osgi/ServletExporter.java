begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Servlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|http
operator|.
name|HttpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|http
operator|.
name|HttpService
import|;
end_import

begin_class
class|class
name|ServletExporter
implements|implements
name|ManagedService
block|{
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|ServletExporter
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CXF_SERVLET_PREFIX
init|=
literal|"org.apache.cxf.servlet."
decl_stmt|;
specifier|private
name|String
name|alias
decl_stmt|;
specifier|private
name|Servlet
name|servlet
decl_stmt|;
specifier|private
name|ServiceRegistration
argument_list|<
name|?
argument_list|>
name|serviceRegistration
decl_stmt|;
specifier|private
name|HttpService
name|httpService
decl_stmt|;
name|ServletExporter
parameter_list|(
name|Servlet
name|servlet
parameter_list|,
name|HttpService
name|httpService
parameter_list|)
block|{
name|this
operator|.
name|servlet
operator|=
name|servlet
expr_stmt|;
name|this
operator|.
name|httpService
operator|=
name|httpService
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|void
name|updated
parameter_list|(
name|Dictionary
name|properties
parameter_list|)
throws|throws
name|ConfigurationException
block|{
if|if
condition|(
name|alias
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
literal|"Unregistering previous instance of \""
operator|+
name|alias
operator|+
literal|"\" servlet"
argument_list|)
expr_stmt|;
name|httpService
operator|.
name|unregister
argument_list|(
name|alias
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// NOTE: pax-web specific...
if|if
condition|(
name|e
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
operator|&&
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"was never registered"
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
literal|"CXF OSGi servlet was not unregistered: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
comment|// we're simply stopping. if we couldn't unregister, that means we had to little time to register
comment|// otherwise, we'll try to register the servlet
return|return;
block|}
block|}
name|alias
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
block|}
name|Properties
name|sprops
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"init-prefix"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"init-prefix"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"servlet-name"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"name"
argument_list|,
literal|"cxf-osgi-transport-servlet"
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"hide-service-list-page"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"hide-service-list-page"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"disable-address-updates"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"disable-address-updates"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"base-address"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"base-address"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"service-list-path"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"service-list-path"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"static-resources-list"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"static-resources-list"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"redirects-list"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"redirects-list"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"redirect-servlet-name"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"redirect-servlet-name"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"redirect-servlet-path"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"redirect-servlet-path"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"service-list-all-contexts"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"service-list-all-contexts"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"service-list-page-authenticate"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"service-list-page-authenticate"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"service-list-page-authenticate-realm"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"service-list-page-authenticate-realm"
argument_list|,
literal|"karaf"
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"use-x-forwarded-headers"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"use-x-forwarded-headers"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
name|sprops
operator|.
name|put
argument_list|(
literal|"async-supported"
argument_list|,
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"async-supported"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Accept extra properties by default, can be disabled if it is really needed
if|if
condition|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"support.extra.properties"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|Enumeration
name|keys
init|=
name|properties
operator|.
name|keys
argument_list|()
decl_stmt|;
while|while
condition|(
name|keys
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|String
name|nextKey
init|=
name|keys
operator|.
name|nextElement
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|nextKey
operator|.
name|startsWith
argument_list|(
name|CXF_SERVLET_PREFIX
argument_list|)
condition|)
block|{
name|sprops
operator|.
name|put
argument_list|(
name|nextKey
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|nextKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|serviceRegistration
operator|!=
literal|null
condition|)
block|{
name|serviceRegistration
operator|.
name|unregister
argument_list|()
expr_stmt|;
block|}
name|alias
operator|=
operator|(
name|String
operator|)
name|getProp
argument_list|(
name|properties
argument_list|,
name|CXF_SERVLET_PREFIX
operator|+
literal|"context"
argument_list|,
literal|"/cxf"
argument_list|)
expr_stmt|;
name|HttpContext
name|context
init|=
name|httpService
operator|.
name|createDefaultHttpContext
argument_list|()
decl_stmt|;
try|try
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
literal|"Registering new instance of \""
operator|+
name|alias
operator|+
literal|"\" servlet"
argument_list|)
expr_stmt|;
name|httpService
operator|.
name|registerServlet
argument_list|(
name|alias
argument_list|,
name|servlet
argument_list|,
name|sprops
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"Error registering CXF OSGi servlet "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|private
name|Object
name|getProp
parameter_list|(
name|Dictionary
name|properties
parameter_list|,
name|String
name|key
parameter_list|,
name|Object
name|defaultValue
parameter_list|)
block|{
name|Object
name|value
init|=
name|properties
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
return|return
name|value
operator|==
literal|null
condition|?
name|defaultValue
else|:
name|value
return|;
block|}
block|}
end_class

end_unit

