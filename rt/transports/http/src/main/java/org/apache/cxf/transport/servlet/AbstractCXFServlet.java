begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|ref
operator|.
name|WeakReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactoryManager
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractCXFServlet
extends|extends
name|AbstractHTTPServlet
block|{
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|WeakReference
argument_list|<
name|Bus
argument_list|>
argument_list|>
name|BUS_MAP
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|WeakReference
argument_list|<
name|Bus
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|getLogger
argument_list|()
decl_stmt|;
specifier|protected
name|Bus
name|bus
decl_stmt|;
specifier|protected
name|ServletTransportFactory
name|servletTransportFactory
decl_stmt|;
specifier|protected
name|ServletController
name|controller
decl_stmt|;
specifier|private
name|boolean
name|disableAddressUpdates
decl_stmt|;
specifier|public
specifier|static
name|Logger
name|getLogger
parameter_list|()
block|{
return|return
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AbstractCXFServlet
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|ServletController
name|createServletController
parameter_list|(
name|ServletConfig
name|servletConfig
parameter_list|)
block|{
name|ServletController
name|newController
init|=
operator|new
name|ServletController
argument_list|(
name|servletTransportFactory
operator|.
name|getRegistry
argument_list|()
argument_list|,
name|servletConfig
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|servletTransportFactory
operator|.
name|setServletController
argument_list|(
name|newController
argument_list|)
expr_stmt|;
if|if
condition|(
name|servletConfig
operator|.
name|getInitParameter
argument_list|(
literal|"disable-address-updates"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|newController
operator|.
name|setDisableAddressUpdates
argument_list|(
name|disableAddressUpdates
argument_list|)
expr_stmt|;
block|}
return|return
name|newController
return|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|ServletConfig
name|servletConfig
parameter_list|)
throws|throws
name|ServletException
block|{
name|super
operator|.
name|init
argument_list|(
name|servletConfig
argument_list|)
expr_stmt|;
try|try
block|{
name|BusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|String
name|busid
init|=
name|servletConfig
operator|.
name|getInitParameter
argument_list|(
literal|"bus.id"
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|busid
condition|)
block|{
name|WeakReference
argument_list|<
name|Bus
argument_list|>
name|ref
init|=
name|BUS_MAP
operator|.
name|get
argument_list|(
name|busid
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|ref
condition|)
block|{
name|bus
operator|=
name|ref
operator|.
name|get
argument_list|()
expr_stmt|;
name|BusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
block|}
name|loadBus
argument_list|(
name|servletConfig
argument_list|)
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|busid
condition|)
block|{
name|BUS_MAP
operator|.
name|put
argument_list|(
name|busid
argument_list|,
operator|new
name|WeakReference
argument_list|<
name|Bus
argument_list|>
argument_list|(
name|bus
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|BusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|abstract
name|void
name|loadBus
parameter_list|(
name|ServletConfig
name|servletConfig
parameter_list|)
throws|throws
name|ServletException
function_decl|;
specifier|protected
name|DestinationFactory
name|createServletTransportFactory
parameter_list|()
block|{
if|if
condition|(
name|servletTransportFactory
operator|==
literal|null
condition|)
block|{
name|servletTransportFactory
operator|=
operator|new
name|ServletTransportFactory
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
return|return
name|servletTransportFactory
return|;
block|}
specifier|private
name|void
name|registerTransport
parameter_list|(
name|DestinationFactory
name|factory
parameter_list|,
name|String
name|namespace
parameter_list|)
block|{
name|bus
operator|.
name|getExtension
argument_list|(
name|DestinationFactoryManager
operator|.
name|class
argument_list|)
operator|.
name|registerDestinationFactory
argument_list|(
name|namespace
argument_list|,
name|factory
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|replaceDestinationFactory
parameter_list|()
block|{
name|DestinationFactoryManager
name|dfm
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|DestinationFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|DestinationFactory
name|df
init|=
name|dfm
operator|.
name|getDestinationFactory
argument_list|(
literal|"http://cxf.apache.org/transports/http/configuration"
argument_list|)
decl_stmt|;
if|if
condition|(
name|df
operator|instanceof
name|ServletTransportFactory
condition|)
block|{
name|servletTransportFactory
operator|=
operator|(
name|ServletTransportFactory
operator|)
name|df
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"DESTIONFACTORY_ALREADY_REGISTERED"
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
catch|catch
parameter_list|(
name|BusException
name|e
parameter_list|)
block|{
comment|// why are we throwing a busexception if the DF isn't found?
block|}
name|DestinationFactory
name|factory
init|=
name|createServletTransportFactory
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|s
range|:
name|factory
operator|.
name|getTransportIds
argument_list|()
control|)
block|{
name|registerTransport
argument_list|(
name|factory
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"REPLACED_HTTP_DESTIONFACTORY"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ServletController
name|getController
parameter_list|()
block|{
return|return
name|controller
return|;
block|}
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
return|return
name|bus
return|;
block|}
specifier|public
name|void
name|destroy
parameter_list|()
block|{
name|String
name|s
init|=
name|bus
operator|.
name|getId
argument_list|()
decl_stmt|;
name|BUS_MAP
operator|.
name|remove
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|invoke
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|ServletException
block|{
try|try
block|{
name|BusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|controller
operator|.
name|invoke
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|BusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
comment|// this makes it a bit easier to disable the address
comment|// updates when creating servlets programmatically
specifier|public
name|void
name|setDisableAddressUpdates
parameter_list|(
name|boolean
name|disableAddressUpdates
parameter_list|)
block|{
name|this
operator|.
name|disableAddressUpdates
operator|=
name|disableAddressUpdates
expr_stmt|;
block|}
block|}
end_class

end_unit

