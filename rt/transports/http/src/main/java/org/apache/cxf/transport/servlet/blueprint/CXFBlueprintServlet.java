begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
operator|.
name|blueprint
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
operator|.
name|CXFNonSpringServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|container
operator|.
name|BlueprintContainer
import|;
end_import

begin_class
specifier|public
class|class
name|CXFBlueprintServlet
extends|extends
name|CXFNonSpringServlet
block|{
specifier|private
specifier|static
specifier|final
name|String
name|CONTAINER_ATTRIBUTE
init|=
literal|"org.apache.aries.blueprint.container"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|5922443981969455305L
decl_stmt|;
specifier|private
name|boolean
name|busCreated
decl_stmt|;
specifier|public
name|CXFBlueprintServlet
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|protected
name|void
name|loadBus
parameter_list|(
name|ServletConfig
name|servletConfig
parameter_list|)
block|{
name|BlueprintContainer
name|container
init|=
operator|(
name|BlueprintContainer
operator|)
name|servletConfig
operator|.
name|getServletContext
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|CONTAINER_ATTRIBUTE
argument_list|)
decl_stmt|;
if|if
condition|(
name|container
operator|!=
literal|null
condition|)
block|{
name|Object
name|busComponent
init|=
name|container
operator|.
name|getComponentInstance
argument_list|(
literal|"cxf"
argument_list|)
decl_stmt|;
name|setBus
argument_list|(
operator|(
name|Bus
operator|)
name|busComponent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|busCreated
operator|=
literal|true
expr_stmt|;
name|setBus
argument_list|(
name|BusFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createBus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|destroyBus
parameter_list|()
block|{
if|if
condition|(
name|busCreated
condition|)
block|{
comment|//if we created the Bus, we need to destroy it.  Otherwise, spring will handle it.
name|getBus
argument_list|()
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

