begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|AbstractDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLLibrary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|http
operator|.
name|AddressType
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|BaseUrlHelper
block|{
specifier|private
name|BaseUrlHelper
parameter_list|()
block|{     }
specifier|public
specifier|static
name|String
name|getBaseURL
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|reqPrefix
init|=
name|request
operator|.
name|getRequestURL
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|pathInfo
init|=
name|request
operator|.
name|getPathInfo
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|request
operator|.
name|getPathInfo
argument_list|()
decl_stmt|;
comment|//fix for CXF-898
if|if
condition|(
operator|!
literal|"/"
operator|.
name|equals
argument_list|(
name|pathInfo
argument_list|)
operator|||
name|reqPrefix
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|String
name|basePath
init|=
name|request
operator|.
name|getContextPath
argument_list|()
operator|+
name|request
operator|.
name|getServletPath
argument_list|()
decl_stmt|;
name|int
name|index
decl_stmt|;
if|if
condition|(
name|basePath
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|index
operator|=
name|reqPrefix
operator|.
name|indexOf
argument_list|(
name|request
operator|.
name|getRequestURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|index
operator|=
name|reqPrefix
operator|.
name|indexOf
argument_list|(
name|basePath
argument_list|)
expr_stmt|;
block|}
name|reqPrefix
operator|=
name|reqPrefix
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|index
operator|+
name|basePath
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|reqPrefix
return|;
block|}
specifier|public
specifier|static
name|void
name|makeAddressesAbsolute
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|baseAddress
parameter_list|,
name|AbstractDestination
index|[]
name|destinations
parameter_list|)
block|{
for|for
control|(
name|AbstractDestination
name|dest
range|:
name|destinations
control|)
block|{
name|String
name|addr
init|=
name|dest
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getAddress
argument_list|()
decl_stmt|;
if|if
condition|(
name|addr
operator|==
literal|null
operator|||
name|addr
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|addr
operator|=
literal|"/"
expr_stmt|;
block|}
if|if
condition|(
name|addr
operator|!=
literal|null
operator|&&
operator|!
name|addr
operator|.
name|startsWith
argument_list|(
literal|"http"
argument_list|)
condition|)
block|{
name|String
name|base
init|=
name|baseAddress
operator|==
literal|null
condition|?
name|BaseUrlHelper
operator|.
name|getBaseURL
argument_list|(
name|request
argument_list|)
else|:
name|baseAddress
decl_stmt|;
name|setAddress
argument_list|(
name|dest
argument_list|,
name|base
operator|+
name|addr
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|setAddress
parameter_list|(
name|AbstractDestination
name|dest
parameter_list|,
name|String
name|absAddress
parameter_list|)
block|{
name|dest
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|setAddress
argument_list|(
name|absAddress
argument_list|)
expr_stmt|;
if|if
condition|(
name|WSDLLibrary
operator|.
name|isAvailable
argument_list|()
operator|&&
name|dest
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getExtensor
argument_list|(
name|AddressType
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|dest
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getExtensor
argument_list|(
name|AddressType
operator|.
name|class
argument_list|)
operator|.
name|setLocation
argument_list|(
name|absAddress
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

