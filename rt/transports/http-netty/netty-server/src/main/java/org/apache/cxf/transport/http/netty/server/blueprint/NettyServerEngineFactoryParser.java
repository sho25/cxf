begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|blueprint
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableBeanMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|blueprint
operator|.
name|AbstractBPBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|ComponentMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|Metadata
import|;
end_import

begin_class
specifier|public
class|class
name|NettyServerEngineFactoryParser
extends|extends
name|AbstractBPBeanDefinitionParser
block|{
specifier|public
specifier|static
name|String
name|getIdOrName
parameter_list|(
name|Element
name|elem
parameter_list|)
block|{
name|String
name|id
init|=
name|elem
operator|.
name|getAttribute
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|id
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
name|String
name|names
init|=
name|elem
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|names
condition|)
block|{
name|StringTokenizer
name|st
init|=
operator|new
name|StringTokenizer
argument_list|(
name|names
argument_list|,
literal|","
argument_list|)
decl_stmt|;
if|if
condition|(
name|st
operator|.
name|countTokens
argument_list|()
operator|>
literal|0
condition|)
block|{
name|id
operator|=
name|st
operator|.
name|nextToken
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return
name|id
return|;
block|}
specifier|public
name|Metadata
name|parse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|context
parameter_list|)
block|{
comment|//Endpoint definition
name|MutableBeanMetadata
name|ef
init|=
name|context
operator|.
name|createMetadata
argument_list|(
name|MutableBeanMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|getIdOrName
argument_list|(
name|element
argument_list|)
argument_list|)
condition|)
block|{
name|ef
operator|.
name|setId
argument_list|(
name|getIdOrName
argument_list|(
name|element
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ef
operator|.
name|setId
argument_list|(
literal|"netty.engine.factory-holder-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ef
operator|.
name|setRuntimeClass
argument_list|(
name|NettyHttpServerEngineFactoryHolder
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
comment|// Print the DOM node
name|String
name|xmlString
init|=
name|StaxUtils
operator|.
name|toString
argument_list|(
name|element
argument_list|)
decl_stmt|;
name|ef
operator|.
name|addProperty
argument_list|(
literal|"parsedElement"
argument_list|,
name|createValue
argument_list|(
name|context
argument_list|,
name|xmlString
argument_list|)
argument_list|)
expr_stmt|;
name|ef
operator|.
name|setInitMethod
argument_list|(
literal|"init"
argument_list|)
expr_stmt|;
name|ef
operator|.
name|setActivation
argument_list|(
name|ComponentMetadata
operator|.
name|ACTIVATION_EAGER
argument_list|)
expr_stmt|;
return|return
name|ef
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not process configuration."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

