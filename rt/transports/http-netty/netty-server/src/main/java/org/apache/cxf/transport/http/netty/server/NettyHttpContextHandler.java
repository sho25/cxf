begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|servlet
operator|.
name|NettyServletContext
import|;
end_import

begin_class
specifier|public
class|class
name|NettyHttpContextHandler
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|NettyHttpContextHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|ServletContext
name|servletContext
decl_stmt|;
specifier|private
name|List
argument_list|<
name|NettyHttpHandler
argument_list|>
name|nettyHttpHandlerList
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|NettyHttpContextHandler
parameter_list|(
name|String
name|contextPath
parameter_list|)
block|{
name|servletContext
operator|=
operator|new
name|NettyServletContext
argument_list|(
name|contextPath
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addNettyHttpHandler
parameter_list|(
name|NettyHttpHandler
name|handler
parameter_list|)
block|{
comment|// setup the servletContext for it
name|handler
operator|.
name|setServletContext
argument_list|(
name|servletContext
argument_list|)
expr_stmt|;
name|nettyHttpHandlerList
operator|.
name|add
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|NettyHttpHandler
name|getNettyHttpHandler
parameter_list|(
name|String
name|urlName
parameter_list|)
block|{
for|for
control|(
name|NettyHttpHandler
name|handler
range|:
name|nettyHttpHandlerList
control|)
block|{
if|if
condition|(
name|urlName
operator|.
name|equals
argument_list|(
name|handler
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|handler
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|nettyHttpHandlerList
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
name|servletContext
operator|.
name|getContextPath
argument_list|()
return|;
block|}
specifier|public
name|void
name|removeNettyHttpHandler
parameter_list|(
name|String
name|urlName
parameter_list|)
block|{
name|NettyHttpHandler
name|handler
init|=
name|getNettyHttpHandler
argument_list|(
name|urlName
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|!=
literal|null
condition|)
block|{
name|nettyHttpHandlerList
operator|.
name|remove
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"REMOVE_HANDLER_FAILED_MSG"
argument_list|,
name|urlName
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
for|for
control|(
name|NettyHttpHandler
name|handler
range|:
name|nettyHttpHandlerList
control|)
block|{
name|handler
operator|.
name|handle
argument_list|(
name|target
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

