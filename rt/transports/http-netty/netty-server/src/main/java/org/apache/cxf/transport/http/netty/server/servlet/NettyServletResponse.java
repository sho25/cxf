begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletOutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|CookieEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpResponseStatus
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpHeaders
operator|.
name|Names
operator|.
name|LOCATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpHeaders
operator|.
name|Names
operator|.
name|SET_COOKIE
import|;
end_import

begin_class
specifier|public
class|class
name|NettyServletResponse
implements|implements
name|HttpServletResponse
block|{
specifier|private
name|HttpResponse
name|originalResponse
decl_stmt|;
specifier|private
name|NettyServletOutputStream
name|outputStream
decl_stmt|;
specifier|private
name|PrintWriter
name|writer
decl_stmt|;
specifier|private
name|boolean
name|responseCommited
decl_stmt|;
specifier|public
name|NettyServletResponse
parameter_list|(
name|HttpResponse
name|response
parameter_list|)
block|{
name|this
operator|.
name|originalResponse
operator|=
name|response
expr_stmt|;
name|this
operator|.
name|outputStream
operator|=
operator|new
name|NettyServletOutputStream
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|this
operator|.
name|writer
operator|=
operator|new
name|PrintWriter
argument_list|(
name|this
operator|.
name|outputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HttpResponse
name|getOriginalResponse
parameter_list|()
block|{
return|return
name|originalResponse
return|;
block|}
specifier|public
name|void
name|addCookie
parameter_list|(
name|Cookie
name|cookie
parameter_list|)
block|{
name|CookieEncoder
name|cookieEncoder
init|=
operator|new
name|CookieEncoder
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|cookieEncoder
operator|.
name|addCookie
argument_list|(
name|cookie
operator|.
name|getName
argument_list|()
argument_list|,
name|cookie
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|HttpHeaders
operator|.
name|addHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|SET_COOKIE
argument_list|,
name|cookieEncoder
operator|.
name|encode
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addDateHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|date
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|addHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|name
argument_list|,
name|date
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|addHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addIntHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|addIntHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addCookie
parameter_list|(
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|Cookie
name|cookie
parameter_list|)
block|{
comment|//TODO Do we need to implement it ?
block|}
specifier|public
name|boolean
name|containsHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|this
operator|.
name|originalResponse
operator|.
name|containsHeader
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|void
name|sendError
parameter_list|(
name|int
name|sc
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|originalResponse
operator|.
name|setStatus
argument_list|(
name|HttpResponseStatus
operator|.
name|valueOf
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|sendError
parameter_list|(
name|int
name|sc
parameter_list|,
name|String
name|msg
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|originalResponse
operator|.
name|setStatus
argument_list|(
operator|new
name|HttpResponseStatus
argument_list|(
name|sc
argument_list|,
name|msg
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|sendRedirect
parameter_list|(
name|String
name|location
parameter_list|)
throws|throws
name|IOException
block|{
name|setStatus
argument_list|(
literal|302
argument_list|)
expr_stmt|;
name|setHeader
argument_list|(
name|LOCATION
argument_list|,
name|location
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDateHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|date
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|setHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|name
argument_list|,
name|date
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|setHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setIntHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|setIntHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ServletOutputStream
name|getOutputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|outputStream
return|;
block|}
annotation|@
name|Override
specifier|public
name|PrintWriter
name|getWriter
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|writer
return|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|int
name|sc
parameter_list|)
block|{
name|this
operator|.
name|originalResponse
operator|.
name|setStatus
argument_list|(
name|HttpResponseStatus
operator|.
name|valueOf
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|int
name|sc
parameter_list|,
name|String
name|sm
parameter_list|)
block|{
name|this
operator|.
name|originalResponse
operator|.
name|setStatus
argument_list|(
operator|new
name|HttpResponseStatus
argument_list|(
name|sc
argument_list|,
name|sm
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContentType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|setHeader
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|HttpHeaders
operator|.
name|Names
operator|.
name|CONTENT_TYPE
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContentLength
parameter_list|(
name|int
name|len
parameter_list|)
block|{
name|HttpHeaders
operator|.
name|setContentLength
argument_list|(
name|this
operator|.
name|originalResponse
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCommitted
parameter_list|()
block|{
return|return
name|this
operator|.
name|responseCommited
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|reset
parameter_list|()
block|{
if|if
condition|(
name|isCommitted
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Response already commited!"
argument_list|)
throw|;
block|}
name|this
operator|.
name|originalResponse
operator|.
name|clearHeaders
argument_list|()
expr_stmt|;
name|this
operator|.
name|resetBuffer
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|resetBuffer
parameter_list|()
block|{
if|if
condition|(
name|isCommitted
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Response already commited!"
argument_list|)
throw|;
block|}
name|this
operator|.
name|outputStream
operator|.
name|resetBuffer
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|flushBuffer
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|getWriter
argument_list|()
operator|.
name|flush
argument_list|()
expr_stmt|;
name|this
operator|.
name|responseCommited
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getBufferSize
parameter_list|()
block|{
return|return
name|this
operator|.
name|outputStream
operator|.
name|getBufferSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBufferSize
parameter_list|(
name|int
name|size
parameter_list|)
block|{
comment|// we using always dynamic buffer for now
block|}
specifier|public
name|String
name|encodeRedirectURL
parameter_list|(
name|String
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|encodeURL
argument_list|(
name|url
argument_list|)
return|;
block|}
specifier|public
name|String
name|encodeRedirectUrl
parameter_list|(
name|String
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|encodeURL
argument_list|(
name|url
argument_list|)
return|;
block|}
specifier|public
name|String
name|encodeURL
parameter_list|(
name|String
name|url
parameter_list|)
block|{
try|try
block|{
return|return
name|URLEncoder
operator|.
name|encode
argument_list|(
name|url
argument_list|,
name|getCharacterEncoding
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error encoding url!"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|encodeUrl
parameter_list|(
name|String
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|encodeRedirectURL
argument_list|(
name|url
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCharacterEncoding
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'getCharacterEncoding' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'getContentType' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Locale
name|getLocale
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'getLocale' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCharacterEncoding
parameter_list|(
name|String
name|charset
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'setCharacterEncoding' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLocale
parameter_list|(
name|Locale
name|loc
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'setLocale' not yet implemented!"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

