begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLPeerUnverifiedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLSession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|RequestDispatcher
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletInputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpContent
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpHeaderNames
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpRequest
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpUtil
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|QueryStringDecoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|cookie
operator|.
name|ServerCookieDecoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|ssl
operator|.
name|SslHandler
import|;
end_import

begin_import
import|import static
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpHeaderNames
operator|.
name|COOKIE
import|;
end_import

begin_class
specifier|public
class|class
name|NettyHttpServletRequest
implements|implements
name|HttpServletRequest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SSL_CIPHER_SUITE_ATTRIBUTE
init|=
literal|"javax.servlet.request.cipher_suite"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SSL_PEER_CERT_CHAIN_ATTRIBUTE
init|=
literal|"javax.servlet.request.X509Certificate"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Locale
name|DEFAULT_LOCALE
init|=
name|Locale
operator|.
name|getDefault
argument_list|()
decl_stmt|;
specifier|private
name|URIParser
name|uriParser
decl_stmt|;
specifier|private
name|HttpRequest
name|originalRequest
decl_stmt|;
specifier|private
name|NettyServletInputStream
name|inputStream
decl_stmt|;
specifier|private
name|BufferedReader
name|reader
decl_stmt|;
specifier|private
name|QueryStringDecoder
name|queryStringDecoder
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|attributes
init|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|characterEncoding
decl_stmt|;
specifier|private
name|String
name|contextPath
decl_stmt|;
specifier|private
name|ChannelHandlerContext
name|channelHandlerContext
decl_stmt|;
specifier|public
name|NettyHttpServletRequest
parameter_list|(
name|HttpRequest
name|request
parameter_list|,
name|String
name|contextPath
parameter_list|,
name|ChannelHandlerContext
name|ctx
parameter_list|)
block|{
name|this
operator|.
name|originalRequest
operator|=
name|request
expr_stmt|;
name|this
operator|.
name|contextPath
operator|=
name|contextPath
expr_stmt|;
name|this
operator|.
name|uriParser
operator|=
operator|new
name|URIParser
argument_list|(
name|contextPath
argument_list|)
expr_stmt|;
name|uriParser
operator|.
name|parse
argument_list|(
name|request
operator|.
name|uri
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|inputStream
operator|=
operator|new
name|NettyServletInputStream
argument_list|(
operator|(
name|HttpContent
operator|)
name|request
argument_list|)
expr_stmt|;
name|this
operator|.
name|reader
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|inputStream
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|queryStringDecoder
operator|=
operator|new
name|QueryStringDecoder
argument_list|(
name|request
operator|.
name|uri
argument_list|()
argument_list|)
expr_stmt|;
comment|// setup the SSL security attributes
name|this
operator|.
name|channelHandlerContext
operator|=
name|ctx
expr_stmt|;
name|SslHandler
name|sslHandler
init|=
name|channelHandlerContext
operator|.
name|pipeline
argument_list|()
operator|.
name|get
argument_list|(
name|SslHandler
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|sslHandler
operator|!=
literal|null
condition|)
block|{
name|SSLSession
name|session
init|=
name|sslHandler
operator|.
name|engine
argument_list|()
operator|.
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
name|session
operator|!=
literal|null
condition|)
block|{
name|attributes
operator|.
name|put
argument_list|(
name|SSL_CIPHER_SUITE_ATTRIBUTE
argument_list|,
name|session
operator|.
name|getCipherSuite
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|attributes
operator|.
name|put
argument_list|(
name|SSL_PEER_CERT_CHAIN_ATTRIBUTE
argument_list|,
name|session
operator|.
name|getPeerCertificates
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SSLPeerUnverifiedException
name|ex
parameter_list|)
block|{
comment|// do nothing here
block|}
block|}
block|}
block|}
specifier|public
name|HttpRequest
name|getOriginalRequest
parameter_list|()
block|{
return|return
name|originalRequest
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
name|contextPath
return|;
block|}
annotation|@
name|Override
specifier|public
name|Cookie
index|[]
name|getCookies
parameter_list|()
block|{
name|String
name|cookieString
init|=
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|get
argument_list|(
name|COOKIE
argument_list|)
decl_stmt|;
if|if
condition|(
name|cookieString
operator|!=
literal|null
condition|)
block|{
name|Set
argument_list|<
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|cookie
operator|.
name|Cookie
argument_list|>
name|cookies
init|=
name|ServerCookieDecoder
operator|.
name|STRICT
operator|.
name|decode
argument_list|(
name|cookieString
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|cookies
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Cookie
index|[]
name|cookiesArray
init|=
operator|new
name|Cookie
index|[
name|cookies
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|indx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|cookie
operator|.
name|Cookie
name|c
range|:
name|cookies
control|)
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|c
operator|.
name|name
argument_list|()
argument_list|,
name|c
operator|.
name|value
argument_list|()
argument_list|)
decl_stmt|;
name|cookie
operator|.
name|setDomain
argument_list|(
name|c
operator|.
name|domain
argument_list|()
argument_list|)
expr_stmt|;
name|cookie
operator|.
name|setMaxAge
argument_list|(
operator|(
name|int
operator|)
name|c
operator|.
name|maxAge
argument_list|()
argument_list|)
expr_stmt|;
name|cookie
operator|.
name|setPath
argument_list|(
name|c
operator|.
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|cookie
operator|.
name|setSecure
argument_list|(
name|c
operator|.
name|isSecure
argument_list|()
argument_list|)
expr_stmt|;
name|cookiesArray
index|[
name|indx
index|]
operator|=
name|cookie
expr_stmt|;
name|indx
operator|++
expr_stmt|;
block|}
return|return
name|cookiesArray
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getDateHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|String
name|longVal
init|=
name|getHeader
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|longVal
operator|==
literal|null
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
return|return
name|Long
operator|.
name|parseLong
argument_list|(
name|longVal
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Enumeration
name|getHeaderNames
parameter_list|()
block|{
return|return
name|Utils
operator|.
name|enumeration
argument_list|(
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|names
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Enumeration
name|getHeaders
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|Utils
operator|.
name|enumeration
argument_list|(
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|getAll
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getIntHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|getInt
argument_list|(
name|name
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMethod
parameter_list|()
block|{
return|return
name|this
operator|.
name|originalRequest
operator|.
name|method
argument_list|()
operator|.
name|name
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getQueryString
parameter_list|()
block|{
return|return
name|this
operator|.
name|uriParser
operator|.
name|getQueryString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRequestURI
parameter_list|()
block|{
return|return
name|this
operator|.
name|uriParser
operator|.
name|getRequestUri
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|StringBuffer
name|getRequestURL
parameter_list|()
block|{
name|StringBuffer
name|url
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|String
name|scheme
init|=
name|this
operator|.
name|getScheme
argument_list|()
decl_stmt|;
name|int
name|port
init|=
name|this
operator|.
name|getServerPort
argument_list|()
decl_stmt|;
name|String
name|urlPath
init|=
name|this
operator|.
name|getRequestURI
argument_list|()
decl_stmt|;
name|url
operator|.
name|append
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
comment|// http, https
name|url
operator|.
name|append
argument_list|(
literal|"://"
argument_list|)
expr_stmt|;
name|url
operator|.
name|append
argument_list|(
name|this
operator|.
name|getServerName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
literal|"http"
operator|.
name|equalsIgnoreCase
argument_list|(
name|scheme
argument_list|)
operator|&&
name|port
operator|!=
literal|80
operator|)
operator|||
operator|(
literal|"https"
operator|.
name|equalsIgnoreCase
argument_list|(
name|scheme
argument_list|)
operator|&&
name|port
operator|!=
literal|443
operator|)
condition|)
block|{
name|url
operator|.
name|append
argument_list|(
literal|':'
argument_list|)
expr_stmt|;
name|url
operator|.
name|append
argument_list|(
name|this
operator|.
name|getServerPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|url
operator|.
name|append
argument_list|(
name|urlPath
argument_list|)
expr_stmt|;
return|return
name|url
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getContentLength
parameter_list|()
block|{
return|return
name|HttpUtil
operator|.
name|getContentLength
argument_list|(
name|this
operator|.
name|originalRequest
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|get
argument_list|(
name|HttpHeaderNames
operator|.
name|CONTENT_TYPE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ServletInputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|inputStream
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCharacterEncoding
parameter_list|()
block|{
if|if
condition|(
name|characterEncoding
operator|==
literal|null
condition|)
block|{
name|characterEncoding
operator|=
name|Utils
operator|.
name|getCharsetFromContentType
argument_list|(
name|this
operator|.
name|getContentType
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
operator|.
name|characterEncoding
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getParameter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|String
index|[]
name|values
init|=
name|getParameterValues
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|values
operator|!=
literal|null
condition|?
name|values
index|[
literal|0
index|]
else|:
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Map
name|getParameterMap
parameter_list|()
block|{
return|return
name|this
operator|.
name|queryStringDecoder
operator|.
name|parameters
argument_list|()
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Enumeration
name|getParameterNames
parameter_list|()
block|{
return|return
name|Utils
operator|.
name|enumerationFromKeys
argument_list|(
name|this
operator|.
name|queryStringDecoder
operator|.
name|parameters
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getParameterValues
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
name|this
operator|.
name|queryStringDecoder
operator|.
name|parameters
argument_list|()
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|values
operator|==
literal|null
operator|||
name|values
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|values
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getProtocol
parameter_list|()
block|{
return|return
name|this
operator|.
name|originalRequest
operator|.
name|protocolVersion
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|attributes
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|attributes
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Enumeration
name|getAttributeNames
parameter_list|()
block|{
return|return
name|Utils
operator|.
name|enumerationFromKeys
argument_list|(
name|this
operator|.
name|attributes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|attributes
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|attributes
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAttribute
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|o
parameter_list|)
block|{
name|this
operator|.
name|attributes
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|BufferedReader
name|getReader
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|reader
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRequestedSessionId
parameter_list|()
block|{
comment|// doesn't implement it yet
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|HttpSession
name|getSession
parameter_list|()
block|{
comment|// doesn't implement it yet
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|HttpSession
name|getSession
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
comment|// doesn't implement it yet
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPathInfo
parameter_list|()
block|{
return|return
name|this
operator|.
name|uriParser
operator|.
name|getPathInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Locale
name|getLocale
parameter_list|()
block|{
name|String
name|locale
init|=
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|get
argument_list|(
name|HttpHeaderNames
operator|.
name|ACCEPT_LANGUAGE
argument_list|,
name|DEFAULT_LOCALE
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|Locale
argument_list|(
name|locale
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteAddr
parameter_list|()
block|{
name|InetSocketAddress
name|addr
init|=
operator|(
name|InetSocketAddress
operator|)
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|remoteAddress
argument_list|()
decl_stmt|;
return|return
name|addr
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteHost
parameter_list|()
block|{
name|InetSocketAddress
name|addr
init|=
operator|(
name|InetSocketAddress
operator|)
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|remoteAddress
argument_list|()
decl_stmt|;
return|return
name|addr
operator|.
name|getHostName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRemotePort
parameter_list|()
block|{
name|InetSocketAddress
name|addr
init|=
operator|(
name|InetSocketAddress
operator|)
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|remoteAddress
argument_list|()
decl_stmt|;
return|return
name|addr
operator|.
name|getPort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getServerName
parameter_list|()
block|{
name|InetSocketAddress
name|addr
init|=
operator|(
name|InetSocketAddress
operator|)
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|localAddress
argument_list|()
decl_stmt|;
return|return
name|addr
operator|.
name|getHostName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getServerPort
parameter_list|()
block|{
name|InetSocketAddress
name|addr
init|=
operator|(
name|InetSocketAddress
operator|)
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|localAddress
argument_list|()
decl_stmt|;
return|return
name|addr
operator|.
name|getPort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getServletPath
parameter_list|()
block|{
name|String
name|servletPath
init|=
name|this
operator|.
name|uriParser
operator|.
name|getServletPath
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"/"
operator|.
name|equals
argument_list|(
name|servletPath
argument_list|)
condition|)
block|{
return|return
literal|""
return|;
block|}
return|return
name|servletPath
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|this
operator|.
name|isSecure
argument_list|()
condition|?
literal|"https"
else|:
literal|"http"
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSecure
parameter_list|()
block|{
return|return
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|pipeline
argument_list|()
operator|.
name|get
argument_list|(
name|SslHandler
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRequestedSessionIdFromCookie
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocalAddr
parameter_list|()
block|{
name|InetSocketAddress
name|addr
init|=
operator|(
name|InetSocketAddress
operator|)
name|ChannelThreadLocal
operator|.
name|get
argument_list|()
operator|.
name|localAddress
argument_list|()
decl_stmt|;
return|return
name|addr
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
return|return
name|getServerName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getLocalPort
parameter_list|()
block|{
return|return
name|getServerPort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCharacterEncoding
parameter_list|(
name|String
name|env
parameter_list|)
throws|throws
name|UnsupportedEncodingException
block|{
name|this
operator|.
name|characterEncoding
operator|=
name|env
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Enumeration
name|getLocales
parameter_list|()
block|{
name|Collection
argument_list|<
name|Locale
argument_list|>
name|locales
init|=
name|Utils
operator|.
name|parseAcceptLanguageHeader
argument_list|(
name|this
operator|.
name|originalRequest
operator|.
name|headers
argument_list|()
operator|.
name|get
argument_list|(
name|HttpHeaderNames
operator|.
name|ACCEPT_LANGUAGE
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|locales
operator|==
literal|null
operator|||
name|locales
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|locales
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|locales
operator|.
name|add
argument_list|(
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|Utils
operator|.
name|enumeration
argument_list|(
name|locales
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAuthType
parameter_list|()
block|{
comment|// CXF Calls this method to cache the Request informaiton
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPathTranslated
parameter_list|()
block|{
comment|// CXF Calls this method to cache the Request informaiton
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteUser
parameter_list|()
block|{
comment|// CXF Calls this method to cache the Request informaiton
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Principal
name|getUserPrincipal
parameter_list|()
block|{
comment|// CXF will call this method to setup user information for Authentication
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRequestedSessionIdFromURL
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'isRequestedSessionIdFromURL' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRequestedSessionIdFromUrl
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'isRequestedSessionIdFromUrl' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRequestedSessionIdValid
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isUserInRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'isUserInRole' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRealPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'getRealPath' not yet implemented!"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|RequestDispatcher
name|getRequestDispatcher
parameter_list|(
name|String
name|path
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Method 'getRequestDispatcher' not yet implemented!"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

