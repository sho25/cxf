begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|netty
operator|.
name|server
operator|.
name|session
operator|.
name|HttpSessionStore
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|HttpSessionThreadLocal
block|{
specifier|public
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|NettyHttpSession
argument_list|>
name|SESSION_THREAD_LOCAL
init|=
operator|new
name|ThreadLocal
argument_list|<
name|NettyHttpSession
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|HttpSessionStore
name|sessionStore
decl_stmt|;
specifier|private
name|HttpSessionThreadLocal
parameter_list|()
block|{
comment|// Utils class
block|}
specifier|public
specifier|static
name|HttpSessionStore
name|getSessionStore
parameter_list|()
block|{
return|return
name|sessionStore
return|;
block|}
specifier|public
specifier|static
name|void
name|setSessionStore
parameter_list|(
name|HttpSessionStore
name|store
parameter_list|)
block|{
name|sessionStore
operator|=
name|store
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|set
parameter_list|(
name|NettyHttpSession
name|session
parameter_list|)
block|{
name|SESSION_THREAD_LOCAL
operator|.
name|set
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|unset
parameter_list|()
block|{
name|SESSION_THREAD_LOCAL
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|NettyHttpSession
name|get
parameter_list|()
block|{
name|NettyHttpSession
name|session
init|=
name|SESSION_THREAD_LOCAL
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|session
operator|!=
literal|null
condition|)
block|{
name|session
operator|.
name|touch
argument_list|()
expr_stmt|;
block|}
return|return
name|session
return|;
block|}
specifier|public
specifier|static
name|NettyHttpSession
name|getOrCreate
parameter_list|()
block|{
if|if
condition|(
name|HttpSessionThreadLocal
operator|.
name|get
argument_list|()
operator|==
literal|null
condition|)
block|{
comment|//HttpSession newSession = sessionStore.createSession();
comment|// TODO need to set the sessionTimeout
comment|//newSession.setMaxInactiveInterval();
name|SESSION_THREAD_LOCAL
operator|.
name|set
argument_list|(
name|sessionStore
operator|.
name|createSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|get
argument_list|()
return|;
block|}
block|}
end_class

end_unit

