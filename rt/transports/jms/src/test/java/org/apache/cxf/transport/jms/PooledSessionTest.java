begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|PooledSessionTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testPooledSession
parameter_list|()
throws|throws
name|Exception
block|{
name|Session
name|sess
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Session
operator|.
name|class
argument_list|)
decl_stmt|;
name|Destination
name|dest
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Destination
operator|.
name|class
argument_list|)
decl_stmt|;
name|MessageProducer
name|mproducer
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|MessageProducer
operator|.
name|class
argument_list|)
decl_stmt|;
name|MessageConsumer
name|mconsumer
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|MessageConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|PooledSession
name|ps
init|=
operator|new
name|PooledSession
argument_list|(
name|sess
argument_list|,
name|dest
argument_list|,
name|mproducer
argument_list|,
name|mconsumer
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ps
operator|.
name|session
argument_list|()
operator|.
name|equals
argument_list|(
name|sess
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ps
operator|.
name|destination
argument_list|()
operator|.
name|equals
argument_list|(
name|dest
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ps
operator|.
name|consumer
argument_list|()
operator|.
name|equals
argument_list|(
name|mconsumer
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ps
operator|.
name|producer
argument_list|()
operator|.
name|equals
argument_list|(
name|mproducer
argument_list|)
argument_list|)
expr_stmt|;
name|MessageConsumer
name|mcons
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|MessageConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|mconsumer
operator|.
name|equals
argument_list|(
name|mcons
argument_list|)
argument_list|)
expr_stmt|;
name|ps
operator|.
name|consumer
argument_list|(
name|mcons
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ps
operator|.
name|consumer
argument_list|()
operator|.
name|equals
argument_list|(
name|mcons
argument_list|)
argument_list|)
expr_stmt|;
name|Destination
name|mdest
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Destination
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|dest
operator|.
name|equals
argument_list|(
name|mdest
argument_list|)
argument_list|)
expr_stmt|;
name|ps
operator|.
name|destination
argument_list|(
name|mdest
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mdest
operator|.
name|equals
argument_list|(
name|ps
operator|.
name|destination
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

