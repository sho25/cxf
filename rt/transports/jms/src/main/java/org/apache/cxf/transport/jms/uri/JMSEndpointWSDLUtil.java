begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|uri
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|DeliveryModeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|JndiConnectionFactoryNameType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|JndiContextParameterType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|JndiInitialContextFactoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|JndiURLType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|PriorityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|ReplyToNameType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|TimeToLiveType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|wsdl
operator|.
name|TopicReplyToNameType
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|JMSEndpointWSDLUtil
block|{
specifier|private
name|JMSEndpointWSDLUtil
parameter_list|()
block|{     }
comment|/**      * Retrieve JMS spec configs from wsdl and write them to the JMSEndpoint      * If a property is already set on the JMSEndpoint it will not be overwritten       *       * @param endpoint      * @param ei      */
specifier|static
name|void
name|retrieveWSDLInformation
parameter_list|(
name|JMSEndpoint
name|endpoint
parameter_list|,
name|EndpointInfo
name|ei
parameter_list|)
block|{
comment|// TODO We could have more than one parameter
name|JndiContextParameterType
name|jndiContextParameterType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|JndiContextParameterType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|jndiContextParameterType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|putJndiParameter
argument_list|(
name|jndiContextParameterType
operator|.
name|getName
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|jndiContextParameterType
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JndiConnectionFactoryNameType
name|jndiConnectionFactoryNameType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|JndiConnectionFactoryNameType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|jndiConnectionFactoryNameType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setJndiConnectionFactoryName
argument_list|(
name|jndiConnectionFactoryNameType
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JndiInitialContextFactoryType
name|jndiInitialContextFactoryType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|JndiInitialContextFactoryType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|jndiInitialContextFactoryType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setJndiInitialContextFactory
argument_list|(
name|jndiInitialContextFactoryType
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JndiURLType
name|jndiURLType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|JndiURLType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|jndiURLType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setJndiURL
argument_list|(
name|jndiURLType
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|DeliveryModeType
name|deliveryModeType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|DeliveryModeType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|deliveryModeType
operator|!=
literal|null
condition|)
block|{
name|String
name|deliveryMode
init|=
name|deliveryModeType
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|endpoint
operator|.
name|setDeliveryMode
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|uri
operator|.
name|JMSEndpoint
operator|.
name|DeliveryModeType
operator|.
name|valueOf
argument_list|(
name|deliveryMode
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|PriorityType
name|priorityType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|PriorityType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|priorityType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setPriority
argument_list|(
name|priorityType
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|TimeToLiveType
name|timeToLiveType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|TimeToLiveType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|timeToLiveType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setTimeToLive
argument_list|(
name|timeToLiveType
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ReplyToNameType
name|replyToNameType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|ReplyToNameType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|replyToNameType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setReplyToName
argument_list|(
name|replyToNameType
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|TopicReplyToNameType
name|topicReplyToNameType
init|=
name|getWSDLExtensor
argument_list|(
name|ei
argument_list|,
name|TopicReplyToNameType
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|topicReplyToNameType
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setTopicReplyToName
argument_list|(
name|topicReplyToNameType
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|T
name|getWSDLExtensor
parameter_list|(
name|EndpointInfo
name|ei
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
name|ServiceInfo
name|si
init|=
name|ei
operator|.
name|getService
argument_list|()
decl_stmt|;
name|BindingInfo
name|bi
init|=
name|ei
operator|.
name|getBinding
argument_list|()
decl_stmt|;
name|Object
name|o
init|=
name|ei
operator|.
name|getExtensor
argument_list|(
name|cls
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|==
literal|null
operator|&&
name|si
operator|!=
literal|null
condition|)
block|{
name|o
operator|=
name|si
operator|.
name|getExtensor
argument_list|(
name|cls
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|&&
name|bi
operator|!=
literal|null
condition|)
block|{
name|o
operator|=
name|bi
operator|.
name|getExtensor
argument_list|(
name|cls
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|cls
operator|.
name|isInstance
argument_list|(
name|o
argument_list|)
condition|)
block|{
return|return
name|cls
operator|.
name|cast
argument_list|(
name|o
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

