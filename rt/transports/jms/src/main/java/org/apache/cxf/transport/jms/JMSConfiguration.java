begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|InitializingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Required
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|task
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|connection
operator|.
name|SingleConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|connection
operator|.
name|SingleConnectionFactory102
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|connection
operator|.
name|UserCredentialsConnectionFactoryAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|JmsTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|support
operator|.
name|destination
operator|.
name|DestinationResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jndi
operator|.
name|JndiTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|transaction
operator|.
name|PlatformTransactionManager
import|;
end_import

begin_class
specifier|public
class|class
name|JMSConfiguration
implements|implements
name|InitializingBean
block|{
comment|/**      * The use of -1 is to make easier to determine       * if the setCacheLevel has been called.      */
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_VALUE
init|=
operator|-
literal|1
decl_stmt|;
specifier|static
specifier|final
name|boolean
name|DEFAULT_USEJMS11
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|usingEndpointInfo
init|=
literal|true
decl_stmt|;
specifier|private
name|ConnectionFactory
name|connectionFactory
decl_stmt|;
specifier|private
name|DestinationResolver
name|destinationResolver
decl_stmt|;
specifier|private
name|PlatformTransactionManager
name|transactionManager
decl_stmt|;
specifier|private
name|TaskExecutor
name|taskExecutor
decl_stmt|;
specifier|private
name|boolean
name|useJms11
init|=
name|DEFAULT_USEJMS11
decl_stmt|;
specifier|private
name|boolean
name|messageIdEnabled
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|messageTimestampEnabled
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|pubSubNoLocal
decl_stmt|;
specifier|private
name|long
name|receiveTimeout
init|=
name|JmsTemplate
operator|.
name|RECEIVE_TIMEOUT_INDEFINITE_WAIT
decl_stmt|;
specifier|private
name|boolean
name|explicitQosEnabled
decl_stmt|;
specifier|private
name|int
name|deliveryMode
init|=
name|Message
operator|.
name|DEFAULT_DELIVERY_MODE
decl_stmt|;
specifier|private
name|int
name|priority
init|=
name|Message
operator|.
name|DEFAULT_PRIORITY
decl_stmt|;
specifier|private
name|long
name|timeToLive
init|=
name|Message
operator|.
name|DEFAULT_TIME_TO_LIVE
decl_stmt|;
specifier|private
name|boolean
name|sessionTransacted
decl_stmt|;
comment|//Stuff for JNDI based and old configs
specifier|private
name|boolean
name|useJndi
decl_stmt|;
specifier|private
name|JndiTemplate
name|jndiTemplate
decl_stmt|;
specifier|private
name|String
name|jndiConnectionFactoryName
decl_stmt|;
specifier|private
name|String
name|connectionUserName
decl_stmt|;
specifier|private
name|String
name|connectionPassword
decl_stmt|;
specifier|private
name|Boolean
name|reconnectOnException
decl_stmt|;
specifier|private
name|int
name|concurrentConsumers
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|maxConcurrentConsumers
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|maxConcurrentTasks
init|=
literal|10
decl_stmt|;
specifier|private
specifier|volatile
name|String
name|messageSelector
decl_stmt|;
specifier|private
name|boolean
name|subscriptionDurable
decl_stmt|;
specifier|private
name|String
name|durableSubscriptionName
decl_stmt|;
specifier|private
name|String
name|targetDestination
decl_stmt|;
specifier|private
name|String
name|replyDestination
decl_stmt|;
specifier|private
name|String
name|messageType
init|=
name|JMSConstants
operator|.
name|TEXT_MESSAGE_TYPE
decl_stmt|;
specifier|private
name|boolean
name|pubSubDomain
decl_stmt|;
specifier|private
name|boolean
name|useConduitIdSelector
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|autoResolveDestination
decl_stmt|;
specifier|private
name|long
name|recoveryInterval
init|=
name|DEFAULT_VALUE
decl_stmt|;
specifier|private
name|int
name|cacheLevel
init|=
name|DEFAULT_VALUE
decl_stmt|;
specifier|private
name|String
name|cacheLevelName
decl_stmt|;
specifier|public
name|String
name|getCacheLevelName
parameter_list|()
block|{
return|return
name|cacheLevelName
return|;
block|}
specifier|public
name|void
name|setCacheLevelName
parameter_list|(
name|String
name|cacheLevelName
parameter_list|)
block|{
name|this
operator|.
name|cacheLevelName
operator|=
name|cacheLevelName
expr_stmt|;
block|}
specifier|public
name|int
name|getCacheLevel
parameter_list|()
block|{
return|return
name|cacheLevel
return|;
block|}
specifier|public
name|void
name|setCacheLevel
parameter_list|(
name|int
name|cacheLevel
parameter_list|)
block|{
name|this
operator|.
name|cacheLevel
operator|=
name|cacheLevel
expr_stmt|;
block|}
specifier|public
name|long
name|getRecoveryInterval
parameter_list|()
block|{
return|return
name|recoveryInterval
return|;
block|}
specifier|public
name|void
name|setRecoveryInterval
parameter_list|(
name|long
name|recoveryInterval
parameter_list|)
block|{
name|this
operator|.
name|recoveryInterval
operator|=
name|recoveryInterval
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAutoResolveDestination
parameter_list|()
block|{
return|return
name|autoResolveDestination
return|;
block|}
specifier|public
name|void
name|setAutoResolveDestination
parameter_list|(
name|boolean
name|autoResolveDestination
parameter_list|)
block|{
name|this
operator|.
name|autoResolveDestination
operator|=
name|autoResolveDestination
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUsingEndpointInfo
parameter_list|()
block|{
return|return
name|this
operator|.
name|usingEndpointInfo
return|;
block|}
specifier|public
name|void
name|setUsingEndpointInfo
parameter_list|(
name|boolean
name|usingEndpointInfo
parameter_list|)
block|{
name|this
operator|.
name|usingEndpointInfo
operator|=
name|usingEndpointInfo
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseJndi
parameter_list|()
block|{
return|return
name|useJndi
return|;
block|}
specifier|public
name|void
name|setUseJndi
parameter_list|(
name|boolean
name|useJndi
parameter_list|)
block|{
name|this
operator|.
name|useJndi
operator|=
name|useJndi
expr_stmt|;
block|}
specifier|public
name|boolean
name|isMessageIdEnabled
parameter_list|()
block|{
return|return
name|messageIdEnabled
return|;
block|}
specifier|public
name|void
name|setMessageIdEnabled
parameter_list|(
name|boolean
name|messageIdEnabled
parameter_list|)
block|{
name|this
operator|.
name|messageIdEnabled
operator|=
name|messageIdEnabled
expr_stmt|;
block|}
specifier|public
name|boolean
name|isMessageTimestampEnabled
parameter_list|()
block|{
return|return
name|messageTimestampEnabled
return|;
block|}
specifier|public
name|void
name|setMessageTimestampEnabled
parameter_list|(
name|boolean
name|messageTimestampEnabled
parameter_list|)
block|{
name|this
operator|.
name|messageTimestampEnabled
operator|=
name|messageTimestampEnabled
expr_stmt|;
block|}
specifier|public
name|boolean
name|isPubSubNoLocal
parameter_list|()
block|{
return|return
name|pubSubNoLocal
return|;
block|}
specifier|public
name|void
name|setPubSubNoLocal
parameter_list|(
name|boolean
name|pubSubNoLocal
parameter_list|)
block|{
name|this
operator|.
name|pubSubNoLocal
operator|=
name|pubSubNoLocal
expr_stmt|;
block|}
specifier|public
name|long
name|getReceiveTimeout
parameter_list|()
block|{
return|return
name|receiveTimeout
return|;
block|}
specifier|public
name|void
name|setReceiveTimeout
parameter_list|(
name|long
name|receiveTimeout
parameter_list|)
block|{
name|this
operator|.
name|receiveTimeout
operator|=
name|receiveTimeout
expr_stmt|;
block|}
specifier|public
name|boolean
name|isExplicitQosEnabled
parameter_list|()
block|{
return|return
name|explicitQosEnabled
return|;
block|}
specifier|public
name|void
name|setExplicitQosEnabled
parameter_list|(
name|boolean
name|explicitQosEnabled
parameter_list|)
block|{
name|this
operator|.
name|explicitQosEnabled
operator|=
name|explicitQosEnabled
expr_stmt|;
block|}
specifier|public
name|int
name|getDeliveryMode
parameter_list|()
block|{
return|return
name|deliveryMode
return|;
block|}
specifier|public
name|void
name|setDeliveryMode
parameter_list|(
name|int
name|deliveryMode
parameter_list|)
block|{
name|this
operator|.
name|deliveryMode
operator|=
name|deliveryMode
expr_stmt|;
block|}
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
specifier|public
name|void
name|setPriority
parameter_list|(
name|int
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
block|}
specifier|public
name|long
name|getTimeToLive
parameter_list|()
block|{
return|return
name|timeToLive
return|;
block|}
specifier|public
name|void
name|setTimeToLive
parameter_list|(
name|long
name|timeToLive
parameter_list|)
block|{
name|this
operator|.
name|timeToLive
operator|=
name|timeToLive
expr_stmt|;
block|}
specifier|public
name|String
name|getMessageSelector
parameter_list|()
block|{
return|return
name|messageSelector
return|;
block|}
specifier|public
name|void
name|setMessageSelector
parameter_list|(
name|String
name|messageSelector
parameter_list|)
block|{
name|this
operator|.
name|messageSelector
operator|=
name|messageSelector
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSubscriptionDurable
parameter_list|()
block|{
return|return
name|subscriptionDurable
return|;
block|}
specifier|public
name|void
name|setSubscriptionDurable
parameter_list|(
name|boolean
name|subscriptionDurable
parameter_list|)
block|{
name|this
operator|.
name|subscriptionDurable
operator|=
name|subscriptionDurable
expr_stmt|;
block|}
specifier|public
name|String
name|getDurableSubscriptionName
parameter_list|()
block|{
return|return
name|durableSubscriptionName
return|;
block|}
specifier|public
name|void
name|setDurableSubscriptionName
parameter_list|(
name|String
name|durableSubscriptionName
parameter_list|)
block|{
name|this
operator|.
name|durableSubscriptionName
operator|=
name|durableSubscriptionName
expr_stmt|;
block|}
specifier|public
name|void
name|afterPropertiesSet
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|connectionFactory
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Required property connectionfactory was not set"
argument_list|)
throw|;
block|}
block|}
specifier|public
name|ConnectionFactory
name|getConnectionFactory
parameter_list|()
block|{
if|if
condition|(
name|connectionFactory
operator|==
literal|null
operator|&&
name|jndiTemplate
operator|!=
literal|null
operator|&&
name|jndiConnectionFactoryName
operator|!=
literal|null
condition|)
block|{
name|connectionFactory
operator|=
name|getConnectionFactoryFromJndi
argument_list|()
expr_stmt|;
block|}
return|return
name|connectionFactory
return|;
block|}
specifier|private
name|ConnectionFactory
name|getConnectionFactoryFromJndi
parameter_list|()
block|{
name|String
name|connectionFactoryName
init|=
name|getJndiConnectionFactoryName
argument_list|()
decl_stmt|;
name|String
name|userName
init|=
name|getConnectionUserName
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|getConnectionPassword
argument_list|()
decl_stmt|;
if|if
condition|(
name|connectionFactoryName
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
try|try
block|{
name|ConnectionFactory
name|cf
init|=
operator|(
name|ConnectionFactory
operator|)
name|jndiTemplate
operator|.
name|lookup
argument_list|(
name|connectionFactoryName
argument_list|)
decl_stmt|;
name|UserCredentialsConnectionFactoryAdapter
name|uccf
init|=
operator|new
name|UserCredentialsConnectionFactoryAdapter
argument_list|()
decl_stmt|;
name|uccf
operator|.
name|setUsername
argument_list|(
name|userName
argument_list|)
expr_stmt|;
name|uccf
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|uccf
operator|.
name|setTargetConnectionFactory
argument_list|(
name|cf
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|useJms11
condition|)
block|{
name|SingleConnectionFactory
name|scf
init|=
operator|new
name|SingleConnectionFactory
argument_list|(
name|uccf
argument_list|)
decl_stmt|;
if|if
condition|(
name|isSetReconnectOnException
argument_list|()
operator|&&
name|isReconnectOnException
argument_list|()
condition|)
block|{
name|scf
operator|.
name|setReconnectOnException
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|scf
return|;
block|}
name|SingleConnectionFactory102
name|scf
init|=
operator|new
name|SingleConnectionFactory102
argument_list|(
name|uccf
argument_list|,
name|pubSubDomain
argument_list|)
decl_stmt|;
if|if
condition|(
name|isSetReconnectOnException
argument_list|()
operator|&&
name|isReconnectOnException
argument_list|()
condition|)
block|{
name|scf
operator|.
name|setReconnectOnException
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|scf
return|;
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Required
specifier|public
name|void
name|setConnectionFactory
parameter_list|(
name|ConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
block|}
specifier|public
name|String
name|getTargetDestination
parameter_list|()
block|{
return|return
name|targetDestination
return|;
block|}
specifier|public
name|void
name|setTargetDestination
parameter_list|(
name|String
name|targetDestination
parameter_list|)
block|{
name|this
operator|.
name|targetDestination
operator|=
name|targetDestination
expr_stmt|;
block|}
specifier|public
name|String
name|getReplyDestination
parameter_list|()
block|{
return|return
name|replyDestination
return|;
block|}
specifier|public
name|void
name|setReplyDestination
parameter_list|(
name|String
name|replyDestination
parameter_list|)
block|{
name|this
operator|.
name|replyDestination
operator|=
name|replyDestination
expr_stmt|;
block|}
specifier|public
name|String
name|getMessageType
parameter_list|()
block|{
return|return
name|messageType
return|;
block|}
specifier|public
name|void
name|setMessageType
parameter_list|(
name|String
name|messageType
parameter_list|)
block|{
name|this
operator|.
name|messageType
operator|=
name|messageType
expr_stmt|;
block|}
specifier|public
name|boolean
name|isPubSubDomain
parameter_list|()
block|{
return|return
name|pubSubDomain
return|;
block|}
specifier|public
name|void
name|setPubSubDomain
parameter_list|(
name|boolean
name|pubSubDomain
parameter_list|)
block|{
name|this
operator|.
name|pubSubDomain
operator|=
name|pubSubDomain
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseJms11
parameter_list|()
block|{
return|return
name|useJms11
return|;
block|}
specifier|public
name|void
name|setUseJms11
parameter_list|(
name|boolean
name|useJms11
parameter_list|)
block|{
name|this
operator|.
name|useJms11
operator|=
name|useJms11
expr_stmt|;
block|}
specifier|public
name|DestinationResolver
name|getDestinationResolver
parameter_list|()
block|{
return|return
name|destinationResolver
return|;
block|}
specifier|public
name|void
name|setDestinationResolver
parameter_list|(
name|DestinationResolver
name|destinationResolver
parameter_list|)
block|{
name|this
operator|.
name|destinationResolver
operator|=
name|destinationResolver
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSessionTransacted
parameter_list|()
block|{
return|return
name|sessionTransacted
return|;
block|}
specifier|public
name|void
name|setSessionTransacted
parameter_list|(
name|boolean
name|sessionTransacted
parameter_list|)
block|{
name|this
operator|.
name|sessionTransacted
operator|=
name|sessionTransacted
expr_stmt|;
block|}
specifier|public
name|PlatformTransactionManager
name|getTransactionManager
parameter_list|()
block|{
return|return
name|transactionManager
return|;
block|}
specifier|public
name|void
name|setTransactionManager
parameter_list|(
name|PlatformTransactionManager
name|transactionManager
parameter_list|)
block|{
name|this
operator|.
name|transactionManager
operator|=
name|transactionManager
expr_stmt|;
block|}
specifier|public
name|int
name|getConcurrentConsumers
parameter_list|()
block|{
return|return
name|concurrentConsumers
return|;
block|}
specifier|public
name|void
name|setConcurrentConsumers
parameter_list|(
name|int
name|concurrentConsumers
parameter_list|)
block|{
name|this
operator|.
name|concurrentConsumers
operator|=
name|concurrentConsumers
expr_stmt|;
block|}
specifier|public
name|int
name|getMaxConcurrentConsumers
parameter_list|()
block|{
return|return
name|maxConcurrentConsumers
return|;
block|}
specifier|public
name|void
name|setMaxConcurrentConsumers
parameter_list|(
name|int
name|maxConcurrentConsumers
parameter_list|)
block|{
name|this
operator|.
name|maxConcurrentConsumers
operator|=
name|maxConcurrentConsumers
expr_stmt|;
block|}
specifier|public
name|TaskExecutor
name|getTaskExecutor
parameter_list|()
block|{
return|return
name|taskExecutor
return|;
block|}
specifier|public
name|void
name|setTaskExecutor
parameter_list|(
name|TaskExecutor
name|taskExecutor
parameter_list|)
block|{
name|this
operator|.
name|taskExecutor
operator|=
name|taskExecutor
expr_stmt|;
block|}
specifier|public
name|void
name|setUseConduitIdSelector
parameter_list|(
name|boolean
name|useConduitIdSelector
parameter_list|)
block|{
name|this
operator|.
name|useConduitIdSelector
operator|=
name|useConduitIdSelector
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseConduitIdSelector
parameter_list|()
block|{
return|return
name|useConduitIdSelector
return|;
block|}
specifier|public
name|int
name|getMaxConcurrentTasks
parameter_list|()
block|{
return|return
name|maxConcurrentTasks
return|;
block|}
specifier|public
name|void
name|setMaxConcurrentTasks
parameter_list|(
name|int
name|maxConcurrentTasks
parameter_list|)
block|{
name|this
operator|.
name|maxConcurrentTasks
operator|=
name|maxConcurrentTasks
expr_stmt|;
block|}
specifier|public
name|void
name|setJndiTemplate
parameter_list|(
name|JndiTemplate
name|jndiTemplate
parameter_list|)
block|{
name|this
operator|.
name|jndiTemplate
operator|=
name|jndiTemplate
expr_stmt|;
block|}
specifier|public
name|JndiTemplate
name|getJndiTemplate
parameter_list|()
block|{
return|return
name|jndiTemplate
return|;
block|}
specifier|public
name|String
name|getJndiConnectionFactoryName
parameter_list|()
block|{
return|return
name|jndiConnectionFactoryName
return|;
block|}
specifier|public
name|void
name|setJndiConnectionFactoryName
parameter_list|(
name|String
name|jndiConnectionFactoryName
parameter_list|)
block|{
name|this
operator|.
name|jndiConnectionFactoryName
operator|=
name|jndiConnectionFactoryName
expr_stmt|;
block|}
specifier|public
name|String
name|getConnectionUserName
parameter_list|()
block|{
return|return
name|connectionUserName
return|;
block|}
specifier|public
name|void
name|setConnectionUserName
parameter_list|(
name|String
name|connectionUserName
parameter_list|)
block|{
name|this
operator|.
name|connectionUserName
operator|=
name|connectionUserName
expr_stmt|;
block|}
specifier|public
name|String
name|getConnectionPassword
parameter_list|()
block|{
return|return
name|connectionPassword
return|;
block|}
specifier|public
name|void
name|setConnectionPassword
parameter_list|(
name|String
name|connectionPassword
parameter_list|)
block|{
name|this
operator|.
name|connectionPassword
operator|=
name|connectionPassword
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSetReconnectOnException
parameter_list|()
block|{
return|return
name|reconnectOnException
operator|!=
literal|null
return|;
block|}
specifier|public
name|boolean
name|isReconnectOnException
parameter_list|()
block|{
return|return
name|reconnectOnException
return|;
block|}
specifier|public
name|void
name|setReconnectOnException
parameter_list|(
name|boolean
name|reconnectOnException
parameter_list|)
block|{
name|this
operator|.
name|reconnectOnException
operator|=
name|reconnectOnException
expr_stmt|;
block|}
block|}
end_class

end_unit

