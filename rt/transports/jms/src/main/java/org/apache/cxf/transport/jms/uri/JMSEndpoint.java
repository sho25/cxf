begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|uri
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|JMSEndpoint
extends|extends
name|JMSEndpointType
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jndiParameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * @param uri      * @param subject      */
specifier|public
name|JMSEndpoint
parameter_list|(
name|String
name|endpointUri
parameter_list|,
name|String
name|jmsVariant
parameter_list|,
name|String
name|destinationName
parameter_list|)
block|{
name|this
operator|.
name|endpointUri
operator|=
name|endpointUri
expr_stmt|;
name|this
operator|.
name|jmsVariant
operator|=
name|jmsVariant
expr_stmt|;
name|this
operator|.
name|destinationName
operator|=
name|destinationName
expr_stmt|;
block|}
specifier|public
name|String
name|getRequestURI
parameter_list|()
block|{
name|String
name|requestUri
init|=
literal|"jms:"
operator|+
name|jmsVariant
operator|+
literal|":"
operator|+
name|destinationName
decl_stmt|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
name|Iterator
name|iter
init|=
name|parameters
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|value
init|=
operator|(
name|String
operator|)
name|parameters
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
block|{
name|requestUri
operator|+=
literal|"?"
operator|+
name|key
operator|+
literal|"="
operator|+
name|value
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|requestUri
operator|+=
literal|"&"
operator|+
name|key
operator|+
literal|"="
operator|+
name|value
expr_stmt|;
block|}
block|}
return|return
name|requestUri
return|;
block|}
comment|/**      * @param key      * @param value      */
specifier|public
name|void
name|putJndiParameter
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|jndiParameters
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|putParameter
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|parameters
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param targetserviceParameterName      * @return      */
specifier|public
name|String
name|getParameter
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|parameters
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|Map
name|getJndiParameters
parameter_list|()
block|{
return|return
name|jndiParameters
return|;
block|}
comment|/**      * @return      */
specifier|public
name|Map
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
block|}
end_class

end_unit

