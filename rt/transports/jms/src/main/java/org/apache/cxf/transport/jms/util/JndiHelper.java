begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NameNotFoundException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_class
specifier|public
class|class
name|JndiHelper
block|{
specifier|private
name|Properties
name|environment
decl_stmt|;
comment|/**      * Create a new JndiTemplate instance, using the given environment.      */
specifier|public
name|JndiHelper
parameter_list|(
name|Properties
name|environment
parameter_list|)
block|{
name|this
operator|.
name|environment
operator|=
name|environment
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|lookup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|requiredType
parameter_list|)
throws|throws
name|NamingException
block|{
name|Context
name|ctx
init|=
operator|new
name|InitialContext
argument_list|(
name|this
operator|.
name|environment
argument_list|)
decl_stmt|;
try|try
block|{
name|Object
name|located
init|=
name|ctx
operator|.
name|lookup
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|located
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NameNotFoundException
argument_list|(
literal|"JNDI object with ["
operator|+
name|name
operator|+
literal|"] not found"
argument_list|)
throw|;
block|}
return|return
operator|(
name|T
operator|)
name|located
return|;
block|}
finally|finally
block|{
name|ResourceCloser
operator|.
name|close
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

