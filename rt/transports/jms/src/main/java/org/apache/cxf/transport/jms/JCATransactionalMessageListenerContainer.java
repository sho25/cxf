begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|XASession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|endpoint
operator|.
name|MessageEndpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|endpoint
operator|.
name|MessageEndpointFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|DefaultMessageListenerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|support
operator|.
name|JmsUtils
import|;
end_import

begin_class
specifier|public
class|class
name|JCATransactionalMessageListenerContainer
extends|extends
name|DefaultMessageListenerContainer
block|{
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|MessageEndpoint
argument_list|>
name|ENDPOINT_LOCAL
init|=
operator|new
name|ThreadLocal
argument_list|<
name|MessageEndpoint
argument_list|>
argument_list|()
decl_stmt|;
specifier|static
specifier|final
name|String
name|MESSAGE_ENDPOINT_FACTORY
init|=
literal|"MessageEndpointFactory"
decl_stmt|;
specifier|static
specifier|final
name|String
name|MDB_TRANSACTED_METHOD
init|=
literal|"MDBTransactedMethod"
decl_stmt|;
specifier|private
name|MessageEndpointFactory
name|factory
decl_stmt|;
specifier|private
name|Method
name|method
decl_stmt|;
specifier|public
name|JCATransactionalMessageListenerContainer
parameter_list|(
name|EndpointInfo
name|ei
parameter_list|)
block|{
name|factory
operator|=
name|ei
operator|.
name|getProperty
argument_list|(
name|MESSAGE_ENDPOINT_FACTORY
argument_list|,
name|MessageEndpointFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|method
operator|=
name|ei
operator|.
name|getProperty
argument_list|(
name|MDB_TRANSACTED_METHOD
argument_list|,
name|Method
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCacheLevel
argument_list|(
name|CACHE_CONNECTION
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|receiveAndExecute
parameter_list|(
name|Object
name|invoker
parameter_list|,
name|Session
name|session
parameter_list|,
name|MessageConsumer
name|consumer
parameter_list|)
throws|throws
name|JMSException
block|{
name|boolean
name|messageReceived
init|=
literal|false
decl_stmt|;
name|MessageEndpoint
name|ep
init|=
literal|null
decl_stmt|;
name|MessageConsumer
name|mc
init|=
literal|null
decl_stmt|;
name|XASession
name|xa
init|=
literal|null
decl_stmt|;
name|Session
name|s
init|=
literal|null
decl_stmt|;
try|try
block|{
name|xa
operator|=
operator|(
name|XASession
operator|)
name|createSession
argument_list|(
name|getSharedConnection
argument_list|()
argument_list|)
expr_stmt|;
name|XAResource
name|xar
init|=
name|xa
operator|.
name|getXAResource
argument_list|()
decl_stmt|;
name|s
operator|=
name|xa
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|mc
operator|=
name|s
operator|.
name|createConsumer
argument_list|(
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
name|ep
operator|=
name|factory
operator|.
name|createEndpoint
argument_list|(
name|xar
argument_list|)
expr_stmt|;
name|ENDPOINT_LOCAL
operator|.
name|set
argument_list|(
name|ep
argument_list|)
expr_stmt|;
name|ep
operator|.
name|beforeDelivery
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|messageReceived
operator|=
name|doReceiveAndExecute
argument_list|(
name|invoker
argument_list|,
name|s
argument_list|,
name|mc
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ep
operator|.
name|afterDelivery
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
finally|finally
block|{
name|ep
operator|.
name|release
argument_list|()
expr_stmt|;
name|JmsUtils
operator|.
name|closeMessageConsumer
argument_list|(
name|mc
argument_list|)
expr_stmt|;
name|JmsUtils
operator|.
name|closeSession
argument_list|(
name|xa
argument_list|)
expr_stmt|;
name|JmsUtils
operator|.
name|closeSession
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
return|return
name|messageReceived
return|;
block|}
block|}
end_class

end_unit

