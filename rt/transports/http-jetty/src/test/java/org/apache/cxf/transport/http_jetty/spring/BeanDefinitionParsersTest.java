begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|spring
operator|.
name|HttpConduitBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|spring
operator|.
name|HttpDestinationBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http
operator|.
name|configuration
operator|.
name|HTTPClientPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http
operator|.
name|configuration
operator|.
name|HTTPServerPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|PropertyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|BeanDefinitionBuilder
import|;
end_import

begin_class
annotation|@
name|org
operator|.
name|junit
operator|.
name|Ignore
argument_list|(
literal|"Not valid as the parser shouldn't be generating the beans themselves, thats the"
operator|+
literal|"job of the factory later on.  Need to update this test to do that."
argument_list|)
specifier|public
class|class
name|BeanDefinitionParsersTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testDest
parameter_list|()
throws|throws
name|Exception
block|{
name|BeanDefinitionBuilder
name|bd
init|=
name|BeanDefinitionBuilder
operator|.
name|childBeanDefinition
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|HttpDestinationBeanDefinitionParser
name|parser
init|=
operator|new
name|HttpDestinationBeanDefinitionParser
argument_list|()
decl_stmt|;
name|Document
name|d
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"destination.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|parser
operator|.
name|doParse
argument_list|(
name|d
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|null
argument_list|,
name|bd
argument_list|)
expr_stmt|;
name|PropertyValue
index|[]
name|pvs
init|=
name|bd
operator|.
name|getRawBeanDefinition
argument_list|()
operator|.
name|getPropertyValues
argument_list|()
operator|.
name|getPropertyValues
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|pvs
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foobar"
argument_list|,
operator|(
operator|(
name|HTTPServerPolicy
operator|)
name|pvs
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getContentEncoding
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"exact"
argument_list|,
name|pvs
index|[
literal|1
index|]
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConduit
parameter_list|()
throws|throws
name|Exception
block|{
name|BeanDefinitionBuilder
name|bd
init|=
name|BeanDefinitionBuilder
operator|.
name|childBeanDefinition
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|HttpConduitBeanDefinitionParser
name|parser
init|=
operator|new
name|HttpConduitBeanDefinitionParser
argument_list|()
decl_stmt|;
name|Document
name|d
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"conduit.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|parser
operator|.
name|doParse
argument_list|(
name|d
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|null
argument_list|,
name|bd
argument_list|)
expr_stmt|;
name|PropertyValue
index|[]
name|pvs
init|=
name|bd
operator|.
name|getRawBeanDefinition
argument_list|()
operator|.
name|getPropertyValues
argument_list|()
operator|.
name|getPropertyValues
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|pvs
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|97
argument_list|,
operator|(
operator|(
name|HTTPClientPolicy
operator|)
name|pvs
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getConnectionTimeout
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

