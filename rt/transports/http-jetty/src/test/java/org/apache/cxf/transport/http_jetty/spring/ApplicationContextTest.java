begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|Configurer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|spring
operator|.
name|ConfigurerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|TestApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiatorManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|HTTPConduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPServerEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|XmlBeanDefinitionStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ApplicationContextTest
extends|extends
name|Assert
block|{
specifier|private
specifier|static
specifier|final
name|String
name|S1
init|=
name|ApplicationContextTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/META-INF/cxf/cxf.xml"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|clearBus
parameter_list|()
block|{
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|s4
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/cxf/transport/http_jetty/spring/invalid-beans.xml"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
try|try
block|{
operator|new
name|TestApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
name|S1
block|,
name|s4
block|}
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expected XmlBeanDefinitionStoreException not thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlBeanDefinitionStoreException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|SAXParseException
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContext
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|s4
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/cxf/transport/http_jetty/spring/beans.xml"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|TestApplicationContext
name|ctx
init|=
operator|new
name|TestApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
name|S1
block|,
name|s4
block|}
argument_list|)
decl_stmt|;
comment|//ctx.refresh();
name|checkContext
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctx
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextWithProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|s4
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/cxf/transport/http_jetty/spring/beans-props.xml"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|TestApplicationContext
name|ctx
init|=
operator|new
name|TestApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
name|S1
block|,
name|s4
block|}
argument_list|)
decl_stmt|;
name|checkContext
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctx
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|checkContext
parameter_list|(
name|TestApplicationContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|ConfigurerImpl
name|cfg
init|=
operator|new
name|ConfigurerImpl
argument_list|(
name|ctx
argument_list|)
decl_stmt|;
name|EndpointInfo
name|info
init|=
name|getEndpointInfo
argument_list|(
literal|"bla"
argument_list|,
literal|"Foo"
argument_list|,
literal|"http://localhost:9000"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
operator|(
name|Bus
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
name|Bus
operator|.
name|DEFAULT_BUS_ID
argument_list|)
decl_stmt|;
name|bus
operator|.
name|setExtension
argument_list|(
name|cfg
argument_list|,
name|Configurer
operator|.
name|class
argument_list|)
expr_stmt|;
name|DestinationFactoryManager
name|dfm
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|DestinationFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|DestinationFactory
name|factory
init|=
name|dfm
operator|.
name|getDestinationFactory
argument_list|(
literal|"http://cxf.apache.org/transports/http"
argument_list|)
decl_stmt|;
name|Destination
name|d
init|=
name|factory
operator|.
name|getDestination
argument_list|(
name|info
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|d
operator|instanceof
name|JettyHTTPDestination
argument_list|)
expr_stmt|;
name|JettyHTTPDestination
name|jd
init|=
operator|(
name|JettyHTTPDestination
operator|)
name|d
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foobar"
argument_list|,
name|jd
operator|.
name|getServer
argument_list|()
operator|.
name|getContentEncoding
argument_list|()
argument_list|)
expr_stmt|;
name|JettyHTTPServerEngine
name|engine
init|=
operator|(
name|JettyHTTPServerEngine
operator|)
name|jd
operator|.
name|getEngine
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|111
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMinThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|120
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMaxThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TestPrefix"
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getThreadNamePrefix
argument_list|()
argument_list|)
expr_stmt|;
name|ConduitInitiatorManager
name|cim
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|ConduitInitiatorManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ConduitInitiator
name|ci
init|=
name|cim
operator|.
name|getConduitInitiator
argument_list|(
literal|"http://cxf.apache.org/transports/http"
argument_list|)
decl_stmt|;
name|HTTPConduit
name|conduit
init|=
operator|(
name|HTTPConduit
operator|)
name|ci
operator|.
name|getConduit
argument_list|(
name|info
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|97
argument_list|,
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|getConnectionTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|info
operator|.
name|setName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"urn:test:ns"
argument_list|,
literal|"Bar"
argument_list|)
argument_list|)
expr_stmt|;
name|conduit
operator|=
operator|(
name|HTTPConduit
operator|)
name|ci
operator|.
name|getConduit
argument_list|(
name|info
argument_list|,
name|bus
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|79
argument_list|,
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|getConnectionTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|JettyHTTPDestination
name|jd2
init|=
operator|(
name|JettyHTTPDestination
operator|)
name|factory
operator|.
name|getDestination
argument_list|(
name|getEndpointInfo
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"http://localhost:9001"
argument_list|)
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|engine
operator|=
operator|(
name|JettyHTTPServerEngine
operator|)
name|jd2
operator|.
name|getEngine
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|40000
argument_list|,
name|engine
operator|.
name|getMaxIdleTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|engine
operator|.
name|getSendServerVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|99
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMinThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|777
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMaxThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AnotherPrefix"
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getThreadNamePrefix
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"The engine should support session manager"
argument_list|,
name|engine
operator|.
name|isSessionSupport
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"The handlers should not be null"
argument_list|,
name|engine
operator|.
name|getHandlers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|engine
operator|.
name|getHandlers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JettyHTTPDestination
name|jd3
init|=
operator|(
name|JettyHTTPDestination
operator|)
name|factory
operator|.
name|getDestination
argument_list|(
name|getEndpointInfo
argument_list|(
literal|"sna"
argument_list|,
literal|"foo"
argument_list|,
literal|"https://localhost:9002"
argument_list|)
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|engine
operator|=
operator|(
name|JettyHTTPServerEngine
operator|)
name|jd3
operator|.
name|getEngine
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|111
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMinThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|120
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMaxThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TestPrefix"
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getThreadNamePrefix
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|engine
operator|.
name|getTlsServerParameters
argument_list|()
operator|.
name|getClientAuthentication
argument_list|()
operator|.
name|isWant
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|engine
operator|.
name|getTlsServerParameters
argument_list|()
operator|.
name|getClientAuthentication
argument_list|()
operator|.
name|isRequired
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|JettyHTTPDestination
name|jd4
init|=
operator|(
name|JettyHTTPDestination
operator|)
name|factory
operator|.
name|getDestination
argument_list|(
name|getEndpointInfo
argument_list|(
literal|"sna"
argument_list|,
literal|"foo2"
argument_list|,
literal|"https://localhost:9003"
argument_list|)
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|engine
operator|=
operator|(
name|JettyHTTPServerEngine
operator|)
name|jd4
operator|.
name|getEngine
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|engine
operator|.
name|getTlsServerParameters
argument_list|()
operator|.
name|getClientAuthentication
argument_list|()
operator|.
name|isWant
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|engine
operator|.
name|getTlsServerParameters
argument_list|()
operator|.
name|getClientAuthentication
argument_list|()
operator|.
name|isRequired
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|JettyHTTPDestination
name|jd5
init|=
operator|(
name|JettyHTTPDestination
operator|)
name|factory
operator|.
name|getDestination
argument_list|(
name|getEndpointInfo
argument_list|(
literal|"sna"
argument_list|,
literal|"foo"
argument_list|,
literal|"http://localhost:9100"
argument_list|)
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|engine
operator|=
operator|(
name|JettyHTTPServerEngine
operator|)
name|jd5
operator|.
name|getEngine
argument_list|()
expr_stmt|;
name|String
name|r
init|=
literal|"expected fallback thread parameters configured for port 0"
decl_stmt|;
name|assertNotNull
argument_list|(
name|r
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r
argument_list|,
literal|21
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMinThreads
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r
argument_list|,
literal|389
argument_list|,
name|engine
operator|.
name|getThreadingParameters
argument_list|()
operator|.
name|getMaxThreads
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|EndpointInfo
name|getEndpointInfo
parameter_list|(
name|String
name|serviceNS
parameter_list|,
name|String
name|endpointLocal
parameter_list|,
name|String
name|address
parameter_list|)
block|{
name|ServiceInfo
name|serviceInfo2
init|=
operator|new
name|ServiceInfo
argument_list|()
decl_stmt|;
name|serviceInfo2
operator|.
name|setName
argument_list|(
operator|new
name|QName
argument_list|(
name|serviceNS
argument_list|,
literal|"Service"
argument_list|)
argument_list|)
expr_stmt|;
name|EndpointInfo
name|info2
init|=
operator|new
name|EndpointInfo
argument_list|(
name|serviceInfo2
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|info2
operator|.
name|setName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"urn:test:ns"
argument_list|,
name|endpointLocal
argument_list|)
argument_list|)
expr_stmt|;
name|info2
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
return|return
name|info2
return|;
block|}
block|}
end_class

end_unit

