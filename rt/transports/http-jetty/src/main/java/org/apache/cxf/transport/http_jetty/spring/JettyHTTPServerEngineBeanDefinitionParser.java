begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|GeneralSecurityException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|BusWiringBeanFactoryPostProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|jsse
operator|.
name|spring
operator|.
name|TLSServerParametersConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|security
operator|.
name|TLSServerParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|spring
operator|.
name|AbstractBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPServerEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPServerEngineFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|ThreadingParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http_jetty
operator|.
name|configuration
operator|.
name|TLSServerParametersIdentifiedType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http_jetty
operator|.
name|configuration
operator|.
name|ThreadingParametersIdentifiedType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http_jetty
operator|.
name|configuration
operator|.
name|ThreadingParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|BeansException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|InitializingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|ConstructorArgumentValues
operator|.
name|ValueHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|BeanDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContextAware
import|;
end_import

begin_class
specifier|public
class|class
name|JettyHTTPServerEngineBeanDefinitionParser
extends|extends
name|AbstractBeanDefinitionParser
block|{
specifier|public
name|void
name|doParse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|ctx
parameter_list|,
name|BeanDefinitionBuilder
name|bean
parameter_list|)
block|{
name|String
name|portStr
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"port"
argument_list|)
decl_stmt|;
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"port"
argument_list|,
name|portStr
argument_list|)
expr_stmt|;
name|String
name|hostStr
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"host"
argument_list|)
decl_stmt|;
if|if
condition|(
name|hostStr
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|hostStr
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"host"
argument_list|,
name|hostStr
argument_list|)
expr_stmt|;
block|}
name|String
name|continuationsStr
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"continuationsEnabled"
argument_list|)
decl_stmt|;
if|if
condition|(
name|continuationsStr
operator|!=
literal|null
operator|&&
name|continuationsStr
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"continuationsEnabled"
argument_list|,
name|continuationsStr
argument_list|)
expr_stmt|;
block|}
name|String
name|maxIdleTimeStr
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"maxIdleTime"
argument_list|)
decl_stmt|;
if|if
condition|(
name|maxIdleTimeStr
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|maxIdleTimeStr
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"maxIdleTime"
argument_list|,
name|maxIdleTimeStr
argument_list|)
expr_stmt|;
block|}
name|ValueHolder
name|busValue
init|=
name|ctx
operator|.
name|getContainingBeanDefinition
argument_list|()
operator|.
name|getConstructorArgumentValues
argument_list|()
operator|.
name|getArgumentValue
argument_list|(
literal|0
argument_list|,
name|Bus
operator|.
name|class
argument_list|)
decl_stmt|;
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"bus"
argument_list|,
name|busValue
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|Element
name|elem
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|element
argument_list|)
decl_stmt|;
while|while
condition|(
name|elem
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
name|elem
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"tlsServerParameters"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mapElementToJaxbPropertyFactory
argument_list|(
name|elem
argument_list|,
name|bean
argument_list|,
literal|"tlsServerParameters"
argument_list|,
name|TLSServerParametersType
operator|.
name|class
argument_list|,
name|JettyHTTPServerEngineBeanDefinitionParser
operator|.
name|class
argument_list|,
literal|"createTLSServerParametersConfig"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"threadingParameters"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mapElementToJaxbPropertyFactory
argument_list|(
name|elem
argument_list|,
name|bean
argument_list|,
literal|"threadingParameters"
argument_list|,
name|ThreadingParametersType
operator|.
name|class
argument_list|,
name|JettyHTTPServerEngineBeanDefinitionParser
operator|.
name|class
argument_list|,
literal|"createThreadingParameters"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"tlsServerParametersRef"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mapElementToJaxbPropertyFactory
argument_list|(
name|elem
argument_list|,
name|bean
argument_list|,
literal|"tlsServerParametersRef"
argument_list|,
name|TLSServerParametersIdentifiedType
operator|.
name|class
argument_list|,
name|JettyHTTPServerEngineBeanDefinitionParser
operator|.
name|class
argument_list|,
literal|"createTLSServerParametersConfigRef"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"threadingParametersRef"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|mapElementToJaxbPropertyFactory
argument_list|(
name|elem
argument_list|,
name|bean
argument_list|,
literal|"threadingParametersRef"
argument_list|,
name|ThreadingParametersIdentifiedType
operator|.
name|class
argument_list|,
name|JettyHTTPServerEngineBeanDefinitionParser
operator|.
name|class
argument_list|,
literal|"createThreadingParametersRef"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"connector"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
comment|// only deal with the one connector here
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
name|ctx
operator|.
name|getDelegate
argument_list|()
operator|.
name|parseListElement
argument_list|(
name|elem
argument_list|,
name|bean
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"connector"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"handlers"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|?
argument_list|>
name|handlers
init|=
name|ctx
operator|.
name|getDelegate
argument_list|()
operator|.
name|parseListElement
argument_list|(
name|elem
argument_list|,
name|bean
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|addPropertyValue
argument_list|(
literal|"handlers"
argument_list|,
name|handlers
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"sessionSupport"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
operator|||
literal|"reuseAddress"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|String
name|text
init|=
name|elem
operator|.
name|getTextContent
argument_list|()
decl_stmt|;
name|bean
operator|.
name|addPropertyValue
argument_list|(
name|name
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
name|elem
operator|=
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
operator|.
name|getNextElement
argument_list|(
name|elem
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not process configuration."
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|bean
operator|.
name|setLazyInit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ThreadingParameters
name|toThreadingParameters
parameter_list|(
name|ThreadingParametersType
name|paramtype
parameter_list|)
block|{
name|ThreadingParameters
name|params
init|=
operator|new
name|ThreadingParameters
argument_list|()
decl_stmt|;
if|if
condition|(
name|paramtype
operator|.
name|getMaxThreads
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|setMaxThreads
argument_list|(
name|paramtype
operator|.
name|getMaxThreads
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|paramtype
operator|.
name|getMinThreads
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|setMinThreads
argument_list|(
name|paramtype
operator|.
name|getMinThreads
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
comment|/*      * We do not require an id from the configuration.      *       * (non-Javadoc)      * @see org.springframework.beans.factory.xml.AbstractBeanDefinitionParser#shouldGenerateId()      */
annotation|@
name|Override
specifier|protected
name|boolean
name|shouldGenerateId
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|getBeanClass
parameter_list|(
name|Element
name|arg0
parameter_list|)
block|{
return|return
name|SpringJettyHTTPServerEngine
operator|.
name|class
return|;
block|}
annotation|@
name|NoJSR250Annotations
specifier|public
specifier|static
class|class
name|SpringJettyHTTPServerEngine
extends|extends
name|JettyHTTPServerEngine
implements|implements
name|ApplicationContextAware
implements|,
name|InitializingBean
block|{
name|String
name|threadingRef
decl_stmt|;
name|String
name|tlsRef
decl_stmt|;
name|Bus
name|bus
decl_stmt|;
name|JettyHTTPServerEngineFactory
name|factory
decl_stmt|;
specifier|public
name|SpringJettyHTTPServerEngine
parameter_list|(
name|JettyHTTPServerEngineFactory
name|fac
parameter_list|,
name|Bus
name|b
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|super
argument_list|(
name|fac
operator|.
name|getMBeanContainer
argument_list|()
argument_list|,
name|host
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|bus
operator|=
name|b
expr_stmt|;
name|factory
operator|=
name|fac
expr_stmt|;
block|}
specifier|public
name|SpringJettyHTTPServerEngine
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setBus
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|bus
operator|=
name|b
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|bus
operator|&&
literal|null
operator|==
name|factory
condition|)
block|{
name|factory
operator|=
name|bus
operator|.
name|getExtension
argument_list|(
name|JettyHTTPServerEngineFactory
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setApplicationContext
parameter_list|(
name|ApplicationContext
name|ctx
parameter_list|)
throws|throws
name|BeansException
block|{
if|if
condition|(
name|bus
operator|==
literal|null
condition|)
block|{
name|bus
operator|=
name|BusWiringBeanFactoryPostProcessor
operator|.
name|addDefaultBus
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setThreadingParametersRef
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|threadingRef
operator|=
name|s
expr_stmt|;
block|}
specifier|public
name|void
name|setTlsServerParametersRef
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|tlsRef
operator|=
name|s
expr_stmt|;
block|}
annotation|@
name|PostConstruct
specifier|public
name|void
name|finalizeConfig
parameter_list|()
throws|throws
name|GeneralSecurityException
throws|,
name|IOException
block|{
if|if
condition|(
name|tlsRef
operator|!=
literal|null
operator|||
name|threadingRef
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|threadingRef
operator|!=
literal|null
condition|)
block|{
name|setThreadingParameters
argument_list|(
name|factory
operator|.
name|getThreadingParametersMap
argument_list|()
operator|.
name|get
argument_list|(
name|threadingRef
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|tlsRef
operator|!=
literal|null
condition|)
block|{
name|setTlsServerParameters
argument_list|(
name|factory
operator|.
name|getTlsServerParametersMap
argument_list|()
operator|.
name|get
argument_list|(
name|tlsRef
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|super
operator|.
name|finalizeConfig
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|afterPropertiesSet
parameter_list|()
throws|throws
name|Exception
block|{
name|finalizeConfig
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|TLSServerParametersConfig
name|createTLSServerParametersConfig
parameter_list|(
name|String
name|s
parameter_list|,
name|JAXBContext
name|context
parameter_list|)
throws|throws
name|GeneralSecurityException
throws|,
name|IOException
block|{
name|TLSServerParametersType
name|parametersType
init|=
name|unmarshalFactoryString
argument_list|(
name|s
argument_list|,
name|context
argument_list|,
name|TLSServerParametersType
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
operator|new
name|TLSServerParametersConfig
argument_list|(
name|parametersType
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|createTLSServerParametersConfigRef
parameter_list|(
name|String
name|s
parameter_list|,
name|JAXBContext
name|context
parameter_list|)
throws|throws
name|GeneralSecurityException
throws|,
name|IOException
block|{
name|TLSServerParametersIdentifiedType
name|parameterTypeRef
init|=
name|unmarshalFactoryString
argument_list|(
name|s
argument_list|,
name|context
argument_list|,
name|TLSServerParametersIdentifiedType
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|parameterTypeRef
operator|.
name|getId
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|ThreadingParameters
name|createThreadingParameters
parameter_list|(
name|String
name|s
parameter_list|,
name|JAXBContext
name|context
parameter_list|)
block|{
name|ThreadingParametersType
name|parametersType
init|=
name|unmarshalFactoryString
argument_list|(
name|s
argument_list|,
name|context
argument_list|,
name|ThreadingParametersType
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|toThreadingParameters
argument_list|(
name|parametersType
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|createThreadingParametersRef
parameter_list|(
name|String
name|s
parameter_list|,
name|JAXBContext
name|context
parameter_list|)
block|{
name|ThreadingParametersIdentifiedType
name|parametersType
init|=
name|unmarshalFactoryString
argument_list|(
name|s
argument_list|,
name|context
argument_list|,
name|ThreadingParametersIdentifiedType
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|parametersType
operator|.
name|getId
argument_list|()
return|;
block|}
block|}
end_class

end_unit

