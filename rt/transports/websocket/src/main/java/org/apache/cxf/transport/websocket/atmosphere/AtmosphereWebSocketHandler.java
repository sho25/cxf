begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|atmosphere
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|DispatcherType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|InvalidPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|WebSocketConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|WebSocketDestinationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|WebSocketServletHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|WebSocketVirtualServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|websocket
operator|.
name|WebSocketVirtualServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|cpr
operator|.
name|AtmosphereConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|cpr
operator|.
name|AtmosphereRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|websocket
operator|.
name|WebSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|websocket
operator|.
name|WebSocketProcessor
operator|.
name|WebSocketException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|websocket
operator|.
name|WebSocketProtocol
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|AtmosphereWebSocketHandler
implements|implements
name|WebSocketProtocol
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AtmosphereWebSocketHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|AtmosphereWebSocketServletDestination
name|destination
decl_stmt|;
comment|//REVISIT make these keys configurable
specifier|private
name|String
name|requestIdKey
init|=
name|WebSocketConstants
operator|.
name|DEFAULT_REQUEST_ID_KEY
decl_stmt|;
specifier|private
name|String
name|responseIdKey
init|=
name|WebSocketConstants
operator|.
name|DEFAULT_RESPONSE_ID_KEY
decl_stmt|;
specifier|public
name|AtmosphereWebSocketServletDestination
name|getDestination
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
specifier|public
name|void
name|setDestination
parameter_list|(
name|AtmosphereWebSocketServletDestination
name|destination
parameter_list|)
block|{
name|this
operator|.
name|destination
operator|=
name|destination
expr_stmt|;
block|}
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|AtmosphereConfig
name|config
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"configure(AtmosphereConfig)"
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|AtmosphereRequest
argument_list|>
name|onMessage
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|,
name|String
name|data
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"onMessage(WebSocket, String)"
argument_list|)
expr_stmt|;
comment|//TODO may want to use string directly instead of converting it to byte[]
name|byte
index|[]
name|bdata
init|=
literal|null
decl_stmt|;
try|try
block|{
name|bdata
operator|=
name|data
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
comment|// will not happen
block|}
return|return
name|invokeService
argument_list|(
name|webSocket
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bdata
argument_list|,
literal|0
argument_list|,
name|bdata
operator|.
name|length
argument_list|)
argument_list|)
return|;
block|}
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|AtmosphereRequest
argument_list|>
name|onMessage
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|,
name|byte
index|[]
name|data
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
block|{
specifier|final
name|byte
index|[]
name|safedata
init|=
operator|new
name|byte
index|[
name|length
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|data
argument_list|,
name|offset
argument_list|,
name|safedata
argument_list|,
literal|0
argument_list|,
name|length
argument_list|)
expr_stmt|;
return|return
name|invokeService
argument_list|(
name|webSocket
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|safedata
argument_list|,
literal|0
argument_list|,
name|safedata
operator|.
name|length
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|List
argument_list|<
name|AtmosphereRequest
argument_list|>
name|invokeService
parameter_list|(
specifier|final
name|WebSocket
name|webSocket
parameter_list|,
specifier|final
name|InputStream
name|stream
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"invokeService(WebSocket, InputStream)"
argument_list|)
expr_stmt|;
comment|// invoke the service directly as onMessage is synchronously blocked (in jetty)
comment|// make sure the byte array passed to this method is immutable, as the websocket framework
comment|// may corrupt the byte array after this method is returned (i.e., before the data is returned in
comment|// the executor's thread.
name|destination
operator|.
name|getExecutor
argument_list|()
operator|.
name|execute
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|HttpServletRequest
name|request
init|=
literal|null
decl_stmt|;
name|HttpServletResponse
name|response
init|=
literal|null
decl_stmt|;
try|try
block|{
name|WebSocketServletHolder
name|webSocketHolder
init|=
operator|new
name|AtmosphereWebSocketServletHolder
argument_list|(
name|webSocket
argument_list|)
decl_stmt|;
name|response
operator|=
name|createServletResponse
argument_list|(
name|webSocketHolder
argument_list|)
expr_stmt|;
name|request
operator|=
name|createServletRequest
argument_list|(
name|webSocketHolder
argument_list|,
name|stream
argument_list|)
expr_stmt|;
if|if
condition|(
name|destination
operator|!=
literal|null
condition|)
block|{
name|String
name|reqid
init|=
name|request
operator|.
name|getHeader
argument_list|(
name|requestIdKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|reqid
operator|!=
literal|null
condition|)
block|{
name|response
operator|.
name|setHeader
argument_list|(
name|responseIdKey
argument_list|,
name|reqid
argument_list|)
expr_stmt|;
block|}
operator|(
operator|(
name|WebSocketDestinationService
operator|)
name|destination
operator|)
operator|.
name|invokeInternal
argument_list|(
literal|null
argument_list|,
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getServletContext
argument_list|()
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InvalidPathException
name|ex
parameter_list|)
block|{
name|reportErrorStatus
argument_list|(
name|response
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"Failed to invoke service"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
comment|// may want to move this error reporting code to WebSocketServletHolder
specifier|protected
name|void
name|reportErrorStatus
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|,
name|int
name|status
parameter_list|)
block|{
if|if
condition|(
name|response
operator|!=
literal|null
condition|)
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
try|try
block|{
name|response
operator|.
name|getWriter
argument_list|()
operator|.
name|write
argument_list|(
literal|"\r\n"
argument_list|)
expr_stmt|;
name|response
operator|.
name|getWriter
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|response
operator|.
name|flushBuffer
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|void
name|onOpen
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"onOpen(WebSocket)"
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|void
name|onClose
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"onClose(WebSocket)"
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|void
name|onError
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|,
name|WebSocketException
name|t
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"onError(WebSocket, WebSocketException)"
argument_list|)
expr_stmt|;
block|}
comment|//    protected WebSocketVirtualServletRequest createServletRequest(WebSocketServletHolder webSocketHolder,
comment|//                                                                  byte[] data, int offset, int length)
comment|//        throws IOException {
comment|//        return new WebSocketVirtualServletRequest(webSocketHolder,
comment|//                                                  new ByteArrayInputStream(data, offset, length));
comment|//    }
specifier|protected
name|WebSocketVirtualServletRequest
name|createServletRequest
parameter_list|(
name|WebSocketServletHolder
name|webSocketHolder
parameter_list|,
name|InputStream
name|stream
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|WebSocketVirtualServletRequest
argument_list|(
name|webSocketHolder
argument_list|,
name|stream
argument_list|)
return|;
block|}
specifier|protected
name|WebSocketVirtualServletResponse
name|createServletResponse
parameter_list|(
name|WebSocketServletHolder
name|webSocketHolder
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|WebSocketVirtualServletResponse
argument_list|(
name|webSocketHolder
argument_list|)
return|;
block|}
specifier|protected
specifier|static
class|class
name|AtmosphereWebSocketServletHolder
implements|implements
name|WebSocketServletHolder
block|{
specifier|private
name|WebSocket
name|webSocket
decl_stmt|;
specifier|public
name|AtmosphereWebSocketServletHolder
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|)
block|{
name|this
operator|.
name|webSocket
operator|=
name|webSocket
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAuthType
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getAuthType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getContextPath
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocalAddr
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getLocalAddr
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getLocalName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getLocalPort
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getLocalPort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Locale
name|getLocale
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getLocale
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Enumeration
argument_list|<
name|Locale
argument_list|>
name|getLocales
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getLocales
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getProtocol
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getProtocol
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteAddr
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getRemoteAddr
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteHost
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getRemoteHost
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRemotePort
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getRemotePort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRequestURI
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestURI
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|StringBuffer
name|getRequestURL
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestURL
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|DispatcherType
name|getDispatcherType
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getDispatcherType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSecure
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|isSecure
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPathInfo
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getServletPath
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPathTranslated
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getPathTranslated
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getScheme
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getServerName
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getServerName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getServletPath
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getServletPath
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getServerPort
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getServerPort
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ServletContext
name|getServletContext
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getServletContext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Principal
name|getUserPrincipal
parameter_list|()
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getUserPrincipal
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|webSocket
operator|.
name|resource
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
name|webSocket
operator|.
name|write
argument_list|(
name|data
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

