begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|BindingConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|Soap12
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapBindingConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
operator|.
name|SAAJInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
operator|.
name|SAAJOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|security
operator|.
name|AuthorizationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|NullConduitSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Interceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
operator|.
name|HelloService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
operator|.
name|HelloServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
specifier|public
class|class
name|SpringBeansTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testServers
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassPathXmlApplicationContext
name|ctx
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"/org/apache/cxf/frontend/spring/servers.xml"
block|}
argument_list|)
decl_stmt|;
name|ServerFactoryBean
name|bean
init|=
operator|(
name|ServerFactoryBean
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"simple"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bean
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|bean
operator|.
name|getServiceBean
argument_list|()
operator|instanceof
name|HelloServiceImpl
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"can't get the right serviceBean"
argument_list|)
expr_stmt|;
block|}
name|bean
operator|=
operator|(
name|ServerFactoryBean
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"inlineImplementor"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|bean
operator|.
name|getServiceBean
argument_list|()
operator|instanceof
name|HelloServiceImpl
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"can't get the right serviceBean"
argument_list|)
expr_stmt|;
block|}
name|bean
operator|=
operator|(
name|ServerFactoryBean
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"inlineSoapBinding"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bean
argument_list|)
expr_stmt|;
name|BindingConfiguration
name|bc
init|=
name|bean
operator|.
name|getBindingConfig
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|bc
operator|instanceof
name|SoapBindingConfiguration
argument_list|)
expr_stmt|;
name|SoapBindingConfiguration
name|sbc
init|=
operator|(
name|SoapBindingConfiguration
operator|)
name|bc
decl_stmt|;
name|assertTrue
argument_list|(
name|sbc
operator|.
name|getVersion
argument_list|()
operator|instanceof
name|Soap12
argument_list|)
expr_stmt|;
name|bean
operator|=
operator|(
name|ServerFactoryBean
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"simpleWithBindingId"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"get the wrong BindingId"
argument_list|,
name|bean
operator|.
name|getBindingId
argument_list|()
argument_list|,
literal|"http://cxf.apache.org/bindings/xformat"
argument_list|)
expr_stmt|;
name|bean
operator|=
operator|(
name|ServerFactoryBean
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"simpleWithWSDL"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bean
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bean
operator|.
name|getWsdlLocation
argument_list|()
argument_list|,
literal|"org/apache/cxf/frontend/spring/simple.wsdl"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClients
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassPathXmlApplicationContext
name|ctx
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"/org/apache/cxf/frontend/spring/clients.xml"
block|}
argument_list|)
decl_stmt|;
name|Object
name|bean
init|=
name|ctx
operator|.
name|getBean
argument_list|(
literal|"client1.proxyFactory"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bean
argument_list|)
expr_stmt|;
name|ClientProxyFactoryBean
name|cpfbean
init|=
operator|(
name|ClientProxyFactoryBean
operator|)
name|bean
decl_stmt|;
name|BindingConfiguration
name|bc
init|=
name|cpfbean
operator|.
name|getBindingConfig
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|bc
operator|instanceof
name|SoapBindingConfiguration
argument_list|)
expr_stmt|;
name|SoapBindingConfiguration
name|sbc
init|=
operator|(
name|SoapBindingConfiguration
operator|)
name|bc
decl_stmt|;
name|assertTrue
argument_list|(
name|sbc
operator|.
name|getVersion
argument_list|()
operator|instanceof
name|Soap12
argument_list|)
expr_stmt|;
name|HelloService
name|greeter
init|=
operator|(
name|HelloService
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"client1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|greeter
argument_list|)
expr_stmt|;
name|Client
name|client
init|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|greeter
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"expected ConduitSelector"
argument_list|,
name|client
operator|.
name|getConduitSelector
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"unexpected ConduitSelector"
argument_list|,
name|client
operator|.
name|getConduitSelector
argument_list|()
operator|instanceof
name|NullConduitSelector
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|>
name|inInterceptors
init|=
name|client
operator|.
name|getInInterceptors
argument_list|()
decl_stmt|;
name|boolean
name|saaj
init|=
literal|false
decl_stmt|;
name|boolean
name|logging
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Interceptor
argument_list|<
name|?
argument_list|>
name|i
range|:
name|inInterceptors
control|)
block|{
if|if
condition|(
name|i
operator|instanceof
name|SAAJInInterceptor
condition|)
block|{
name|saaj
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|instanceof
name|LoggingInInterceptor
condition|)
block|{
name|logging
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|saaj
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|logging
argument_list|)
expr_stmt|;
name|saaj
operator|=
literal|false
expr_stmt|;
name|logging
operator|=
literal|false
expr_stmt|;
for|for
control|(
name|Interceptor
argument_list|<
name|?
argument_list|>
name|i
range|:
name|client
operator|.
name|getOutInterceptors
argument_list|()
control|)
block|{
if|if
condition|(
name|i
operator|instanceof
name|SAAJOutInterceptor
condition|)
block|{
name|saaj
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|instanceof
name|LoggingOutInterceptor
condition|)
block|{
name|logging
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|saaj
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|logging
argument_list|)
expr_stmt|;
name|ClientProxyFactoryBean
name|clientProxyFactoryBean
init|=
operator|(
name|ClientProxyFactoryBean
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"client2.proxyFactory"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|clientProxyFactoryBean
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"get the wrong bindingId"
argument_list|,
name|clientProxyFactoryBean
operator|.
name|getBindingId
argument_list|()
argument_list|,
literal|"http://cxf.apache.org/bindings/xformat"
argument_list|)
expr_stmt|;
name|greeter
operator|=
operator|(
name|HelloService
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"client2"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|greeter
argument_list|)
expr_stmt|;
name|greeter
operator|=
operator|(
name|HelloService
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"client3"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|greeter
argument_list|)
expr_stmt|;
name|client
operator|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|greeter
argument_list|)
expr_stmt|;
name|EndpointInfo
name|epi
init|=
name|client
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getEndpointInfo
argument_list|()
decl_stmt|;
name|AuthorizationPolicy
name|ap
init|=
name|epi
operator|.
name|getExtensor
argument_list|(
name|AuthorizationPolicy
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The AuthorizationPolicy instance should not be null"
argument_list|,
name|ap
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Get the wrong username"
argument_list|,
name|ap
operator|.
name|getUserName
argument_list|()
argument_list|,
literal|"testUser"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Get the wrong password"
argument_list|,
name|ap
operator|.
name|getPassword
argument_list|()
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

