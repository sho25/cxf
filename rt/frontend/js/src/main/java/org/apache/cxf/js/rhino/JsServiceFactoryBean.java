begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|js
operator|.
name|rhino
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLDecoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_class
specifier|public
class|class
name|JsServiceFactoryBean
block|{
specifier|private
name|ProviderFactory
name|providerFactory
decl_stmt|;
specifier|private
name|String
name|address
decl_stmt|;
specifier|private
name|boolean
name|isBaseAddr
decl_stmt|;
specifier|private
name|String
name|js
decl_stmt|;
specifier|private
name|Bus
name|bus
decl_stmt|;
specifier|public
name|JsServiceFactoryBean
parameter_list|()
block|{
name|providerFactory
operator|=
operator|new
name|ProviderFactory
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
if|if
condition|(
name|bus
operator|==
literal|null
condition|)
block|{
name|bus
operator|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
expr_stmt|;
block|}
return|return
name|bus
return|;
block|}
specifier|public
name|void
name|setBus
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
name|this
operator|.
name|bus
operator|=
name|bus
expr_stmt|;
block|}
specifier|public
name|void
name|setAddress
parameter_list|(
name|String
name|addr
parameter_list|)
block|{
name|address
operator|=
name|addr
expr_stmt|;
block|}
specifier|public
name|String
name|getAddress
parameter_list|()
block|{
return|return
name|address
return|;
block|}
specifier|public
name|void
name|setIsBaseAddr
parameter_list|(
name|boolean
name|isBase
parameter_list|)
block|{
name|isBaseAddr
operator|=
name|isBase
expr_stmt|;
block|}
specifier|public
name|boolean
name|getIsBaseAddr
parameter_list|()
block|{
return|return
name|isBaseAddr
return|;
block|}
specifier|public
name|void
name|setJs
parameter_list|(
name|String
name|file
parameter_list|)
block|{
name|js
operator|=
name|file
expr_stmt|;
block|}
specifier|public
name|String
name|getJs
parameter_list|()
block|{
return|return
name|js
return|;
block|}
specifier|public
name|void
name|create
parameter_list|()
throws|throws
name|Exception
block|{
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|jsFileString
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|js
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|jsFileString
operator|=
name|URLDecoder
operator|.
name|decode
argument_list|(
name|jsFileString
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|jsFileString
argument_list|)
decl_stmt|;
name|providerFactory
operator|.
name|createAndPublish
argument_list|(
name|file
argument_list|,
name|address
argument_list|,
name|isBaseAddr
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

