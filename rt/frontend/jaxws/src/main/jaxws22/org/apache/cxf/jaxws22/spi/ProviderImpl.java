begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws22
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|spi
operator|.
name|Invoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|EndpointUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|context
operator|.
name|WebServiceContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws22
operator|.
name|EndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws22
operator|.
name|JAXWS22Invoker
import|;
end_import

begin_class
specifier|public
class|class
name|ProviderImpl
extends|extends
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|spi
operator|.
name|ProviderImpl
block|{
annotation|@
name|Override
specifier|protected
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|EndpointImpl
name|createEndpointImpl
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|String
name|bindingId
parameter_list|,
name|Object
name|implementor
parameter_list|,
name|WebServiceFeature
modifier|...
name|features
parameter_list|)
block|{
try|try
block|{
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
literal|"javax.xml.ws.spi.http.HttpContext"
argument_list|,
name|ProviderImpl
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
comment|//couldn't find the 2.2 stuff, assume 2.1 behavior
return|return
name|super
operator|.
name|createEndpointImpl
argument_list|(
name|bus
argument_list|,
name|bindingId
argument_list|,
name|implementor
argument_list|,
name|features
argument_list|)
return|;
block|}
return|return
operator|new
name|EndpointImpl
argument_list|(
name|bus
argument_list|,
name|implementor
argument_list|,
name|bindingId
argument_list|,
name|features
argument_list|)
return|;
block|}
comment|//new in 2.2, but introduces a new class not found in 2.1
specifier|public
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|bindingId
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|implementorClass
parameter_list|,
name|Invoker
name|invoker
parameter_list|,
name|WebServiceFeature
modifier|...
name|features
parameter_list|)
block|{
if|if
condition|(
name|EndpointUtils
operator|.
name|isValidImplementor
argument_list|(
name|implementorClass
argument_list|)
condition|)
block|{
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
decl_stmt|;
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
if|if
condition|(
name|features
operator|!=
literal|null
condition|)
block|{
name|factory
operator|.
name|getJaxWsServiceFactory
argument_list|()
operator|.
name|setWsFeatures
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|features
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|factory
operator|.
name|setInvoker
argument_list|(
operator|new
name|JAXWS22Invoker
argument_list|(
name|invoker
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|invoker
operator|.
name|inject
argument_list|(
operator|new
name|WebServiceContextImpl
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"ENDPOINT_CREATION_FAILED_MSG"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|EndpointImpl
name|ep
init|=
operator|new
name|EndpointImpl
argument_list|(
name|bus
argument_list|,
literal|null
argument_list|,
name|factory
argument_list|)
decl_stmt|;
name|ep
operator|.
name|setImplementorClass
argument_list|(
name|implementorClass
argument_list|)
expr_stmt|;
return|return
name|ep
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"INVALID_IMPLEMENTOR_EXC"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

