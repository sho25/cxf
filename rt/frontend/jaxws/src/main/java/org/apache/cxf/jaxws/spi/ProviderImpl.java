begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|EndpointReference
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|spi
operator|.
name|ServiceDelegate
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|EndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|EndpointUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|ServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|JAXWSAConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLManager
import|;
end_import

begin_class
specifier|public
class|class
name|ProviderImpl
extends|extends
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|spi
operator|.
name|Provider
block|{
specifier|public
specifier|static
specifier|final
name|String
name|JAXWS_PROVIDER
init|=
name|ProviderImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|ProviderImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|JAXBContext
name|jaxbContext
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ServiceDelegate
name|createServiceDelegate
parameter_list|(
name|URL
name|url
parameter_list|,
name|QName
name|qname
parameter_list|,
name|Class
name|cls
parameter_list|)
block|{
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
decl_stmt|;
return|return
operator|new
name|ServiceImpl
argument_list|(
name|bus
argument_list|,
name|url
argument_list|,
name|qname
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|bindingId
parameter_list|,
name|Object
name|implementor
parameter_list|)
block|{
name|Endpoint
name|ep
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|EndpointUtils
operator|.
name|isValidImplementor
argument_list|(
name|implementor
argument_list|)
condition|)
block|{
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
decl_stmt|;
name|ep
operator|=
operator|new
name|EndpointImpl
argument_list|(
name|bus
argument_list|,
name|implementor
argument_list|,
name|bindingId
argument_list|)
expr_stmt|;
return|return
name|ep
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"INVALID_IMPLEMENTOR_EXC"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Endpoint
name|createAndPublishEndpoint
parameter_list|(
name|String
name|url
parameter_list|,
name|Object
name|implementor
parameter_list|)
block|{
name|Endpoint
name|ep
init|=
name|createEndpoint
argument_list|(
literal|null
argument_list|,
name|implementor
argument_list|)
decl_stmt|;
name|ep
operator|.
name|publish
argument_list|(
name|url
argument_list|)
expr_stmt|;
return|return
name|ep
return|;
block|}
specifier|public
name|W3CEndpointReference
name|createW3CEndpointReference
parameter_list|(
name|String
name|address
parameter_list|,
name|QName
name|serviceName
parameter_list|,
name|QName
name|portName
parameter_list|,
name|List
argument_list|<
name|Element
argument_list|>
name|metadata
parameter_list|,
name|String
name|wsdlDocumentLocation
parameter_list|,
name|List
argument_list|<
name|Element
argument_list|>
name|referenceParameters
parameter_list|)
block|{
name|QName
name|portType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|serviceName
operator|!=
literal|null
operator|&&
name|portName
operator|!=
literal|null
operator|&&
name|wsdlDocumentLocation
operator|!=
literal|null
condition|)
block|{
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
decl_stmt|;
name|WSDLManager
name|wsdlManager
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|WSDLManager
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|Definition
name|def
init|=
name|wsdlManager
operator|.
name|getDefinition
argument_list|(
name|wsdlDocumentLocation
argument_list|)
decl_stmt|;
name|portType
operator|=
name|def
operator|.
name|getService
argument_list|(
name|serviceName
argument_list|)
operator|.
name|getPort
argument_list|(
name|portName
operator|.
name|getLocalPart
argument_list|()
argument_list|)
operator|.
name|getBinding
argument_list|()
operator|.
name|getPortType
argument_list|()
operator|.
name|getQName
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
name|CachedOutputStream
name|cos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|cos
argument_list|)
decl_stmt|;
try|try
block|{
comment|// TODO: when serviceName/portName is null
if|if
condition|(
name|serviceName
operator|==
literal|null
operator|&&
name|portName
operator|==
literal|null
operator|&&
name|address
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Address in an EPR cannot be null, "
operator|+
literal|" when serviceName or portName is null"
argument_list|)
throw|;
block|}
name|writer
operator|.
name|setPrefix
argument_list|(
name|JAXWSAConstants
operator|.
name|WSA_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSA
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
name|JAXWSAConstants
operator|.
name|WSA_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|WSA_ERF_NAME
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSA
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeNamespace
argument_list|(
name|JAXWSAConstants
operator|.
name|WSA_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSA
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
name|JAXWSAConstants
operator|.
name|WSA_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|WSA_ADDRESS_NAME
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSA
argument_list|)
expr_stmt|;
name|address
operator|=
name|address
operator|==
literal|null
condition|?
literal|""
else|:
name|address
expr_stmt|;
name|writer
operator|.
name|writeCharacters
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
if|if
condition|(
name|referenceParameters
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|JAXWSAConstants
operator|.
name|WSA_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|WSA_REFERENCEPARAMETERS_NAME
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSA
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|ele
range|:
name|referenceParameters
control|)
block|{
name|StaxUtils
operator|.
name|writeElement
argument_list|(
name|ele
argument_list|,
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|writeStartElement
argument_list|(
name|JAXWSAConstants
operator|.
name|WSA_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|WSA_METADATA_NAME
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSA
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeNamespace
argument_list|(
name|JAXWSAConstants
operator|.
name|WSAW_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSAW
argument_list|)
expr_stmt|;
if|if
condition|(
name|portType
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|JAXWSAConstants
operator|.
name|WSAW_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|WSAW_INTERFACE_NAME
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSAW
argument_list|)
expr_stmt|;
name|String
name|portTypePrefix
init|=
name|portType
operator|.
name|getPrefix
argument_list|()
decl_stmt|;
if|if
condition|(
name|portTypePrefix
operator|==
literal|null
operator|||
name|portTypePrefix
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|portTypePrefix
operator|=
literal|"ns1"
expr_stmt|;
block|}
name|writer
operator|.
name|writeNamespace
argument_list|(
name|portTypePrefix
argument_list|,
name|portType
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeCharacters
argument_list|(
name|portTypePrefix
operator|+
literal|":"
operator|+
name|portType
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
name|String
name|serviceNamePrefix
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|serviceName
operator|!=
literal|null
condition|)
block|{
name|serviceNamePrefix
operator|=
operator|(
name|serviceName
operator|.
name|getPrefix
argument_list|()
operator|==
literal|null
operator|||
name|serviceName
operator|.
name|getPrefix
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|?
literal|"ns2"
else|:
name|serviceName
operator|.
name|getPrefix
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
name|JAXWSAConstants
operator|.
name|WSAW_PREFIX
argument_list|,
name|JAXWSAConstants
operator|.
name|WSAW_SERVICENAME_NAME
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSAW
argument_list|)
expr_stmt|;
if|if
condition|(
name|portName
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|writeAttribute
argument_list|(
name|JAXWSAConstants
operator|.
name|WSAW_ENDPOINT_NAME
argument_list|,
name|portName
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeNamespace
argument_list|(
name|serviceNamePrefix
argument_list|,
name|serviceName
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeCharacters
argument_list|(
name|serviceNamePrefix
operator|+
literal|":"
operator|+
name|serviceName
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|wsdlDocumentLocation
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|WSDLConstants
operator|.
name|WSDL_PREFIX
argument_list|,
name|WSDLConstants
operator|.
name|QNAME_DEFINITIONS
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|WSDLConstants
operator|.
name|NS_WSDL11
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeNamespace
argument_list|(
name|WSDLConstants
operator|.
name|WSDL_PREFIX
argument_list|,
name|WSDLConstants
operator|.
name|NS_WSDL11
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
name|WSDLConstants
operator|.
name|WSDL_PREFIX
argument_list|,
name|WSDLConstants
operator|.
name|QNAME_IMPORT
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|WSDLConstants
operator|.
name|QNAME_IMPORT
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|serviceName
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|writeAttribute
argument_list|(
name|WSDLConstants
operator|.
name|ATTR_NAMESPACE
argument_list|,
name|serviceName
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeAttribute
argument_list|(
name|WSDLConstants
operator|.
name|ATTR_LOCATION
argument_list|,
name|wsdlDocumentLocation
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|metadata
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Element
name|e
range|:
name|metadata
control|)
block|{
name|StaxUtils
operator|.
name|writeElement
argument_list|(
name|e
argument_list|,
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"ERROR_UNMARSHAL_ENDPOINTREFERENCE"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
try|try
block|{
name|Unmarshaller
name|unmarshaller
init|=
name|getJAXBContext
argument_list|()
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
return|return
operator|(
name|W3CEndpointReference
operator|)
name|unmarshaller
operator|.
name|unmarshal
argument_list|(
name|cos
operator|.
name|getInputStream
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"ERROR_UNMARSHAL_ENDPOINTREFERENCE"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"ERROR_UNMARSHAL_ENDPOINTREFERENCE"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getPort
parameter_list|(
name|EndpointReference
name|endpointReference
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|serviceEndpointInterface
parameter_list|,
name|WebServiceFeature
modifier|...
name|features
parameter_list|)
block|{
name|ServiceDelegate
name|sd
init|=
name|createServiceDelegate
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|serviceEndpointInterface
argument_list|)
decl_stmt|;
return|return
name|sd
operator|.
name|getPort
argument_list|(
name|endpointReference
argument_list|,
name|serviceEndpointInterface
argument_list|,
name|features
argument_list|)
return|;
block|}
specifier|public
name|EndpointReference
name|readEndpointReference
parameter_list|(
name|Source
name|eprInfoset
parameter_list|)
block|{
try|try
block|{
name|Unmarshaller
name|unmarshaller
init|=
name|getJAXBContext
argument_list|()
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
return|return
operator|(
name|EndpointReference
operator|)
name|unmarshaller
operator|.
name|unmarshal
argument_list|(
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|eprInfoset
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"ERROR_UNMARSHAL_ENDPOINTREFERENCE"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|JAXBContext
name|getJAXBContext
parameter_list|()
block|{
if|if
condition|(
name|jaxbContext
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|jaxbContext
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|W3CEndpointReference
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"JAXBCONTEXT_CREATION_FAILED"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|jaxbContext
return|;
block|}
block|}
end_class

end_unit

