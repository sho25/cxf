begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensibilityElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionRegistry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|UnknownExtensibilityElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RespectBindingFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
operator|.
name|Mode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|Addressing
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|AddressingFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|MTOMFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
operator|.
name|SAAJInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
operator|.
name|SAAJOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|xml
operator|.
name|XMLBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|EndpointException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|EndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|AbstractFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|AbstractInDatabindingInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Interceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|binding
operator|.
name|DefaultBindingImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|binding
operator|.
name|http
operator|.
name|HTTPBindingImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|binding
operator|.
name|soap
operator|.
name|SOAPBindingImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|logical
operator|.
name|LogicalHandlerFaultInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|logical
operator|.
name|LogicalHandlerFaultOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|logical
operator|.
name|LogicalHandlerInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|logical
operator|.
name|LogicalHandlerOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPHandlerFaultInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPHandlerFaultOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPHandlerInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|HolderInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|HolderOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|MessageModeInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|MessageModeOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|SwAInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|SwAOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|WrapperClassInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|interceptors
operator|.
name|WrapperClassOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|spi
operator|.
name|ProviderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|DescriptionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|W3CDOMStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|JAXWSAConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|Names
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|VersionTransformer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|WSAddressingFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Constants
import|;
end_import

begin_comment
comment|/**  * A JAX-WS specific implementation of the CXF {@link org.apache.cxf.endpoint.Endpoint} interface.  * Extends the interceptor provider functionality of its base class by adding   * interceptors in which to execute the JAX-WS handlers.  * Creates and owns an implementation of {@link Binding} in addition to the  * CXF {@link org.apache.cxf.binding.Binding}.   *  */
end_comment

begin_class
specifier|public
class|class
name|JaxWsEndpointImpl
extends|extends
name|EndpointImpl
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|4718088821386100282L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|JaxWsEndpointImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Binding
name|jaxwsBinding
decl_stmt|;
specifier|private
name|JaxWsImplementorInfo
name|implInfo
decl_stmt|;
specifier|private
name|List
argument_list|<
name|WebServiceFeature
argument_list|>
name|wsFeatures
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AbstractFeature
argument_list|>
name|features
decl_stmt|;
comment|//interceptors added/removed to chains as needed
specifier|private
name|SOAPHandlerInterceptor
name|soapHandlerInterceptor
decl_stmt|;
specifier|private
name|LogicalHandlerInInterceptor
name|logicalInInterceptor
decl_stmt|;
specifier|private
name|LogicalHandlerOutInterceptor
name|logicalOutInterceptor
decl_stmt|;
specifier|private
name|LogicalHandlerFaultOutInterceptor
name|logicalFaultOutInterceptor
decl_stmt|;
specifier|private
name|SOAPHandlerFaultOutInterceptor
name|soapFaultOutInterceptor
decl_stmt|;
specifier|private
name|LogicalHandlerFaultInInterceptor
name|logicalFaultInInterceptor
decl_stmt|;
specifier|private
name|SOAPHandlerFaultInInterceptor
name|soapFaultInInterceptor
decl_stmt|;
specifier|public
name|JaxWsEndpointImpl
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|Service
name|s
parameter_list|,
name|EndpointInfo
name|ei
parameter_list|)
throws|throws
name|EndpointException
block|{
name|this
argument_list|(
name|bus
argument_list|,
name|s
argument_list|,
name|ei
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JaxWsEndpointImpl
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|Service
name|s
parameter_list|,
name|EndpointInfo
name|ei
parameter_list|,
name|List
argument_list|<
name|WebServiceFeature
argument_list|>
name|wf
parameter_list|)
throws|throws
name|EndpointException
block|{
name|this
argument_list|(
name|bus
argument_list|,
name|s
argument_list|,
name|ei
argument_list|,
literal|null
argument_list|,
name|wf
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|AbstractFeature
argument_list|>
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JaxWsEndpointImpl
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|Service
name|s
parameter_list|,
name|EndpointInfo
name|ei
parameter_list|,
name|JaxWsImplementorInfo
name|implementorInfo
parameter_list|,
name|List
argument_list|<
name|WebServiceFeature
argument_list|>
name|wf
parameter_list|,
name|List
argument_list|<
name|AbstractFeature
argument_list|>
name|af
parameter_list|,
name|boolean
name|isFromWsdl
parameter_list|)
throws|throws
name|EndpointException
block|{
name|super
argument_list|(
name|bus
argument_list|,
name|s
argument_list|,
name|ei
argument_list|)
expr_stmt|;
name|this
operator|.
name|implInfo
operator|=
name|implementorInfo
expr_stmt|;
name|this
operator|.
name|wsFeatures
operator|=
name|wf
expr_stmt|;
name|this
operator|.
name|features
operator|=
name|af
expr_stmt|;
if|if
condition|(
name|features
operator|==
literal|null
condition|)
block|{
name|features
operator|=
operator|new
name|ArrayList
argument_list|<
name|AbstractFeature
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|createJaxwsBinding
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|in
init|=
name|super
operator|.
name|getInInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|out
init|=
name|super
operator|.
name|getOutInterceptors
argument_list|()
decl_stmt|;
name|boolean
name|isProvider
init|=
name|implInfo
operator|!=
literal|null
operator|&&
name|implInfo
operator|.
name|isWebServiceProvider
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
init|=
name|implInfo
operator|!=
literal|null
operator|&&
name|isProvider
condition|?
name|implInfo
operator|.
name|getProviderParameterType
argument_list|()
else|:
literal|null
decl_stmt|;
name|Mode
name|mode
init|=
name|implInfo
operator|!=
literal|null
operator|&&
name|isProvider
condition|?
name|implInfo
operator|.
name|getServiceMode
argument_list|()
else|:
literal|null
decl_stmt|;
if|if
condition|(
name|isProvider
condition|)
block|{
name|s
operator|.
name|put
argument_list|(
name|AbstractInDatabindingInterceptor
operator|.
name|NO_VALIDATE_PARTS
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
comment|// Inbound chain
name|logicalInInterceptor
operator|=
operator|new
name|LogicalHandlerInInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isProvider
condition|)
block|{
name|in
operator|.
name|add
argument_list|(
operator|new
name|WrapperClassInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|in
operator|.
name|add
argument_list|(
operator|new
name|HolderInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getBinding
argument_list|()
operator|instanceof
name|SoapBinding
condition|)
block|{
name|soapHandlerInterceptor
operator|=
operator|new
name|SOAPHandlerInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
name|in
operator|.
name|add
argument_list|(
operator|new
name|SwAInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|SwAOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isProvider
operator|&&
name|mode
operator|==
name|Mode
operator|.
name|MESSAGE
condition|)
block|{
name|in
operator|.
name|add
argument_list|(
operator|new
name|SAAJInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|isProvider
operator|&&
name|mode
operator|==
name|Mode
operator|.
name|MESSAGE
condition|)
block|{
name|in
operator|.
name|add
argument_list|(
operator|new
name|MessageModeInInterceptor
argument_list|(
name|clazz
argument_list|,
name|getBinding
argument_list|()
operator|.
name|getBindingInfo
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Outbound chain
name|logicalOutInterceptor
operator|=
operator|new
name|LogicalHandlerOutInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isProvider
condition|)
block|{
name|out
operator|.
name|add
argument_list|(
operator|new
name|WrapperClassOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|add
argument_list|(
operator|new
name|HolderOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getBinding
argument_list|()
operator|instanceof
name|SoapBinding
operator|&&
name|mode
operator|==
name|Mode
operator|.
name|MESSAGE
condition|)
block|{
name|SAAJOutInterceptor
name|saajOut
init|=
operator|new
name|SAAJOutInterceptor
argument_list|()
decl_stmt|;
name|out
operator|.
name|add
argument_list|(
name|saajOut
argument_list|)
expr_stmt|;
name|out
operator|.
name|add
argument_list|(
operator|new
name|MessageModeOutInterceptor
argument_list|(
name|saajOut
argument_list|,
name|getBinding
argument_list|()
operator|.
name|getBindingInfo
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|isProvider
condition|)
block|{
name|out
operator|.
name|add
argument_list|(
operator|new
name|MessageModeOutInterceptor
argument_list|(
name|clazz
argument_list|,
name|getBinding
argument_list|()
operator|.
name|getBindingInfo
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|logicalFaultOutInterceptor
operator|=
operator|new
name|LogicalHandlerFaultOutInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
name|logicalFaultInInterceptor
operator|=
operator|new
name|LogicalHandlerFaultInInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
if|if
condition|(
name|getBinding
argument_list|()
operator|instanceof
name|SoapBinding
condition|)
block|{
name|soapFaultOutInterceptor
operator|=
operator|new
name|SOAPHandlerFaultOutInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
name|soapFaultInInterceptor
operator|=
operator|new
name|SOAPHandlerFaultInInterceptor
argument_list|(
name|jaxwsBinding
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ei
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|isFromWsdl
condition|)
block|{
name|buildWsdlExtensibilities
argument_list|(
name|ei
operator|.
name|getBinding
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|extractWsdlExtensibilities
argument_list|(
name|ei
argument_list|)
expr_stmt|;
block|}
name|resolveFeatures
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|extractWsdlExtensibilities
parameter_list|(
name|EndpointInfo
name|endpoint
parameter_list|)
block|{
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|bindingExtensors
init|=
name|endpoint
operator|.
name|getBinding
argument_list|()
operator|.
name|getExtensors
argument_list|(
name|ExtensibilityElement
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|portExtensors
init|=
name|endpoint
operator|.
name|getExtensors
argument_list|(
name|ExtensibilityElement
operator|.
name|class
argument_list|)
decl_stmt|;
name|checkRespectBindingFeature
argument_list|(
name|bindingExtensors
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasUsingAddressing
argument_list|(
name|bindingExtensors
argument_list|)
operator|||
name|hasUsingAddressing
argument_list|(
name|portExtensors
argument_list|)
condition|)
block|{
name|WSAddressingFeature
name|feature
init|=
operator|new
name|WSAddressingFeature
argument_list|()
decl_stmt|;
if|if
condition|(
name|addressingRequired
argument_list|(
name|bindingExtensors
argument_list|)
operator|||
name|addressingRequired
argument_list|(
name|portExtensors
argument_list|)
condition|)
block|{
name|feature
operator|.
name|setAddressingRequired
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|addAddressingFeature
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
name|extractWsdlEprs
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkRespectBindingFeature
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|bindingExtensors
parameter_list|)
block|{
if|if
condition|(
name|bindingExtensors
operator|!=
literal|null
condition|)
block|{
name|Iterator
argument_list|<
name|ExtensibilityElement
argument_list|>
name|extensionElements
init|=
name|bindingExtensors
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|extensionElements
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ExtensibilityElement
name|ext
init|=
operator|(
name|ExtensibilityElement
operator|)
name|extensionElements
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|ext
operator|instanceof
name|UnknownExtensibilityElement
operator|&&
name|Boolean
operator|.
name|TRUE
operator|.
name|equals
argument_list|(
name|ext
operator|.
name|getRequired
argument_list|()
argument_list|)
condition|)
block|{
for|for
control|(
name|WebServiceFeature
name|feature
range|:
name|this
operator|.
name|wsFeatures
control|)
block|{
if|if
condition|(
name|feature
operator|instanceof
name|RespectBindingFeature
operator|&&
name|feature
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
name|message
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"UNKONWN_REQUIRED_WSDL_BINDING"
argument_list|,
name|LOG
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|severe
argument_list|(
name|message
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|WebServiceException
argument_list|(
name|message
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
block|}
specifier|private
name|void
name|extractWsdlEprs
parameter_list|(
name|EndpointInfo
name|endpoint
parameter_list|)
block|{
comment|//parse the EPR in wsdl
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|portExtensors
init|=
name|endpoint
operator|.
name|getExtensors
argument_list|(
name|ExtensibilityElement
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|portExtensors
operator|!=
literal|null
condition|)
block|{
name|Iterator
argument_list|<
name|ExtensibilityElement
argument_list|>
name|extensionElements
init|=
name|portExtensors
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|QName
name|wsaEpr
init|=
operator|new
name|QName
argument_list|(
name|Names
operator|.
name|WSA_NAMESPACE_NAME
argument_list|,
literal|"EndpointReference"
argument_list|)
decl_stmt|;
while|while
condition|(
name|extensionElements
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ExtensibilityElement
name|ext
init|=
operator|(
name|ExtensibilityElement
operator|)
name|extensionElements
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|ext
operator|instanceof
name|UnknownExtensibilityElement
operator|&&
name|wsaEpr
operator|.
name|equals
argument_list|(
name|ext
operator|.
name|getElementType
argument_list|()
argument_list|)
condition|)
block|{
name|DOMSource
name|domSource
init|=
operator|new
name|DOMSource
argument_list|(
operator|(
operator|(
name|UnknownExtensibilityElement
operator|)
name|ext
operator|)
operator|.
name|getElement
argument_list|()
argument_list|)
decl_stmt|;
name|W3CEndpointReference
name|w3cEPR
init|=
operator|new
name|W3CEndpointReference
argument_list|(
name|domSource
argument_list|)
decl_stmt|;
name|EndpointReferenceType
name|ref
init|=
name|VersionTransformer
operator|.
name|convertToInternal
argument_list|(
name|w3cEPR
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getTarget
argument_list|()
operator|.
name|setMetadata
argument_list|(
name|ref
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|getTarget
argument_list|()
operator|.
name|setReferenceParameters
argument_list|(
name|ref
operator|.
name|getReferenceParameters
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|getTarget
argument_list|()
operator|.
name|getOtherAttributes
argument_list|()
operator|.
name|putAll
argument_list|(
name|ref
operator|.
name|getOtherAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|boolean
name|hasUsingAddressing
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|exts
parameter_list|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|exts
operator|!=
literal|null
condition|)
block|{
name|Iterator
argument_list|<
name|ExtensibilityElement
argument_list|>
name|extensionElements
init|=
name|exts
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|extensionElements
operator|.
name|hasNext
argument_list|()
operator|&&
operator|!
name|found
condition|)
block|{
name|ExtensibilityElement
name|ext
init|=
operator|(
name|ExtensibilityElement
operator|)
name|extensionElements
operator|.
name|next
argument_list|()
decl_stmt|;
name|found
operator|=
name|JAXWSAConstants
operator|.
name|WSAW_USINGADDRESSING_QNAME
operator|.
name|equals
argument_list|(
name|ext
operator|.
name|getElementType
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|found
return|;
block|}
specifier|private
name|boolean
name|addressingRequired
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|exts
parameter_list|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|exts
operator|!=
literal|null
condition|)
block|{
name|Iterator
argument_list|<
name|ExtensibilityElement
argument_list|>
name|extensionElements
init|=
name|exts
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|extensionElements
operator|.
name|hasNext
argument_list|()
operator|&&
operator|!
name|found
condition|)
block|{
name|ExtensibilityElement
name|ext
init|=
operator|(
name|ExtensibilityElement
operator|)
name|extensionElements
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|JAXWSAConstants
operator|.
name|WSAW_USINGADDRESSING_QNAME
operator|.
name|equals
argument_list|(
name|ext
operator|.
name|getElementType
argument_list|()
argument_list|)
operator|&&
name|ext
operator|.
name|getRequired
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|ext
operator|.
name|getRequired
argument_list|()
return|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|void
name|buildWsdlExtensibilities
parameter_list|(
name|BindingInfo
name|bindingInfo
parameter_list|)
block|{
name|Addressing
name|addressing
init|=
name|getAddressing
argument_list|()
decl_stmt|;
if|if
condition|(
name|addressing
operator|!=
literal|null
condition|)
block|{
name|ExtensionRegistry
name|extensionRegistry
init|=
name|getBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|WSDLManager
operator|.
name|class
argument_list|)
operator|.
name|getExtensionRegistry
argument_list|()
decl_stmt|;
try|try
block|{
name|ExtensibilityElement
name|el
init|=
name|extensionRegistry
operator|.
name|createExtension
argument_list|(
name|javax
operator|.
name|wsdl
operator|.
name|Binding
operator|.
name|class
argument_list|,
name|JAXWSAConstants
operator|.
name|WSAW_USINGADDRESSING_QNAME
argument_list|)
decl_stmt|;
name|el
operator|.
name|setRequired
argument_list|(
name|addressing
operator|.
name|required
argument_list|()
argument_list|)
expr_stmt|;
name|bindingInfo
operator|.
name|addExtensor
argument_list|(
name|el
argument_list|)
expr_stmt|;
name|StringBuilder
name|polRefId
init|=
operator|new
name|StringBuilder
argument_list|(
name|bindingInfo
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
decl_stmt|;
name|polRefId
operator|.
name|append
argument_list|(
literal|"_WSAM_Addressing_Policy"
argument_list|)
expr_stmt|;
name|UnknownExtensibilityElement
name|uel
init|=
operator|new
name|UnknownExtensibilityElement
argument_list|()
decl_stmt|;
name|W3CDOMStreamWriter
name|writer
init|=
operator|new
name|W3CDOMStreamWriter
argument_list|()
decl_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"wsp"
argument_list|,
literal|"PolicyReference"
argument_list|,
name|Constants
operator|.
name|URI_POLICY_NS
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeAttribute
argument_list|(
literal|"URI"
argument_list|,
literal|"#"
operator|+
name|polRefId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|Element
name|pr
init|=
name|writer
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|uel
operator|.
name|setElement
argument_list|(
name|pr
argument_list|)
expr_stmt|;
name|uel
operator|.
name|setElementType
argument_list|(
name|DOMUtils
operator|.
name|getElementQName
argument_list|(
name|pr
argument_list|)
argument_list|)
expr_stmt|;
name|bindingInfo
operator|.
name|addExtensor
argument_list|(
name|uel
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|W3CDOMStreamWriter
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"wsp"
argument_list|,
literal|"Policy"
argument_list|,
name|Constants
operator|.
name|URI_POLICY_NS
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeAttribute
argument_list|(
literal|"wsu"
argument_list|,
name|PolicyConstants
operator|.
name|WSU_NAMESPACE_URI
argument_list|,
name|PolicyConstants
operator|.
name|WSU_ID_ATTR_NAME
argument_list|,
name|polRefId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"wsam"
argument_list|,
literal|"Addressing"
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSAM
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|addressing
operator|.
name|required
argument_list|()
condition|)
block|{
name|writer
operator|.
name|writeAttribute
argument_list|(
literal|"wsp"
argument_list|,
name|Constants
operator|.
name|URI_POLICY_NS
argument_list|,
literal|"Optional"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"wsp"
argument_list|,
literal|"Policy"
argument_list|,
name|Constants
operator|.
name|URI_POLICY_NS
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|getAddressingRequirement
argument_list|(
name|addressing
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|writeEmptyElement
argument_list|(
literal|"wsam"
argument_list|,
name|s
argument_list|,
name|JAXWSAConstants
operator|.
name|NS_WSAM
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|pr
operator|=
name|writer
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
expr_stmt|;
name|uel
operator|=
operator|new
name|UnknownExtensibilityElement
argument_list|()
expr_stmt|;
name|uel
operator|.
name|setElement
argument_list|(
name|pr
argument_list|)
expr_stmt|;
name|uel
operator|.
name|setElementType
argument_list|(
name|DOMUtils
operator|.
name|getElementQName
argument_list|(
name|pr
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|bindingInfo
operator|.
name|getService
argument_list|()
operator|.
name|getDescription
argument_list|()
operator|==
literal|null
condition|)
block|{
name|DescriptionInfo
name|description
init|=
operator|new
name|DescriptionInfo
argument_list|()
decl_stmt|;
name|description
operator|.
name|setName
argument_list|(
name|bindingInfo
operator|.
name|getService
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|bindingInfo
operator|.
name|getService
argument_list|()
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|bindingInfo
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
block|}
name|bindingInfo
operator|.
name|getService
argument_list|()
operator|.
name|getDescription
argument_list|()
operator|.
name|addExtensor
argument_list|(
name|uel
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//ignore
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|String
name|getAddressingRequirement
parameter_list|(
name|Addressing
name|addressing
parameter_list|)
block|{
try|try
block|{
name|Object
name|o
init|=
name|Addressing
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"responses"
argument_list|)
operator|.
name|invoke
argument_list|(
name|addressing
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
name|String
name|s
init|=
name|o
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"ANONYMOUS"
operator|.
name|equals
argument_list|(
name|s
argument_list|)
condition|)
block|{
return|return
literal|"AnonymousResponses"
return|;
block|}
elseif|else
if|if
condition|(
literal|"NON_ANONYMOUS"
operator|.
name|equals
argument_list|(
name|s
argument_list|)
condition|)
block|{
return|return
literal|"NonAnonymousResponses"
return|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
comment|//ignore - probably JAX-WS 2.1
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|Addressing
name|getAddressing
parameter_list|()
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|serviceClass
init|=
name|implInfo
operator|.
name|getImplementorClass
argument_list|()
decl_stmt|;
if|if
condition|(
name|serviceClass
operator|!=
literal|null
condition|)
block|{
name|Addressing
name|ad
init|=
name|serviceClass
operator|.
name|getAnnotation
argument_list|(
name|Addressing
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|ad
operator|!=
literal|null
condition|)
block|{
return|return
name|ad
return|;
block|}
block|}
name|serviceClass
operator|=
name|implInfo
operator|.
name|getSEIClass
argument_list|()
expr_stmt|;
if|if
condition|(
name|serviceClass
operator|!=
literal|null
condition|)
block|{
name|Addressing
name|ad
init|=
name|serviceClass
operator|.
name|getAnnotation
argument_list|(
name|Addressing
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|ad
operator|!=
literal|null
condition|)
block|{
return|return
name|ad
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|Binding
name|getJaxwsBinding
parameter_list|()
block|{
return|return
name|jaxwsBinding
return|;
block|}
specifier|private
name|AddressingFeature
name|getAddressingFeature
parameter_list|()
block|{
if|if
condition|(
name|wsFeatures
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
for|for
control|(
name|WebServiceFeature
name|feature
range|:
name|wsFeatures
control|)
block|{
if|if
condition|(
name|feature
operator|instanceof
name|AddressingFeature
condition|)
block|{
return|return
operator|(
name|AddressingFeature
operator|)
name|feature
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|final
name|void
name|resolveFeatures
parameter_list|()
block|{
name|AddressingFeature
name|addressing
init|=
name|getAddressingFeature
argument_list|()
decl_stmt|;
if|if
condition|(
name|addressing
operator|==
literal|null
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|addressing
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|WSAddressingFeature
name|feature
init|=
name|getWSAddressingFeature
argument_list|()
decl_stmt|;
if|if
condition|(
name|feature
operator|==
literal|null
condition|)
block|{
name|feature
operator|=
operator|new
name|WSAddressingFeature
argument_list|()
expr_stmt|;
name|addAddressingFeature
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
name|feature
operator|.
name|setAddressingRequired
argument_list|(
name|addressing
operator|.
name|isRequired
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ProviderImpl
operator|.
name|isJaxWs22
argument_list|()
condition|)
block|{
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|addrClass
init|=
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
literal|"javax.xml.ws.soap.AddressingFeature"
argument_list|,
name|ProviderImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|Method
name|responsesMethod
init|=
name|addrClass
operator|.
name|getMethod
argument_list|(
literal|"getResponses"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|Object
name|responses
init|=
name|responsesMethod
operator|.
name|invoke
argument_list|(
name|addressing
argument_list|,
operator|new
name|Object
index|[]
block|{}
argument_list|)
decl_stmt|;
name|feature
operator|.
name|setResponses
argument_list|(
name|responses
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
else|else
block|{
name|removeAddressingFeature
argument_list|()
expr_stmt|;
name|getEndpointInfo
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"org.apache.cxf.ws.addressing.MAPAggregator.addressingDisabled"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|List
argument_list|<
name|AbstractFeature
argument_list|>
name|getFeatures
parameter_list|()
block|{
return|return
name|features
return|;
block|}
specifier|private
name|WSAddressingFeature
name|getWSAddressingFeature
parameter_list|()
block|{
if|if
condition|(
name|features
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
for|for
control|(
name|AbstractFeature
name|f
range|:
name|features
control|)
block|{
if|if
condition|(
name|f
operator|instanceof
name|WSAddressingFeature
condition|)
block|{
return|return
operator|(
name|WSAddressingFeature
operator|)
name|f
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|addAddressingFeature
parameter_list|(
name|AbstractFeature
name|a
parameter_list|)
block|{
name|AbstractFeature
name|f
init|=
name|getWSAddressingFeature
argument_list|()
decl_stmt|;
if|if
condition|(
name|f
operator|==
literal|null
condition|)
block|{
name|features
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|removeAddressingFeature
parameter_list|()
block|{
name|AbstractFeature
name|f
init|=
name|getWSAddressingFeature
argument_list|()
decl_stmt|;
if|if
condition|(
name|f
operator|!=
literal|null
condition|)
block|{
name|features
operator|.
name|remove
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|MTOMFeature
name|getMTOMFeature
parameter_list|()
block|{
if|if
condition|(
name|wsFeatures
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
for|for
control|(
name|WebServiceFeature
name|feature
range|:
name|wsFeatures
control|)
block|{
if|if
condition|(
name|feature
operator|instanceof
name|MTOMFeature
condition|)
block|{
return|return
operator|(
name|MTOMFeature
operator|)
name|feature
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|final
name|void
name|createJaxwsBinding
parameter_list|()
block|{
if|if
condition|(
name|getBinding
argument_list|()
operator|instanceof
name|SoapBinding
condition|)
block|{
name|jaxwsBinding
operator|=
operator|new
name|SOAPBindingImpl
argument_list|(
name|getEndpointInfo
argument_list|()
operator|.
name|getBinding
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|MTOMFeature
name|mtomFeature
init|=
name|getMTOMFeature
argument_list|()
decl_stmt|;
if|if
condition|(
name|mtomFeature
operator|!=
literal|null
operator|&&
name|mtomFeature
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
operator|(
operator|(
name|SOAPBinding
operator|)
name|jaxwsBinding
operator|)
operator|.
name|setMTOMEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|getBinding
argument_list|()
operator|instanceof
name|XMLBinding
condition|)
block|{
name|jaxwsBinding
operator|=
operator|new
name|HTTPBindingImpl
argument_list|(
name|getEndpointInfo
argument_list|()
operator|.
name|getBinding
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//REVISIT: Should not get here, though some bindings like JBI
comment|//did not implement their own Binding type.
name|jaxwsBinding
operator|=
operator|new
name|DefaultBindingImpl
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addHandlerInterceptors
parameter_list|()
block|{
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|in
init|=
name|super
operator|.
name|getInInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|out
init|=
name|super
operator|.
name|getOutInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|outFault
init|=
name|super
operator|.
name|getOutFaultInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|inFault
init|=
name|super
operator|.
name|getInFaultInterceptors
argument_list|()
decl_stmt|;
name|in
operator|.
name|add
argument_list|(
name|logicalInInterceptor
argument_list|)
expr_stmt|;
name|out
operator|.
name|add
argument_list|(
name|logicalOutInterceptor
argument_list|)
expr_stmt|;
name|inFault
operator|.
name|add
argument_list|(
name|logicalFaultInInterceptor
argument_list|)
expr_stmt|;
name|outFault
operator|.
name|add
argument_list|(
name|logicalFaultOutInterceptor
argument_list|)
expr_stmt|;
if|if
condition|(
name|soapHandlerInterceptor
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|add
argument_list|(
name|soapHandlerInterceptor
argument_list|)
expr_stmt|;
name|out
operator|.
name|add
argument_list|(
name|soapHandlerInterceptor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|soapFaultInInterceptor
operator|!=
literal|null
condition|)
block|{
name|inFault
operator|.
name|add
argument_list|(
name|soapFaultInInterceptor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|soapFaultOutInterceptor
operator|!=
literal|null
condition|)
block|{
name|outFault
operator|.
name|add
argument_list|(
name|soapFaultOutInterceptor
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|removeHandlerInterceptors
parameter_list|()
block|{
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|in
init|=
name|super
operator|.
name|getInInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|out
init|=
name|super
operator|.
name|getOutInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|outFault
init|=
name|super
operator|.
name|getOutFaultInterceptors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|inFault
init|=
name|super
operator|.
name|getInFaultInterceptors
argument_list|()
decl_stmt|;
name|in
operator|.
name|remove
argument_list|(
name|logicalInInterceptor
argument_list|)
expr_stmt|;
name|out
operator|.
name|remove
argument_list|(
name|logicalOutInterceptor
argument_list|)
expr_stmt|;
name|inFault
operator|.
name|remove
argument_list|(
name|logicalFaultInInterceptor
argument_list|)
expr_stmt|;
name|outFault
operator|.
name|remove
argument_list|(
name|logicalFaultOutInterceptor
argument_list|)
expr_stmt|;
if|if
condition|(
name|soapHandlerInterceptor
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|remove
argument_list|(
name|soapHandlerInterceptor
argument_list|)
expr_stmt|;
name|out
operator|.
name|remove
argument_list|(
name|soapHandlerInterceptor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|soapFaultInInterceptor
operator|!=
literal|null
condition|)
block|{
name|inFault
operator|.
name|remove
argument_list|(
name|soapFaultInInterceptor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|soapFaultOutInterceptor
operator|!=
literal|null
condition|)
block|{
name|outFault
operator|.
name|remove
argument_list|(
name|soapFaultOutInterceptor
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

