begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|CollapsedStringAdapter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlJavaTypeAdapter
import|;
end_import

begin_comment
comment|/**  * Declares the handler for a port-component. Handlers can access the init-param name/value pairs using the  * HandlerInfo interface. Used in: port-component  *<p>  * Java class for port-component_handlerType complex type.  *<p>  * The following schema fragment specifies the expected content contained within this class.  *   *<pre>  *&lt;complexType name="port-component_handlerType">  *&lt;complexContent>  *&lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">  *&lt;sequence>  *&lt;group ref="{http://java.sun.com/xml/ns/javaee}descriptionGroup"/>  *&lt;element name="handler-name" type="{http://java.sun.com/xml/ns/javaee}string"/>  *&lt;element name="handler-class" type="{http://java.sun.com/xml/ns/javaee}fully-qualified-classType"/>  *&lt;element name="init-param" type="{http://java.sun.com/xml/ns/javaee}param-valueType"   *                     maxOccurs="unbounded" minOccurs="0"/>  *&lt;element name="soap-header" type="{http://java.sun.com/xml/ns/javaee}xsdQNameType"   *                     maxOccurs="unbounded" minOccurs="0"/>  *&lt;element name="soap-role" type="{http://java.sun.com/xml/ns/javaee}string"   *                     maxOccurs="unbounded" minOccurs="0"/>  *&lt;/sequence>  *&lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />  *&lt;/restriction>  *&lt;/complexContent>  *&lt;/complexType>  *</pre>  */
end_comment

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|"port-component_handlerType"
argument_list|,
name|propOrder
operator|=
block|{
literal|"description"
block|,
literal|"displayName"
block|,
literal|"icon"
block|,
literal|"handlerName"
block|,
literal|"handlerClass"
block|,
literal|"initParam"
block|,
literal|"soapHeader"
block|,
literal|"soapRole"
block|}
argument_list|)
specifier|public
class|class
name|PortComponentHandlerType
block|{
specifier|protected
name|List
argument_list|<
name|DescriptionType
argument_list|>
name|description
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"display-name"
argument_list|)
specifier|protected
name|List
argument_list|<
name|DisplayNameType
argument_list|>
name|displayName
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|IconType
argument_list|>
name|icon
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"handler-name"
argument_list|,
name|required
operator|=
literal|true
argument_list|)
specifier|protected
name|CString
name|handlerName
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"handler-class"
argument_list|,
name|required
operator|=
literal|true
argument_list|)
specifier|protected
name|FullyQualifiedClassType
name|handlerClass
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"init-param"
argument_list|)
specifier|protected
name|List
argument_list|<
name|ParamValueType
argument_list|>
name|initParam
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"soap-header"
argument_list|)
specifier|protected
name|List
argument_list|<
name|XsdQNameType
argument_list|>
name|soapHeader
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"soap-role"
argument_list|)
specifier|protected
name|List
argument_list|<
name|CString
argument_list|>
name|soapRole
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|XmlJavaTypeAdapter
argument_list|(
name|CollapsedStringAdapter
operator|.
name|class
argument_list|)
annotation|@
name|XmlID
specifier|protected
name|java
operator|.
name|lang
operator|.
name|String
name|id
decl_stmt|;
comment|/**      * Gets the value of the description property.      *<p>      * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification      * you make to the returned list will be present inside the JAXB object. This is why there is not a      *<CODE>set</CODE> method for the description property.      *<p>      * For example, to add a new item, do as follows:      *       *<pre>      * getDescription().add(newItem);      *</pre>      *<p>      * Objects of the following type(s) are allowed in the list {@link DescriptionType }      */
specifier|public
name|List
argument_list|<
name|DescriptionType
argument_list|>
name|getDescription
parameter_list|()
block|{
if|if
condition|(
name|description
operator|==
literal|null
condition|)
block|{
name|description
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|description
return|;
block|}
comment|/**      * Gets the value of the displayName property.      *<p>      * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification      * you make to the returned list will be present inside the JAXB object. This is why there is not a      *<CODE>set</CODE> method for the displayName property.      *<p>      * For example, to add a new item, do as follows:      *       *<pre>      * getDisplayName().add(newItem);      *</pre>      *<p>      * Objects of the following type(s) are allowed in the list {@link DisplayNameType }      */
specifier|public
name|List
argument_list|<
name|DisplayNameType
argument_list|>
name|getDisplayName
parameter_list|()
block|{
if|if
condition|(
name|displayName
operator|==
literal|null
condition|)
block|{
name|displayName
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|displayName
return|;
block|}
comment|/**      * Gets the value of the icon property.      *<p>      * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification      * you make to the returned list will be present inside the JAXB object. This is why there is not a      *<CODE>set</CODE> method for the icon property.      *<p>      * For example, to add a new item, do as follows:      *       *<pre>      * getIcon().add(newItem);      *</pre>      *<p>      * Objects of the following type(s) are allowed in the list {@link IconType }      */
specifier|public
name|List
argument_list|<
name|IconType
argument_list|>
name|getIcon
parameter_list|()
block|{
if|if
condition|(
name|icon
operator|==
literal|null
condition|)
block|{
name|icon
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|icon
return|;
block|}
comment|/**      * Gets the value of the handlerName property.      *       * @return possible object is {@link CString }      */
specifier|public
name|CString
name|getHandlerName
parameter_list|()
block|{
if|if
condition|(
name|handlerName
operator|==
literal|null
condition|)
block|{
name|handlerName
operator|=
operator|new
name|CString
argument_list|()
expr_stmt|;
name|handlerName
operator|.
name|setValue
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
return|return
name|handlerName
return|;
block|}
comment|/**      * Sets the value of the handlerName property.      *       * @param value allowed object is {@link CString }      */
specifier|public
name|void
name|setHandlerName
parameter_list|(
name|CString
name|value
parameter_list|)
block|{
name|this
operator|.
name|handlerName
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * Gets the value of the handlerClass property.      *       * @return possible object is {@link FullyQualifiedClassType }      */
specifier|public
name|FullyQualifiedClassType
name|getHandlerClass
parameter_list|()
block|{
return|return
name|handlerClass
return|;
block|}
comment|/**      * Sets the value of the handlerClass property.      *       * @param value allowed object is {@link FullyQualifiedClassType }      */
specifier|public
name|void
name|setHandlerClass
parameter_list|(
name|FullyQualifiedClassType
name|value
parameter_list|)
block|{
name|this
operator|.
name|handlerClass
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * Gets the value of the initParam property.      *<p>      * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification      * you make to the returned list will be present inside the JAXB object. This is why there is not a      *<CODE>set</CODE> method for the initParam property.      *<p>      * For example, to add a new item, do as follows:      *       *<pre>      * getInitParam().add(newItem);      *</pre>      *<p>      * Objects of the following type(s) are allowed in the list {@link ParamValueType }      */
specifier|public
name|List
argument_list|<
name|ParamValueType
argument_list|>
name|getInitParam
parameter_list|()
block|{
if|if
condition|(
name|initParam
operator|==
literal|null
condition|)
block|{
name|initParam
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|initParam
return|;
block|}
comment|/**      * Gets the value of the soapHeader property.      *<p>      * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification      * you make to the returned list will be present inside the JAXB object. This is why there is not a      *<CODE>set</CODE> method for the soapHeader property.      *<p>      * For example, to add a new item, do as follows:      *       *<pre>      * getSoapHeader().add(newItem);      *</pre>      *<p>      * Objects of the following type(s) are allowed in the list {@link XsdQNameType }      */
specifier|public
name|List
argument_list|<
name|XsdQNameType
argument_list|>
name|getSoapHeader
parameter_list|()
block|{
if|if
condition|(
name|soapHeader
operator|==
literal|null
condition|)
block|{
name|soapHeader
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|soapHeader
return|;
block|}
comment|/**      * Gets the value of the soapRole property.      *<p>      * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification      * you make to the returned list will be present inside the JAXB object. This is why there is not a      *<CODE>set</CODE> method for the soapRole property.      *<p>      * For example, to add a new item, do as follows:      *       *<pre>      * getSoapRole().add(newItem);      *</pre>      *<p>      * Objects of the following type(s) are allowed in the list {@link CString }      */
specifier|public
name|List
argument_list|<
name|CString
argument_list|>
name|getSoapRole
parameter_list|()
block|{
if|if
condition|(
name|soapRole
operator|==
literal|null
condition|)
block|{
name|soapRole
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|soapRole
return|;
block|}
comment|/**      * Gets the value of the id property.      *       * @return possible object is {@link java.lang.String }      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
comment|/**      * Sets the value of the id property.      *       * @param value allowed object is {@link java.lang.String }      */
specifier|public
name|void
name|setId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|value
expr_stmt|;
block|}
block|}
end_class

end_unit

