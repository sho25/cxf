begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ReflectionUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|ServiceImpl
import|;
end_import

begin_comment
comment|/**  * A utility that allows access to the 'private' implementation specific delegate  * of a Service. Useful when extensions to the JAXWS Service supported methods  * are required.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|ServiceDelegateAccessor
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|ServiceDelegateAccessor
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DELEGATE_FIELD_NAME
init|=
literal|"delegate"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DELEGATE_FIELD_NAME2
init|=
literal|"_delegate"
decl_stmt|;
specifier|private
name|ServiceDelegateAccessor
parameter_list|()
block|{             }
comment|/**      * Get the delegate reference from the Service private field. This method      * uses Field.setAccessible() which, in the presence of a SecurityManager,      * requires the suppressAccessChecks permission      *       * @param service the taraget service      * @return the implementation delegate      * @throws WebServiceException if access to the field fails for any reason      */
specifier|public
specifier|static
name|ServiceImpl
name|get
parameter_list|(
name|Service
name|service
parameter_list|)
block|{
name|ServiceImpl
name|delegate
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Field
name|delegateField
init|=
name|Service
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
name|DELEGATE_FIELD_NAME
argument_list|)
decl_stmt|;
name|ReflectionUtil
operator|.
name|setAccessible
argument_list|(
name|delegateField
argument_list|)
expr_stmt|;
name|delegate
operator|=
operator|(
name|ServiceImpl
operator|)
name|delegateField
operator|.
name|get
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
try|try
block|{
name|Field
name|delegateField
init|=
name|Service
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
name|DELEGATE_FIELD_NAME2
argument_list|)
decl_stmt|;
name|ReflectionUtil
operator|.
name|setAccessible
argument_list|(
name|delegateField
argument_list|)
expr_stmt|;
name|delegate
operator|=
operator|(
name|ServiceImpl
operator|)
name|delegateField
operator|.
name|get
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e2
parameter_list|)
block|{
name|WebServiceException
name|wse
init|=
operator|new
name|WebServiceException
argument_list|(
literal|"Failed to access Field named "
operator|+
name|DELEGATE_FIELD_NAME
operator|+
literal|" of Service instance "
operator|+
name|service
argument_list|,
name|e
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
name|wse
throw|;
block|}
block|}
return|return
name|delegate
return|;
block|}
block|}
end_class

end_unit

