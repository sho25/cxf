begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|AsyncHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Dispatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Response
import|;
end_import

begin_class
specifier|public
class|class
name|DispatchAsyncCallable
parameter_list|<
name|T
parameter_list|>
implements|implements
name|Callable
argument_list|<
name|T
argument_list|>
block|{
specifier|private
name|Dispatch
argument_list|<
name|T
argument_list|>
name|dispatch
decl_stmt|;
specifier|private
name|T
name|object
decl_stmt|;
specifier|private
name|AsyncHandler
name|callback
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|ctx
decl_stmt|;
specifier|public
name|DispatchAsyncCallable
parameter_list|(
name|Dispatch
argument_list|<
name|T
argument_list|>
name|disp
parameter_list|,
name|T
name|obj
parameter_list|,
name|AsyncHandler
name|c
parameter_list|)
block|{
name|dispatch
operator|=
name|disp
expr_stmt|;
name|object
operator|=
name|obj
expr_stmt|;
name|callback
operator|=
name|c
expr_stmt|;
name|ctx
operator|=
name|disp
operator|.
name|getRequestContext
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|T
name|call
parameter_list|()
throws|throws
name|Exception
block|{
name|dispatch
operator|.
name|getRequestContext
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|dispatch
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
specifier|final
name|T
name|result
init|=
name|dispatch
operator|.
name|invoke
argument_list|(
name|object
argument_list|)
decl_stmt|;
if|if
condition|(
name|callback
operator|!=
literal|null
condition|)
block|{
name|callback
operator|.
name|handleResponse
argument_list|(
operator|new
name|Response
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getContext
parameter_list|()
block|{
return|return
name|dispatch
operator|.
name|getResponseContext
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|cancel
parameter_list|(
name|boolean
name|mayInterruptIfRunning
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|Object
name|get
parameter_list|()
block|{
return|return
name|result
return|;
block|}
specifier|public
name|boolean
name|isCancelled
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isDone
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Object
name|get
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
block|{
return|return
name|result
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

