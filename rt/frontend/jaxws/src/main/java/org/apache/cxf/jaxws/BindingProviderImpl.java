begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|EndpointReference
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|context
operator|.
name|WrappedMessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|support
operator|.
name|JaxWsEndpointImpl
import|;
end_import

begin_class
specifier|public
class|class
name|BindingProviderImpl
implements|implements
name|BindingProvider
block|{
specifier|protected
name|ThreadLocal
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|requestContext
init|=
operator|new
name|ThreadLocal
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|ThreadLocal
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|responseContext
init|=
operator|new
name|ThreadLocal
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Binding
name|binding
decl_stmt|;
specifier|private
specifier|final
name|EndpointReferenceBuilder
name|builder
decl_stmt|;
specifier|public
name|BindingProviderImpl
parameter_list|()
block|{
name|this
operator|.
name|binding
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|builder
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|BindingProviderImpl
parameter_list|(
name|Binding
name|b
parameter_list|)
block|{
name|this
operator|.
name|binding
operator|=
name|b
expr_stmt|;
name|this
operator|.
name|builder
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|BindingProviderImpl
parameter_list|(
name|JaxWsEndpointImpl
name|endpoint
parameter_list|)
block|{
name|this
operator|.
name|binding
operator|=
name|endpoint
operator|.
name|getJaxwsBinding
argument_list|()
expr_stmt|;
name|this
operator|.
name|builder
operator|=
operator|new
name|EndpointReferenceBuilder
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getRequestContext
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|requestContext
operator|.
name|get
argument_list|()
condition|)
block|{
name|requestContext
operator|.
name|set
argument_list|(
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|requestContext
operator|.
name|get
argument_list|()
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getResponseContext
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|responseContext
operator|.
name|get
argument_list|()
condition|)
block|{
name|responseContext
operator|.
name|set
argument_list|(
operator|new
name|WrappedMessageContext
argument_list|(
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
name|Scope
operator|.
name|APPLICATION
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|responseContext
operator|.
name|get
argument_list|()
return|;
block|}
specifier|protected
name|void
name|clearContext
parameter_list|(
name|ThreadLocal
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|context
parameter_list|)
block|{
name|context
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Binding
name|getBinding
parameter_list|()
block|{
return|return
name|binding
return|;
block|}
specifier|protected
name|void
name|populateResponseContext
parameter_list|(
name|MessageContext
name|ctx
parameter_list|)
block|{
name|Iterator
argument_list|<
name|String
argument_list|>
name|iter
init|=
name|ctx
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|respCtx
init|=
name|getResponseContext
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|obj
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|MessageContext
operator|.
name|Scope
operator|.
name|APPLICATION
operator|.
name|compareTo
argument_list|(
name|ctx
operator|.
name|getScope
argument_list|(
name|obj
argument_list|)
argument_list|)
operator|==
literal|0
condition|)
block|{
name|respCtx
operator|.
name|put
argument_list|(
name|obj
argument_list|,
name|ctx
operator|.
name|get
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|EndpointReference
name|getEndpointReference
parameter_list|()
block|{
return|return
name|builder
operator|.
name|getEndpointReference
argument_list|()
return|;
block|}
specifier|public
parameter_list|<
name|T
extends|extends
name|EndpointReference
parameter_list|>
name|T
name|getEndpointReference
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|builder
operator|.
name|getEndpointReference
argument_list|(
name|clazz
argument_list|)
return|;
block|}
block|}
end_class

end_unit

