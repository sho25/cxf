begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|AccessController
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ListIterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|EndpointContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|EndpointReference
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServicePermission
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|http
operator|.
name|HTTPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReferenceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|BindingConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
operator|.
name|ClassLoaderHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ClassHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ModCountCopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|SystemPropertyAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|Configurer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ServerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|WSDLGetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Interceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|InterceptorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|support
operator|.
name|JaxWsEndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|support
operator|.
name|JaxWsImplementorInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|support
operator|.
name|JaxWsServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|Invoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jaxws_spi
operator|.
name|JAXWSHttpSpiTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl11
operator|.
name|WSDLServiceBuilder
import|;
end_import

begin_class
specifier|public
class|class
name|EndpointImpl
extends|extends
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
implements|implements
name|InterceptorProvider
implements|,
name|Configurable
implements|,
name|AutoCloseable
block|{
comment|/**      * This property controls whether the 'publishEndpoint' permission is checked      * using only the AccessController (i.e. when SecurityManager is not installed).      * By default this check is not done as the system property is not set.      */
specifier|public
specifier|static
specifier|final
name|String
name|CHECK_PUBLISH_ENDPOINT_PERMISSON_PROPERTY
init|=
literal|"org.apache.cxf.jaxws.checkPublishEndpointPermission"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CHECK_PUBLISH_ENDPOINT_PERMISSON_PROPERTY_WITH_SECURITY_MANAGER
init|=
literal|"org.apache.cxf.jaxws.checkPublishEndpointPermissionWithSecurityManager"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|WebServicePermission
name|PUBLISH_PERMISSION
init|=
operator|new
name|WebServicePermission
argument_list|(
literal|"publishEndpoint"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|EndpointImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Bus
name|bus
decl_stmt|;
specifier|private
name|Object
name|implementor
decl_stmt|;
specifier|private
name|Server
name|server
decl_stmt|;
specifier|private
name|JaxWsServerFactoryBean
name|serverFactory
decl_stmt|;
specifier|private
name|JaxWsServiceFactoryBean
name|serviceFactory
decl_stmt|;
specifier|private
name|Service
name|service
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Source
argument_list|>
name|metadata
decl_stmt|;
specifier|private
name|Invoker
name|invoker
decl_stmt|;
specifier|private
name|Executor
name|executor
decl_stmt|;
specifier|private
name|String
name|bindingUri
decl_stmt|;
specifier|private
name|String
name|wsdlLocation
decl_stmt|;
specifier|private
name|String
name|address
decl_stmt|;
specifier|private
name|String
name|publishedEndpointUrl
decl_stmt|;
specifier|private
name|QName
name|endpointName
decl_stmt|;
specifier|private
name|QName
name|serviceName
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|implementorClass
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|schemaLocations
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Feature
argument_list|>
name|features
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|in
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|out
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|outFault
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|inFault
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|private
name|List
argument_list|<
name|Handler
argument_list|>
name|handlers
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|EndpointContext
name|endpointContext
decl_stmt|;
comment|/**      * Flag indicating internal state of this instance.  If true,      * the instance can have {@link #publish(String, Object)} called      * and/or settings changed.      */
specifier|private
name|boolean
name|publishable
init|=
literal|true
decl_stmt|;
specifier|public
name|EndpointImpl
parameter_list|(
name|Object
name|implementor
parameter_list|)
block|{
name|this
argument_list|(
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EndpointImpl
parameter_list|(
name|Bus
name|b
parameter_list|,
name|Object
name|implementor
parameter_list|,
name|JaxWsServerFactoryBean
name|sf
parameter_list|)
block|{
name|this
operator|.
name|bus
operator|=
name|b
expr_stmt|;
name|this
operator|.
name|serverFactory
operator|=
name|sf
expr_stmt|;
name|this
operator|.
name|implementor
operator|=
name|implementor
expr_stmt|;
block|}
comment|/**      *      * @param b      * @param i The implementor object.      * @param bindingUri The URI of the Binding being used. Optional.      * @param wsdl The URL of the WSDL for the service, if different than the URL specified on the      * WebService annotation. Optional.      */
specifier|public
name|EndpointImpl
parameter_list|(
name|Bus
name|b
parameter_list|,
name|Object
name|i
parameter_list|,
name|String
name|bindingUri
parameter_list|,
name|String
name|wsdl
parameter_list|)
block|{
name|this
argument_list|(
name|b
argument_list|,
name|i
argument_list|,
name|bindingUri
argument_list|,
name|wsdl
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EndpointImpl
parameter_list|(
name|Bus
name|b
parameter_list|,
name|Object
name|i
parameter_list|,
name|String
name|bindingUri
parameter_list|,
name|String
name|wsdl
parameter_list|,
name|WebServiceFeature
index|[]
name|f
parameter_list|)
block|{
name|bus
operator|=
name|b
expr_stmt|;
name|implementor
operator|=
name|i
expr_stmt|;
name|this
operator|.
name|bindingUri
operator|=
name|bindingUri
expr_stmt|;
name|wsdlLocation
operator|=
name|wsdl
operator|==
literal|null
condition|?
literal|null
else|:
operator|new
name|String
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|serverFactory
operator|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
expr_stmt|;
if|if
condition|(
name|f
operator|!=
literal|null
condition|)
block|{
operator|(
operator|(
name|JaxWsServiceFactoryBean
operator|)
name|serverFactory
operator|.
name|getServiceFactory
argument_list|()
operator|)
operator|.
name|setWsFeatures
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|EndpointImpl
parameter_list|(
name|Bus
name|b
parameter_list|,
name|Object
name|i
parameter_list|,
name|String
name|bindingUri
parameter_list|)
block|{
name|this
argument_list|(
name|b
argument_list|,
name|i
argument_list|,
name|bindingUri
argument_list|,
operator|(
name|String
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EndpointImpl
parameter_list|(
name|Bus
name|b
parameter_list|,
name|Object
name|i
parameter_list|,
name|String
name|bindingUri
parameter_list|,
name|WebServiceFeature
index|[]
name|features
parameter_list|)
block|{
name|this
argument_list|(
name|b
argument_list|,
name|i
argument_list|,
name|bindingUri
argument_list|,
operator|(
name|String
operator|)
literal|null
argument_list|,
name|features
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EndpointImpl
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|Object
name|implementor
parameter_list|)
block|{
name|this
argument_list|(
name|bus
argument_list|,
name|implementor
argument_list|,
operator|(
name|String
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBus
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|bus
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
return|return
name|bus
return|;
block|}
specifier|public
name|Binding
name|getBinding
parameter_list|()
block|{
return|return
operator|(
operator|(
name|JaxWsEndpointImpl
operator|)
name|getEndpoint
argument_list|()
operator|)
operator|.
name|getJaxwsBinding
argument_list|()
return|;
block|}
specifier|public
name|void
name|setExecutor
parameter_list|(
name|Executor
name|executor
parameter_list|)
block|{
name|this
operator|.
name|executor
operator|=
name|executor
expr_stmt|;
block|}
specifier|public
name|Executor
name|getExecutor
parameter_list|()
block|{
return|return
name|executor
return|;
block|}
specifier|public
name|Service
name|getService
parameter_list|()
block|{
return|return
name|service
return|;
block|}
specifier|public
name|JaxWsServiceFactoryBean
name|getServiceFactory
parameter_list|()
block|{
return|return
name|serviceFactory
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getImplementor
parameter_list|()
block|{
return|return
name|implementor
return|;
block|}
comment|/**      * Gets the class of the implementor.      * @return the class of the implementor object      */
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getImplementorClass
parameter_list|()
block|{
return|return
name|implementorClass
operator|!=
literal|null
condition|?
name|implementorClass
else|:
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|bus
argument_list|,
name|implementor
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Source
argument_list|>
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getProperties
parameter_list|()
block|{
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
return|return
name|server
operator|.
name|getEndpoint
argument_list|()
return|;
block|}
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
name|properties
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isPublished
parameter_list|()
block|{
return|return
name|server
operator|!=
literal|null
return|;
block|}
comment|/**      * {@inheritDoc}      *<p/>      * This implementation performs no action except to check the publish permission.      */
annotation|@
name|Override
specifier|public
name|void
name|publish
parameter_list|(
name|Object
name|arg0
parameter_list|)
block|{
comment|// Since this does not do anything now, just check the permission
name|checkPublishPermission
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|publish
parameter_list|(
name|String
name|addr
parameter_list|)
block|{
name|doPublish
argument_list|(
name|addr
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setServiceFactory
parameter_list|(
name|JaxWsServiceFactoryBean
name|sf
parameter_list|)
block|{
name|serviceFactory
operator|=
name|sf
expr_stmt|;
block|}
specifier|public
name|void
name|setMetadata
parameter_list|(
name|List
argument_list|<
name|Source
argument_list|>
name|metadata
parameter_list|)
block|{
name|checkPublishable
argument_list|()
expr_stmt|;
name|this
operator|.
name|metadata
operator|=
name|metadata
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|!=
name|server
condition|)
block|{
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getBeanName
parameter_list|()
block|{
return|return
name|endpointName
operator|.
name|toString
argument_list|()
operator|+
literal|".jaxws-endpoint"
return|;
block|}
specifier|public
name|JaxWsServerFactoryBean
name|getServerFactory
parameter_list|()
block|{
return|return
name|serverFactory
return|;
block|}
specifier|protected
name|void
name|setServerFactory
parameter_list|(
name|JaxWsServerFactoryBean
name|bean
parameter_list|)
block|{
name|this
operator|.
name|serverFactory
operator|=
name|bean
expr_stmt|;
block|}
specifier|protected
name|void
name|checkProperties
parameter_list|()
block|{
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|properties
operator|.
name|containsKey
argument_list|(
literal|"javax.xml.ws.wsdl.description"
argument_list|)
condition|)
block|{
name|wsdlLocation
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"javax.xml.ws.wsdl.description"
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|.
name|containsKey
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
operator|.
name|WSDL_PORT
argument_list|)
condition|)
block|{
name|endpointName
operator|=
operator|(
name|QName
operator|)
name|properties
operator|.
name|get
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
operator|.
name|WSDL_PORT
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|.
name|containsKey
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
operator|.
name|WSDL_SERVICE
argument_list|)
condition|)
block|{
name|serviceName
operator|=
operator|(
name|QName
operator|)
name|properties
operator|.
name|get
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
operator|.
name|WSDL_SERVICE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Performs the publication action by setting up a {@link Server}      * instance based on this endpoint's configuration.      *      * @param addr the optional endpoint address.      *      * @throws IllegalStateException if the endpoint cannot be published/republished      * @throws SecurityException if permission checking is enabled and policy forbids publishing      * @throws WebServiceException if there is an error publishing the endpoint      *      * @see #checkPublishPermission()      * @see #checkPublishable()      * @see #getServer(String)      */
specifier|protected
name|void
name|doPublish
parameter_list|(
name|String
name|addr
parameter_list|)
block|{
name|checkPublishPermission
argument_list|()
expr_stmt|;
name|checkPublishable
argument_list|()
expr_stmt|;
name|ServerImpl
name|serv
init|=
literal|null
decl_stmt|;
name|ClassLoaderHolder
name|loader
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
name|bus
operator|!=
literal|null
condition|)
block|{
name|ClassLoader
name|newLoader
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|ClassLoader
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|newLoader
operator|!=
literal|null
condition|)
block|{
name|loader
operator|=
name|ClassLoaderUtils
operator|.
name|setThreadContextClassloader
argument_list|(
name|newLoader
argument_list|)
expr_stmt|;
block|}
block|}
name|serv
operator|=
name|getServer
argument_list|(
name|addr
argument_list|)
expr_stmt|;
if|if
condition|(
name|addr
operator|!=
literal|null
condition|)
block|{
name|EndpointInfo
name|endpointInfo
init|=
name|serv
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getEndpointInfo
argument_list|()
decl_stmt|;
if|if
condition|(
name|endpointInfo
operator|.
name|getAddress
argument_list|()
operator|==
literal|null
operator|||
operator|!
name|endpointInfo
operator|.
name|getAddress
argument_list|()
operator|.
name|contains
argument_list|(
name|addr
argument_list|)
condition|)
block|{
name|endpointInfo
operator|.
name|setAddress
argument_list|(
name|addr
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|publishedEndpointUrl
operator|!=
literal|null
condition|)
block|{
name|endpointInfo
operator|.
name|setProperty
argument_list|(
name|WSDLGetUtils
operator|.
name|PUBLISHED_ENDPOINT_URL
argument_list|,
name|publishedEndpointUrl
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|publishedEndpointUrl
operator|!=
literal|null
operator|&&
name|wsdlLocation
operator|!=
literal|null
condition|)
block|{
comment|//early update the publishedEndpointUrl so that endpoints in the same app sharing the same wsdl
comment|//do not require all of them to be queried for wsdl before the wsdl is finally fully updated
name|Definition
name|def
init|=
name|endpointInfo
operator|.
name|getService
argument_list|()
operator|.
name|getProperty
argument_list|(
name|WSDLServiceBuilder
operator|.
name|WSDL_DEFINITION
argument_list|,
name|Definition
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|def
operator|==
literal|null
condition|)
block|{
name|def
operator|=
name|bus
operator|.
name|getExtension
argument_list|(
name|WSDLManager
operator|.
name|class
argument_list|)
operator|.
name|getDefinition
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
block|}
operator|new
name|WSDLGetUtils
argument_list|()
operator|.
name|updateWSDLPublishedEndpointAddress
argument_list|(
name|def
argument_list|,
name|endpointInfo
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|properties
condition|)
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|endpointInfo
operator|.
name|setProperty
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|this
operator|.
name|address
operator|=
name|endpointInfo
operator|.
name|getAddress
argument_list|()
expr_stmt|;
block|}
name|serv
operator|.
name|start
argument_list|()
expr_stmt|;
name|publishable
operator|=
literal|false
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
try|try
block|{
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Nothing we can do.
block|}
throw|throw
operator|new
name|WebServiceException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|loader
operator|!=
literal|null
condition|)
block|{
name|loader
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|ServerImpl
name|getServer
parameter_list|()
block|{
return|return
name|getServer
argument_list|(
literal|null
argument_list|)
return|;
block|}
specifier|public
specifier|synchronized
name|ServerImpl
name|getServer
parameter_list|(
name|String
name|addr
parameter_list|)
block|{
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
name|checkProperties
argument_list|()
expr_stmt|;
name|ClassLoaderHolder
name|loader
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
name|bus
operator|!=
literal|null
condition|)
block|{
name|ClassLoader
name|newLoader
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|ClassLoader
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|newLoader
operator|!=
literal|null
condition|)
block|{
name|loader
operator|=
name|ClassLoaderUtils
operator|.
name|setThreadContextClassloader
argument_list|(
name|newLoader
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Initialize the endpointName so we can do configureObject
name|QName
name|origEpn
init|=
name|endpointName
decl_stmt|;
if|if
condition|(
name|endpointName
operator|==
literal|null
condition|)
block|{
name|JaxWsImplementorInfo
name|implInfo
init|=
operator|new
name|JaxWsImplementorInfo
argument_list|(
name|getImplementorClass
argument_list|()
argument_list|)
decl_stmt|;
name|endpointName
operator|=
name|implInfo
operator|.
name|getEndpointName
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|serviceFactory
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|setServiceFactory
argument_list|(
name|serviceFactory
argument_list|)
expr_stmt|;
block|}
comment|/*if (serviceName != null) {                     serverFactory.getServiceFactory().setServiceName(serviceName);                 }*/
name|configureObject
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|endpointName
operator|=
name|origEpn
expr_stmt|;
comment|// Set up the server factory
name|serverFactory
operator|.
name|setAddress
argument_list|(
name|addr
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setStart
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setEndpointName
argument_list|(
name|endpointName
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setServiceBean
argument_list|(
name|implementor
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setFeatures
argument_list|(
name|getFeatures
argument_list|()
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setInvoker
argument_list|(
name|invoker
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setSchemaLocations
argument_list|(
name|schemaLocations
argument_list|)
expr_stmt|;
if|if
condition|(
name|serverFactory
operator|.
name|getProperties
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|getProperties
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|serverFactory
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
comment|// Be careful not to override any serverfactory settings as a user might
comment|// have supplied their own.
if|if
condition|(
name|getWsdlLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|setWsdlURL
argument_list|(
name|getWsdlLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|bindingUri
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|setBindingId
argument_list|(
name|bindingUri
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|serviceName
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setServiceName
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|implementorClass
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|setServiceClass
argument_list|(
name|implementorClass
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|executor
operator|!=
literal|null
condition|)
block|{
name|serverFactory
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setExecutor
argument_list|(
name|executor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|handlers
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|serverFactory
operator|.
name|addHandlers
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
block|}
name|configureObject
argument_list|(
name|serverFactory
argument_list|)
expr_stmt|;
name|server
operator|=
name|serverFactory
operator|.
name|create
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
name|endpoint
init|=
name|getEndpoint
argument_list|()
decl_stmt|;
if|if
condition|(
name|in
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|addAll
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|out
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|addAll
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|inFault
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|getInFaultInterceptors
argument_list|()
operator|.
name|addAll
argument_list|(
name|inFault
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|outFault
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|addAll
argument_list|(
name|outFault
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
name|configureObject
argument_list|(
name|endpoint
operator|.
name|getService
argument_list|()
argument_list|)
expr_stmt|;
name|configureObject
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|service
operator|=
name|endpoint
operator|.
name|getService
argument_list|()
expr_stmt|;
if|if
condition|(
name|getWsdlLocation
argument_list|()
operator|==
literal|null
condition|)
block|{
comment|//hold onto the wsdl location so cache won't clear till we go away
name|setWsdlLocation
argument_list|(
name|serverFactory
operator|.
name|getWsdlURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|serviceName
operator|==
literal|null
condition|)
block|{
name|setServiceName
argument_list|(
name|serverFactory
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|getServiceQName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|endpointName
operator|==
literal|null
condition|)
block|{
name|endpointName
operator|=
name|endpoint
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|loader
operator|!=
literal|null
condition|)
block|{
name|loader
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return
operator|(
name|ServerImpl
operator|)
name|server
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
name|getEndpoint
parameter_list|()
block|{
return|return
name|getServer
argument_list|(
literal|null
argument_list|)
operator|.
name|getEndpoint
argument_list|()
return|;
block|}
specifier|private
name|void
name|configureObject
parameter_list|(
name|Object
name|instance
parameter_list|)
block|{
name|Configurer
name|configurer
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|Configurer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|configurer
condition|)
block|{
name|configurer
operator|.
name|configureBean
argument_list|(
name|instance
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|checkPublishPermission
parameter_list|()
block|{
name|SecurityManager
name|sm
init|=
name|System
operator|.
name|getSecurityManager
argument_list|()
decl_stmt|;
name|boolean
name|checkPublishEndpointPermissionWithSecurityManager
init|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|SystemPropertyAction
operator|.
name|getProperty
argument_list|(
name|CHECK_PUBLISH_ENDPOINT_PERMISSON_PROPERTY_WITH_SECURITY_MANAGER
argument_list|,
literal|"true"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|checkPublishEndpointPermissionWithSecurityManager
operator|&&
name|sm
operator|!=
literal|null
condition|)
block|{
name|sm
operator|.
name|checkPermission
argument_list|(
name|PUBLISH_PERMISSION
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|Boolean
operator|.
name|getBoolean
argument_list|(
name|CHECK_PUBLISH_ENDPOINT_PERMISSON_PROPERTY
argument_list|)
condition|)
block|{
name|AccessController
operator|.
name|checkPermission
argument_list|(
name|PUBLISH_PERMISSION
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Checks the value of {@link #publishable} and throws      * an {@link IllegalStateException} if the value is {@code false}.      *      * @throws IllegalStateException if {@link #publishable} is false      */
specifier|protected
name|void
name|checkPublishable
parameter_list|()
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|publishable
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Cannot invoke method "
operator|+
literal|"after endpoint has been published."
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|publish
parameter_list|()
block|{
name|publish
argument_list|(
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getAddress
parameter_list|()
block|{
return|return
name|address
return|;
block|}
specifier|public
name|void
name|setAddress
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|this
operator|.
name|address
operator|=
name|address
expr_stmt|;
block|}
comment|/**     * The published endpoint url is used for excplicitely specifying the url of the     * endpoint that would show up the generated wsdl definition, when the service is     * brought on line.     * @return     */
specifier|public
name|String
name|getPublishedEndpointUrl
parameter_list|()
block|{
return|return
name|publishedEndpointUrl
return|;
block|}
specifier|public
name|void
name|setPublishedEndpointUrl
parameter_list|(
name|String
name|publishedEndpointUrl
parameter_list|)
block|{
name|this
operator|.
name|publishedEndpointUrl
operator|=
name|publishedEndpointUrl
expr_stmt|;
block|}
specifier|public
name|QName
name|getEndpointName
parameter_list|()
block|{
return|return
name|endpointName
return|;
block|}
specifier|public
name|void
name|setEndpointName
parameter_list|(
name|QName
name|endpointName
parameter_list|)
block|{
name|this
operator|.
name|endpointName
operator|=
name|endpointName
expr_stmt|;
block|}
specifier|public
name|QName
name|getServiceName
parameter_list|()
block|{
return|return
name|serviceName
return|;
block|}
specifier|public
name|void
name|setServiceName
parameter_list|(
name|QName
name|serviceName
parameter_list|)
block|{
name|this
operator|.
name|serviceName
operator|=
name|serviceName
expr_stmt|;
block|}
specifier|public
name|String
name|getWsdlLocation
parameter_list|()
block|{
return|return
name|wsdlLocation
return|;
block|}
specifier|public
name|void
name|setWsdlLocation
parameter_list|(
name|String
name|wsdlLocation
parameter_list|)
block|{
if|if
condition|(
name|wsdlLocation
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|wsdlLocation
operator|=
operator|new
name|String
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|wsdlLocation
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setBindingUri
parameter_list|(
name|String
name|binding
parameter_list|)
block|{
name|this
operator|.
name|bindingUri
operator|=
name|binding
expr_stmt|;
block|}
specifier|public
name|String
name|getBindingUri
parameter_list|()
block|{
return|return
name|this
operator|.
name|bindingUri
return|;
block|}
specifier|public
name|void
name|setDataBinding
parameter_list|(
name|DataBinding
name|dataBinding
parameter_list|)
block|{
name|serverFactory
operator|.
name|setDataBinding
argument_list|(
name|dataBinding
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DataBinding
name|getDataBinding
parameter_list|()
block|{
return|return
name|serverFactory
operator|.
name|getDataBinding
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getOutFaultInterceptors
parameter_list|()
block|{
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
return|return
name|outFault
return|;
block|}
return|return
operator|new
name|DoubleAddInterceptorList
argument_list|(
name|outFault
argument_list|,
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getOutFaultInterceptors
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getInFaultInterceptors
parameter_list|()
block|{
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
return|return
name|inFault
return|;
block|}
return|return
operator|new
name|DoubleAddInterceptorList
argument_list|(
name|inFault
argument_list|,
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getInInterceptors
parameter_list|()
block|{
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
return|return
name|in
return|;
block|}
return|return
operator|new
name|DoubleAddInterceptorList
argument_list|(
name|in
argument_list|,
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getInInterceptors
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getOutInterceptors
parameter_list|()
block|{
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
return|return
name|out
return|;
block|}
return|return
operator|new
name|DoubleAddInterceptorList
argument_list|(
name|out
argument_list|,
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getOutInterceptors
argument_list|()
argument_list|)
return|;
block|}
class|class
name|DoubleAddInterceptorList
implements|implements
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
block|{
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|orig
decl_stmt|;
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|other
decl_stmt|;
name|DoubleAddInterceptorList
parameter_list|(
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|a1
parameter_list|,
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|a2
parameter_list|)
block|{
name|orig
operator|=
name|a1
expr_stmt|;
name|other
operator|=
name|a2
expr_stmt|;
block|}
specifier|public
name|boolean
name|add
parameter_list|(
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|e
parameter_list|)
block|{
name|other
operator|.
name|add
argument_list|(
name|e
argument_list|)
expr_stmt|;
return|return
name|orig
operator|.
name|add
argument_list|(
name|e
argument_list|)
return|;
block|}
specifier|public
name|void
name|add
parameter_list|(
name|int
name|index
parameter_list|,
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|element
parameter_list|)
block|{
name|other
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|orig
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|addAll
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|c
parameter_list|)
block|{
name|other
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
expr_stmt|;
return|return
name|orig
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|addAll
parameter_list|(
name|int
name|index
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|c
parameter_list|)
block|{
name|other
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
expr_stmt|;
return|return
name|orig
operator|.
name|addAll
argument_list|(
name|index
argument_list|,
name|c
argument_list|)
return|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|orig
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|contains
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|orig
operator|.
name|contains
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|containsAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
return|return
name|orig
operator|.
name|containsAll
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|public
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|orig
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|int
name|indexOf
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|orig
operator|.
name|indexOf
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|orig
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Iterator
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|orig
operator|.
name|iterator
argument_list|()
return|;
block|}
specifier|public
name|int
name|lastIndexOf
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|orig
operator|.
name|lastIndexOf
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
name|ListIterator
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|listIterator
parameter_list|()
block|{
return|return
name|orig
operator|.
name|listIterator
argument_list|()
return|;
block|}
specifier|public
name|ListIterator
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|listIterator
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|orig
operator|.
name|listIterator
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|remove
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|other
operator|.
name|remove
argument_list|(
name|o
argument_list|)
expr_stmt|;
return|return
name|orig
operator|.
name|remove
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|remove
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|o
init|=
name|orig
operator|.
name|remove
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|other
operator|.
name|remove
argument_list|(
name|o
argument_list|)
expr_stmt|;
return|return
name|o
return|;
block|}
specifier|public
name|boolean
name|removeAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|other
operator|.
name|removeAll
argument_list|(
name|c
argument_list|)
expr_stmt|;
return|return
name|orig
operator|.
name|removeAll
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|retainAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|set
parameter_list|(
name|int
name|index
parameter_list|,
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|element
parameter_list|)
block|{
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
name|o
init|=
name|orig
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
name|int
name|idx
init|=
name|other
operator|.
name|indexOf
argument_list|(
name|o
argument_list|)
decl_stmt|;
name|other
operator|.
name|set
argument_list|(
name|idx
argument_list|,
name|element
argument_list|)
expr_stmt|;
block|}
return|return
name|o
return|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|orig
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|subList
parameter_list|(
name|int
name|fromIndex
parameter_list|,
name|int
name|toIndex
parameter_list|)
block|{
return|return
name|orig
operator|.
name|subList
argument_list|(
name|fromIndex
argument_list|,
name|toIndex
argument_list|)
return|;
block|}
specifier|public
name|Object
index|[]
name|toArray
parameter_list|()
block|{
return|return
name|orig
operator|.
name|toArray
argument_list|()
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
index|[]
name|toArray
parameter_list|(
name|T
index|[]
name|a
parameter_list|)
block|{
return|return
name|orig
operator|.
name|toArray
argument_list|(
name|a
argument_list|)
return|;
block|}
block|}
specifier|public
name|void
name|setInInterceptors
parameter_list|(
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|interceptors
parameter_list|)
block|{
name|in
operator|=
name|interceptors
expr_stmt|;
block|}
specifier|public
name|void
name|setInFaultInterceptors
parameter_list|(
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|interceptors
parameter_list|)
block|{
name|inFault
operator|=
name|interceptors
expr_stmt|;
block|}
specifier|public
name|void
name|setOutInterceptors
parameter_list|(
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|interceptors
parameter_list|)
block|{
name|out
operator|=
name|interceptors
expr_stmt|;
block|}
specifier|public
name|void
name|setOutFaultInterceptors
parameter_list|(
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|interceptors
parameter_list|)
block|{
name|outFault
operator|=
name|interceptors
expr_stmt|;
block|}
specifier|public
name|void
name|setHandlers
parameter_list|(
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|h
parameter_list|)
block|{
name|handlers
operator|.
name|clear
argument_list|()
expr_stmt|;
name|handlers
operator|.
name|addAll
argument_list|(
name|h
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|public
name|List
argument_list|<
name|Handler
argument_list|>
name|getHandlers
parameter_list|()
block|{
return|return
name|handlers
return|;
block|}
specifier|public
name|List
argument_list|<
name|Feature
argument_list|>
name|getFeatures
parameter_list|()
block|{
if|if
condition|(
name|features
operator|==
literal|null
condition|)
block|{
name|features
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|features
return|;
block|}
specifier|public
name|void
name|setFeatures
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Feature
argument_list|>
name|features
parameter_list|)
block|{
name|this
operator|.
name|features
operator|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|features
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Invoker
name|getInvoker
parameter_list|()
block|{
return|return
name|invoker
return|;
block|}
specifier|public
name|void
name|setInvoker
parameter_list|(
name|Invoker
name|invoker
parameter_list|)
block|{
name|this
operator|.
name|invoker
operator|=
name|invoker
expr_stmt|;
block|}
specifier|public
name|void
name|setImplementorClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|implementorClass
parameter_list|)
block|{
name|this
operator|.
name|implementorClass
operator|=
name|implementorClass
expr_stmt|;
block|}
specifier|public
name|void
name|setTransportId
parameter_list|(
name|String
name|transportId
parameter_list|)
block|{
name|serverFactory
operator|.
name|setTransportId
argument_list|(
name|transportId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getTransportId
parameter_list|()
block|{
return|return
name|serverFactory
operator|.
name|getTransportId
argument_list|()
return|;
block|}
specifier|public
name|void
name|setBindingConfig
parameter_list|(
name|BindingConfiguration
name|config
parameter_list|)
block|{
name|serverFactory
operator|.
name|setBindingConfig
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BindingConfiguration
name|getBindingConfig
parameter_list|()
block|{
return|return
name|serverFactory
operator|.
name|getBindingConfig
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getSchemaLocations
parameter_list|()
block|{
return|return
name|schemaLocations
return|;
block|}
specifier|public
name|void
name|setSchemaLocations
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|schemaLocations
parameter_list|)
block|{
name|this
operator|.
name|schemaLocations
operator|=
name|schemaLocations
expr_stmt|;
block|}
specifier|public
name|EndpointReference
name|getEndpointReference
parameter_list|(
name|Element
modifier|...
name|referenceParameters
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isPublished
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"ENDPOINT_NOT_PUBLISHED"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
name|getBinding
argument_list|()
operator|instanceof
name|HTTPBinding
condition|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"GET_ENDPOINTREFERENCE_UNSUPPORTED_BINDING"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
name|W3CEndpointReferenceBuilder
name|builder
init|=
operator|new
name|W3CEndpointReferenceBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|address
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|builder
operator|.
name|serviceName
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endpointName
argument_list|(
name|endpointName
argument_list|)
expr_stmt|;
if|if
condition|(
name|referenceParameters
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Element
name|referenceParameter
range|:
name|referenceParameters
control|)
block|{
name|builder
operator|.
name|referenceParameter
argument_list|(
name|referenceParameter
argument_list|)
expr_stmt|;
block|}
block|}
name|builder
operator|.
name|wsdlDocumentLocation
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
name|ClassLoader
name|cl
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
try|try
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|EndpointReferenceBuilder
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|cl
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
parameter_list|<
name|T
extends|extends
name|EndpointReference
parameter_list|>
name|T
name|getEndpointReference
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|,
name|Element
modifier|...
name|referenceParameters
parameter_list|)
block|{
if|if
condition|(
name|W3CEndpointReference
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|clazz
argument_list|)
condition|)
block|{
return|return
name|clazz
operator|.
name|cast
argument_list|(
name|getEndpointReference
argument_list|(
name|referenceParameters
argument_list|)
argument_list|)
return|;
block|}
throw|throw
operator|new
name|WebServiceException
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"ENDPOINTREFERENCE_TYPE_NOT_SUPPORTED"
argument_list|,
name|LOG
argument_list|,
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
specifier|public
name|void
name|setEndpointContext
parameter_list|(
name|EndpointContext
name|ctxt
parameter_list|)
block|{
name|endpointContext
operator|=
name|ctxt
expr_stmt|;
block|}
specifier|public
name|EndpointContext
name|getEndpointContext
parameter_list|()
block|{
return|return
name|endpointContext
return|;
block|}
specifier|public
name|void
name|publish
parameter_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|spi
operator|.
name|http
operator|.
name|HttpContext
name|context
parameter_list|)
block|{
name|ServerFactoryBean
name|sf
init|=
name|getServerFactory
argument_list|()
decl_stmt|;
if|if
condition|(
name|sf
operator|.
name|getDestinationFactory
argument_list|()
operator|==
literal|null
condition|)
block|{
name|sf
operator|.
name|setDestinationFactory
argument_list|(
operator|new
name|JAXWSHttpSpiTransportFactory
argument_list|(
name|context
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|publish
argument_list|(
name|context
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|Exception
block|{
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

