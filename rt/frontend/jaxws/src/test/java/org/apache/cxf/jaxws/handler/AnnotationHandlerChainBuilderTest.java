begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|HandlerChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|LogicalHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|LogicalMessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|AnnotationHandlerChainBuilderTest
extends|extends
name|Assert
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{     }
annotation|@
name|Test
specifier|public
name|void
name|testFindHandlerChainAnnotation
parameter_list|()
block|{
name|HandlerTestImpl
name|handlerTestImpl
init|=
operator|new
name|HandlerTestImpl
argument_list|()
decl_stmt|;
name|AnnotationHandlerChainBuilder
name|chainBuilder
init|=
operator|new
name|AnnotationHandlerChainBuilder
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|handlers
init|=
name|chainBuilder
operator|.
name|buildHandlerChainFromClass
argument_list|(
name|handlerTestImpl
operator|.
name|getClass
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|handlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestLogicalHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestProtocolHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestProtocolHandler
operator|.
name|class
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|8
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindHandlerChainAnnotationPerPortServiceBinding
parameter_list|()
block|{
name|HandlerTestImpl
name|handlerTestImpl
init|=
operator|new
name|HandlerTestImpl
argument_list|()
decl_stmt|;
name|AnnotationHandlerChainBuilder
name|chainBuilder
init|=
operator|new
name|AnnotationHandlerChainBuilder
argument_list|()
decl_stmt|;
name|QName
name|portQName
init|=
operator|new
name|QName
argument_list|(
literal|"namespacedoesntsupportyet"
argument_list|,
literal|"SoapPort1"
argument_list|)
decl_stmt|;
name|QName
name|serviceQName
init|=
operator|new
name|QName
argument_list|(
literal|"namespacedoesntsupportyet"
argument_list|,
literal|"SoapService1"
argument_list|)
decl_stmt|;
name|String
name|bindingID
init|=
literal|"http://schemas.xmlsoap.org/wsdl/soap/http"
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|handlers
init|=
name|chainBuilder
operator|.
name|buildHandlerChainFromClass
argument_list|(
name|handlerTestImpl
operator|.
name|getClass
argument_list|()
argument_list|,
name|portQName
argument_list|,
name|serviceQName
argument_list|,
name|bindingID
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|handlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindHandlerChainAnnotationPerPortServiceBindingNegative
parameter_list|()
block|{
name|HandlerTestImpl
name|handlerTestImpl
init|=
operator|new
name|HandlerTestImpl
argument_list|()
decl_stmt|;
name|AnnotationHandlerChainBuilder
name|chainBuilder
init|=
operator|new
name|AnnotationHandlerChainBuilder
argument_list|()
decl_stmt|;
name|QName
name|portQName
init|=
operator|new
name|QName
argument_list|(
literal|"namespacedoesntsupportyet"
argument_list|,
literal|"SoapPortUnknown"
argument_list|)
decl_stmt|;
name|QName
name|serviceQName
init|=
operator|new
name|QName
argument_list|(
literal|"namespacedoesntsupportyet"
argument_list|,
literal|"SoapServiceUnknown"
argument_list|)
decl_stmt|;
name|String
name|bindingID
init|=
literal|"BindingUnknow"
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|handlers
init|=
name|chainBuilder
operator|.
name|buildHandlerChainFromClass
argument_list|(
name|handlerTestImpl
operator|.
name|getClass
argument_list|()
argument_list|,
name|portQName
argument_list|,
name|serviceQName
argument_list|,
name|bindingID
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|handlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindHandlerChainAnnotationPerPortServiceBindingWildcard
parameter_list|()
block|{
name|HandlerTestImpl
name|handlerTestImpl
init|=
operator|new
name|HandlerTestImpl
argument_list|()
decl_stmt|;
name|AnnotationHandlerChainBuilder
name|chainBuilder
init|=
operator|new
name|AnnotationHandlerChainBuilder
argument_list|()
decl_stmt|;
name|QName
name|portQName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handler_test"
argument_list|,
literal|"SoapPortWildcard"
argument_list|)
decl_stmt|;
name|QName
name|serviceQName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handler_test"
argument_list|,
literal|"SoapServiceWildcard"
argument_list|)
decl_stmt|;
name|String
name|bindingID
init|=
literal|"BindingUnknow"
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|handlers
init|=
name|chainBuilder
operator|.
name|buildHandlerChainFromClass
argument_list|(
name|handlerTestImpl
operator|.
name|getClass
argument_list|()
argument_list|,
name|portQName
argument_list|,
name|serviceQName
argument_list|,
name|bindingID
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|handlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|TestLogicalHandler
implements|implements
name|LogicalHandler
argument_list|<
name|LogicalMessageContext
argument_list|>
block|{
name|boolean
name|initCalled
decl_stmt|;
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{         }
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|LogicalMessageContext
name|arg0
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|LogicalMessageContext
name|arg0
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|TestProtocolHandler
implements|implements
name|Handler
argument_list|<
name|MessageContext
argument_list|>
block|{
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{         }
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|WebService
argument_list|()
annotation|@
name|HandlerChain
argument_list|(
name|file
operator|=
literal|"./handlers.xml"
argument_list|,
name|name
operator|=
literal|"TestHandlerChain"
argument_list|)
specifier|public
class|class
name|HandlerTestImpl
block|{      }
block|}
end_class

end_unit

