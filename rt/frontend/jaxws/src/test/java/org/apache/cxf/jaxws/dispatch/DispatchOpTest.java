begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|dispatch
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Dispatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|AddressingFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|interceptor
operator|.
name|AbstractSoapInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|AbstractJaxWsTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|DispatchImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|MessageReplayObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|ServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|DispatchOpTest
extends|extends
name|AbstractJaxWsTest
block|{
specifier|private
specifier|static
specifier|final
name|QName
name|SERVICE_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/test/dispatch"
argument_list|,
literal|"DispatchTest"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|PORT_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/test/dispatch"
argument_list|,
literal|"DispatchPort"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ADDRESS
init|=
literal|"http://localhost:9120/SoapContext/DispatchPort"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|OP_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/test/dispatch"
argument_list|,
literal|"RequestResponseOperation"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|WSDL_RESOURCE
init|=
literal|"/org/apache/cxf/jaxws/dispatch/DispatchTest.wsdl"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REQ_RESOURCE
init|=
literal|"/org/apache/cxf/jaxws/dispatch/OperationRequest.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RESP_RESOURCE
init|=
literal|"/org/apache/cxf/jaxws/dispatch/OperationResponse.xml"
decl_stmt|;
specifier|private
name|Destination
name|d
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|(
literal|null
argument_list|,
literal|"http://schemas.xmlsoap.org/soap/http"
argument_list|)
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|ADDRESS
argument_list|)
expr_stmt|;
name|d
operator|=
name|localTransport
operator|.
name|getDestination
argument_list|(
name|ei
argument_list|,
name|bus
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResolveOperationWithSource
parameter_list|()
throws|throws
name|Exception
block|{
name|ServiceImpl
name|service
init|=
operator|new
name|ServiceImpl
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|WSDL_RESOURCE
argument_list|)
argument_list|,
name|SERVICE_NAME
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Source
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|PORT_NAME
argument_list|,
name|Source
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|disp
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|MessageContext
operator|.
name|WSDL_OPERATION
argument_list|,
name|OP_NAME
argument_list|)
expr_stmt|;
name|disp
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|BindingProvider
operator|.
name|ENDPOINT_ADDRESS_PROPERTY
argument_list|,
name|ADDRESS
argument_list|)
expr_stmt|;
name|d
operator|.
name|setMessageObserver
argument_list|(
operator|new
name|MessageReplayObserver
argument_list|(
name|RESP_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|BindingOperationVerifier
name|bov
init|=
operator|new
name|BindingOperationVerifier
argument_list|()
decl_stmt|;
operator|(
operator|(
name|DispatchImpl
argument_list|<
name|?
argument_list|>
operator|)
name|disp
operator|)
operator|.
name|getClient
argument_list|()
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|bov
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|getResourceAsStream
argument_list|(
name|REQ_RESOURCE
argument_list|)
argument_list|)
decl_stmt|;
name|DOMSource
name|source
init|=
operator|new
name|DOMSource
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|Source
name|res
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|BindingOperationInfo
name|boi
init|=
name|bov
operator|.
name|getBindingOperationInfo
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|boi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OP_NAME
argument_list|,
name|boi
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResolveOperationWithSourceAndWSA
parameter_list|()
throws|throws
name|Exception
block|{
name|ServiceImpl
name|service
init|=
operator|new
name|ServiceImpl
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|WSDL_RESOURCE
argument_list|)
argument_list|,
name|SERVICE_NAME
argument_list|,
literal|null
argument_list|,
operator|new
name|AddressingFeature
argument_list|()
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Source
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|PORT_NAME
argument_list|,
name|Source
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|disp
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|MessageContext
operator|.
name|WSDL_OPERATION
argument_list|,
name|OP_NAME
argument_list|)
expr_stmt|;
name|disp
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|BindingProvider
operator|.
name|ENDPOINT_ADDRESS_PROPERTY
argument_list|,
name|ADDRESS
argument_list|)
expr_stmt|;
name|d
operator|.
name|setMessageObserver
argument_list|(
operator|new
name|MessageReplayObserver
argument_list|(
name|RESP_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|BindingOperationVerifier
name|bov
init|=
operator|new
name|BindingOperationVerifier
argument_list|()
decl_stmt|;
operator|(
operator|(
name|DispatchImpl
argument_list|<
name|?
argument_list|>
operator|)
name|disp
operator|)
operator|.
name|getClient
argument_list|()
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|bov
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|getResourceAsStream
argument_list|(
name|REQ_RESOURCE
argument_list|)
argument_list|)
decl_stmt|;
name|DOMSource
name|source
init|=
operator|new
name|DOMSource
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|Source
name|res
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|BindingOperationInfo
name|boi
init|=
name|bov
operator|.
name|getBindingOperationInfo
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|boi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OP_NAME
argument_list|,
name|boi
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|BindingOperationVerifier
extends|extends
name|AbstractSoapInterceptor
block|{
name|BindingOperationInfo
name|boi
decl_stmt|;
name|BindingOperationVerifier
parameter_list|()
block|{
name|super
argument_list|(
name|Phase
operator|.
name|POST_LOGICAL
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleMessage
parameter_list|(
name|SoapMessage
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|boi
operator|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|getBindingOperationInfo
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BindingOperationInfo
name|getBindingOperationInfo
parameter_list|()
block|{
return|return
name|boi
return|;
block|}
block|}
block|}
end_class

end_unit

