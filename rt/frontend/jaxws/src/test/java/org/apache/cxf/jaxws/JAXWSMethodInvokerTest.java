begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|service
operator|.
name|Hello
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|Factory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXWSMethodInvokerTest
block|{
name|Factory
name|factory
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Factory
operator|.
name|class
argument_list|)
decl_stmt|;
name|Object
name|target
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Hello
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testFactoryBeans
parameter_list|()
throws|throws
name|Throwable
block|{
name|Exchange
name|ex
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|reset
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|factory
operator|.
name|create
argument_list|(
name|ex
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|JAXWSMethodInvoker
name|jaxwsMethodInvoker
init|=
operator|new
name|JAXWSMethodInvoker
argument_list|(
name|factory
argument_list|)
decl_stmt|;
name|Object
name|object
init|=
name|jaxwsMethodInvoker
operator|.
name|getServiceObject
argument_list|(
name|ex
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"the target object and service object should be equal "
argument_list|,
name|object
argument_list|,
name|target
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|factory
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

