begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|soap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MimeHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPBody
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPBodyElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPHeader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPHeaderElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLInputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPMessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Attr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|Soap11
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapVersionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|managers
operator|.
name|PhaseManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|headers
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|InterceptorChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|AbstractProtocolHandlerInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|handler
operator|.
name|HandlerChainInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|PhaseInterceptorChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|PartialXMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|createNiceControl
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_class
specifier|public
class|class
name|SOAPHandlerInterceptorTest
extends|extends
name|Assert
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{     }
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{     }
comment|// SAAJ tree is created from DOMXMLStreamWriter. Any changes to SOAPMessage should be streamed back to
comment|// outputStream
annotation|@
name|Test
specifier|public
name|void
name|testChangeSOAPBodyOutBound
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
argument_list|()
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
name|Boolean
name|outboundProperty
init|=
operator|(
name|Boolean
operator|)
name|smc
operator|.
name|get
argument_list|(
name|MessageContext
operator|.
name|MESSAGE_OUTBOUND_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
name|outboundProperty
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
try|try
block|{
name|smc
operator|.
name|setMessage
argument_list|(
name|prepareSOAPMessage
argument_list|(
literal|"resources/greetMeRpcLitRespChanged.xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|HandlerChainInvoker
name|invoker
init|=
operator|new
name|HandlerChainInvoker
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|IMocksControl
name|control
init|=
name|createNiceControl
argument_list|()
decl_stmt|;
name|Binding
name|binding
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Binding
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|binding
operator|.
name|getHandlerChain
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|list
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|get
argument_list|(
name|HandlerChainInvoker
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|invoker
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|SoapMessage
name|message
init|=
operator|new
name|SoapMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setExchange
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
comment|// This is to set direction to outbound
name|expect
argument_list|(
name|exchange
operator|.
name|getOutMessage
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|message
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|CachedStream
name|originalEmptyOs
init|=
operator|new
name|CachedStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|originalEmptyOs
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|XMLStreamWriter
operator|.
name|class
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|InterceptorChain
name|chain
init|=
operator|new
name|PhaseInterceptorChain
argument_list|(
operator|(
operator|new
name|PhaseManagerImpl
argument_list|()
operator|)
operator|.
name|getOutPhases
argument_list|()
argument_list|)
decl_stmt|;
comment|//Interceptors after SOAPHandlerInterceptor DOMXMLStreamWriter to write
name|chain
operator|.
name|add
argument_list|(
operator|new
name|AbstractProtocolHandlerInterceptor
argument_list|<
name|SoapMessage
argument_list|>
argument_list|(
name|binding
argument_list|,
name|Phase
operator|.
name|MARSHAL
argument_list|)
block|{
specifier|public
name|void
name|handleMessage
parameter_list|(
name|SoapMessage
name|message
parameter_list|)
throws|throws
name|Fault
block|{
try|try
block|{
name|XMLStreamWriter
name|writer
init|=
name|message
operator|.
name|getContent
argument_list|(
name|XMLStreamWriter
operator|.
name|class
argument_list|)
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|writer
operator|.
name|setPrefix
argument_list|(
literal|"soap"
argument_list|,
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"soap"
argument_list|,
name|soapVersion
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeNamespace
argument_list|(
literal|"soap"
argument_list|,
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|chain
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandlerInterceptor
argument_list|(
name|binding
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|setInterceptorChain
argument_list|(
name|chain
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|chain
operator|.
name|doIntercept
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// Verify SOAPMessage
name|SOAPMessage
name|resultedMessage
init|=
name|message
operator|.
name|getContent
argument_list|(
name|SOAPMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|resultedMessage
argument_list|)
expr_stmt|;
name|SOAPBody
name|bodyNew
init|=
name|resultedMessage
operator|.
name|getSOAPBody
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|itNew
init|=
name|bodyNew
operator|.
name|getChildElements
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_rpclit"
argument_list|,
literal|"sendReceiveDataResponse"
argument_list|)
argument_list|)
decl_stmt|;
name|SOAPBodyElement
name|bodyElementNew
init|=
operator|(
name|SOAPBodyElement
operator|)
name|itNew
operator|.
name|next
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|outIt
init|=
name|bodyElementNew
operator|.
name|getChildElements
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_rpclit/types"
argument_list|,
literal|"out"
argument_list|)
argument_list|)
decl_stmt|;
name|Element
name|outElement
init|=
operator|(
name|SOAPElement
operator|)
name|outIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|outElement
argument_list|)
expr_stmt|;
name|Element
name|elem3Element
init|=
name|DOMUtils
operator|.
name|findAllElementsByTagNameNS
argument_list|(
name|outElement
argument_list|,
literal|"http://apache.org/hello_world_rpclit/types"
argument_list|,
literal|"elem3"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"100"
argument_list|,
name|elem3Element
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangeSOAPHeaderInBound
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
argument_list|()
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
try|try
block|{
name|Boolean
name|outboundProperty
init|=
operator|(
name|Boolean
operator|)
name|smc
operator|.
name|get
argument_list|(
name|MessageContext
operator|.
name|MESSAGE_OUTBOUND_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|outboundProperty
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
comment|// change mustUnderstand to false
name|SOAPMessage
name|message
init|=
name|smc
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|SOAPHeader
name|soapHeader
init|=
name|message
operator|.
name|getSOAPHeader
argument_list|()
decl_stmt|;
name|Element
name|headerElementNew
init|=
operator|(
name|Element
operator|)
name|soapHeader
operator|.
name|getFirstChild
argument_list|()
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Attr
name|attr
init|=
name|headerElementNew
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createAttributeNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
literal|"SOAP-ENV:mustUnderstand"
argument_list|)
decl_stmt|;
name|attr
operator|.
name|setValue
argument_list|(
literal|"false"
argument_list|)
expr_stmt|;
name|headerElementNew
operator|.
name|setAttributeNodeNS
argument_list|(
name|attr
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|HandlerChainInvoker
name|invoker
init|=
operator|new
name|HandlerChainInvoker
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|IMocksControl
name|control
init|=
name|createNiceControl
argument_list|()
decl_stmt|;
name|Binding
name|binding
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Binding
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|binding
operator|.
name|getHandlerChain
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|list
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|get
argument_list|(
name|HandlerChainInvoker
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|invoker
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
comment|// This is to set direction to inbound
name|expect
argument_list|(
name|exchange
operator|.
name|getOutMessage
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|SoapMessage
name|message
init|=
operator|new
name|SoapMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setExchange
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|preparemXMLStreamReader
argument_list|(
literal|"resources/greetMeRpcLitReq.xml"
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|XMLStreamReader
operator|.
name|class
argument_list|,
name|reader
argument_list|)
expr_stmt|;
name|Object
index|[]
name|headerInfo
init|=
name|prepareSOAPHeader
argument_list|()
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|Node
operator|.
name|class
argument_list|,
name|headerInfo
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|Node
name|node
init|=
operator|(
operator|(
name|Element
operator|)
name|headerInfo
index|[
literal|1
index|]
operator|)
operator|.
name|getFirstChild
argument_list|()
decl_stmt|;
name|message
operator|.
name|getHeaders
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Header
argument_list|(
operator|new
name|QName
argument_list|(
name|node
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|node
operator|.
name|getLocalName
argument_list|()
argument_list|)
argument_list|,
name|node
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|SOAPHandlerInterceptor
name|li
init|=
operator|new
name|SOAPHandlerInterceptor
argument_list|(
name|binding
argument_list|)
decl_stmt|;
name|li
operator|.
name|handleMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// Verify SOAPMessage header
name|SOAPMessage
name|soapMessageNew
init|=
name|message
operator|.
name|getContent
argument_list|(
name|SOAPMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|Element
name|headerElementNew
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|soapMessageNew
operator|.
name|getSOAPHeader
argument_list|()
argument_list|)
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|headerElementNew
operator|.
name|getAttributeNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
literal|"mustUnderstand"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify XMLStreamReader
name|XMLStreamReader
name|xmlReader
init|=
name|message
operator|.
name|getContent
argument_list|(
name|XMLStreamReader
operator|.
name|class
argument_list|)
decl_stmt|;
name|QName
name|qn
init|=
name|xmlReader
operator|.
name|getName
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sendReceiveData"
argument_list|,
name|qn
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
comment|// Verify Header Element
name|Iterator
argument_list|<
name|Header
argument_list|>
name|iter
init|=
name|message
operator|.
name|getHeaders
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Element
name|requiredHeader
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Header
name|localHdr
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|localHdr
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Element
condition|)
block|{
name|Element
name|elem
init|=
operator|(
name|Element
operator|)
name|localHdr
operator|.
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|elem
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
literal|"http://apache.org/hello_world_rpclit/types"
argument_list|)
operator|&&
name|elem
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"header1"
argument_list|)
condition|)
block|{
name|requiredHeader
operator|=
operator|(
name|Element
operator|)
name|localHdr
operator|.
name|getObject
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
name|assertNotNull
argument_list|(
literal|"Should have found header1"
argument_list|,
name|requiredHeader
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|requiredHeader
operator|.
name|getAttributeNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
literal|"mustUnderstand"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangeSOAPHeaderOutBound
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
argument_list|()
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
try|try
block|{
name|Boolean
name|outboundProperty
init|=
operator|(
name|Boolean
operator|)
name|smc
operator|.
name|get
argument_list|(
name|MessageContext
operator|.
name|MESSAGE_OUTBOUND_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
name|outboundProperty
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
comment|// change mustUnderstand to false
name|SOAPMessage
name|message
init|=
name|smc
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|SOAPHeader
name|soapHeader
init|=
name|message
operator|.
name|getSOAPHeader
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|soapHeader
operator|.
name|getChildElements
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_rpclit/types"
argument_list|,
literal|"header1"
argument_list|)
argument_list|)
decl_stmt|;
name|SOAPHeaderElement
name|headerElementNew
init|=
operator|(
name|SOAPHeaderElement
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Attr
name|attr
init|=
name|headerElementNew
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createAttributeNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
literal|"SOAP-ENV:mustUnderstand"
argument_list|)
decl_stmt|;
name|attr
operator|.
name|setValue
argument_list|(
literal|"false"
argument_list|)
expr_stmt|;
name|headerElementNew
operator|.
name|setAttributeNodeNS
argument_list|(
name|attr
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|HandlerChainInvoker
name|invoker
init|=
operator|new
name|HandlerChainInvoker
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|IMocksControl
name|control
init|=
name|createNiceControl
argument_list|()
decl_stmt|;
name|Binding
name|binding
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Binding
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|binding
operator|.
name|getHandlerChain
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|list
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|get
argument_list|(
name|HandlerChainInvoker
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|invoker
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|SoapMessage
name|message
init|=
operator|new
name|SoapMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setExchange
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
comment|// This is to set direction to outbound
name|expect
argument_list|(
name|exchange
operator|.
name|getOutMessage
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|message
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|CachedStream
name|originalEmptyOs
init|=
operator|new
name|CachedStream
argument_list|()
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|,
name|originalEmptyOs
argument_list|)
expr_stmt|;
name|InterceptorChain
name|chain
init|=
operator|new
name|PhaseInterceptorChain
argument_list|(
operator|(
operator|new
name|PhaseManagerImpl
argument_list|()
operator|)
operator|.
name|getOutPhases
argument_list|()
argument_list|)
decl_stmt|;
comment|//Interceptors after SOAPHandlerInterceptor DOMXMLStreamWriter to write
name|chain
operator|.
name|add
argument_list|(
operator|new
name|AbstractProtocolHandlerInterceptor
argument_list|<
name|SoapMessage
argument_list|>
argument_list|(
name|binding
argument_list|,
name|Phase
operator|.
name|MARSHAL
argument_list|)
block|{
specifier|public
name|void
name|handleMessage
parameter_list|(
name|SoapMessage
name|message
parameter_list|)
throws|throws
name|Fault
block|{
try|try
block|{
name|XMLStreamWriter
name|writer
init|=
name|message
operator|.
name|getContent
argument_list|(
name|XMLStreamWriter
operator|.
name|class
argument_list|)
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|writer
operator|.
name|setPrefix
argument_list|(
literal|"soap"
argument_list|,
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeStartElement
argument_list|(
literal|"soap"
argument_list|,
name|soapVersion
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeNamespace
argument_list|(
literal|"soap"
argument_list|,
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|headerInfo
init|=
name|prepareSOAPHeader
argument_list|()
decl_stmt|;
name|StaxUtils
operator|.
name|writeElement
argument_list|(
operator|(
name|Element
operator|)
name|headerInfo
index|[
literal|1
index|]
argument_list|,
name|writer
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|chain
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandlerInterceptor
argument_list|(
name|binding
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|setInterceptorChain
argument_list|(
name|chain
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|chain
operator|.
name|doIntercept
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// Verify SOAPMessage header
name|SOAPMessage
name|soapMessageNew
init|=
name|message
operator|.
name|getContent
argument_list|(
name|SOAPMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|SOAPHeader
name|soapHeader
init|=
name|soapMessageNew
operator|.
name|getSOAPHeader
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|itNew
init|=
name|soapHeader
operator|.
name|getChildElements
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_rpclit/types"
argument_list|,
literal|"header1"
argument_list|)
argument_list|)
decl_stmt|;
name|SOAPHeaderElement
name|headerElementNew
init|=
operator|(
name|SOAPHeaderElement
operator|)
name|itNew
operator|.
name|next
argument_list|()
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|headerElementNew
operator|.
name|getAttributeNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
literal|"mustUnderstand"
argument_list|)
argument_list|)
expr_stmt|;
name|originalEmptyOs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetSOAPMessageInBound
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
argument_list|()
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
try|try
block|{
name|smc
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|HandlerChainInvoker
name|invoker
init|=
operator|new
name|HandlerChainInvoker
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|IMocksControl
name|control
init|=
name|createNiceControl
argument_list|()
decl_stmt|;
name|Binding
name|binding
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Binding
operator|.
name|class
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|binding
operator|.
name|getHandlerChain
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|list
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|get
argument_list|(
name|HandlerChainInvoker
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|invoker
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
comment|// This is to set direction to inbound
name|expect
argument_list|(
name|exchange
operator|.
name|getOutMessage
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|SoapMessage
name|message
init|=
operator|new
name|SoapMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setExchange
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|XMLStreamReader
name|reader
init|=
name|preparemXMLStreamReader
argument_list|(
literal|"resources/greetMeRpcLitReq.xml"
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|XMLStreamReader
operator|.
name|class
argument_list|,
name|reader
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|SOAPHandlerInterceptor
name|li
init|=
operator|new
name|SOAPHandlerInterceptor
argument_list|(
name|binding
argument_list|)
decl_stmt|;
name|li
operator|.
name|handleMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// Verify SOAPMessage
name|SOAPMessage
name|soapMessageNew
init|=
name|message
operator|.
name|getContent
argument_list|(
name|SOAPMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|SOAPBody
name|bodyNew
init|=
name|soapMessageNew
operator|.
name|getSOAPBody
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|itNew
init|=
name|bodyNew
operator|.
name|getChildElements
argument_list|()
decl_stmt|;
name|SOAPBodyElement
name|bodyElementNew
init|=
operator|(
name|SOAPBodyElement
operator|)
name|itNew
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sendReceiveData"
argument_list|,
name|bodyElementNew
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Verify the XMLStreamReader
name|XMLStreamReader
name|xmlReader
init|=
name|message
operator|.
name|getContent
argument_list|(
name|XMLStreamReader
operator|.
name|class
argument_list|)
decl_stmt|;
name|QName
name|qn
init|=
name|xmlReader
operator|.
name|getName
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sendReceiveData"
argument_list|,
name|qn
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetUnderstoodHeadersReturnsNull
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
operator|new
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
argument_list|()
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|smc
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|HandlerChainInvoker
name|invoker
init|=
operator|new
name|HandlerChainInvoker
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|IMocksControl
name|control
init|=
name|createNiceControl
argument_list|()
decl_stmt|;
name|Binding
name|binding
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Binding
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|binding
operator|.
name|getHandlerChain
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|list
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|SoapMessage
name|message
init|=
name|control
operator|.
name|createMock
argument_list|(
name|SoapMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|message
operator|.
name|getExchange
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|exchange
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|message
operator|.
name|keySet
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|get
argument_list|(
name|HandlerChainInvoker
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|invoker
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|SOAPHandlerInterceptor
name|li
init|=
operator|new
name|SOAPHandlerInterceptor
argument_list|(
name|binding
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|QName
argument_list|>
name|understood
init|=
name|li
operator|.
name|getUnderstoodHeaders
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|understood
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|understood
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|XMLStreamReader
name|preparemXMLStreamReader
parameter_list|(
name|String
name|resouceName
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resouceName
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|xmlReader
init|=
name|XMLInputFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createXMLStreamReader
argument_list|(
name|is
argument_list|)
decl_stmt|;
comment|// skip until soap body
if|if
condition|(
name|xmlReader
operator|.
name|nextTag
argument_list|()
operator|==
name|XMLStreamConstants
operator|.
name|START_ELEMENT
condition|)
block|{
name|String
name|ns
init|=
name|xmlReader
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|SoapVersionFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|getSoapVersion
argument_list|(
name|ns
argument_list|)
decl_stmt|;
comment|// message.setVersion(soapVersion);
name|QName
name|qn
init|=
name|xmlReader
operator|.
name|getName
argument_list|()
decl_stmt|;
while|while
condition|(
operator|!
name|qn
operator|.
name|equals
argument_list|(
name|soapVersion
operator|.
name|getBody
argument_list|()
argument_list|)
operator|&&
operator|!
name|qn
operator|.
name|equals
argument_list|(
name|soapVersion
operator|.
name|getHeader
argument_list|()
argument_list|)
condition|)
block|{
while|while
condition|(
name|xmlReader
operator|.
name|nextTag
argument_list|()
operator|!=
name|XMLStreamConstants
operator|.
name|START_ELEMENT
condition|)
block|{
comment|// nothing to do
block|}
name|qn
operator|=
name|xmlReader
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|qn
operator|.
name|equals
argument_list|(
name|soapVersion
operator|.
name|getHeader
argument_list|()
argument_list|)
condition|)
block|{
name|XMLStreamReader
name|filteredReader
init|=
operator|new
name|PartialXMLStreamReader
argument_list|(
name|xmlReader
argument_list|,
name|soapVersion
operator|.
name|getBody
argument_list|()
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|read
argument_list|(
name|filteredReader
argument_list|)
expr_stmt|;
block|}
comment|// advance just past body.
name|xmlReader
operator|.
name|next
argument_list|()
expr_stmt|;
while|while
condition|(
name|xmlReader
operator|.
name|isWhiteSpace
argument_list|()
condition|)
block|{
name|xmlReader
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|xmlReader
return|;
block|}
specifier|private
name|Object
index|[]
name|prepareSOAPHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|doc
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newDocumentBuilder
argument_list|()
operator|.
name|newDocument
argument_list|()
decl_stmt|;
name|SoapVersion
name|soapVersion
init|=
name|Soap11
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Element
name|envElement
init|=
name|doc
operator|.
name|createElementNS
argument_list|(
name|soapVersion
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|soapVersion
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
decl_stmt|;
name|Element
name|headerElement
init|=
name|doc
operator|.
name|createElementNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|soapVersion
operator|.
name|getHeader
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
decl_stmt|;
name|Element
name|bodyElement
init|=
name|doc
operator|.
name|createElementNS
argument_list|(
name|soapVersion
operator|.
name|getBody
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|soapVersion
operator|.
name|getBody
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
decl_stmt|;
name|Element
name|childElement
init|=
name|doc
operator|.
name|createElementNS
argument_list|(
literal|"http://apache.org/hello_world_rpclit/types"
argument_list|,
literal|"ns2:header1"
argument_list|)
decl_stmt|;
name|Attr
name|attr
init|=
name|childElement
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createAttributeNS
argument_list|(
name|soapVersion
operator|.
name|getNamespace
argument_list|()
argument_list|,
literal|"SOAP-ENV:mustUnderstand"
argument_list|)
decl_stmt|;
name|attr
operator|.
name|setValue
argument_list|(
literal|"true"
argument_list|)
expr_stmt|;
name|childElement
operator|.
name|setAttributeNodeNS
argument_list|(
name|attr
argument_list|)
expr_stmt|;
name|headerElement
operator|.
name|appendChild
argument_list|(
name|childElement
argument_list|)
expr_stmt|;
name|envElement
operator|.
name|appendChild
argument_list|(
name|headerElement
argument_list|)
expr_stmt|;
name|envElement
operator|.
name|appendChild
argument_list|(
name|bodyElement
argument_list|)
expr_stmt|;
name|doc
operator|.
name|appendChild
argument_list|(
name|envElement
argument_list|)
expr_stmt|;
return|return
operator|new
name|Object
index|[]
block|{
name|doc
block|,
name|headerElement
block|}
return|;
block|}
specifier|private
name|SOAPMessage
name|prepareSOAPMessage
parameter_list|(
name|String
name|resouceName
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resouceName
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapMessage
init|=
literal|null
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|MimeHeaders
name|mhs
init|=
literal|null
decl_stmt|;
name|soapMessage
operator|=
name|factory
operator|.
name|createMessage
argument_list|(
name|mhs
argument_list|,
name|is
argument_list|)
expr_stmt|;
return|return
name|soapMessage
return|;
block|}
specifier|private
class|class
name|CachedStream
extends|extends
name|CachedOutputStream
block|{
specifier|protected
name|void
name|doFlush
parameter_list|()
throws|throws
name|IOException
block|{
name|currentStream
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|doClose
parameter_list|()
throws|throws
name|IOException
block|{         }
specifier|protected
name|void
name|onWrite
parameter_list|()
throws|throws
name|IOException
block|{         }
block|}
block|}
end_class

end_unit

