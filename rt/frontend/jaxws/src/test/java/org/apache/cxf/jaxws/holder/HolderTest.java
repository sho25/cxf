begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|holder
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|CXFBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|AbstractJaxWsTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|MessageReplayObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|local
operator|.
name|LocalTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|HolderTest
extends|extends
name|AbstractJaxWsTest
block|{
specifier|private
specifier|final
name|String
name|address
init|=
literal|"local://localhost:9000/HolderService"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|Bus
name|createBus
parameter_list|()
throws|throws
name|BusException
block|{
return|return
operator|new
name|CXFBusFactory
argument_list|()
operator|.
name|createBus
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClient
parameter_list|()
throws|throws
name|Exception
block|{
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|(
literal|null
argument_list|,
literal|"http://schemas.xmlsoap.org/soap/http"
argument_list|)
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|Destination
name|d
init|=
name|localTransport
operator|.
name|getDestination
argument_list|(
name|ei
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|d
operator|.
name|setMessageObserver
argument_list|(
operator|new
name|MessageReplayObserver
argument_list|(
literal|"/org/apache/cxf/jaxws/holder/echoResponse.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|JaxWsProxyFactoryBean
name|factory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|getClientFactoryBean
argument_list|()
operator|.
name|setServiceClass
argument_list|(
name|HolderService
operator|.
name|class
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getClientFactoryBean
argument_list|()
operator|.
name|setBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getClientFactoryBean
argument_list|()
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|HolderService
name|h
init|=
operator|(
name|HolderService
operator|)
name|factory
operator|.
name|create
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|String
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"one"
argument_list|,
name|h
operator|.
name|echo
argument_list|(
literal|"one"
argument_list|,
literal|"two"
argument_list|,
name|holder
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"two"
argument_list|,
name|holder
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServer
parameter_list|()
throws|throws
name|Exception
block|{
name|JaxWsServerFactoryBean
name|svr
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|svr
operator|.
name|setBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|svr
operator|.
name|setServiceBean
argument_list|(
operator|new
name|HolderServiceImpl
argument_list|()
argument_list|)
expr_stmt|;
name|svr
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|svr
operator|.
name|create
argument_list|()
expr_stmt|;
name|addNamespace
argument_list|(
literal|"h"
argument_list|,
literal|"http://holder.jaxws.cxf.apache.org/"
argument_list|)
expr_stmt|;
name|Node
name|response
decl_stmt|;
name|response
operator|=
name|invoke
argument_list|(
name|address
argument_list|,
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|,
literal|"echo.xml"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//h:echoResponse/return[text()='one']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//h:echoResponse/return1[text()='two']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertNoFault
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|response
operator|=
name|invoke
argument_list|(
name|address
argument_list|,
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|,
literal|"echo2.xml"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertNoFault
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//h:echo2Response/return[text()='one']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//h:echo2Response/return1[text()='two']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
comment|// test holder with in/out header
name|response
operator|=
name|invoke
argument_list|(
name|address
argument_list|,
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|,
literal|"echo3.xml"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertNoFault
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//h:echo3Response/return[text()='one']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//s:Header/h:header[text()='header']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

