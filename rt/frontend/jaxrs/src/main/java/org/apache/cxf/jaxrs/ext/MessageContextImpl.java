begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|internet
operator|.
name|InternetHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|SecurityContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ContextResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Providers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
operator|.
name|AttachmentUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|Attachment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|MultipartBody
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|interceptor
operator|.
name|AttachmentInputInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_class
specifier|public
class|class
name|MessageContextImpl
implements|implements
name|MessageContext
block|{
specifier|private
name|Message
name|m
decl_stmt|;
specifier|public
name|MessageContextImpl
parameter_list|(
name|Message
name|m
parameter_list|)
block|{
name|this
operator|.
name|m
operator|=
name|m
expr_stmt|;
block|}
specifier|public
name|Object
name|get
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
if|if
condition|(
name|MultipartBody
operator|.
name|INBOUND_MESSAGE_ATTACHMENTS
operator|.
name|equals
argument_list|(
name|key
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|createAttachments
argument_list|(
name|MultipartBody
operator|.
name|INBOUND_MESSAGE_ATTACHMENTS
argument_list|)
return|;
block|}
return|return
name|m
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getContext
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|contextClass
parameter_list|)
block|{
return|return
name|getContext
argument_list|(
name|contextClass
argument_list|,
name|contextClass
argument_list|)
return|;
block|}
specifier|protected
parameter_list|<
name|T
parameter_list|>
name|T
name|getContext
parameter_list|(
name|Type
name|genericType
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|JAXRSUtils
operator|.
name|createContextValue
argument_list|(
name|m
argument_list|,
name|genericType
argument_list|,
name|clazz
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|,
name|E
parameter_list|>
name|T
name|getResolver
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|resolverClazz
parameter_list|,
name|Class
argument_list|<
name|E
argument_list|>
name|resolveClazz
parameter_list|)
block|{
if|if
condition|(
name|ContextResolver
operator|.
name|class
operator|==
name|resolverClazz
condition|)
block|{
return|return
name|resolverClazz
operator|.
name|cast
argument_list|(
name|getContext
argument_list|(
name|resolveClazz
argument_list|,
name|ContextResolver
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|Request
name|getRequest
parameter_list|()
block|{
return|return
name|getContext
argument_list|(
name|Request
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|HttpHeaders
name|getHttpHeaders
parameter_list|()
block|{
return|return
name|getContext
argument_list|(
name|HttpHeaders
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|Providers
name|getProviders
parameter_list|()
block|{
return|return
name|getContext
argument_list|(
name|Providers
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|SecurityContext
name|getSecurityContext
parameter_list|()
block|{
return|return
name|getContext
argument_list|(
name|SecurityContext
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|UriInfo
name|getUriInfo
parameter_list|()
block|{
return|return
name|getContext
argument_list|(
name|UriInfo
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|HttpServletRequest
name|getHttpServletRequest
parameter_list|()
block|{
return|return
name|JAXRSUtils
operator|.
name|createServletResourceValue
argument_list|(
name|m
argument_list|,
name|HttpServletRequest
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|HttpServletResponse
name|getHttpServletResponse
parameter_list|()
block|{
return|return
name|JAXRSUtils
operator|.
name|createServletResourceValue
argument_list|(
name|m
argument_list|,
name|HttpServletResponse
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|ServletConfig
name|getServletConfig
parameter_list|()
block|{
return|return
name|JAXRSUtils
operator|.
name|createServletResourceValue
argument_list|(
name|m
argument_list|,
name|ServletConfig
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|ServletContext
name|getServletContext
parameter_list|()
block|{
return|return
name|JAXRSUtils
operator|.
name|createServletResourceValue
argument_list|(
name|m
argument_list|,
name|ServletContext
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|void
name|put
parameter_list|(
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"MessageContext.put() is not supported yet"
argument_list|)
throw|;
block|}
specifier|private
name|MultipartBody
name|createAttachments
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
name|Object
name|o
init|=
name|m
operator|.
name|get
argument_list|(
name|propertyName
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
return|return
operator|(
name|MultipartBody
operator|)
name|o
return|;
block|}
operator|new
name|AttachmentInputInterceptor
argument_list|()
operator|.
name|handleMessage
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Attachment
argument_list|>
name|newAttachments
init|=
operator|new
name|LinkedList
argument_list|<
name|Attachment
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
name|Attachment
name|first
init|=
operator|new
name|Attachment
argument_list|(
name|AttachmentUtil
operator|.
name|createAttachment
argument_list|(
name|m
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
argument_list|,
operator|(
name|InternetHeaders
operator|)
name|m
operator|.
name|get
argument_list|(
name|InternetHeaders
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|newAttachments
operator|.
name|add
argument_list|(
name|first
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|(
literal|500
argument_list|)
throw|;
block|}
name|Collection
argument_list|<
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
argument_list|>
name|childAttachments
init|=
name|m
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
if|if
condition|(
name|childAttachments
operator|==
literal|null
condition|)
block|{
name|childAttachments
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
name|childAttachments
operator|.
name|size
argument_list|()
expr_stmt|;
for|for
control|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
name|a
range|:
name|childAttachments
control|)
block|{
name|newAttachments
operator|.
name|add
argument_list|(
operator|new
name|Attachment
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|MultipartBody
name|body
init|=
operator|new
name|MultipartBody
argument_list|(
name|newAttachments
argument_list|,
name|getHttpHeaders
argument_list|()
operator|.
name|getMediaType
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|propertyName
argument_list|,
name|body
argument_list|)
expr_stmt|;
return|return
name|body
return|;
block|}
block|}
end_class

end_unit

