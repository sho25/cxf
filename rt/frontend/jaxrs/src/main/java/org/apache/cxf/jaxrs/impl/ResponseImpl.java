begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|MessageProcessingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|EntityTag
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Link
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Link
operator|.
name|Builder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|NewCookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
operator|.
name|Family
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|HttpUtils
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ResponseImpl
extends|extends
name|Response
block|{
specifier|private
specifier|final
name|int
name|status
decl_stmt|;
specifier|private
name|Object
name|entity
decl_stmt|;
specifier|private
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metadata
decl_stmt|;
specifier|private
name|boolean
name|entityClosed
decl_stmt|;
name|ResponseImpl
parameter_list|(
name|int
name|s
parameter_list|,
name|Object
name|e
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|s
expr_stmt|;
name|this
operator|.
name|entity
operator|=
name|e
expr_stmt|;
block|}
specifier|public
name|Object
name|getEntity
parameter_list|()
block|{
return|return
name|entity
return|;
block|}
specifier|public
name|int
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
name|void
name|addMetadata
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|meta
parameter_list|)
block|{
name|this
operator|.
name|metadata
operator|=
name|meta
expr_stmt|;
block|}
specifier|public
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getMetadata
parameter_list|()
block|{
comment|// don't worry about cloning for now
return|return
name|metadata
return|;
block|}
specifier|public
name|boolean
name|bufferEntity
parameter_list|()
throws|throws
name|MessageProcessingException
block|{
if|if
condition|(
name|entity
operator|instanceof
name|InputStream
condition|)
block|{
if|if
condition|(
name|entity
operator|instanceof
name|ByteArrayInputStream
condition|)
block|{
return|return
literal|false
return|;
block|}
else|else
block|{
try|try
block|{
name|InputStream
name|oldEntity
init|=
operator|(
name|InputStream
operator|)
name|entity
decl_stmt|;
name|entity
operator|=
name|IOUtils
operator|.
name|loadIntoBAIS
argument_list|(
name|oldEntity
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|MessageProcessingException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|MessageProcessingException
block|{
if|if
condition|(
operator|!
name|entityClosed
operator|&&
name|entity
operator|instanceof
name|InputStream
operator|&&
operator|!
operator|(
name|entity
operator|instanceof
name|ByteArrayInputStream
operator|)
condition|)
block|{
comment|// unbuffered entity
try|try
block|{
operator|(
operator|(
name|InputStream
operator|)
name|entity
operator|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|entity
operator|=
literal|null
expr_stmt|;
name|entityClosed
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|MessageProcessingException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getAllowedMethods
parameter_list|()
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|methodValues
init|=
name|metadata
operator|.
name|get
argument_list|(
name|HttpHeaders
operator|.
name|ALLOW
argument_list|)
decl_stmt|;
if|if
condition|(
name|methodValues
operator|==
literal|null
condition|)
block|{
return|return
name|Collections
operator|.
name|emptySet
argument_list|()
return|;
block|}
else|else
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|methods
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|methodValues
control|)
block|{
name|methods
operator|.
name|add
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|methods
return|;
block|}
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|NewCookie
argument_list|>
name|getCookies
parameter_list|()
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|cookieValues
init|=
name|metadata
operator|.
name|get
argument_list|(
name|HttpHeaders
operator|.
name|SET_COOKIE
argument_list|)
decl_stmt|;
if|if
condition|(
name|cookieValues
operator|==
literal|null
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyMap
argument_list|()
return|;
block|}
else|else
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|NewCookie
argument_list|>
name|cookies
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|NewCookie
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|cookieValues
control|)
block|{
name|NewCookie
name|newCookie
init|=
name|NewCookie
operator|.
name|valueOf
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|cookies
operator|.
name|put
argument_list|(
name|newCookie
operator|.
name|getName
argument_list|()
argument_list|,
name|newCookie
argument_list|)
expr_stmt|;
block|}
return|return
name|cookies
return|;
block|}
block|}
specifier|public
name|Date
name|getDate
parameter_list|()
block|{
return|return
name|doGetDate
argument_list|(
name|HttpHeaders
operator|.
name|DATE
argument_list|)
return|;
block|}
specifier|private
name|Date
name|doGetDate
parameter_list|(
name|String
name|dateHeader
parameter_list|)
block|{
return|return
name|HttpUtils
operator|.
name|getHttpDate
argument_list|(
name|getHeader
argument_list|(
name|dateHeader
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|EntityTag
name|getEntityTag
parameter_list|()
block|{
name|String
name|header
init|=
name|getHeader
argument_list|(
name|HttpHeaders
operator|.
name|ETAG
argument_list|)
decl_stmt|;
return|return
name|header
operator|==
literal|null
condition|?
literal|null
else|:
name|EntityTag
operator|.
name|valueOf
argument_list|(
name|header
argument_list|)
return|;
block|}
specifier|public
name|String
name|getHeader
parameter_list|(
name|String
name|header
parameter_list|)
block|{
name|Object
name|value
init|=
name|metadata
operator|.
name|getFirst
argument_list|(
name|header
argument_list|)
decl_stmt|;
return|return
name|value
operator|==
literal|null
condition|?
literal|null
else|:
name|value
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|Locale
name|getLanguage
parameter_list|()
block|{
return|return
name|HttpUtils
operator|.
name|getLocale
argument_list|(
name|getHeader
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_LANGUAGE
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Date
name|getLastModified
parameter_list|()
block|{
return|return
name|doGetDate
argument_list|(
name|HttpHeaders
operator|.
name|LAST_MODIFIED
argument_list|)
return|;
block|}
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|HttpUtils
operator|.
name|getContentLength
argument_list|(
name|getHeader
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_LENGTH
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Link
name|getLink
parameter_list|(
name|String
name|relation
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Builder
name|getLinkBuilder
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Link
argument_list|>
name|getLinks
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|URI
name|getLocation
parameter_list|()
block|{
name|String
name|header
init|=
name|getHeader
argument_list|(
name|HttpHeaders
operator|.
name|LOCATION
argument_list|)
decl_stmt|;
return|return
name|header
operator|==
literal|null
condition|?
literal|null
else|:
name|URI
operator|.
name|create
argument_list|(
name|header
argument_list|)
return|;
block|}
specifier|public
name|MediaType
name|getMediaType
parameter_list|()
block|{
name|String
name|header
init|=
name|getHeader
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_LENGTH
argument_list|)
decl_stmt|;
return|return
name|header
operator|==
literal|null
condition|?
literal|null
else|:
name|MediaType
operator|.
name|valueOf
argument_list|(
name|header
argument_list|)
return|;
block|}
specifier|public
name|StatusType
name|getStatusInfo
parameter_list|()
block|{
specifier|final
name|Response
operator|.
name|Status
name|responseStatus
init|=
name|Response
operator|.
name|Status
operator|.
name|fromStatusCode
argument_list|(
name|status
argument_list|)
decl_stmt|;
return|return
operator|new
name|Response
operator|.
name|StatusType
argument_list|()
block|{
specifier|public
name|Family
name|getFamily
parameter_list|()
block|{
return|return
name|responseStatus
operator|.
name|getFamily
argument_list|()
return|;
block|}
specifier|public
name|String
name|getReasonPhrase
parameter_list|()
block|{
return|return
name|responseStatus
operator|.
name|getReasonPhrase
argument_list|()
return|;
block|}
specifier|public
name|int
name|getStatusCode
parameter_list|()
block|{
return|return
name|responseStatus
operator|.
name|getStatusCode
argument_list|()
return|;
block|}
block|}
return|;
block|}
specifier|public
name|boolean
name|hasEntity
parameter_list|()
block|{
return|return
name|getEntity
argument_list|()
operator|!=
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasLink
parameter_list|(
name|String
name|relation
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|readEntity
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
throws|throws
name|MessageProcessingException
throws|,
name|IllegalStateException
block|{
name|checkEntityIsAvailable
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|readEntity
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|genType
parameter_list|)
throws|throws
name|MessageProcessingException
throws|,
name|IllegalStateException
block|{
name|checkEntityIsAvailable
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|readEntity
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|)
throws|throws
name|MessageProcessingException
throws|,
name|IllegalStateException
block|{
name|checkEntityIsAvailable
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|readEntity
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|genType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|)
throws|throws
name|MessageProcessingException
throws|,
name|IllegalStateException
block|{
name|checkEntityIsAvailable
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|checkEntityIsAvailable
parameter_list|()
throws|throws
name|MessageProcessingException
block|{
if|if
condition|(
name|entity
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|MessageProcessingException
argument_list|(
literal|"Entity is not available"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

