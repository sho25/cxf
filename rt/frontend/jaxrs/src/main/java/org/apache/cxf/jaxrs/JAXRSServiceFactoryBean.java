begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ClassHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|SingletonResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|UserResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|AnnotationUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|InjectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
operator|.
name|AbstractServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
operator|.
name|FactoryBeanListener
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|Invoker
import|;
end_import

begin_comment
comment|/**  * Builds a JAX-RS service model from resource classes.  */
end_comment

begin_class
specifier|public
class|class
name|JAXRSServiceFactoryBean
extends|extends
name|AbstractServiceFactoryBean
block|{
specifier|protected
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|classResourceInfos
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassResourceInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Invoker
name|invoker
decl_stmt|;
specifier|private
name|Executor
name|executor
decl_stmt|;
specifier|private
name|boolean
name|enableStatic
decl_stmt|;
specifier|private
name|QName
name|serviceName
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|defaultModelClass
decl_stmt|;
specifier|public
name|JAXRSServiceFactoryBean
parameter_list|()
block|{     }
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
name|Bus
name|bus
init|=
name|super
operator|.
name|getBus
argument_list|()
decl_stmt|;
return|return
name|bus
operator|==
literal|null
condition|?
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
else|:
name|bus
return|;
block|}
specifier|public
name|void
name|setBus
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
if|if
condition|(
name|super
operator|.
name|getBus
argument_list|()
operator|==
literal|null
condition|)
block|{
name|super
operator|.
name|setBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setServiceName
parameter_list|(
name|QName
name|name
parameter_list|)
block|{
name|this
operator|.
name|serviceName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|QName
name|getServiceName
parameter_list|()
block|{
return|return
name|serviceName
return|;
block|}
specifier|public
name|void
name|setEnableStaticResolution
parameter_list|(
name|boolean
name|staticResolution
parameter_list|)
block|{
name|this
operator|.
name|enableStatic
operator|=
name|staticResolution
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Service
name|create
parameter_list|()
block|{
name|sendEvent
argument_list|(
name|Event
operator|.
name|START_CREATE
argument_list|)
expr_stmt|;
name|initializeServiceModel
argument_list|()
expr_stmt|;
name|initializeDefaultInterceptors
argument_list|()
expr_stmt|;
if|if
condition|(
name|invoker
operator|!=
literal|null
condition|)
block|{
name|getService
argument_list|()
operator|.
name|setInvoker
argument_list|(
name|getInvoker
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getService
argument_list|()
operator|.
name|setInvoker
argument_list|(
name|createInvoker
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getExecutor
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|getService
argument_list|()
operator|.
name|setExecutor
argument_list|(
name|getExecutor
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getDataBinding
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|getService
argument_list|()
operator|.
name|setDataBinding
argument_list|(
name|getDataBinding
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Service
name|serv
init|=
name|getService
argument_list|()
decl_stmt|;
name|sendEvent
argument_list|(
name|Event
operator|.
name|END_CREATE
argument_list|,
name|serv
argument_list|)
expr_stmt|;
return|return
name|serv
return|;
block|}
specifier|public
name|Executor
name|getExecutor
parameter_list|()
block|{
return|return
name|executor
return|;
block|}
specifier|public
name|void
name|setExecutor
parameter_list|(
name|Executor
name|executor
parameter_list|)
block|{
name|this
operator|.
name|executor
operator|=
name|executor
expr_stmt|;
block|}
specifier|public
name|Invoker
name|getInvoker
parameter_list|()
block|{
return|return
name|invoker
return|;
block|}
specifier|public
name|void
name|setInvoker
parameter_list|(
name|Invoker
name|invoker
parameter_list|)
block|{
name|this
operator|.
name|invoker
operator|=
name|invoker
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getResourceClasses
parameter_list|()
block|{
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|resourceClasses
init|=
operator|new
name|ArrayList
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ClassResourceInfo
name|cri
range|:
name|classResourceInfos
control|)
block|{
name|resourceClasses
operator|.
name|add
argument_list|(
name|cri
operator|.
name|getResourceClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resourceClasses
return|;
block|}
specifier|public
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|getClassResourceInfo
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|classResourceInfos
argument_list|)
return|;
block|}
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|getRealClassResourceInfo
parameter_list|()
block|{
return|return
name|classResourceInfos
return|;
block|}
specifier|public
name|void
name|setResourceClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
if|if
condition|(
name|getCreatedFromModel
argument_list|(
name|cls
argument_list|)
operator|==
literal|null
condition|)
block|{
name|classResourceInfos
operator|.
name|clear
argument_list|()
expr_stmt|;
name|boolean
name|isRoot
init|=
name|AnnotationUtils
operator|.
name|getClassAnnotation
argument_list|(
name|cls
argument_list|,
name|Path
operator|.
name|class
argument_list|)
operator|!=
literal|null
decl_stmt|;
name|createResourceInfo
argument_list|(
name|cls
argument_list|,
name|isRoot
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setResourceClasses
parameter_list|(
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|resourceClass
range|:
name|classes
control|)
block|{
name|ClassResourceInfo
name|cri
init|=
name|getCreatedFromModel
argument_list|(
name|resourceClass
argument_list|)
decl_stmt|;
if|if
condition|(
name|cri
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|InjectionUtils
operator|.
name|isConcreteClass
argument_list|(
name|cri
operator|.
name|getServiceClass
argument_list|()
argument_list|)
condition|)
block|{
name|cri
operator|=
operator|new
name|ClassResourceInfo
argument_list|(
name|cri
argument_list|)
expr_stmt|;
name|cri
operator|.
name|setResourceClass
argument_list|(
name|resourceClass
argument_list|)
expr_stmt|;
name|classResourceInfos
operator|.
name|add
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
continue|continue;
block|}
name|createResourceInfo
argument_list|(
name|resourceClass
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setUserResources
parameter_list|(
name|List
argument_list|<
name|UserResource
argument_list|>
name|resources
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|UserResource
argument_list|>
name|map
init|=
name|userResourcesAsMap
argument_list|(
name|resources
argument_list|)
decl_stmt|;
for|for
control|(
name|UserResource
name|ur
range|:
name|resources
control|)
block|{
if|if
condition|(
name|ur
operator|.
name|getPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|map
argument_list|,
name|ur
argument_list|,
name|defaultModelClass
argument_list|,
literal|true
argument_list|,
name|enableStatic
argument_list|,
name|getBus
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cri
operator|!=
literal|null
condition|)
block|{
name|classResourceInfos
operator|.
name|add
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|setUserResourcesWithServiceClass
parameter_list|(
name|List
argument_list|<
name|UserResource
argument_list|>
name|resources
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|sClasses
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|UserResource
argument_list|>
name|map
init|=
name|userResourcesAsMap
argument_list|(
name|resources
argument_list|)
decl_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|sClass
range|:
name|sClasses
control|)
block|{
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createServiceClassResourceInfo
argument_list|(
name|map
argument_list|,
name|map
operator|.
name|get
argument_list|(
name|sClass
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|sClass
argument_list|,
literal|true
argument_list|,
name|enableStatic
argument_list|,
name|getBus
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cri
operator|!=
literal|null
condition|)
block|{
name|classResourceInfos
operator|.
name|add
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|UserResource
argument_list|>
name|userResourcesAsMap
parameter_list|(
name|List
argument_list|<
name|UserResource
argument_list|>
name|resources
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|UserResource
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|UserResource
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|UserResource
name|ur
range|:
name|resources
control|)
block|{
name|map
operator|.
name|put
argument_list|(
name|ur
operator|.
name|getName
argument_list|()
argument_list|,
name|ur
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
specifier|protected
name|ClassResourceInfo
name|createResourceInfo
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|boolean
name|isRoot
parameter_list|)
block|{
name|ClassResourceInfo
name|classResourceInfo
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|cls
argument_list|,
name|cls
argument_list|,
name|isRoot
argument_list|,
name|enableStatic
argument_list|,
name|getBus
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|classResourceInfo
operator|!=
literal|null
condition|)
block|{
name|classResourceInfos
operator|.
name|add
argument_list|(
name|classResourceInfo
argument_list|)
expr_stmt|;
block|}
return|return
name|classResourceInfo
return|;
block|}
specifier|public
name|void
name|setResourceClasses
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|classes
parameter_list|)
block|{
name|setResourceClasses
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|classes
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setResourceClassesFromBeans
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|beans
parameter_list|)
block|{
for|for
control|(
name|Object
name|bean
range|:
name|beans
control|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|realClass
init|=
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|bean
argument_list|)
decl_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|getCreatedFromModel
argument_list|(
name|realClass
argument_list|)
decl_stmt|;
if|if
condition|(
name|cri
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|InjectionUtils
operator|.
name|isConcreteClass
argument_list|(
name|cri
operator|.
name|getServiceClass
argument_list|()
argument_list|)
condition|)
block|{
name|cri
operator|=
operator|new
name|ClassResourceInfo
argument_list|(
name|cri
argument_list|)
expr_stmt|;
name|classResourceInfos
operator|.
name|add
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
name|cri
operator|.
name|setResourceClass
argument_list|(
name|bean
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|bean
argument_list|)
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|cri
operator|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|bean
operator|.
name|getClass
argument_list|()
argument_list|,
name|realClass
argument_list|,
literal|true
argument_list|,
name|enableStatic
argument_list|,
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cri
operator|!=
literal|null
condition|)
block|{
name|classResourceInfos
operator|.
name|add
argument_list|(
name|cri
argument_list|)
expr_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|bean
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|ClassResourceInfo
name|getCreatedFromModel
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|realClass
parameter_list|)
block|{
name|sendEvent
argument_list|(
name|Event
operator|.
name|CREATE_FROM_CLASS
argument_list|,
name|realClass
argument_list|)
expr_stmt|;
for|for
control|(
name|ClassResourceInfo
name|cri
range|:
name|classResourceInfos
control|)
block|{
if|if
condition|(
name|cri
operator|.
name|isCreatedFromModel
argument_list|()
operator|&&
name|cri
operator|.
name|isRoot
argument_list|()
operator|&&
name|cri
operator|.
name|getServiceClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|realClass
argument_list|)
condition|)
block|{
return|return
name|cri
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|protected
name|void
name|initializeServiceModel
parameter_list|()
block|{
name|JAXRSServiceImpl
name|service
init|=
operator|new
name|JAXRSServiceImpl
argument_list|(
name|classResourceInfos
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|setService
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|sendEvent
argument_list|(
name|Event
operator|.
name|SERVICE_SET
argument_list|,
name|service
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|Invoker
name|createInvoker
parameter_list|()
block|{
return|return
operator|new
name|JAXRSInvoker
argument_list|()
return|;
block|}
specifier|public
name|void
name|setService
parameter_list|(
name|Service
name|service
parameter_list|)
block|{
name|super
operator|.
name|setService
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getDefaultModelClass
parameter_list|()
block|{
return|return
name|defaultModelClass
return|;
block|}
specifier|public
name|void
name|setDefaultModelClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|defaultModelClass
parameter_list|)
block|{
name|this
operator|.
name|defaultModelClass
operator|=
name|defaultModelClass
expr_stmt|;
block|}
block|}
end_class

end_unit

