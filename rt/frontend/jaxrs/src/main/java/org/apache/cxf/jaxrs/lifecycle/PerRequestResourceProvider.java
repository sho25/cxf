begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_class
specifier|public
class|class
name|PerRequestResourceProvider
implements|implements
name|ResourceProvider
block|{
specifier|private
name|Constructor
argument_list|<
name|?
argument_list|>
name|c
decl_stmt|;
specifier|public
name|PerRequestResourceProvider
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
name|c
operator|=
name|ResourceUtils
operator|.
name|findResourceConstructor
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
if|if
condition|(
name|c
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Resource class "
operator|+
name|clazz
operator|+
literal|" has no valid constructor"
argument_list|)
throw|;
block|}
block|}
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|Object
name|getInstance
parameter_list|(
name|Message
name|m
parameter_list|)
block|{
return|return
name|createInstance
argument_list|(
name|m
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|c
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Resource class constructor has context parameters "
operator|+
literal|"but no request message is available"
argument_list|)
throw|;
block|}
return|return
name|createInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
specifier|protected
name|Object
name|createInstance
parameter_list|(
name|Message
name|m
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|params
init|=
name|c
operator|.
name|getParameterTypes
argument_list|()
decl_stmt|;
name|Type
index|[]
name|genericTypes
init|=
name|c
operator|.
name|getGenericParameterTypes
argument_list|()
decl_stmt|;
name|Object
index|[]
name|values
init|=
operator|new
name|Object
index|[]
block|{
name|params
operator|.
name|length
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|params
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|values
index|[
name|i
index|]
operator|=
name|JAXRSUtils
operator|.
name|createContextValue
argument_list|(
name|m
argument_list|,
name|genericTypes
index|[
name|i
index|]
argument_list|,
name|params
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
try|try
block|{
return|return
name|params
operator|.
name|length
operator|>
literal|0
condition|?
name|c
operator|.
name|newInstance
argument_list|(
name|values
argument_list|)
else|:
name|c
operator|.
name|newInstance
argument_list|(
operator|new
name|Object
index|[]
block|{}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InstantiationException
name|ex
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"Resource class "
operator|+
name|c
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" can not be instantiated"
decl_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|entity
argument_list|(
name|msg
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|ex
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"Resource class "
operator|+
name|c
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" can not be instantiated"
operator|+
literal|" due to IllegalAccessException"
decl_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|entity
argument_list|(
name|msg
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InvocationTargetException
name|ex
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"Resource class "
operator|+
name|c
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" can not be instantiated"
operator|+
literal|" due to InvocationTargetException"
decl_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|entity
argument_list|(
name|msg
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

