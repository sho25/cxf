begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|AsyncResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|TimeoutHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|continuations
operator|.
name|Continuation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|continuations
operator|.
name|ContinuationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_class
specifier|public
class|class
name|AsyncResponseImpl
implements|implements
name|AsyncResponse
block|{
specifier|private
name|Continuation
name|cont
decl_stmt|;
specifier|private
name|Object
name|responseObject
decl_stmt|;
specifier|private
name|long
name|timeout
init|=
literal|5000
decl_stmt|;
specifier|private
name|Message
name|inMessage
decl_stmt|;
specifier|private
name|boolean
name|suspended
decl_stmt|;
specifier|private
name|boolean
name|cancelled
decl_stmt|;
specifier|public
name|AsyncResponseImpl
parameter_list|(
name|Message
name|inMessage
parameter_list|)
block|{
name|ContinuationProvider
name|provider
init|=
operator|(
name|ContinuationProvider
operator|)
name|inMessage
operator|.
name|get
argument_list|(
name|ContinuationProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|cont
operator|=
name|provider
operator|.
name|getContinuation
argument_list|()
expr_stmt|;
name|inMessage
operator|.
name|put
argument_list|(
name|AsyncResponse
operator|.
name|class
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|inMessage
operator|=
name|inMessage
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|resume
parameter_list|(
name|Object
name|response
parameter_list|)
throws|throws
name|IllegalStateException
block|{
name|doResume
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|resume
parameter_list|(
name|Throwable
name|response
parameter_list|)
throws|throws
name|IllegalStateException
block|{
name|doResume
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doResume
parameter_list|(
name|Object
name|response
parameter_list|)
throws|throws
name|IllegalStateException
block|{
name|responseObject
operator|=
name|response
expr_stmt|;
name|inMessage
operator|.
name|getExchange
argument_list|()
operator|.
name|put
argument_list|(
name|AsyncResponse
operator|.
name|class
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|suspended
operator|=
literal|false
expr_stmt|;
name|cont
operator|.
name|resume
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cancel
parameter_list|()
block|{
name|cancel
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
comment|//TODO: has to be long
specifier|public
name|void
name|cancel
parameter_list|(
name|int
name|retryAfter
parameter_list|)
block|{
name|cancelled
operator|=
literal|true
expr_stmt|;
name|doResume
argument_list|(
name|Response
operator|.
name|status
argument_list|(
literal|503
argument_list|)
operator|.
name|header
argument_list|(
name|HttpHeaders
operator|.
name|RETRY_AFTER
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|retryAfter
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cancel
parameter_list|(
name|Date
name|retryAfter
parameter_list|)
block|{
name|cancel
argument_list|(
call|(
name|int
call|)
argument_list|(
name|retryAfter
operator|.
name|getTime
argument_list|()
operator|-
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSuspended
parameter_list|()
block|{
return|return
name|suspended
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCancelled
parameter_list|()
block|{
return|return
name|cancelled
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDone
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTimeout
parameter_list|(
name|long
name|time
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
throws|throws
name|IllegalStateException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTimeoutHandler
parameter_list|(
name|TimeoutHandler
name|handler
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|register
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|callback
parameter_list|)
throws|throws
name|NullPointerException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
index|[]
name|register
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|callback
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|callbacks
parameter_list|)
throws|throws
name|NullPointerException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|register
parameter_list|(
name|Object
name|callback
parameter_list|)
throws|throws
name|NullPointerException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
index|[]
name|register
parameter_list|(
name|Object
name|callback
parameter_list|,
name|Object
modifier|...
name|callbacks
parameter_list|)
throws|throws
name|NullPointerException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
comment|// these methods are called by the runtime, not part of AsyncResponse
specifier|public
name|void
name|suspend
parameter_list|()
block|{
name|cont
operator|.
name|setObject
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|cont
operator|.
name|suspend
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|getResponseObject
parameter_list|()
block|{
return|return
name|responseObject
return|;
block|}
block|}
end_class

end_unit

