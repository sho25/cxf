begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|cors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|ResponseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|ResponseHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_comment
comment|/**  * An output filter for CORS, following http://www.w3.org/TR/cors/.   * This looks at the information left by the {@link CrossOriginInputFilter}  * and its properties to add appropriate headers to the response.  */
end_comment

begin_class
specifier|public
class|class
name|CrossOriginOutputFilter
implements|implements
name|ResponseHandler
block|{
specifier|private
name|boolean
name|allowCredentials
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|exposeHeaders
decl_stmt|;
specifier|private
name|Integer
name|maxAge
decl_stmt|;
specifier|public
name|CrossOriginOutputFilter
parameter_list|()
block|{
name|exposeHeaders
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|getHeadersFromInput
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|Object
name|obj
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|List
argument_list|<
name|?
argument_list|>
condition|)
block|{
return|return
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|obj
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|addHeaders
parameter_list|(
name|ResponseBuilder
name|rb
parameter_list|,
name|String
name|key
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|vals
parameter_list|)
block|{
for|for
control|(
name|String
name|v
range|:
name|vals
control|)
block|{
name|rb
operator|.
name|header
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Response
name|handleResponse
parameter_list|(
name|Message
name|m
parameter_list|,
name|OperationResourceInfo
name|ori
parameter_list|,
name|Response
name|response
parameter_list|)
block|{
name|String
name|op
init|=
operator|(
name|String
operator|)
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|CrossOriginOutputFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|==
literal|null
condition|)
block|{
return|return
name|response
return|;
comment|// we're not here.
block|}
name|List
argument_list|<
name|String
argument_list|>
name|originHeader
init|=
name|getHeadersFromInput
argument_list|(
name|m
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_ORIGIN
argument_list|)
decl_stmt|;
name|ResponseBuilder
name|rbuilder
init|=
name|Response
operator|.
name|fromResponse
argument_list|(
name|response
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"simple"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
comment|// 5.1.3: add Allow-Origin supplied from the input side, plus allow-credentials as requested
name|addHeaders
argument_list|(
name|rbuilder
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_ORIGIN
argument_list|,
name|originHeader
argument_list|)
expr_stmt|;
name|rbuilder
operator|.
name|header
argument_list|(
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_CREDENTIALS
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|allowCredentials
argument_list|)
argument_list|)
expr_stmt|;
comment|// 5.1.4 add allowed headers
name|List
argument_list|<
name|String
argument_list|>
name|allowedHeaders
init|=
name|getHeadersFromInput
argument_list|(
name|m
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_METHODS
argument_list|)
decl_stmt|;
if|if
condition|(
name|allowedHeaders
operator|!=
literal|null
condition|)
block|{
name|addHeaders
argument_list|(
name|rbuilder
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_METHODS
argument_list|,
name|allowedHeaders
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|exposeHeaders
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|addHeaders
argument_list|(
name|rbuilder
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_EXPOSE_HEADERS
argument_list|,
name|exposeHeaders
argument_list|)
expr_stmt|;
block|}
comment|// if someone wants to clear the cache, we can't help them.
return|return
name|rbuilder
operator|.
name|build
argument_list|()
return|;
block|}
else|else
block|{
comment|// preflight
comment|// 5.2.7 add Allow-Origin supplied from the input side, plus allow-credentials as requested
name|addHeaders
argument_list|(
name|rbuilder
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_ORIGIN
argument_list|,
name|originHeader
argument_list|)
expr_stmt|;
name|rbuilder
operator|.
name|header
argument_list|(
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_CREDENTIALS
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|allowCredentials
argument_list|)
argument_list|)
expr_stmt|;
comment|// 5.2.8 max-age
if|if
condition|(
name|maxAge
operator|!=
literal|null
condition|)
block|{
name|rbuilder
operator|.
name|header
argument_list|(
name|CorsHeaderConstants
operator|.
name|HEADER_AC_MAX_AGE
argument_list|,
name|maxAge
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// 5.2.9 add allowed methods
comment|/*              * Currently, input side just lists the one requested method, and spec endorses that.              */
name|addHeaders
argument_list|(
name|rbuilder
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_METHODS
argument_list|,
name|getHeadersFromInput
argument_list|(
name|m
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_METHODS
argument_list|)
argument_list|)
expr_stmt|;
comment|// 5.2.10 add allowed headers
name|List
argument_list|<
name|String
argument_list|>
name|allowedHeaders
init|=
name|getHeadersFromInput
argument_list|(
name|m
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_HEADERS
argument_list|)
decl_stmt|;
if|if
condition|(
name|allowedHeaders
operator|!=
literal|null
operator|&&
name|allowedHeaders
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|addHeaders
argument_list|(
name|rbuilder
argument_list|,
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_HEADERS
argument_list|,
name|allowedHeaders
argument_list|)
expr_stmt|;
block|}
return|return
name|rbuilder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
specifier|public
name|boolean
name|isAllowCredentials
parameter_list|()
block|{
return|return
name|allowCredentials
return|;
block|}
comment|/**      * The value for the Access-Control-Allow-Credentials header. If false, no header is added.      * If true, the header is added with the value 'true'.      * @param allowCredentials      */
specifier|public
name|void
name|setAllowCredentials
parameter_list|(
name|boolean
name|allowCredentials
parameter_list|)
block|{
name|this
operator|.
name|allowCredentials
operator|=
name|allowCredentials
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getExposeHeaders
parameter_list|()
block|{
return|return
name|exposeHeaders
return|;
block|}
comment|/**      * A list of non-simple headers to be exposed via Access-Control-Expose-Headers.      * @param exposeHeaders the list of (case-sensitive) header names.      */
specifier|public
name|void
name|setExposeHeaders
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|exposeHeaders
parameter_list|)
block|{
name|this
operator|.
name|exposeHeaders
operator|=
name|exposeHeaders
expr_stmt|;
block|}
specifier|public
name|Integer
name|getMaxAge
parameter_list|()
block|{
return|return
name|maxAge
return|;
block|}
comment|/**      * The value for Access-Control-Max-Age.      * @param maxAge An integer 'delta-seconds' or null. If null, no header is added.      */
specifier|public
name|void
name|setMaxAge
parameter_list|(
name|Integer
name|maxAge
parameter_list|)
block|{
name|this
operator|.
name|maxAge
operator|=
name|maxAge
expr_stmt|;
block|}
block|}
end_class

end_unit

