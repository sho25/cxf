begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|logging
operator|.
name|atom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|abdera
operator|.
name|Abdera
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|abdera
operator|.
name|factory
operator|.
name|Factory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|abdera
operator|.
name|model
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|abdera
operator|.
name|model
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|abdera
operator|.
name|model
operator|.
name|ExtensibleElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|abdera
operator|.
name|model
operator|.
name|Feed
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|logging
operator|.
name|LogRecord
import|;
end_import

begin_comment
comment|/**  * Single entry in feed with list of log records embedded as ATOM extension.  */
end_comment

begin_class
specifier|public
class|class
name|SingleEntryExtensionConverter
implements|implements
name|Converter
block|{
specifier|private
name|Factory
name|factory
init|=
name|Abdera
operator|.
name|getNewFactory
argument_list|()
decl_stmt|;
specifier|private
name|DateFormat
name|df
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd'T'HH:mm:ss.SSSZ"
argument_list|)
decl_stmt|;
specifier|public
name|Element
name|convert
parameter_list|(
name|List
argument_list|<
name|LogRecord
argument_list|>
name|records
parameter_list|)
block|{
name|Feed
name|feed
init|=
name|factory
operator|.
name|newFeed
argument_list|()
decl_stmt|;
name|Entry
name|entry
init|=
name|factory
operator|.
name|newEntry
argument_list|()
decl_stmt|;
name|feed
operator|.
name|addEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|ExtensibleElement
name|list
init|=
name|entry
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"logRecordsList"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|LogRecord
name|rec
range|:
name|records
control|)
block|{
name|ExtensibleElement
name|erec
init|=
name|list
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"logRecord"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|date
init|=
name|df
operator|.
name|format
argument_list|(
name|rec
operator|.
name|getEventTimestamp
argument_list|()
argument_list|)
decl_stmt|;
comment|// timezone in date does not have semicolon as XML Date requires
comment|// e.g we have "2009-11-23T22:03:53.996+0100"
comment|// instead of "2009-11-23T22:03:53.996+01:00"
name|date
operator|=
name|date
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|date
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|)
operator|+
literal|":"
operator|+
name|date
operator|.
name|substring
argument_list|(
name|date
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
comment|// forget about single line "addExtension().setText()" since
comment|// javac failure "org.apache.abdera.model.Element cannot be dereferenced"
name|Element
name|e
init|=
name|erec
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"eventTimestamp"
argument_list|)
argument_list|)
decl_stmt|;
name|e
operator|.
name|setText
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|e
operator|=
name|erec
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"level"
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|setText
argument_list|(
name|rec
operator|.
name|getLevel
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|=
name|erec
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"loggerName"
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|setText
argument_list|(
name|rec
operator|.
name|getLoggerName
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|=
name|erec
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"message"
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|setText
argument_list|(
name|rec
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|=
name|erec
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"threadName"
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|setText
argument_list|(
name|rec
operator|.
name|getThreadName
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|=
name|erec
operator|.
name|addExtension
argument_list|(
name|qn
argument_list|(
literal|"throwable"
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|setText
argument_list|(
name|rec
operator|.
name|getThrowable
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|feed
return|;
block|}
specifier|private
name|QName
name|qn
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/jaxrs/log"
argument_list|,
name|name
argument_list|,
literal|"log"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

