begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Array
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ContextResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|ValidationEventHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAnyElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlJavaTypeAdapter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|validation
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|BundleUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|InjectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|schemas
operator|.
name|SchemaHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|PhaseInterceptorChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|DepthXMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|transform
operator|.
name|TransformUtils
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractJAXBProvider
parameter_list|<
name|T
parameter_list|>
extends|extends
name|AbstractConfigurableProvider
implements|implements
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|T
argument_list|>
block|{
specifier|protected
specifier|static
specifier|final
name|ResourceBundle
name|BUNDLE
init|=
name|BundleUtils
operator|.
name|getBundle
argument_list|(
name|AbstractJAXBProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AbstractJAXBProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JAXB_DEFAULT_NAMESPACE
init|=
literal|"##default"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JAXB_DEFAULT_NAME
init|=
literal|"##default"
decl_stmt|;
specifier|protected
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|collectionContextClasses
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jaxbElementClassMap
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|protected
name|boolean
name|unmarshalAsJaxbElement
decl_stmt|;
specifier|protected
name|boolean
name|marshalAsJaxbElement
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outElementsMap
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outAppendMap
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|outDropElements
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|inDropElements
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inElementsMap
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inAppendMap
decl_stmt|;
specifier|private
name|boolean
name|attributesToElements
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|JAXBContext
argument_list|>
name|packageContexts
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|JAXBContext
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|JAXBContext
argument_list|>
name|classContexts
init|=
operator|new
name|HashMap
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|JAXBContext
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|MessageContext
name|mc
decl_stmt|;
specifier|private
name|Schema
name|schema
decl_stmt|;
specifier|private
name|String
name|collectionWrapperName
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|collectionWrapperMap
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|jaxbElementClassNames
init|=
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|cProperties
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|uProperties
decl_stmt|;
specifier|private
name|boolean
name|skipJaxbChecks
decl_stmt|;
specifier|private
name|boolean
name|singleJaxbContext
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|extraClass
decl_stmt|;
specifier|private
name|boolean
name|validateOutput
decl_stmt|;
specifier|private
name|boolean
name|validateBeforeWrite
decl_stmt|;
specifier|private
name|ValidationEventHandler
name|eventHandler
decl_stmt|;
specifier|public
name|void
name|setValidationHandler
parameter_list|(
name|ValidationEventHandler
name|handler
parameter_list|)
block|{
name|eventHandler
operator|=
name|handler
expr_stmt|;
block|}
specifier|public
name|void
name|setSingleJaxbContext
parameter_list|(
name|boolean
name|useSingleContext
parameter_list|)
block|{
name|singleJaxbContext
operator|=
name|useSingleContext
expr_stmt|;
block|}
specifier|public
name|void
name|setExtraClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|userExtraClass
parameter_list|)
block|{
name|extraClass
operator|=
name|userExtraClass
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|cris
parameter_list|)
block|{
if|if
condition|(
name|singleJaxbContext
condition|)
block|{
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|allTypes
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|(
name|ResourceUtils
operator|.
name|getAllRequestResponseTypes
argument_list|(
name|cris
argument_list|,
literal|true
argument_list|)
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|JAXBContext
name|context
init|=
name|ResourceUtils
operator|.
name|createJaxbContext
argument_list|(
name|allTypes
argument_list|,
name|extraClass
argument_list|,
name|cProperties
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
range|:
name|allTypes
control|)
block|{
name|classContexts
operator|.
name|put
argument_list|(
name|cls
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|setContextProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|contextProperties
parameter_list|)
block|{
name|cProperties
operator|=
name|contextProperties
expr_stmt|;
block|}
specifier|public
name|void
name|setUnmarshallerProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|unmarshalProperties
parameter_list|)
block|{
name|uProperties
operator|=
name|unmarshalProperties
expr_stmt|;
block|}
specifier|public
name|void
name|setUnmarshallAsJaxbElement
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|unmarshalAsJaxbElement
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|void
name|setMarshallAsJaxbElement
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|marshalAsJaxbElement
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|void
name|setJaxbElementClassNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
name|jaxbElementClassNames
operator|=
name|names
expr_stmt|;
block|}
specifier|public
name|void
name|setJaxbElementClassMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|)
block|{
name|jaxbElementClassMap
operator|=
name|map
expr_stmt|;
block|}
specifier|protected
name|void
name|checkContentLength
parameter_list|()
block|{
if|if
condition|(
name|mc
operator|!=
literal|null
condition|)
block|{
name|HttpHeaders
name|headers
init|=
name|mc
operator|.
name|getHttpHeaders
argument_list|()
decl_stmt|;
if|if
condition|(
name|headers
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
name|mc
operator|.
name|getHttpHeaders
argument_list|()
operator|.
name|getRequestHeader
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_LENGTH
argument_list|)
decl_stmt|;
if|if
condition|(
name|values
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
literal|"0"
operator|.
name|equals
argument_list|(
name|values
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
condition|)
block|{
name|String
name|message
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"EMPTY_BODY"
argument_list|,
name|BUNDLE
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|warning
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
literal|400
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|protected
parameter_list|<
name|X
parameter_list|>
name|X
name|getStaxHandlerFromCurrentMessage
parameter_list|(
name|Class
argument_list|<
name|X
argument_list|>
name|staxCls
parameter_list|)
block|{
name|Message
name|m
init|=
name|PhaseInterceptorChain
operator|.
name|getCurrentMessage
argument_list|()
decl_stmt|;
if|if
condition|(
name|m
operator|!=
literal|null
condition|)
block|{
return|return
name|staxCls
operator|.
name|cast
argument_list|(
name|m
operator|.
name|getContent
argument_list|(
name|staxCls
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|protected
specifier|static
name|boolean
name|isXmlRoot
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|cls
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
specifier|protected
name|Object
name|convertToJaxbElementIfNeeded
parameter_list|(
name|Object
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|genericType
parameter_list|)
throws|throws
name|Exception
block|{
name|boolean
name|asJaxbElement
init|=
name|jaxbElementClassNames
operator|.
name|contains
argument_list|(
name|cls
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|asJaxbElement
operator|&&
name|isXmlRoot
argument_list|(
name|cls
argument_list|)
condition|)
block|{
return|return
name|obj
return|;
block|}
name|QName
name|name
init|=
literal|null
decl_stmt|;
name|String
name|expandedName
init|=
name|jaxbElementClassMap
operator|.
name|get
argument_list|(
name|cls
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|expandedName
operator|!=
literal|null
condition|)
block|{
name|name
operator|=
name|JAXRSUtils
operator|.
name|convertStringToQName
argument_list|(
name|expandedName
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|marshalAsJaxbElement
operator|||
name|asJaxbElement
condition|)
block|{
name|name
operator|=
name|getJaxbQName
argument_list|(
name|cls
argument_list|,
name|genericType
argument_list|,
name|obj
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|name
operator|!=
literal|null
condition|?
operator|new
name|JAXBElement
argument_list|<
name|Object
argument_list|>
argument_list|(
name|name
argument_list|,
operator|(
name|Class
operator|)
name|cls
argument_list|,
literal|null
argument_list|,
name|obj
argument_list|)
else|:
name|obj
return|;
block|}
specifier|public
name|void
name|setCollectionWrapperName
parameter_list|(
name|String
name|wName
parameter_list|)
block|{
name|collectionWrapperName
operator|=
name|wName
expr_stmt|;
block|}
specifier|public
name|void
name|setCollectionWrapperMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|)
block|{
name|collectionWrapperMap
operator|=
name|map
expr_stmt|;
block|}
specifier|protected
name|void
name|setContext
parameter_list|(
name|MessageContext
name|context
parameter_list|)
block|{
name|mc
operator|=
name|context
expr_stmt|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
if|if
condition|(
name|InjectionUtils
operator|.
name|isSupportedCollectionOrArray
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|type
operator|=
name|InjectionUtils
operator|.
name|getActualType
argument_list|(
name|genericType
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
name|marshalAsJaxbElement
operator|||
name|isSupported
argument_list|(
name|type
argument_list|,
name|genericType
argument_list|,
name|anns
argument_list|)
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|T
name|t
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
name|annotations
index|[]
parameter_list|,
name|MediaType
name|mediaType
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|httpHeaders
parameter_list|,
name|OutputStream
name|entityStream
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Class
argument_list|<
name|T
argument_list|>
name|type
init|=
operator|(
name|Class
argument_list|<
name|T
argument_list|>
operator|)
name|t
operator|.
name|getClass
argument_list|()
decl_stmt|;
name|writeTo
argument_list|(
name|t
argument_list|,
name|type
argument_list|,
name|genericType
argument_list|,
name|annotations
argument_list|,
name|mediaType
argument_list|,
name|httpHeaders
argument_list|,
name|entityStream
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|JAXBContext
name|getCollectionContext
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
throws|throws
name|JAXBException
block|{
synchronized|synchronized
init|(
name|collectionContextClasses
init|)
block|{
if|if
condition|(
operator|!
name|collectionContextClasses
operator|.
name|contains
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|collectionContextClasses
operator|.
name|add
argument_list|(
name|CollectionWrapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|collectionContextClasses
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
return|return
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|collectionContextClasses
operator|.
name|toArray
argument_list|(
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|,
name|cProperties
argument_list|)
return|;
block|}
block|}
specifier|protected
name|QName
name|getCollectionWrapperQName
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|type
parameter_list|,
name|Object
name|object
parameter_list|,
name|boolean
name|pluralName
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|name
init|=
name|getCollectionWrapperName
argument_list|(
name|cls
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
return|return
name|getJaxbQName
argument_list|(
name|cls
argument_list|,
name|type
argument_list|,
name|object
argument_list|,
name|pluralName
argument_list|)
return|;
block|}
return|return
name|JAXRSUtils
operator|.
name|convertStringToQName
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|private
name|String
name|getCollectionWrapperName
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
if|if
condition|(
name|collectionWrapperName
operator|!=
literal|null
condition|)
block|{
return|return
name|collectionWrapperName
return|;
block|}
if|if
condition|(
name|collectionWrapperMap
operator|!=
literal|null
condition|)
block|{
return|return
name|collectionWrapperMap
operator|.
name|get
argument_list|(
name|cls
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|protected
name|QName
name|getJaxbQName
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|type
parameter_list|,
name|Object
name|object
parameter_list|,
name|boolean
name|pluralName
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|cls
operator|==
name|JAXBElement
operator|.
name|class
condition|)
block|{
return|return
name|object
operator|!=
literal|null
condition|?
operator|(
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|object
operator|)
operator|.
name|getName
argument_list|()
else|:
literal|null
return|;
block|}
name|XmlRootElement
name|root
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|root
operator|!=
literal|null
condition|)
block|{
return|return
name|getQNameFromNamespaceAndName
argument_list|(
name|root
operator|.
name|namespace
argument_list|()
argument_list|,
name|root
operator|.
name|name
argument_list|()
argument_list|,
name|cls
argument_list|,
name|pluralName
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|cls
operator|.
name|getAnnotation
argument_list|(
name|XmlType
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|XmlType
name|xmlType
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|XmlType
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|getQNameFromNamespaceAndName
argument_list|(
name|xmlType
operator|.
name|namespace
argument_list|()
argument_list|,
name|xmlType
operator|.
name|name
argument_list|()
argument_list|,
name|cls
argument_list|,
name|pluralName
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|QName
argument_list|(
name|getPackageNamespace
argument_list|(
name|cls
argument_list|)
argument_list|,
name|cls
operator|.
name|getSimpleName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
name|QName
name|getQNameFromNamespaceAndName
parameter_list|(
name|String
name|ns
parameter_list|,
name|String
name|localName
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|boolean
name|plural
parameter_list|)
block|{
name|String
name|name
init|=
name|getLocalName
argument_list|(
name|localName
argument_list|,
name|cls
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|plural
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|getNamespace
argument_list|(
name|ns
argument_list|)
decl_stmt|;
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|namespace
argument_list|)
condition|)
block|{
name|namespace
operator|=
name|getPackageNamespace
argument_list|(
name|cls
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|QName
argument_list|(
name|namespace
argument_list|,
name|name
argument_list|)
return|;
block|}
specifier|private
name|String
name|getLocalName
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|clsName
parameter_list|,
name|boolean
name|pluralName
parameter_list|)
block|{
if|if
condition|(
name|JAXB_DEFAULT_NAME
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|name
operator|=
name|clsName
expr_stmt|;
if|if
condition|(
name|name
operator|.
name|length
argument_list|()
operator|>
literal|1
condition|)
block|{
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|toLowerCase
argument_list|()
operator|+
name|name
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|name
operator|=
name|name
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|pluralName
condition|)
block|{
name|name
operator|+=
literal|'s'
expr_stmt|;
block|}
return|return
name|name
return|;
block|}
specifier|private
name|String
name|getPackageNamespace
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
name|String
name|packageNs
init|=
name|JAXBUtils
operator|.
name|getPackageNamespace
argument_list|(
name|cls
argument_list|)
decl_stmt|;
return|return
name|packageNs
operator|!=
literal|null
condition|?
name|getNamespace
argument_list|(
name|packageNs
argument_list|)
else|:
literal|""
return|;
block|}
specifier|private
name|String
name|getNamespace
parameter_list|(
name|String
name|namespace
parameter_list|)
block|{
if|if
condition|(
name|JAXB_DEFAULT_NAMESPACE
operator|.
name|equals
argument_list|(
name|namespace
argument_list|)
condition|)
block|{
return|return
literal|""
return|;
block|}
return|return
name|namespace
return|;
block|}
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
if|if
condition|(
name|InjectionUtils
operator|.
name|isSupportedCollectionOrArray
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|type
operator|=
name|InjectionUtils
operator|.
name|getActualType
argument_list|(
name|genericType
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
name|canBeReadAsJaxbElement
argument_list|(
name|type
argument_list|)
operator|||
name|isSupported
argument_list|(
name|type
argument_list|,
name|genericType
argument_list|,
name|anns
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|canBeReadAsJaxbElement
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|unmarshalAsJaxbElement
operator|&&
name|type
operator|!=
name|Response
operator|.
name|class
return|;
block|}
specifier|public
name|void
name|setSchemaLocations
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|locations
parameter_list|)
block|{
name|schema
operator|=
name|SchemaHandler
operator|.
name|createSchema
argument_list|(
name|locations
argument_list|,
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSchema
parameter_list|(
name|Schema
name|s
parameter_list|)
block|{
name|schema
operator|=
name|s
expr_stmt|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|T
name|o
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
specifier|protected
name|MessageContext
name|getContext
parameter_list|()
block|{
return|return
name|mc
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|JAXBContext
name|getJAXBContext
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|)
throws|throws
name|JAXBException
block|{
if|if
condition|(
name|mc
operator|!=
literal|null
condition|)
block|{
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|resolver
init|=
name|mc
operator|.
name|getResolver
argument_list|(
name|ContextResolver
operator|.
name|class
argument_list|,
name|JAXBContext
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|resolver
operator|!=
literal|null
condition|)
block|{
name|JAXBContext
name|customContext
init|=
name|resolver
operator|.
name|getContext
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|customContext
operator|!=
literal|null
condition|)
block|{
return|return
name|customContext
return|;
block|}
block|}
block|}
synchronized|synchronized
init|(
name|classContexts
init|)
block|{
name|JAXBContext
name|context
init|=
name|classContexts
operator|.
name|get
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
return|return
name|context
return|;
block|}
block|}
name|JAXBContext
name|context
init|=
name|getPackageContext
argument_list|(
name|type
argument_list|)
decl_stmt|;
return|return
name|context
operator|!=
literal|null
condition|?
name|context
else|:
name|getClassContext
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|JAXBContext
name|getClassContext
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
throws|throws
name|JAXBException
block|{
synchronized|synchronized
init|(
name|classContexts
init|)
block|{
name|JAXBContext
name|context
init|=
name|classContexts
operator|.
name|get
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|==
literal|null
condition|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|classes
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|extraClass
operator|!=
literal|null
condition|)
block|{
name|classes
operator|=
operator|new
name|Class
index|[
name|extraClass
operator|.
name|length
operator|+
literal|1
index|]
expr_stmt|;
name|classes
index|[
literal|0
index|]
operator|=
name|type
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|extraClass
argument_list|,
literal|0
argument_list|,
name|classes
argument_list|,
literal|1
argument_list|,
name|extraClass
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|classes
operator|=
operator|new
name|Class
index|[]
block|{
name|type
block|}
expr_stmt|;
block|}
name|context
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|classes
argument_list|,
name|cProperties
argument_list|)
expr_stmt|;
name|classContexts
operator|.
name|put
argument_list|(
name|type
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
return|return
name|context
return|;
block|}
block|}
specifier|public
name|JAXBContext
name|getPackageContext
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
if|if
condition|(
name|type
operator|==
literal|null
operator|||
name|type
operator|==
name|JAXBElement
operator|.
name|class
condition|)
block|{
return|return
literal|null
return|;
block|}
synchronized|synchronized
init|(
name|packageContexts
init|)
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|type
argument_list|)
decl_stmt|;
name|JAXBContext
name|context
init|=
name|packageContexts
operator|.
name|get
argument_list|(
name|packageName
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|==
literal|null
condition|)
block|{
try|try
block|{
if|if
condition|(
name|type
operator|.
name|getClassLoader
argument_list|()
operator|!=
literal|null
operator|&&
name|objectFactoryOrIndexAvailable
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|context
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|packageName
argument_list|,
name|type
operator|.
name|getClassLoader
argument_list|()
argument_list|,
name|cProperties
argument_list|)
expr_stmt|;
name|packageContexts
operator|.
name|put
argument_list|(
name|packageName
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"Error creating a JAXBContext using ObjectFactory : "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
return|return
name|context
return|;
block|}
block|}
specifier|protected
name|boolean
name|isSupported
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|)
block|{
if|if
condition|(
name|jaxbElementClassMap
operator|!=
literal|null
operator|&&
name|jaxbElementClassMap
operator|.
name|containsKey
argument_list|(
name|type
operator|.
name|getName
argument_list|()
argument_list|)
operator|||
name|isSkipJaxbChecks
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|isXmlRoot
argument_list|(
name|type
argument_list|)
operator|||
name|JAXBElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|type
argument_list|)
operator|||
name|objectFactoryOrIndexAvailable
argument_list|(
name|type
argument_list|)
operator|||
operator|(
name|type
operator|!=
name|genericType
operator|&&
name|objectFactoryForType
argument_list|(
name|genericType
argument_list|)
operator|)
operator|||
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|getAdapter
argument_list|(
name|type
argument_list|,
name|anns
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|protected
name|boolean
name|objectFactoryOrIndexAvailable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|type
operator|.
name|getResource
argument_list|(
literal|"ObjectFactory.class"
argument_list|)
operator|!=
literal|null
operator|||
name|type
operator|.
name|getResource
argument_list|(
literal|"jaxb.index"
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|private
name|boolean
name|objectFactoryForType
parameter_list|(
name|Type
name|genericType
parameter_list|)
block|{
return|return
name|objectFactoryOrIndexAvailable
argument_list|(
name|InjectionUtils
operator|.
name|getActualType
argument_list|(
name|genericType
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|Unmarshaller
name|createUnmarshaller
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|genericType
parameter_list|)
throws|throws
name|JAXBException
block|{
return|return
name|createUnmarshaller
argument_list|(
name|cls
argument_list|,
name|genericType
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|protected
name|Unmarshaller
name|createUnmarshaller
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|boolean
name|isCollection
parameter_list|)
throws|throws
name|JAXBException
block|{
name|JAXBContext
name|context
init|=
name|isCollection
condition|?
name|getCollectionContext
argument_list|(
name|cls
argument_list|)
else|:
name|getJAXBContext
argument_list|(
name|cls
argument_list|,
name|genericType
argument_list|)
decl_stmt|;
name|Unmarshaller
name|unmarshaller
init|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
if|if
condition|(
name|schema
operator|!=
literal|null
condition|)
block|{
name|unmarshaller
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|eventHandler
operator|!=
literal|null
condition|)
block|{
name|unmarshaller
operator|.
name|setEventHandler
argument_list|(
name|eventHandler
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uProperties
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|uProperties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|unmarshaller
operator|.
name|setProperty
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|unmarshaller
return|;
block|}
specifier|protected
name|Marshaller
name|createMarshaller
parameter_list|(
name|Object
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|String
name|enc
parameter_list|)
throws|throws
name|JAXBException
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|objClazz
init|=
name|JAXBElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|cls
argument_list|)
condition|?
operator|(
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|obj
operator|)
operator|.
name|getDeclaredType
argument_list|()
else|:
name|cls
decl_stmt|;
name|JAXBContext
name|context
init|=
name|getJAXBContext
argument_list|(
name|objClazz
argument_list|,
name|genericType
argument_list|)
decl_stmt|;
name|Marshaller
name|marshaller
init|=
name|context
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
if|if
condition|(
name|enc
operator|!=
literal|null
condition|)
block|{
name|marshaller
operator|.
name|setProperty
argument_list|(
name|Marshaller
operator|.
name|JAXB_ENCODING
argument_list|,
name|enc
argument_list|)
expr_stmt|;
block|}
name|validateObjectIfNeeded
argument_list|(
name|marshaller
argument_list|,
name|obj
argument_list|)
expr_stmt|;
return|return
name|marshaller
return|;
block|}
specifier|protected
name|void
name|validateObjectIfNeeded
parameter_list|(
name|Marshaller
name|marshaller
parameter_list|,
name|Object
name|obj
parameter_list|)
throws|throws
name|JAXBException
block|{
if|if
condition|(
name|validateOutput
operator|&&
name|schema
operator|!=
literal|null
condition|)
block|{
name|marshaller
operator|.
name|setEventHandler
argument_list|(
name|eventHandler
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
expr_stmt|;
if|if
condition|(
name|validateBeforeWrite
condition|)
block|{
name|marshaller
operator|.
name|marshal
argument_list|(
name|obj
argument_list|,
operator|new
name|DefaultHandler
argument_list|()
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|setSchema
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|getActualType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|theType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|JAXBElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|theType
operator|=
name|InjectionUtils
operator|.
name|getActualType
argument_list|(
name|genericType
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|theType
operator|=
name|type
expr_stmt|;
block|}
name|XmlJavaTypeAdapter
name|adapter
init|=
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|getAdapter
argument_list|(
name|theType
argument_list|,
name|anns
argument_list|)
decl_stmt|;
name|theType
operator|=
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|getTypeFromAdapter
argument_list|(
name|adapter
argument_list|,
name|theType
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|theType
return|;
block|}
specifier|protected
specifier|static
name|Object
name|checkAdapter
parameter_list|(
name|Object
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|boolean
name|marshal
parameter_list|)
block|{
name|XmlJavaTypeAdapter
name|adapter
init|=
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|getAdapter
argument_list|(
name|cls
argument_list|,
name|anns
argument_list|)
decl_stmt|;
return|return
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|useAdapter
argument_list|(
name|obj
argument_list|,
name|adapter
argument_list|,
name|marshal
argument_list|)
return|;
block|}
specifier|protected
name|Schema
name|getSchema
parameter_list|()
block|{
return|return
name|schema
return|;
block|}
specifier|public
name|void
name|clearContexts
parameter_list|()
block|{
name|classContexts
operator|.
name|clear
argument_list|()
expr_stmt|;
name|packageContexts
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|protected
specifier|static
name|String
name|getStackTrace
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|ex
operator|.
name|printStackTrace
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|protected
specifier|static
name|void
name|handleJAXBException
parameter_list|(
name|JAXBException
name|e
parameter_list|,
name|boolean
name|read
parameter_list|)
block|{
name|LOG
operator|.
name|warning
argument_list|(
name|getStackTrace
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|". "
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|!=
literal|null
operator|&&
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|". "
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|e
operator|.
name|getLinkedException
argument_list|()
operator|!=
literal|null
operator|&&
name|e
operator|.
name|getLinkedException
argument_list|()
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|e
operator|.
name|getLinkedException
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|". "
argument_list|)
expr_stmt|;
block|}
name|Throwable
name|t
init|=
name|e
operator|.
name|getLinkedException
argument_list|()
operator|!=
literal|null
condition|?
name|e
operator|.
name|getLinkedException
argument_list|()
else|:
name|e
operator|.
name|getCause
argument_list|()
operator|!=
literal|null
condition|?
name|e
operator|.
name|getCause
argument_list|()
else|:
name|e
decl_stmt|;
name|String
name|message
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"JAXB_EXCEPTION"
argument_list|,
name|BUNDLE
argument_list|,
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Response
operator|.
name|Status
name|status
init|=
name|read
condition|?
name|Response
operator|.
name|Status
operator|.
name|BAD_REQUEST
else|:
name|Response
operator|.
name|Status
operator|.
name|INTERNAL_SERVER_ERROR
decl_stmt|;
name|Response
name|r
init|=
name|Response
operator|.
name|status
argument_list|(
name|status
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN
argument_list|)
operator|.
name|entity
argument_list|(
name|message
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|t
argument_list|,
name|r
argument_list|)
throw|;
block|}
specifier|public
name|void
name|setOutTransformElements
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outElements
parameter_list|)
block|{
name|this
operator|.
name|outElementsMap
operator|=
name|outElements
expr_stmt|;
block|}
specifier|public
name|void
name|setInAppendElements
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inElements
parameter_list|)
block|{
name|this
operator|.
name|inAppendMap
operator|=
name|inElements
expr_stmt|;
block|}
specifier|public
name|void
name|setInTransformElements
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|inElements
parameter_list|)
block|{
name|this
operator|.
name|inElementsMap
operator|=
name|inElements
expr_stmt|;
block|}
specifier|public
name|void
name|setOutAppendElements
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|)
block|{
name|this
operator|.
name|outAppendMap
operator|=
name|map
expr_stmt|;
block|}
specifier|public
name|void
name|setOutDropElements
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|dropElementsSet
parameter_list|)
block|{
name|this
operator|.
name|outDropElements
operator|=
name|dropElementsSet
expr_stmt|;
block|}
specifier|public
name|void
name|setInDropElements
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|dropElementsSet
parameter_list|)
block|{
name|this
operator|.
name|inDropElements
operator|=
name|dropElementsSet
expr_stmt|;
block|}
specifier|public
name|void
name|setAttributesToElements
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|this
operator|.
name|attributesToElements
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|void
name|setSkipJaxbChecks
parameter_list|(
name|boolean
name|skipJaxbChecks
parameter_list|)
block|{
name|this
operator|.
name|skipJaxbChecks
operator|=
name|skipJaxbChecks
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSkipJaxbChecks
parameter_list|()
block|{
return|return
name|skipJaxbChecks
return|;
block|}
specifier|protected
name|XMLStreamWriter
name|createTransformWriterIfNeeded
parameter_list|(
name|XMLStreamWriter
name|writer
parameter_list|,
name|OutputStream
name|os
parameter_list|)
block|{
return|return
name|TransformUtils
operator|.
name|createTransformWriterIfNeeded
argument_list|(
name|writer
argument_list|,
name|os
argument_list|,
name|outElementsMap
argument_list|,
name|outDropElements
argument_list|,
name|outAppendMap
argument_list|,
name|attributesToElements
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
name|XMLStreamReader
name|createTransformReaderIfNeeded
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|,
name|InputStream
name|is
parameter_list|)
block|{
return|return
name|TransformUtils
operator|.
name|createTransformReaderIfNeeded
argument_list|(
name|reader
argument_list|,
name|is
argument_list|,
name|inDropElements
argument_list|,
name|inElementsMap
argument_list|,
name|inAppendMap
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
name|void
name|setValidateBeforeWrite
parameter_list|(
name|boolean
name|validateBeforeWrite
parameter_list|)
block|{
name|this
operator|.
name|validateBeforeWrite
operator|=
name|validateBeforeWrite
expr_stmt|;
block|}
specifier|public
name|void
name|setValidateOutput
parameter_list|(
name|boolean
name|validateOutput
parameter_list|)
block|{
name|this
operator|.
name|validateOutput
operator|=
name|validateOutput
expr_stmt|;
block|}
annotation|@
name|XmlRootElement
specifier|protected
specifier|static
class|class
name|CollectionWrapper
block|{
annotation|@
name|XmlAnyElement
argument_list|(
name|lax
operator|=
literal|true
argument_list|)
specifier|private
name|List
argument_list|<
name|?
argument_list|>
name|l
decl_stmt|;
specifier|public
name|void
name|setList
parameter_list|(
name|List
argument_list|<
name|?
argument_list|>
name|list
parameter_list|)
block|{
name|l
operator|=
name|list
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|?
argument_list|>
name|getList
parameter_list|()
block|{
if|if
condition|(
name|l
operator|==
literal|null
condition|)
block|{
name|l
operator|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|l
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Object
name|getCollectionOrArray
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|origType
parameter_list|,
name|XmlJavaTypeAdapter
name|adapter
parameter_list|)
block|{
name|List
argument_list|<
name|?
argument_list|>
name|theList
init|=
name|getList
argument_list|()
decl_stmt|;
name|boolean
name|adapterChecked
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|theList
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Object
name|first
init|=
name|theList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
operator|instanceof
name|JAXBElement
operator|&&
operator|!
name|JAXBElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|adapterChecked
operator|=
literal|true
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|newList
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
name|theList
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|theList
control|)
block|{
name|newList
operator|.
name|add
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|useAdapter
argument_list|(
operator|(
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|o
operator|)
operator|.
name|getValue
argument_list|()
argument_list|,
name|adapter
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|theList
operator|=
name|newList
expr_stmt|;
block|}
block|}
if|if
condition|(
name|origType
operator|.
name|isArray
argument_list|()
condition|)
block|{
name|T
index|[]
name|values
init|=
operator|(
name|T
index|[]
operator|)
name|Array
operator|.
name|newInstance
argument_list|(
name|type
argument_list|,
name|theList
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|theList
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|values
index|[
name|i
index|]
operator|=
operator|(
name|T
operator|)
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|useAdapter
argument_list|(
name|theList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|adapter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|adapterChecked
operator|&&
name|adapter
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|newList
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
name|theList
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|theList
control|)
block|{
name|newList
operator|.
name|add
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXBUtils
operator|.
name|useAdapter
argument_list|(
name|o
argument_list|,
name|adapter
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|theList
operator|=
name|newList
expr_stmt|;
block|}
if|if
condition|(
name|origType
operator|==
name|Set
operator|.
name|class
condition|)
block|{
return|return
operator|new
name|HashSet
argument_list|<
name|Object
argument_list|>
argument_list|(
name|theList
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|theList
return|;
block|}
block|}
block|}
block|}
specifier|protected
specifier|static
class|class
name|JAXBCollectionWrapperReader
extends|extends
name|DepthXMLStreamReader
block|{
specifier|private
name|boolean
name|firstName
decl_stmt|;
specifier|private
name|boolean
name|firstNs
decl_stmt|;
specifier|public
name|JAXBCollectionWrapperReader
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|)
block|{
name|super
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
if|if
condition|(
operator|!
name|firstNs
condition|)
block|{
name|firstNs
operator|=
literal|true
expr_stmt|;
return|return
literal|""
return|;
block|}
return|return
name|super
operator|.
name|getNamespaceURI
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
if|if
condition|(
operator|!
name|firstName
condition|)
block|{
name|firstName
operator|=
literal|true
expr_stmt|;
return|return
literal|"collectionWrapper"
return|;
block|}
return|return
name|super
operator|.
name|getLocalName
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

