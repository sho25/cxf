begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ProcessingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptorContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|HttpUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_class
specifier|public
class|class
name|WriterInterceptorMBW
implements|implements
name|WriterInterceptor
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|WriterInterceptorMBW
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|writer
decl_stmt|;
specifier|private
name|Message
name|m
decl_stmt|;
specifier|public
name|WriterInterceptorMBW
parameter_list|(
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|writer
parameter_list|,
name|Message
name|m
parameter_list|)
block|{
name|this
operator|.
name|writer
operator|=
name|writer
expr_stmt|;
name|this
operator|.
name|m
operator|=
name|m
expr_stmt|;
block|}
specifier|public
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|getMBW
parameter_list|()
block|{
return|return
name|writer
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
name|void
name|aroundWriteTo
parameter_list|(
name|WriterInterceptorContext
name|c
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
name|c
operator|.
name|getHeaders
argument_list|()
decl_stmt|;
name|Object
name|mtObject
init|=
name|headers
operator|.
name|getFirst
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
decl_stmt|;
name|MediaType
name|entityMt
init|=
name|mtObject
operator|==
literal|null
condition|?
name|c
operator|.
name|getMediaType
argument_list|()
else|:
name|JAXRSUtils
operator|.
name|toMediaType
argument_list|(
name|mtObject
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|entityMt
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|entityCls
init|=
name|c
operator|.
name|getType
argument_list|()
decl_stmt|;
name|Type
name|entityType
init|=
name|c
operator|.
name|getGenericType
argument_list|()
decl_stmt|;
name|Annotation
index|[]
name|entityAnns
init|=
name|c
operator|.
name|getAnnotations
argument_list|()
decl_stmt|;
if|if
condition|(
name|writer
operator|==
literal|null
operator|||
name|m
operator|.
name|get
argument_list|(
name|ProviderFactory
operator|.
name|PROVIDER_SELECTION_PROPERTY_CHANGED
argument_list|)
operator|==
name|Boolean
operator|.
name|TRUE
operator|&&
operator|!
name|writer
operator|.
name|isWriteable
argument_list|(
name|entityCls
argument_list|,
name|entityType
argument_list|,
name|entityAnns
argument_list|,
name|entityMt
argument_list|)
condition|)
block|{
name|writer
operator|=
operator|(
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
operator|)
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|m
argument_list|)
operator|.
name|createMessageBodyWriter
argument_list|(
name|entityCls
argument_list|,
name|entityType
argument_list|,
name|entityAnns
argument_list|,
name|entityMt
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|writer
operator|==
literal|null
condition|)
block|{
name|String
name|errorMessage
init|=
name|JAXRSUtils
operator|.
name|logMessageHandlerProblem
argument_list|(
literal|"NO_MSG_WRITER"
argument_list|,
name|entityCls
argument_list|,
name|entityMt
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ProcessingException
argument_list|(
name|errorMessage
argument_list|)
throw|;
block|}
name|HttpUtils
operator|.
name|convertHeaderValuesToString
argument_list|(
name|headers
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isLoggable
argument_list|(
name|Level
operator|.
name|FINE
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"Response EntityProvider is: "
operator|+
name|writer
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|writeTo
argument_list|(
name|c
operator|.
name|getEntity
argument_list|()
argument_list|,
name|c
operator|.
name|getType
argument_list|()
argument_list|,
name|c
operator|.
name|getGenericType
argument_list|()
argument_list|,
name|c
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|entityMt
argument_list|,
name|headers
argument_list|,
name|c
operator|.
name|getOutputStream
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

