begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|interceptor
operator|.
name|JAXRSInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|URITemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageContentsList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|AbstractInvoker
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSInvoker
extends|extends
name|AbstractInvoker
block|{
specifier|private
name|List
argument_list|<
name|Object
argument_list|>
name|resourceObjects
decl_stmt|;
specifier|public
name|JAXRSInvoker
parameter_list|()
block|{     }
specifier|public
name|JAXRSInvoker
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|resourceObjects
parameter_list|)
block|{
name|this
operator|.
name|resourceObjects
operator|=
name|resourceObjects
expr_stmt|;
block|}
specifier|public
name|Object
name|invoke
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Object
name|request
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|exchange
argument_list|,
name|request
argument_list|,
name|resourceObjects
argument_list|)
return|;
block|}
specifier|public
name|Object
name|invoke
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Object
name|request
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|resources
parameter_list|)
block|{
name|OperationResourceInfo
name|ori
init|=
name|exchange
operator|.
name|get
argument_list|(
name|OperationResourceInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
decl_stmt|;
name|Method
name|methodToInvoke
init|=
name|cri
operator|.
name|getMethodDispatcher
argument_list|()
operator|.
name|getMethod
argument_list|(
name|ori
argument_list|)
decl_stmt|;
name|Object
name|resourceObject
init|=
name|getServiceObject
argument_list|(
name|exchange
argument_list|,
name|resources
argument_list|)
decl_stmt|;
comment|// TODO : update the method dispatcher
if|if
condition|(
name|Proxy
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|resourceObject
argument_list|)
condition|)
block|{
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|c
range|:
name|resourceObject
operator|.
name|getClass
argument_list|()
operator|.
name|getInterfaces
argument_list|()
control|)
block|{
try|try
block|{
name|Method
name|m
init|=
name|c
operator|.
name|getMethod
argument_list|(
name|methodToInvoke
operator|.
name|getName
argument_list|()
argument_list|,
name|methodToInvoke
operator|.
name|getParameterTypes
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|!=
literal|null
condition|)
block|{
name|methodToInvoke
operator|=
name|m
expr_stmt|;
break|break;
block|}
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|ex
parameter_list|)
block|{
comment|//ignore
block|}
block|}
block|}
if|if
condition|(
name|cri
operator|.
name|isRoot
argument_list|()
condition|)
block|{
name|JAXRSUtils
operator|.
name|injectHttpContextValues
argument_list|(
name|resourceObject
argument_list|,
name|ori
argument_list|,
name|exchange
operator|.
name|getInMessage
argument_list|()
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|injectServletResourceValues
argument_list|(
name|resourceObject
argument_list|,
name|ori
argument_list|,
name|exchange
operator|.
name|getInMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|request
operator|instanceof
name|List
condition|)
block|{
name|params
operator|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|request
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|request
operator|!=
literal|null
condition|)
block|{
name|params
operator|=
operator|new
name|MessageContentsList
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
name|Object
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|result
operator|=
name|invoke
argument_list|(
name|exchange
argument_list|,
name|resourceObject
argument_list|,
name|methodToInvoke
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Fault
name|ex
parameter_list|)
block|{
if|if
condition|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|WebApplicationException
condition|)
block|{
name|WebApplicationException
name|wex
init|=
operator|(
name|WebApplicationException
operator|)
name|ex
operator|.
name|getCause
argument_list|()
decl_stmt|;
if|if
condition|(
name|wex
operator|.
name|getResponse
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|result
operator|=
name|wex
operator|.
name|getResponse
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|result
operator|=
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|MessageContentsList
argument_list|(
name|result
argument_list|)
return|;
block|}
throw|throw
name|ex
throw|;
block|}
if|if
condition|(
name|ori
operator|.
name|isSubResourceLocator
argument_list|()
condition|)
block|{
comment|//the result becomes the object that will handle the request
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|result
operator|instanceof
name|MessageContentsList
condition|)
block|{
name|result
operator|=
operator|(
operator|(
name|MessageContentsList
operator|)
name|result
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|result
operator|instanceof
name|List
condition|)
block|{
name|result
operator|=
operator|(
operator|(
name|List
operator|)
name|result
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|result
operator|.
name|getClass
argument_list|()
operator|.
name|isArray
argument_list|()
condition|)
block|{
name|result
operator|=
operator|(
operator|(
name|Object
index|[]
operator|)
name|result
operator|)
index|[
literal|0
index|]
expr_stmt|;
block|}
block|}
name|List
argument_list|<
name|Object
argument_list|>
name|newResourceObjects
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|newResourceObjects
operator|.
name|add
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|Message
name|msg
init|=
name|exchange
operator|.
name|getInMessage
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|subResourcePath
init|=
operator|(
name|String
operator|)
name|msg
operator|.
name|get
argument_list|(
name|JAXRSInInterceptor
operator|.
name|RELATIVE_PATH
argument_list|)
decl_stmt|;
name|String
name|httpMethod
init|=
operator|(
name|String
operator|)
name|msg
operator|.
name|get
argument_list|(
name|Message
operator|.
name|HTTP_REQUEST_METHOD
argument_list|)
decl_stmt|;
name|String
name|contentType
init|=
operator|(
name|String
operator|)
name|msg
operator|.
name|get
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
name|contentType
operator|==
literal|null
condition|)
block|{
name|contentType
operator|=
literal|"*/*"
expr_stmt|;
block|}
name|String
name|acceptContentType
init|=
operator|(
name|String
operator|)
name|msg
operator|.
name|get
argument_list|(
name|Message
operator|.
name|ACCEPT_CONTENT_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
name|acceptContentType
operator|==
literal|null
condition|)
block|{
name|acceptContentType
operator|=
literal|"*/*"
expr_stmt|;
block|}
name|ClassResourceInfo
name|subCri
init|=
name|JAXRSUtils
operator|.
name|findSubResourceClass
argument_list|(
name|cri
argument_list|,
name|result
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|subOri
init|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|subCri
argument_list|,
name|subResourcePath
argument_list|,
name|httpMethod
argument_list|,
name|values
argument_list|,
name|contentType
argument_list|,
name|acceptContentType
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|put
argument_list|(
name|OperationResourceInfo
operator|.
name|class
argument_list|,
name|subOri
argument_list|)
expr_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|JAXRSInInterceptor
operator|.
name|RELATIVE_PATH
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|URITemplate
operator|.
name|TEMPLATE_PARAMETERS
argument_list|,
name|values
argument_list|)
expr_stmt|;
comment|// work out request parameters for the sub-resouce class. Here we
comment|// presume Inputstream has not been consumed yet by the root resource class.
comment|//I.e., only one place either in the root resource or sub-resouce class can
comment|//have a parameter that read from entitybody.
name|List
argument_list|<
name|Object
argument_list|>
name|newParams
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|subOri
argument_list|,
name|values
argument_list|,
name|msg
argument_list|)
decl_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|List
operator|.
name|class
argument_list|,
name|newParams
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|invoke
argument_list|(
name|exchange
argument_list|,
name|newParams
argument_list|,
name|newResourceObjects
argument_list|)
return|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|Object
name|getServiceObject
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|getServiceObject
argument_list|(
name|exchange
argument_list|,
name|resourceObjects
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getServiceObject
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|resources
parameter_list|)
block|{
name|Object
name|serviceObject
init|=
literal|null
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|exchange
operator|.
name|get
argument_list|(
name|OperationResourceInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
decl_stmt|;
if|if
condition|(
name|resources
operator|!=
literal|null
condition|)
block|{
name|Class
name|c
init|=
name|cri
operator|.
name|getResourceClass
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|resourceObject
range|:
name|resources
control|)
block|{
if|if
condition|(
name|c
operator|.
name|isInstance
argument_list|(
name|resourceObject
argument_list|)
condition|)
block|{
name|serviceObject
operator|=
name|resourceObject
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|serviceObject
operator|==
literal|null
condition|)
block|{
name|serviceObject
operator|=
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
return|return
name|serviceObject
return|;
block|}
block|}
end_class

end_unit

