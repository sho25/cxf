begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlAdapter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlJavaTypeAdapter
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|JAXBUtils
block|{
specifier|private
name|JAXBUtils
parameter_list|()
block|{              }
specifier|public
specifier|static
name|Object
name|convertWithAdapter
parameter_list|(
name|Object
name|obj
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|)
block|{
return|return
name|useAdapter
argument_list|(
name|obj
argument_list|,
name|AnnotationUtils
operator|.
name|getAnnotation
argument_list|(
name|anns
argument_list|,
name|XmlJavaTypeAdapter
operator|.
name|class
argument_list|)
argument_list|,
literal|false
argument_list|,
name|obj
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Class
argument_list|<
name|?
argument_list|>
name|getValueTypeFromAdapter
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|expectedBoundType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|defaultClass
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|)
block|{
try|try
block|{
name|XmlJavaTypeAdapter
name|adapter
init|=
name|AnnotationUtils
operator|.
name|getAnnotation
argument_list|(
name|anns
argument_list|,
name|XmlJavaTypeAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|adapter
operator|!=
literal|null
condition|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|boundType
init|=
name|JAXBUtils
operator|.
name|getTypeFromAdapter
argument_list|(
name|adapter
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|boundType
operator|!=
literal|null
operator|&&
name|boundType
operator|.
name|isAssignableFrom
argument_list|(
name|expectedBoundType
argument_list|)
condition|)
block|{
return|return
name|JAXBUtils
operator|.
name|getTypeFromAdapter
argument_list|(
name|adapter
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
return|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
comment|// ignore
block|}
return|return
name|defaultClass
return|;
block|}
specifier|public
specifier|static
name|Class
argument_list|<
name|?
argument_list|>
name|getTypeFromAdapter
parameter_list|(
name|XmlJavaTypeAdapter
name|adapter
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|theType
parameter_list|,
name|boolean
name|boundType
parameter_list|)
block|{
if|if
condition|(
name|adapter
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|adapter
operator|.
name|type
argument_list|()
operator|!=
name|XmlJavaTypeAdapter
operator|.
name|DEFAULT
operator|.
name|class
condition|)
block|{
name|theType
operator|=
name|adapter
operator|.
name|type
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Type
index|[]
name|types
init|=
name|InjectionUtils
operator|.
name|getActualTypes
argument_list|(
name|adapter
operator|.
name|value
argument_list|()
operator|.
name|getGenericSuperclass
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|types
operator|!=
literal|null
operator|&&
name|types
operator|.
name|length
operator|==
literal|2
condition|)
block|{
name|int
name|index
init|=
name|boundType
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|theType
operator|=
name|InjectionUtils
operator|.
name|getActualType
argument_list|(
name|types
index|[
name|index
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|theType
return|;
block|}
specifier|public
specifier|static
name|Object
name|useAdapter
parameter_list|(
name|Object
name|obj
parameter_list|,
name|XmlJavaTypeAdapter
name|typeAdapter
parameter_list|,
name|boolean
name|marshal
parameter_list|)
block|{
return|return
name|useAdapter
argument_list|(
name|obj
argument_list|,
name|typeAdapter
argument_list|,
name|marshal
argument_list|,
name|obj
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
name|Object
name|useAdapter
parameter_list|(
name|Object
name|obj
parameter_list|,
name|XmlJavaTypeAdapter
name|typeAdapter
parameter_list|,
name|boolean
name|marshal
parameter_list|,
name|Object
name|defaultValue
parameter_list|)
block|{
if|if
condition|(
name|typeAdapter
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|InjectionUtils
operator|.
name|isSupportedCollectionOrArray
argument_list|(
name|typeAdapter
operator|.
name|value
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|obj
return|;
block|}
try|try
block|{
name|XmlAdapter
name|xmlAdapter
init|=
name|typeAdapter
operator|.
name|value
argument_list|()
operator|.
name|newInstance
argument_list|()
decl_stmt|;
if|if
condition|(
name|marshal
condition|)
block|{
return|return
name|xmlAdapter
operator|.
name|marshal
argument_list|(
name|obj
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|xmlAdapter
operator|.
name|unmarshal
argument_list|(
name|obj
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|defaultValue
return|;
block|}
block|}
end_class

end_unit

