begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|AbstractBasicInterceptorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|BeansException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContextAware
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractSpringConfigurationFactory
extends|extends
name|AbstractBasicInterceptorProvider
implements|implements
name|ApplicationContextAware
block|{
specifier|protected
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|Value
argument_list|(
literal|"${cxf.jaxrs.server.address:}"
argument_list|)
specifier|private
name|String
name|jaxrsServerAddress
decl_stmt|;
annotation|@
name|Value
argument_list|(
literal|"${cxf.jaxrs.extensions:}"
argument_list|)
specifier|private
name|String
name|jaxrsExtensions
decl_stmt|;
specifier|protected
name|Server
name|createJaxRsServer
parameter_list|()
block|{
name|JAXRSServerFactoryBean
name|factory
init|=
operator|new
name|JAXRSServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setTransportId
argument_list|(
name|getTransportId
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|setJaxrsResources
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setInInterceptors
argument_list|(
name|getInInterceptors
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setOutInterceptors
argument_list|(
name|getOutInterceptors
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setOutFaultInterceptors
argument_list|(
name|getOutFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setFeatures
argument_list|(
name|getFeatures
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|jaxrsExtensions
argument_list|)
condition|)
block|{
name|factory
operator|.
name|setExtensionMappings
argument_list|(
operator|(
name|Map
operator|)
name|parseMapSequence
argument_list|(
name|jaxrsExtensions
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|finalizeFactorySetup
argument_list|(
name|factory
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|Bus
name|getBus
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|SpringBus
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setApplicationContext
parameter_list|(
name|ApplicationContext
name|ac
parameter_list|)
throws|throws
name|BeansException
block|{
name|applicationContext
operator|=
name|ac
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|void
name|setJaxrsResources
parameter_list|(
name|JAXRSServerFactoryBean
name|factory
parameter_list|)
function_decl|;
specifier|protected
name|List
argument_list|<
name|Object
argument_list|>
name|getJaxrsProviders
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Feature
argument_list|>
name|getFeatures
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
specifier|protected
name|String
name|getAddress
parameter_list|()
block|{
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|jaxrsServerAddress
argument_list|)
condition|)
block|{
return|return
name|jaxrsServerAddress
return|;
block|}
return|return
literal|"/"
return|;
block|}
specifier|protected
name|String
name|getTransportId
parameter_list|()
block|{
return|return
literal|"http://cxf.apache.org/transports/http"
return|;
block|}
specifier|protected
name|void
name|finalizeFactorySetup
parameter_list|(
name|JAXRSServerFactoryBean
name|factory
parameter_list|)
block|{
comment|// complete
block|}
specifier|protected
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parseMapSequence
parameter_list|(
name|String
name|sequence
parameter_list|)
block|{
if|if
condition|(
name|sequence
operator|!=
literal|null
condition|)
block|{
name|sequence
operator|=
name|sequence
operator|.
name|trim
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
index|[]
name|pairs
init|=
name|sequence
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|pair
range|:
name|pairs
control|)
block|{
name|String
name|thePair
init|=
name|pair
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|thePair
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
continue|continue;
block|}
name|String
index|[]
name|value
init|=
name|thePair
operator|.
name|split
argument_list|(
literal|"="
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|.
name|length
operator|==
literal|2
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
name|value
index|[
literal|0
index|]
operator|.
name|trim
argument_list|()
argument_list|,
name|value
index|[
literal|1
index|]
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|map
operator|.
name|put
argument_list|(
name|thePair
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|map
return|;
block|}
return|return
name|Collections
operator|.
name|emptyMap
argument_list|()
return|;
block|}
block|}
end_class

end_unit

