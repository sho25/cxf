begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ExceptionUtils
import|;
end_import

begin_class
annotation|@
name|Provider
specifier|public
class|class
name|CachingMessageBodyReader
parameter_list|<
name|T
parameter_list|>
extends|extends
name|AbstractCachingMessageProvider
argument_list|<
name|T
argument_list|>
implements|implements
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
block|{
specifier|private
name|List
argument_list|<
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
argument_list|>
name|delegatingReaders
decl_stmt|;
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|gType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
if|if
condition|(
name|delegatingReaders
operator|!=
literal|null
condition|)
block|{
return|return
name|getDelegatingReader
argument_list|(
name|type
argument_list|,
name|gType
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|)
operator|!=
literal|null
return|;
block|}
return|return
name|isProviderKeyNotSet
argument_list|()
return|;
block|}
specifier|private
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
name|getDelegatingReader
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|gType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
for|for
control|(
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
name|reader
range|:
name|delegatingReaders
control|)
block|{
if|if
condition|(
name|reader
operator|.
name|isReadable
argument_list|(
name|type
argument_list|,
name|gType
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|)
condition|)
block|{
return|return
name|reader
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|T
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|,
name|Type
name|gType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|theheaders
parameter_list|,
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
name|this
operator|.
name|setObject
argument_list|(
name|getReader
argument_list|(
name|type
argument_list|,
name|gType
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|)
operator|.
name|readFrom
argument_list|(
name|type
argument_list|,
name|gType
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|,
name|theheaders
argument_list|,
name|is
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|getObject
argument_list|()
return|;
block|}
specifier|protected
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
name|getReader
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|gType
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
if|if
condition|(
name|delegatingReaders
operator|!=
literal|null
condition|)
block|{
return|return
name|getDelegatingReader
argument_list|(
name|type
argument_list|,
name|gType
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|)
return|;
block|}
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
name|r
init|=
literal|null
decl_stmt|;
name|mc
operator|.
name|put
argument_list|(
name|ACTIVE_JAXRS_PROVIDER_KEY
argument_list|,
name|this
argument_list|)
expr_stmt|;
try|try
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Class
argument_list|<
name|T
argument_list|>
name|actualType
init|=
operator|(
name|Class
argument_list|<
name|T
argument_list|>
operator|)
name|type
decl_stmt|;
name|r
operator|=
name|mc
operator|.
name|getProviders
argument_list|()
operator|.
name|getMessageBodyReader
argument_list|(
name|actualType
argument_list|,
name|gType
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|mc
operator|.
name|put
argument_list|(
name|ACTIVE_JAXRS_PROVIDER_KEY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
name|message
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"NO_MSG_READER"
argument_list|,
name|BUNDLE
argument_list|,
name|type
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|severe
argument_list|(
name|message
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|ExceptionUtils
operator|.
name|toNotAcceptableException
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
throw|;
block|}
return|return
name|r
return|;
block|}
specifier|public
name|void
name|setDelegatingReader
parameter_list|(
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
name|reader
parameter_list|)
block|{
name|this
operator|.
name|delegatingReaders
operator|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDelegatingReaders
parameter_list|(
name|List
argument_list|<
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
argument_list|>
name|readers
parameter_list|)
block|{
name|this
operator|.
name|delegatingReaders
operator|=
name|readers
expr_stmt|;
block|}
block|}
end_class

end_unit

