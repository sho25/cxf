begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_class
specifier|public
class|class
name|MethodDispatcher
block|{
specifier|private
name|Map
argument_list|<
name|OperationResourceInfo
argument_list|,
name|Method
argument_list|>
name|oriToMethod
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Method
argument_list|,
name|OperationResourceInfo
argument_list|>
name|methodToOri
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|ConcurrentHashMap
argument_list|<
name|Method
argument_list|,
name|Method
argument_list|>
name|proxyMethodMap
init|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|MethodDispatcher
parameter_list|()
block|{      }
name|MethodDispatcher
parameter_list|(
name|MethodDispatcher
name|md
parameter_list|,
name|ClassResourceInfo
name|cri
parameter_list|)
block|{
for|for
control|(
name|OperationResourceInfo
name|ori
range|:
name|md
operator|.
name|getOperationResourceInfos
argument_list|()
control|)
block|{
name|OperationResourceInfo
name|clone
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|ori
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|oriToMethod
operator|.
name|put
argument_list|(
name|clone
argument_list|,
name|clone
operator|.
name|getMethodToInvoke
argument_list|()
argument_list|)
expr_stmt|;
name|methodToOri
operator|.
name|put
argument_list|(
name|clone
operator|.
name|getMethodToInvoke
argument_list|()
argument_list|,
name|clone
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|bind
parameter_list|(
name|OperationResourceInfo
name|o
parameter_list|,
name|Method
modifier|...
name|methods
parameter_list|)
block|{
name|Method
name|primary
init|=
name|methods
index|[
literal|0
index|]
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|methods
control|)
block|{
name|methodToOri
operator|.
name|put
argument_list|(
name|m
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
name|oriToMethod
operator|.
name|put
argument_list|(
name|o
argument_list|,
name|primary
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OperationResourceInfo
name|getOperationResourceInfo
parameter_list|(
name|Method
name|method
parameter_list|)
block|{
return|return
name|methodToOri
operator|.
name|get
argument_list|(
name|method
argument_list|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|OperationResourceInfo
argument_list|>
name|getOperationResourceInfos
parameter_list|()
block|{
return|return
name|oriToMethod
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|public
name|Method
name|getMethod
parameter_list|(
name|OperationResourceInfo
name|op
parameter_list|)
block|{
return|return
name|oriToMethod
operator|.
name|get
argument_list|(
name|op
argument_list|)
return|;
block|}
specifier|public
name|Method
name|getProxyMethod
parameter_list|(
name|Method
name|m
parameter_list|)
block|{
return|return
name|proxyMethodMap
operator|.
name|get
argument_list|(
name|m
argument_list|)
return|;
block|}
specifier|public
name|void
name|addProxyMethod
parameter_list|(
name|Method
name|m
parameter_list|,
name|Method
name|proxyM
parameter_list|)
block|{
name|proxyMethodMap
operator|.
name|putIfAbsent
argument_list|(
name|m
argument_list|,
name|proxyM
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

