begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|nio
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|NioCompletionHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|NioErrorHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|NioReaderHandler
import|;
end_import

begin_class
specifier|public
class|class
name|NioReadEntity
block|{
specifier|private
specifier|final
name|NioReaderHandler
name|reader
decl_stmt|;
specifier|private
specifier|final
name|NioCompletionHandler
name|completion
decl_stmt|;
specifier|private
specifier|final
name|NioErrorHandler
name|error
decl_stmt|;
specifier|public
name|NioReadEntity
parameter_list|(
name|NioReaderHandler
name|reader
parameter_list|,
name|NioCompletionHandler
name|completion
parameter_list|,
name|NioErrorHandler
name|error
parameter_list|)
block|{
name|this
operator|.
name|reader
operator|=
name|reader
expr_stmt|;
name|this
operator|.
name|completion
operator|=
name|completion
expr_stmt|;
name|this
operator|.
name|error
operator|=
name|error
expr_stmt|;
block|}
specifier|public
name|NioReaderHandler
name|getReader
parameter_list|()
block|{
return|return
name|reader
return|;
block|}
specifier|public
name|NioCompletionHandler
name|getCompletion
parameter_list|()
block|{
return|return
name|completion
return|;
block|}
specifier|public
name|NioErrorHandler
name|getError
parameter_list|()
block|{
return|return
name|error
return|;
block|}
block|}
end_class

end_unit

