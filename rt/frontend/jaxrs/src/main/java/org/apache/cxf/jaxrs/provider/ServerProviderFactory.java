begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|BeanParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Priorities
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|RuntimeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerResponseFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|DynamicFeature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|PreMatching
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|FeatureContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ExceptionMapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ReaderInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ClassHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ConfigurableImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|FeatureContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|RequestPreprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ResourceInfoImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|WebApplicationExceptionMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|ResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|AbstractResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ApplicationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|BeanParamInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|FilterProviderInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ProviderInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|nio
operator|.
name|NioMessageBodyWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|AnnotationUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|InjectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageUtils
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ServerProviderFactory
extends|extends
name|ProviderFactory
block|{
specifier|private
specifier|static
specifier|final
name|String
name|WADL_PROVIDER_NAME
init|=
literal|"org.apache.cxf.jaxrs.model.wadl.WadlGenerator"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MAKE_DEFAULT_WAE_LEAST_SPECIFIC
init|=
literal|"default.wae.mapper.least.specific"
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ExceptionMapper
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|exceptionMappers
init|=
operator|new
name|ArrayList
argument_list|<
name|ProviderInfo
argument_list|<
name|ExceptionMapper
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|preMatchContainerRequestFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|NameKey
argument_list|,
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|postMatchContainerRequestFilters
init|=
operator|new
name|NameKeyMap
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
argument_list|(
literal|true
argument_list|)
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|NameKey
argument_list|,
name|ProviderInfo
argument_list|<
name|ContainerResponseFilter
argument_list|>
argument_list|>
name|containerResponseFilters
init|=
operator|new
name|NameKeyMap
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerResponseFilter
argument_list|>
argument_list|>
argument_list|(
literal|false
argument_list|)
decl_stmt|;
specifier|private
name|RequestPreprocessor
name|requestPreprocessor
decl_stmt|;
specifier|private
name|ApplicationInfo
name|application
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|DynamicFeature
argument_list|>
name|dynamicFeatures
init|=
operator|new
name|LinkedHashSet
argument_list|<
name|DynamicFeature
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|BeanParamInfo
argument_list|>
name|beanParams
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|BeanParamInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
name|wadlGenerator
decl_stmt|;
specifier|private
name|ServerProviderFactory
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
name|super
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|wadlGenerator
operator|=
name|createWadlGenerator
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
name|createWadlGenerator
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
name|Object
name|provider
init|=
name|createProvider
argument_list|(
name|WADL_PROVIDER_NAME
argument_list|,
name|bus
argument_list|)
decl_stmt|;
if|if
condition|(
name|provider
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|new
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|(
operator|(
name|ContainerRequestFilter
operator|)
name|provider
argument_list|,
name|bus
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ServerProviderFactory
name|getInstance
parameter_list|()
block|{
return|return
name|createInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ServerProviderFactory
name|createInstance
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
if|if
condition|(
name|bus
operator|==
literal|null
condition|)
block|{
name|bus
operator|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
expr_stmt|;
block|}
name|ServerProviderFactory
name|factory
init|=
operator|new
name|ServerProviderFactory
argument_list|(
name|bus
argument_list|)
decl_stmt|;
name|ProviderFactory
operator|.
name|initFactory
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setProviders
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|WebApplicationExceptionMapper
argument_list|()
argument_list|,
operator|new
name|NioMessageBodyWriter
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setBusProviders
argument_list|()
expr_stmt|;
return|return
name|factory
return|;
block|}
specifier|public
specifier|static
name|ServerProviderFactory
name|getInstance
parameter_list|(
name|Message
name|m
parameter_list|)
block|{
name|Endpoint
name|e
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getEndpoint
argument_list|()
decl_stmt|;
return|return
operator|(
name|ServerProviderFactory
operator|)
name|e
operator|.
name|get
argument_list|(
name|SERVER_FACTORY_NAME
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|getPreMatchContainerRequestFilters
parameter_list|()
block|{
return|return
name|getContainerRequestFilters
argument_list|(
name|preMatchContainerRequestFilters
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|getPostMatchContainerRequestFilters
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
return|return
name|getBoundFilters
argument_list|(
name|postMatchContainerRequestFilters
argument_list|,
name|names
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|getContainerRequestFilters
parameter_list|(
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|filters
parameter_list|,
name|boolean
name|syncNeeded
parameter_list|)
block|{
if|if
condition|(
name|wadlGenerator
operator|==
literal|null
condition|)
block|{
return|return
name|filters
return|;
block|}
if|if
condition|(
name|filters
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
name|wadlGenerator
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
operator|!
name|syncNeeded
condition|)
block|{
name|filters
operator|.
name|add
argument_list|(
literal|0
argument_list|,
name|wadlGenerator
argument_list|)
expr_stmt|;
return|return
name|filters
return|;
block|}
else|else
block|{
synchronized|synchronized
init|(
name|filters
init|)
block|{
if|if
condition|(
name|filters
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|!=
name|wadlGenerator
condition|)
block|{
name|filters
operator|.
name|add
argument_list|(
literal|0
argument_list|,
name|wadlGenerator
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|filters
return|;
block|}
block|}
specifier|public
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerResponseFilter
argument_list|>
argument_list|>
name|getContainerResponseFilters
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
return|return
name|getBoundFilters
argument_list|(
name|containerResponseFilters
argument_list|,
name|names
argument_list|)
return|;
block|}
specifier|public
name|void
name|addBeanParamInfo
parameter_list|(
name|BeanParamInfo
name|bpi
parameter_list|)
block|{
name|beanParams
operator|.
name|put
argument_list|(
name|bpi
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|bpi
argument_list|)
expr_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|bpi
operator|.
name|getResourceClass
argument_list|()
operator|.
name|getMethods
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|BeanParam
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|BeanParamInfo
name|methodBpi
init|=
operator|new
name|BeanParamInfo
argument_list|(
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|getBus
argument_list|()
argument_list|)
decl_stmt|;
name|addBeanParamInfo
argument_list|(
name|methodBpi
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|Field
name|f
range|:
name|bpi
operator|.
name|getResourceClass
argument_list|()
operator|.
name|getDeclaredFields
argument_list|()
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getAnnotation
argument_list|(
name|BeanParam
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|BeanParamInfo
name|fieldBpi
init|=
operator|new
name|BeanParamInfo
argument_list|(
name|f
operator|.
name|getType
argument_list|()
argument_list|,
name|getBus
argument_list|()
argument_list|)
decl_stmt|;
name|addBeanParamInfo
argument_list|(
name|fieldBpi
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|BeanParamInfo
name|getBeanParamInfo
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|beanClass
parameter_list|)
block|{
return|return
name|beanParams
operator|.
name|get
argument_list|(
name|beanClass
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
extends|extends
name|Throwable
parameter_list|>
name|ExceptionMapper
argument_list|<
name|T
argument_list|>
name|createExceptionMapper
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|exceptionType
parameter_list|,
name|Message
name|m
parameter_list|)
block|{
name|boolean
name|makeDefaultWaeLeastSpecific
init|=
name|MessageUtils
operator|.
name|getContextualBoolean
argument_list|(
name|m
argument_list|,
name|MAKE_DEFAULT_WAE_LEAST_SPECIFIC
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ExceptionMapper
argument_list|<
name|?
argument_list|>
argument_list|>
name|candidates
init|=
name|exceptionMappers
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|em
lambda|->
name|handleMapper
argument_list|(
name|em
argument_list|,
name|exceptionType
argument_list|,
name|m
argument_list|,
name|ExceptionMapper
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|sorted
argument_list|(
operator|new
name|ExceptionProviderInfoComparator
argument_list|(
name|exceptionType
argument_list|,
name|makeDefaultWaeLeastSpecific
argument_list|)
argument_list|)
operator|.
name|map
argument_list|(
name|ProviderInfo
operator|::
name|getProvider
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|candidates
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|(
name|ExceptionMapper
argument_list|<
name|T
argument_list|>
operator|)
name|candidates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|protected
name|void
name|setProviders
parameter_list|(
name|boolean
name|custom
parameter_list|,
name|boolean
name|busGlobal
parameter_list|,
name|Object
modifier|...
name|providers
parameter_list|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|allProviders
init|=
operator|new
name|LinkedList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|p
range|:
name|providers
control|)
block|{
if|if
condition|(
name|p
operator|instanceof
name|Feature
condition|)
block|{
name|FeatureContext
name|featureContext
init|=
name|createServerFeatureContext
argument_list|()
decl_stmt|;
name|Feature
name|feature
init|=
operator|(
name|Feature
operator|)
name|p
decl_stmt|;
name|injectApplicationIntoFeature
argument_list|(
name|feature
argument_list|)
expr_stmt|;
name|feature
operator|.
name|configure
argument_list|(
name|featureContext
argument_list|)
expr_stmt|;
name|Configuration
name|cfg
init|=
name|featureContext
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|featureProvider
range|:
name|cfg
operator|.
name|getInstances
argument_list|()
control|)
block|{
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|contracts
init|=
name|cfg
operator|.
name|getContracts
argument_list|(
name|featureProvider
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|contracts
operator|!=
literal|null
operator|&&
operator|!
name|contracts
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|providerCls
init|=
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|featureProvider
argument_list|)
decl_stmt|;
name|allProviders
operator|.
name|add
argument_list|(
operator|new
name|FilterProviderInfo
argument_list|<
name|Object
argument_list|>
argument_list|(
name|featureProvider
operator|.
name|getClass
argument_list|()
argument_list|,
name|providerCls
argument_list|,
name|featureProvider
argument_list|,
name|getBus
argument_list|()
argument_list|,
name|contracts
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|allProviders
operator|.
name|add
argument_list|(
name|featureProvider
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|allProviders
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|postMatchRequestFilters
init|=
operator|new
name|LinkedList
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerResponseFilter
argument_list|>
argument_list|>
name|postMatchResponseFilters
init|=
operator|new
name|LinkedList
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerResponseFilter
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
argument_list|>
name|theProviders
init|=
name|prepareProviders
argument_list|(
name|custom
argument_list|,
name|busGlobal
argument_list|,
name|allProviders
operator|.
name|toArray
argument_list|()
argument_list|,
name|application
argument_list|)
decl_stmt|;
name|super
operator|.
name|setCommonProviders
argument_list|(
name|theProviders
argument_list|)
expr_stmt|;
for|for
control|(
name|ProviderInfo
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
name|provider
range|:
name|theProviders
control|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|providerCls
init|=
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|provider
operator|.
name|getProvider
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|filterContractSupported
argument_list|(
name|provider
argument_list|,
name|providerCls
argument_list|,
name|ContainerRequestFilter
operator|.
name|class
argument_list|)
condition|)
block|{
name|addContainerRequestFilter
argument_list|(
name|postMatchRequestFilters
argument_list|,
operator|(
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
operator|)
name|provider
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|filterContractSupported
argument_list|(
name|provider
argument_list|,
name|providerCls
argument_list|,
name|ContainerResponseFilter
operator|.
name|class
argument_list|)
condition|)
block|{
name|postMatchResponseFilters
operator|.
name|add
argument_list|(
operator|(
name|ProviderInfo
argument_list|<
name|ContainerResponseFilter
argument_list|>
operator|)
name|provider
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|DynamicFeature
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|providerCls
argument_list|)
condition|)
block|{
comment|//TODO: review the possibility of DynamicFeatures needing to have Contexts injected
name|Object
name|feature
init|=
name|provider
operator|.
name|getProvider
argument_list|()
decl_stmt|;
name|dynamicFeatures
operator|.
name|add
argument_list|(
operator|(
name|DynamicFeature
operator|)
name|feature
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ExceptionMapper
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|providerCls
argument_list|)
condition|)
block|{
name|addProviderToList
argument_list|(
name|exceptionMappers
argument_list|,
name|provider
argument_list|)
expr_stmt|;
block|}
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|preMatchContainerRequestFilters
argument_list|,
operator|new
name|BindingPriorityComparator
argument_list|(
name|ContainerRequestFilter
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|mapInterceptorFilters
argument_list|(
name|postMatchContainerRequestFilters
argument_list|,
name|postMatchRequestFilters
argument_list|,
name|ContainerRequestFilter
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mapInterceptorFilters
argument_list|(
name|containerResponseFilters
argument_list|,
name|postMatchResponseFilters
argument_list|,
name|ContainerResponseFilter
operator|.
name|class
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|injectContextProxies
argument_list|(
name|exceptionMappers
argument_list|,
name|postMatchContainerRequestFilters
operator|.
name|values
argument_list|()
argument_list|,
name|preMatchContainerRequestFilters
argument_list|,
name|containerResponseFilters
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|injectApplicationIntoFeature
parameter_list|(
name|Feature
name|feature
parameter_list|)
block|{
if|if
condition|(
name|application
operator|!=
literal|null
condition|)
block|{
name|AbstractResourceInfo
name|info
init|=
operator|new
name|AbstractResourceInfo
argument_list|(
name|feature
operator|.
name|getClass
argument_list|()
argument_list|,
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|feature
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|getBus
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
decl_stmt|;
name|Method
name|contextMethod
init|=
name|info
operator|.
name|getContextMethods
argument_list|()
operator|.
name|get
argument_list|(
name|Application
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|contextMethod
operator|!=
literal|null
condition|)
block|{
name|InjectionUtils
operator|.
name|injectThroughMethod
argument_list|(
name|feature
argument_list|,
name|contextMethod
argument_list|,
name|application
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|Field
name|contextField
range|:
name|info
operator|.
name|getContextFields
argument_list|()
control|)
block|{
if|if
condition|(
name|Application
operator|.
name|class
operator|==
name|contextField
operator|.
name|getType
argument_list|()
condition|)
block|{
name|InjectionUtils
operator|.
name|injectContextField
argument_list|(
name|info
argument_list|,
name|contextField
argument_list|,
name|feature
argument_list|,
name|application
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|injectContextProxiesIntoProvider
parameter_list|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|pi
parameter_list|)
block|{
name|injectContextProxiesIntoProvider
argument_list|(
name|pi
argument_list|,
name|application
operator|==
literal|null
condition|?
literal|null
else|:
name|application
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|injectContextValues
parameter_list|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|pi
parameter_list|,
name|Message
name|m
parameter_list|)
block|{
if|if
condition|(
name|m
operator|!=
literal|null
condition|)
block|{
name|InjectionUtils
operator|.
name|injectContexts
argument_list|(
name|pi
operator|.
name|getProvider
argument_list|()
argument_list|,
name|pi
argument_list|,
name|m
argument_list|)
expr_stmt|;
if|if
condition|(
name|application
operator|!=
literal|null
operator|&&
name|application
operator|.
name|contextsAvailable
argument_list|()
condition|)
block|{
name|InjectionUtils
operator|.
name|injectContexts
argument_list|(
name|application
operator|.
name|getProvider
argument_list|()
argument_list|,
name|application
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|addContainerRequestFilter
parameter_list|(
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
argument_list|>
name|postMatchFilters
parameter_list|,
name|ProviderInfo
argument_list|<
name|ContainerRequestFilter
argument_list|>
name|p
parameter_list|)
block|{
name|ContainerRequestFilter
name|filter
init|=
name|p
operator|.
name|getProvider
argument_list|()
decl_stmt|;
if|if
condition|(
name|isWadlGenerator
argument_list|(
name|filter
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
name|wadlGenerator
operator|=
name|p
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|isPrematching
argument_list|(
name|filter
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
name|addProviderToList
argument_list|(
name|preMatchContainerRequestFilters
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|postMatchFilters
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
name|boolean
name|isWadlGenerator
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|filterCls
parameter_list|)
block|{
if|if
condition|(
name|filterCls
operator|==
literal|null
operator|||
name|filterCls
operator|==
name|Object
operator|.
name|class
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|WADL_PROVIDER_NAME
operator|.
name|equals
argument_list|(
name|filterCls
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|isWadlGenerator
argument_list|(
name|filterCls
operator|.
name|getSuperclass
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|RequestPreprocessor
name|getRequestPreprocessor
parameter_list|()
block|{
return|return
name|requestPreprocessor
return|;
block|}
specifier|public
name|void
name|setApplicationProvider
parameter_list|(
name|ApplicationInfo
name|app
parameter_list|)
block|{
name|application
operator|=
name|app
expr_stmt|;
block|}
specifier|public
name|ApplicationInfo
name|getApplicationProvider
parameter_list|()
block|{
return|return
name|application
return|;
block|}
specifier|public
name|void
name|setRequestPreprocessor
parameter_list|(
name|RequestPreprocessor
name|rp
parameter_list|)
block|{
name|this
operator|.
name|requestPreprocessor
operator|=
name|rp
expr_stmt|;
block|}
specifier|public
name|void
name|clearExceptionMapperProxies
parameter_list|()
block|{
name|clearProxies
argument_list|(
name|exceptionMappers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearProviders
parameter_list|()
block|{
name|super
operator|.
name|clearProviders
argument_list|()
expr_stmt|;
name|exceptionMappers
operator|.
name|clear
argument_list|()
expr_stmt|;
name|preMatchContainerRequestFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|postMatchContainerRequestFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
name|containerResponseFilters
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearThreadLocalProxies
parameter_list|()
block|{
if|if
condition|(
name|application
operator|!=
literal|null
condition|)
block|{
name|application
operator|.
name|clearThreadLocalProxies
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|clearThreadLocalProxies
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|applyDynamicFeatures
parameter_list|(
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|list
parameter_list|)
block|{
if|if
condition|(
operator|!
name|dynamicFeatures
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|ClassResourceInfo
name|cri
range|:
name|list
control|)
block|{
name|doApplyDynamicFeatures
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|Configuration
name|getConfiguration
parameter_list|(
name|Message
name|m
parameter_list|)
block|{
return|return
operator|new
name|ServerConfigurationImpl
argument_list|()
return|;
block|}
specifier|private
name|void
name|doApplyDynamicFeatures
parameter_list|(
name|ClassResourceInfo
name|cri
parameter_list|)
block|{
name|Set
argument_list|<
name|OperationResourceInfo
argument_list|>
name|oris
init|=
name|cri
operator|.
name|getMethodDispatcher
argument_list|()
operator|.
name|getOperationResourceInfos
argument_list|()
decl_stmt|;
for|for
control|(
name|OperationResourceInfo
name|ori
range|:
name|oris
control|)
block|{
name|String
name|nameBinding
init|=
name|DEFAULT_FILTER_NAME_BINDING
operator|+
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
operator|.
name|getServiceClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
for|for
control|(
name|DynamicFeature
name|feature
range|:
name|dynamicFeatures
control|)
block|{
name|FeatureContext
name|featureContext
init|=
name|createServerFeatureContext
argument_list|()
decl_stmt|;
name|feature
operator|.
name|configure
argument_list|(
operator|new
name|ResourceInfoImpl
argument_list|(
name|ori
argument_list|)
argument_list|,
name|featureContext
argument_list|)
expr_stmt|;
name|Configuration
name|cfg
init|=
name|featureContext
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|provider
range|:
name|cfg
operator|.
name|getInstances
argument_list|()
control|)
block|{
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|contracts
init|=
name|cfg
operator|.
name|getContracts
argument_list|(
name|provider
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|contracts
operator|!=
literal|null
operator|&&
operator|!
name|contracts
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|providerCls
init|=
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|provider
argument_list|)
decl_stmt|;
name|registerUserProvider
argument_list|(
operator|new
name|FilterProviderInfo
argument_list|<
name|Object
argument_list|>
argument_list|(
name|provider
operator|.
name|getClass
argument_list|()
argument_list|,
name|providerCls
argument_list|,
name|provider
argument_list|,
name|getBus
argument_list|()
argument_list|,
name|nameBinding
argument_list|,
literal|true
argument_list|,
name|contracts
argument_list|)
argument_list|)
expr_stmt|;
name|ori
operator|.
name|addNameBindings
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|nameBinding
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|Collection
argument_list|<
name|ClassResourceInfo
argument_list|>
name|subs
init|=
name|cri
operator|.
name|getSubResources
argument_list|()
decl_stmt|;
for|for
control|(
name|ClassResourceInfo
name|sub
range|:
name|subs
control|)
block|{
if|if
condition|(
name|sub
operator|!=
name|cri
condition|)
block|{
name|doApplyDynamicFeatures
argument_list|(
name|sub
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|FeatureContext
name|createServerFeatureContext
parameter_list|()
block|{
specifier|final
name|FeatureContextImpl
name|featureContext
init|=
operator|new
name|FeatureContextImpl
argument_list|()
decl_stmt|;
specifier|final
name|ServerConfigurableFactory
name|factory
init|=
name|getBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|ServerConfigurableFactory
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Configurable
argument_list|<
name|FeatureContext
argument_list|>
name|configImpl
init|=
operator|(
name|factory
operator|==
literal|null
operator|)
condition|?
operator|new
name|ServerFeatureContextConfigurable
argument_list|(
name|featureContext
argument_list|)
else|:
name|factory
operator|.
name|create
argument_list|(
name|featureContext
argument_list|)
decl_stmt|;
name|featureContext
operator|.
name|setConfigurable
argument_list|(
name|configImpl
argument_list|)
expr_stmt|;
if|if
condition|(
name|application
operator|!=
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|appProps
init|=
name|application
operator|.
name|getProvider
argument_list|()
operator|.
name|getProperties
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|appProps
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|configImpl
operator|.
name|property
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|featureContext
return|;
block|}
specifier|protected
specifier|static
name|boolean
name|isPrematching
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|filterCls
parameter_list|)
block|{
return|return
name|AnnotationUtils
operator|.
name|getClassAnnotation
argument_list|(
name|filterCls
argument_list|,
name|PreMatching
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|private
specifier|static
class|class
name|ServerFeatureContextConfigurable
extends|extends
name|ConfigurableImpl
argument_list|<
name|FeatureContext
argument_list|>
block|{
specifier|protected
name|ServerFeatureContextConfigurable
parameter_list|(
name|FeatureContext
name|mc
parameter_list|)
block|{
name|super
argument_list|(
name|mc
argument_list|,
name|RuntimeType
operator|.
name|SERVER
argument_list|,
name|ServerConfigurableFactory
operator|.
name|SERVER_FILTER_INTERCEPTOR_CLASSES
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|clearThreadLocalProxies
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|clearThreadLocalProxies
argument_list|(
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|(
name|message
argument_list|)
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|clearThreadLocalProxies
parameter_list|(
name|ServerProviderFactory
name|factory
parameter_list|,
name|Message
name|message
parameter_list|)
block|{
name|factory
operator|.
name|clearThreadLocalProxies
argument_list|()
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
operator|(
name|ClassResourceInfo
operator|)
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|JAXRSUtils
operator|.
name|ROOT_RESOURCE_CLASS
argument_list|)
decl_stmt|;
if|if
condition|(
name|cri
operator|!=
literal|null
condition|)
block|{
name|cri
operator|.
name|clearThreadLocalProxies
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|releaseRequestState
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|releaseRequestState
argument_list|(
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|(
name|message
argument_list|)
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|releaseRequestState
parameter_list|(
name|ServerProviderFactory
name|factory
parameter_list|,
name|Message
name|message
parameter_list|)
block|{
name|Object
name|rootInstance
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|remove
argument_list|(
name|JAXRSUtils
operator|.
name|ROOT_INSTANCE
argument_list|)
decl_stmt|;
if|if
condition|(
name|rootInstance
operator|!=
literal|null
condition|)
block|{
name|Object
name|rootProvider
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|remove
argument_list|(
name|JAXRSUtils
operator|.
name|ROOT_PROVIDER
argument_list|)
decl_stmt|;
if|if
condition|(
name|rootProvider
operator|!=
literal|null
condition|)
block|{
try|try
block|{
operator|(
operator|(
name|ResourceProvider
operator|)
name|rootProvider
operator|)
operator|.
name|releaseInstance
argument_list|(
name|message
argument_list|,
name|rootInstance
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|tex
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
name|clearThreadLocalProxies
argument_list|(
name|factory
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|ServerConfigurationImpl
implements|implements
name|Configuration
block|{
name|ServerConfigurationImpl
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getClasses
parameter_list|()
block|{
return|return
name|application
operator|!=
literal|null
condition|?
name|application
operator|.
name|getProvider
argument_list|()
operator|.
name|getClasses
argument_list|()
else|:
name|Collections
operator|.
expr|<
name|Class
argument_list|<
name|?
argument_list|>
operator|>
name|emptySet
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|Object
argument_list|>
name|getInstances
parameter_list|()
block|{
return|return
name|application
operator|!=
literal|null
condition|?
name|application
operator|.
name|getProvider
argument_list|()
operator|.
name|getSingletons
argument_list|()
else|:
name|Collections
operator|.
name|emptySet
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEnabled
parameter_list|(
name|Feature
name|f
parameter_list|)
block|{
return|return
name|dynamicFeatures
operator|.
name|contains
argument_list|(
operator|(
name|Object
operator|)
name|f
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEnabled
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|Feature
argument_list|>
name|featureCls
parameter_list|)
block|{
for|for
control|(
name|DynamicFeature
name|f
range|:
name|dynamicFeatures
control|)
block|{
if|if
condition|(
name|featureCls
operator|.
name|isAssignableFrom
argument_list|(
name|f
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRegistered
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|isRegistered
argument_list|(
name|preMatchContainerRequestFilters
argument_list|,
name|o
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|postMatchContainerRequestFilters
operator|.
name|values
argument_list|()
argument_list|,
name|o
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|containerResponseFilters
operator|.
name|values
argument_list|()
argument_list|,
name|o
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|readerInterceptors
operator|.
name|values
argument_list|()
argument_list|,
name|o
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|writerInterceptors
operator|.
name|values
argument_list|()
argument_list|,
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRegistered
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|isRegistered
argument_list|(
name|preMatchContainerRequestFilters
argument_list|,
name|cls
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|postMatchContainerRequestFilters
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|containerResponseFilters
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|readerInterceptors
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|)
operator|||
name|isRegistered
argument_list|(
name|writerInterceptors
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|getContracts
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|isRegistered
argument_list|(
name|cls
argument_list|)
condition|)
block|{
if|if
condition|(
name|ContainerRequestFilter
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|cls
argument_list|)
condition|)
block|{
name|boolean
name|isPreMatch
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|PreMatching
operator|.
name|class
argument_list|)
operator|!=
literal|null
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|ContainerRequestFilter
operator|.
name|class
argument_list|,
name|getPriority
argument_list|(
name|isPreMatch
condition|?
name|preMatchContainerRequestFilters
else|:
name|postMatchContainerRequestFilters
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|,
name|ContainerRequestFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ContainerResponseFilter
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|cls
argument_list|)
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
name|ContainerResponseFilter
operator|.
name|class
argument_list|,
name|getPriority
argument_list|(
name|containerResponseFilters
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|,
name|ContainerResponseFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|WriterInterceptor
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|cls
argument_list|)
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
name|WriterInterceptor
operator|.
name|class
argument_list|,
name|getPriority
argument_list|(
name|writerInterceptors
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|,
name|WriterInterceptor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ReaderInterceptor
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|cls
argument_list|)
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
name|ReaderInterceptor
operator|.
name|class
argument_list|,
name|getPriority
argument_list|(
name|readerInterceptors
operator|.
name|values
argument_list|()
argument_list|,
name|cls
argument_list|,
name|ReaderInterceptor
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|map
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|application
operator|!=
literal|null
condition|?
name|application
operator|.
name|getProperties
argument_list|()
else|:
name|Collections
operator|.
expr|<
name|String
operator|,
name|Object
operator|>
name|emptyMap
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getPropertyNames
parameter_list|()
block|{
return|return
name|getProperties
argument_list|()
operator|.
name|keySet
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|RuntimeType
name|getRuntimeType
parameter_list|()
block|{
return|return
name|RuntimeType
operator|.
name|SERVER
return|;
block|}
specifier|private
name|boolean
name|isRegistered
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|list
parameter_list|,
name|Object
name|o
parameter_list|)
block|{
name|Collection
argument_list|<
name|ProviderInfo
argument_list|<
name|?
argument_list|>
argument_list|>
name|list2
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|list
argument_list|)
decl_stmt|;
for|for
control|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|pi
range|:
name|list2
control|)
block|{
if|if
condition|(
name|pi
operator|.
name|getProvider
argument_list|()
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|isRegistered
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|list
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
name|Collection
argument_list|<
name|ProviderInfo
argument_list|<
name|?
argument_list|>
argument_list|>
name|list2
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|list
argument_list|)
decl_stmt|;
for|for
control|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|p
range|:
name|list2
control|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|pClass
init|=
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|p
operator|.
name|getBus
argument_list|()
argument_list|,
name|p
operator|.
name|getProvider
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cls
operator|.
name|isAssignableFrom
argument_list|(
name|pClass
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|Integer
name|getPriority
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|list
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|filterClass
parameter_list|)
block|{
name|Collection
argument_list|<
name|ProviderInfo
argument_list|<
name|?
argument_list|>
argument_list|>
name|list2
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|list
argument_list|)
decl_stmt|;
for|for
control|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|p
range|:
name|list2
control|)
block|{
if|if
condition|(
name|p
operator|instanceof
name|FilterProviderInfo
condition|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|pClass
init|=
name|ClassHelper
operator|.
name|getRealClass
argument_list|(
name|p
operator|.
name|getBus
argument_list|()
argument_list|,
name|p
operator|.
name|getProvider
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cls
operator|.
name|isAssignableFrom
argument_list|(
name|pClass
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|FilterProviderInfo
argument_list|<
name|?
argument_list|>
operator|)
name|p
operator|)
operator|.
name|getPriority
argument_list|(
name|filterClass
argument_list|)
return|;
block|}
block|}
block|}
return|return
name|Priorities
operator|.
name|USER
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ExceptionProviderInfoComparator
extends|extends
name|ProviderInfoClassComparator
block|{
specifier|private
name|boolean
name|makeDefaultWaeLeastSpecific
decl_stmt|;
specifier|public
name|ExceptionProviderInfoComparator
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|expectedCls
parameter_list|,
name|boolean
name|makeDefaultWaeLeastSpecific
parameter_list|)
block|{
name|super
argument_list|(
name|expectedCls
argument_list|)
expr_stmt|;
name|this
operator|.
name|makeDefaultWaeLeastSpecific
operator|=
name|makeDefaultWaeLeastSpecific
expr_stmt|;
block|}
specifier|public
name|int
name|compare
parameter_list|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|p1
parameter_list|,
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|p2
parameter_list|)
block|{
if|if
condition|(
name|makeDefaultWaeLeastSpecific
condition|)
block|{
if|if
condition|(
name|p1
operator|.
name|getProvider
argument_list|()
operator|instanceof
name|WebApplicationExceptionMapper
operator|&&
operator|!
name|p1
operator|.
name|isCustom
argument_list|()
condition|)
block|{
return|return
literal|1
return|;
block|}
elseif|else
if|if
condition|(
name|p2
operator|.
name|getProvider
argument_list|()
operator|instanceof
name|WebApplicationExceptionMapper
operator|&&
operator|!
name|p2
operator|.
name|isCustom
argument_list|()
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
name|int
name|result
init|=
name|super
operator|.
name|compare
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|0
condition|)
block|{
name|result
operator|=
name|comparePriorityStatus
argument_list|(
name|p1
operator|.
name|getProvider
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
name|p2
operator|.
name|getProvider
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
block|}
end_class

end_unit

