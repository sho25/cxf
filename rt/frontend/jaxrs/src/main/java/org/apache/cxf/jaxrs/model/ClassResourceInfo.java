begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ConsumeMime
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ProduceMime
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|ResourceProvider
import|;
end_import

begin_class
specifier|public
class|class
name|ClassResourceInfo
block|{
specifier|private
name|boolean
name|root
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|resourceClass
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|serviceClass
decl_stmt|;
specifier|private
name|URITemplate
name|uriTemplate
decl_stmt|;
specifier|private
name|MethodDispatcher
name|methodDispatcher
decl_stmt|;
specifier|private
name|ResourceProvider
name|resourceProvider
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|subClassResourceInfo
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassResourceInfo
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Field
argument_list|>
name|httpContexts
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Field
argument_list|>
name|resources
decl_stmt|;
specifier|public
name|ClassResourceInfo
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|theResourceClass
parameter_list|)
block|{
name|this
argument_list|(
name|theResourceClass
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClassResourceInfo
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|theResourceClass
parameter_list|,
name|boolean
name|theRoot
parameter_list|)
block|{
name|this
argument_list|(
name|theResourceClass
argument_list|,
name|theResourceClass
argument_list|,
name|theRoot
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClassResourceInfo
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|theResourceClass
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|theServiceClass
parameter_list|)
block|{
name|this
argument_list|(
name|theResourceClass
argument_list|,
name|theServiceClass
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClassResourceInfo
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|theResourceClass
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|theServiceClass
parameter_list|,
name|boolean
name|theRoot
parameter_list|)
block|{
name|resourceClass
operator|=
name|theResourceClass
expr_stmt|;
name|serviceClass
operator|=
name|theServiceClass
expr_stmt|;
name|root
operator|=
name|theRoot
expr_stmt|;
name|initHttpContexts
argument_list|()
expr_stmt|;
name|initResources
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isRoot
parameter_list|()
block|{
return|return
name|root
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getResourceClass
parameter_list|()
block|{
return|return
name|resourceClass
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getServiceClass
parameter_list|()
block|{
return|return
name|serviceClass
return|;
block|}
specifier|public
name|URITemplate
name|getURITemplate
parameter_list|()
block|{
return|return
name|uriTemplate
return|;
block|}
specifier|public
name|void
name|setURITemplate
parameter_list|(
name|URITemplate
name|u
parameter_list|)
block|{
name|uriTemplate
operator|=
name|u
expr_stmt|;
block|}
specifier|public
name|MethodDispatcher
name|getMethodDispatcher
parameter_list|()
block|{
return|return
name|methodDispatcher
return|;
block|}
specifier|public
name|void
name|setMethodDispatcher
parameter_list|(
name|MethodDispatcher
name|md
parameter_list|)
block|{
name|methodDispatcher
operator|=
name|md
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasSubResources
parameter_list|()
block|{
return|return
operator|!
name|subClassResourceInfo
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addSubClassResourceInfo
parameter_list|(
name|ClassResourceInfo
name|cri
parameter_list|)
block|{
name|subClassResourceInfo
operator|.
name|add
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|getSubClassResourceInfo
parameter_list|()
block|{
return|return
name|subClassResourceInfo
return|;
block|}
specifier|public
name|ResourceProvider
name|getResourceProvider
parameter_list|()
block|{
return|return
name|resourceProvider
return|;
block|}
specifier|public
name|void
name|setResourceProvider
parameter_list|(
name|ResourceProvider
name|rp
parameter_list|)
block|{
name|resourceProvider
operator|=
name|rp
expr_stmt|;
block|}
specifier|private
name|void
name|initHttpContexts
parameter_list|()
block|{
if|if
condition|(
name|resourceClass
operator|==
literal|null
operator|||
operator|!
name|root
condition|)
block|{
return|return;
block|}
name|httpContexts
operator|=
operator|new
name|ArrayList
argument_list|<
name|Field
argument_list|>
argument_list|()
expr_stmt|;
name|Field
index|[]
name|fields
init|=
name|getServiceClass
argument_list|()
operator|.
name|getDeclaredFields
argument_list|()
decl_stmt|;
for|for
control|(
name|Field
name|f
range|:
name|fields
control|)
block|{
name|Context
name|context
init|=
name|f
operator|.
name|getAnnotation
argument_list|(
name|Context
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|httpContexts
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|initResources
parameter_list|()
block|{
if|if
condition|(
name|resourceClass
operator|==
literal|null
operator|||
operator|!
name|root
condition|)
block|{
return|return;
block|}
name|resources
operator|=
operator|new
name|ArrayList
argument_list|<
name|Field
argument_list|>
argument_list|()
expr_stmt|;
name|Field
index|[]
name|fields
init|=
name|getServiceClass
argument_list|()
operator|.
name|getDeclaredFields
argument_list|()
decl_stmt|;
for|for
control|(
name|Field
name|f
range|:
name|fields
control|)
block|{
name|Resource
name|resource
init|=
name|f
operator|.
name|getAnnotation
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|resource
operator|!=
literal|null
condition|)
block|{
name|resources
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|ProduceMime
name|getProduceMime
parameter_list|()
block|{
return|return
operator|(
name|ProduceMime
operator|)
name|JAXRSUtils
operator|.
name|getClassAnnotation
argument_list|(
name|getServiceClass
argument_list|()
argument_list|,
name|ProduceMime
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|ConsumeMime
name|getConsumeMime
parameter_list|()
block|{
return|return
operator|(
name|ConsumeMime
operator|)
name|JAXRSUtils
operator|.
name|getClassAnnotation
argument_list|(
name|getServiceClass
argument_list|()
argument_list|,
name|ConsumeMime
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|Path
name|getPath
parameter_list|()
block|{
return|return
operator|(
name|Path
operator|)
name|JAXRSUtils
operator|.
name|getClassAnnotation
argument_list|(
name|getServiceClass
argument_list|()
argument_list|,
name|Path
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Field
argument_list|>
name|getHttpContexts
parameter_list|()
block|{
name|List
argument_list|<
name|Field
argument_list|>
name|ret
decl_stmt|;
if|if
condition|(
name|httpContexts
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|httpContexts
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|List
argument_list|<
name|Field
argument_list|>
name|getResources
parameter_list|()
block|{
name|List
argument_list|<
name|Field
argument_list|>
name|ret
decl_stmt|;
if|if
condition|(
name|resources
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|resources
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

