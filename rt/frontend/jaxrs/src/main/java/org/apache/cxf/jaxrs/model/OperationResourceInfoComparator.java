begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|ResourceComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_class
specifier|public
class|class
name|OperationResourceInfoComparator
extends|extends
name|OperationResourceInfoComparatorBase
implements|implements
name|Comparator
argument_list|<
name|OperationResourceInfo
argument_list|>
block|{
specifier|private
name|String
name|httpMethod
decl_stmt|;
specifier|private
name|boolean
name|getMethod
decl_stmt|;
specifier|private
name|Message
name|message
decl_stmt|;
specifier|private
name|ResourceComparator
name|rc
decl_stmt|;
specifier|private
name|MediaType
name|contentType
init|=
name|MediaType
operator|.
name|WILDCARD_TYPE
decl_stmt|;
specifier|private
name|List
argument_list|<
name|MediaType
argument_list|>
name|acceptTypes
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|MediaType
operator|.
name|WILDCARD_TYPE
argument_list|)
decl_stmt|;
specifier|public
name|OperationResourceInfoComparator
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|method
parameter_list|)
block|{
name|this
operator|.
name|message
operator|=
name|m
expr_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|Object
name|o
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getEndpoint
argument_list|()
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.jaxrs.comparator"
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
name|rc
operator|=
operator|(
name|ResourceComparator
operator|)
name|o
expr_stmt|;
block|}
block|}
name|this
operator|.
name|httpMethod
operator|=
name|method
expr_stmt|;
block|}
specifier|public
name|OperationResourceInfoComparator
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|httpMethod
parameter_list|,
name|boolean
name|getMethod
parameter_list|,
name|MediaType
name|contentType
parameter_list|,
name|List
argument_list|<
name|MediaType
argument_list|>
name|acceptTypes
parameter_list|)
block|{
name|this
argument_list|(
name|m
argument_list|,
name|httpMethod
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentType
operator|=
name|contentType
expr_stmt|;
name|this
operator|.
name|acceptTypes
operator|=
name|acceptTypes
expr_stmt|;
name|this
operator|.
name|getMethod
operator|=
name|getMethod
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|OperationResourceInfo
name|e1
parameter_list|,
name|OperationResourceInfo
name|e2
parameter_list|)
block|{
if|if
condition|(
name|e1
operator|==
name|e2
condition|)
block|{
return|return
literal|0
return|;
block|}
if|if
condition|(
name|rc
operator|!=
literal|null
condition|)
block|{
name|int
name|result
init|=
name|rc
operator|.
name|compare
argument_list|(
name|e1
argument_list|,
name|e2
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|0
condition|)
block|{
return|return
name|result
return|;
block|}
block|}
return|return
name|compare
argument_list|(
name|e1
argument_list|,
name|e2
argument_list|,
name|getMethod
argument_list|,
name|httpMethod
argument_list|,
name|contentType
argument_list|,
name|acceptTypes
argument_list|)
return|;
block|}
block|}
end_class

end_unit

