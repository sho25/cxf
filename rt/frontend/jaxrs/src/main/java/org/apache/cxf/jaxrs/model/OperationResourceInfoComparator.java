begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_class
specifier|public
class|class
name|OperationResourceInfoComparator
implements|implements
name|Comparator
argument_list|<
name|OperationResourceInfo
argument_list|>
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|OperationResourceInfo
name|e1
parameter_list|,
name|OperationResourceInfo
name|e2
parameter_list|)
block|{
if|if
condition|(
name|e1
operator|.
name|getHttpMethod
argument_list|()
operator|!=
literal|null
operator|&&
name|e2
operator|.
name|getHttpMethod
argument_list|()
operator|==
literal|null
operator|||
name|e1
operator|.
name|getHttpMethod
argument_list|()
operator|==
literal|null
operator|&&
name|e2
operator|.
name|getHttpMethod
argument_list|()
operator|!=
literal|null
condition|)
block|{
comment|// subresource method takes precedence over a subresource locator
return|return
name|e1
operator|.
name|getHttpMethod
argument_list|()
operator|!=
literal|null
condition|?
operator|-
literal|1
else|:
literal|1
return|;
block|}
name|String
name|l1
init|=
name|e1
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getLiteralChars
argument_list|()
decl_stmt|;
name|String
name|l2
init|=
name|e2
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getLiteralChars
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|l1
operator|.
name|equals
argument_list|(
name|l2
argument_list|)
condition|)
block|{
comment|// descending order
return|return
name|l1
operator|.
name|length
argument_list|()
operator|<
name|l2
operator|.
name|length
argument_list|()
condition|?
literal|1
else|:
operator|-
literal|1
return|;
block|}
name|int
name|g1
init|=
name|e1
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getNumberOfGroups
argument_list|()
decl_stmt|;
name|int
name|g2
init|=
name|e2
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getNumberOfGroups
argument_list|()
decl_stmt|;
if|if
condition|(
name|g1
operator|!=
name|g2
condition|)
block|{
comment|// descending order
return|return
name|g1
operator|<
name|g2
condition|?
literal|1
else|:
operator|-
literal|1
return|;
block|}
name|int
name|gCustom1
init|=
name|e1
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getNumberOfGroupsWithCustomExpression
argument_list|()
decl_stmt|;
name|int
name|gCustom2
init|=
name|e2
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getNumberOfGroupsWithCustomExpression
argument_list|()
decl_stmt|;
if|if
condition|(
name|gCustom1
operator|!=
name|gCustom2
condition|)
block|{
comment|// descending order
return|return
name|gCustom1
operator|<
name|gCustom2
condition|?
literal|1
else|:
operator|-
literal|1
return|;
block|}
name|int
name|result
init|=
name|JAXRSUtils
operator|.
name|compareSortedMediaTypes
argument_list|(
name|e1
operator|.
name|getConsumeTypes
argument_list|()
argument_list|,
name|e2
operator|.
name|getConsumeTypes
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|0
condition|)
block|{
comment|//use the media type of output data as the secondary key.
name|result
operator|=
name|JAXRSUtils
operator|.
name|compareSortedMediaTypes
argument_list|(
name|e1
operator|.
name|getProduceTypes
argument_list|()
argument_list|,
name|e2
operator|.
name|getProduceTypes
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

