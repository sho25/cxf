begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|features
operator|.
name|clustering
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|clustering
operator|.
name|AbstractStaticFailoverStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|clustering
operator|.
name|FailoverStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_comment
comment|/**  * Use the default FailoverFeature instead  */
end_comment

begin_class
annotation|@
name|Deprecated
annotation|@
name|NoJSR250Annotations
specifier|public
class|class
name|FailoverFeature
extends|extends
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|clustering
operator|.
name|FailoverFeature
block|{
annotation|@
name|Override
specifier|public
name|FailoverStrategy
name|getStrategy
parameter_list|()
block|{
name|FailoverStrategy
name|strategy
init|=
name|super
operator|.
name|getStrategy
argument_list|()
decl_stmt|;
if|if
condition|(
name|strategy
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Default Strategies are not supported"
argument_list|)
throw|;
block|}
if|if
condition|(
name|strategy
operator|instanceof
name|AbstractStaticFailoverStrategy
condition|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|altAdresses
init|=
operator|(
operator|(
name|AbstractStaticFailoverStrategy
operator|)
name|strategy
operator|)
operator|.
name|getAlternateAddresses
argument_list|(
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|altAdresses
operator|==
literal|null
operator|||
name|altAdresses
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Strategy is not initialized"
argument_list|)
throw|;
block|}
block|}
return|return
name|strategy
return|;
block|}
block|}
end_class

end_unit

