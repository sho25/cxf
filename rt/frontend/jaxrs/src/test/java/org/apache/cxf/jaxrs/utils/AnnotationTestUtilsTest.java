begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|ElementType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Retention
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|RetentionPolicy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Target
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_class
specifier|public
class|class
name|AnnotationTestUtilsTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetAnnotatedMethodFromInterface
parameter_list|()
throws|throws
name|Exception
block|{
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setUriInfoContext"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|UriInfo
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|m
operator|.
name|getAnnotations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|m
operator|.
name|getParameterAnnotations
argument_list|()
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|Method
name|annotatedMethod
init|=
name|AnnotationUtils
operator|.
name|getAnnotatedMethod
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|m
argument_list|,
name|annotatedMethod
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotatedMethod
operator|.
name|getParameterAnnotations
argument_list|()
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAnnotatedMethodFromClass
parameter_list|()
throws|throws
name|Exception
block|{
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getContextResolver"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|m
operator|.
name|getAnnotations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Method
name|annotatedMethod
init|=
name|AnnotationUtils
operator|.
name|getAnnotatedMethod
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|m
argument_list|,
name|annotatedMethod
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomHttpMethodValue
parameter_list|()
throws|throws
name|Exception
block|{
name|Method
name|m
init|=
name|ResourceClass
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"update"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"UPDATE"
argument_list|,
name|AnnotationUtils
operator|.
name|getHttpMethodValue
argument_list|(
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Target
argument_list|(
block|{
name|ElementType
operator|.
name|METHOD
block|}
argument_list|)
annotation|@
name|Retention
argument_list|(
name|RetentionPolicy
operator|.
name|RUNTIME
argument_list|)
annotation|@
name|HttpMethod
argument_list|(
literal|"UPDATE"
argument_list|)
specifier|public
annotation_defn|@interface
name|UPDATE
block|{     }
specifier|public
class|class
name|ResourceClass
block|{
annotation|@
name|UPDATE
specifier|public
name|void
name|update
parameter_list|()
block|{          }
block|}
block|}
end_class

end_unit

