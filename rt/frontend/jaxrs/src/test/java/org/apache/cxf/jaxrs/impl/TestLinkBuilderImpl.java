begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Link
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestLinkBuilderImpl
block|{
name|Link
operator|.
name|Builder
name|linkBuilder
init|=
operator|new
name|LinkBuilderImpl
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|build
parameter_list|()
throws|throws
name|Exception
block|{
name|Link
name|prevLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page1"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"previous"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"<http://example.com/page1>;rel=\"previous\""
argument_list|,
name|prevLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|relativeBuild
parameter_list|()
throws|throws
name|Exception
block|{
name|URI
name|base
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://example.com/page2"
argument_list|)
decl_stmt|;
name|Link
name|prevLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page1"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"previous"
argument_list|)
operator|.
name|buildRelativized
argument_list|(
name|base
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"<page1>;rel=\"previous\""
argument_list|,
name|prevLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|severalAttributes
parameter_list|()
throws|throws
name|Exception
block|{
name|Link
name|prevLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page1"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"previous"
argument_list|)
operator|.
name|title
argument_list|(
literal|"A title"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"<http://example.com/page1>;rel=\"previous\";title=\"A title\""
argument_list|,
name|prevLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|copyOnBuild
parameter_list|()
throws|throws
name|Exception
block|{
name|Link
name|prevLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page1"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"previous"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Link
name|nextLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page3"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"next"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Previously built link should not be affected by reuse of link builder
name|assertEquals
argument_list|(
literal|"<http://example.com/page1>;rel=\"previous\""
argument_list|,
name|prevLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<http://example.com/page3>;rel=\"next\""
argument_list|,
name|nextLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
argument_list|(
literal|"Ignored due to CXF-4919"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|copyOnRelativeBuild
parameter_list|()
throws|throws
name|Exception
block|{
name|URI
name|base
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://example.com/page2"
argument_list|)
decl_stmt|;
name|Link
name|prevLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page1"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"previous"
argument_list|)
operator|.
name|buildRelativized
argument_list|(
name|base
argument_list|)
decl_stmt|;
name|Link
name|nextLink
init|=
name|linkBuilder
operator|.
name|uri
argument_list|(
literal|"http://example.com/page3"
argument_list|)
operator|.
name|rel
argument_list|(
literal|"next"
argument_list|)
operator|.
name|buildRelativized
argument_list|(
name|base
argument_list|)
decl_stmt|;
comment|// Previously built link should not be affected by reuse of link builder
name|assertEquals
argument_list|(
literal|"<page1>;rel=\"previous\""
argument_list|,
name|prevLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<page3>;rel=\"next\""
argument_list|,
name|nextLink
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

