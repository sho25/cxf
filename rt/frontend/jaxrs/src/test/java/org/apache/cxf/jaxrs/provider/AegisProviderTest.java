begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|AegisTestBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|AegisProviderTest
extends|extends
name|Assert
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SIMPLE_BEAN_XML
init|=
literal|"<ns1:AegisTestBean xmlns:ns1=\"http://fortest.jaxrs.cxf.apache.org\" "
operator|+
literal|"xmlns:ns2=\"http://www.w3.org/2001/XMLSchema-instance\" ns2:type=\"ns1:AegisTestBean\">"
operator|+
literal|"<ns1:boolValue>true</ns1:boolValue><ns1:strValue>hovercraft</ns1:strValue>"
operator|+
literal|"</ns1:AegisTestBean>"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testIsWriteable
parameter_list|()
block|{
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|p
operator|.
name|isWriteable
argument_list|(
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsReadable
parameter_list|()
block|{
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|p
operator|.
name|isReadable
argument_list|(
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testReadFrom
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|()
decl_stmt|;
name|byte
index|[]
name|simpleBytes
init|=
name|SIMPLE_BEAN_XML
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
name|Object
name|beanObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|simpleBytes
argument_list|)
argument_list|)
decl_stmt|;
name|AegisTestBean
name|bean
init|=
operator|(
name|AegisTestBean
operator|)
name|beanObject
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hovercraft"
argument_list|,
name|bean
operator|.
name|getStrValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|bean
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteTo
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|AegisTestBean
name|bean
init|=
operator|new
name|AegisTestBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setBoolValue
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setStrValue
argument_list|(
literal|"hovercraft"
argument_list|)
expr_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|bean
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|os
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|String
name|xml
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SIMPLE_BEAN_XML
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
interface|interface
name|InterfaceWithMap
block|{
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|String
argument_list|>
name|mapFunction
parameter_list|()
function_decl|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
annotation|@
name|org
operator|.
name|junit
operator|.
name|Ignore
specifier|public
name|void
name|testReadWriteComplexMap
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|AegisTestBean
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|AegisTestBean
name|bean
init|=
operator|new
name|AegisTestBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setBoolValue
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setStrValue
argument_list|(
literal|"hovercraft"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|bean
argument_list|,
literal|"hovercraft"
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|writer
init|=
operator|new
name|AegisElementProvider
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|writer
operator|.
name|writeTo
argument_list|(
name|bean
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|os
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|String
name|xml
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
name|reader
init|=
operator|new
name|AegisElementProvider
argument_list|()
decl_stmt|;
name|byte
index|[]
name|simpleBytes
init|=
name|xml
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|InterfaceWithMap
argument_list|>
name|iwithMapClass
init|=
name|InterfaceWithMap
operator|.
name|class
decl_stmt|;
name|Method
name|method
init|=
name|iwithMapClass
operator|.
name|getMethod
argument_list|(
literal|"mapFunction"
argument_list|)
decl_stmt|;
name|Type
name|mapType
init|=
name|method
operator|.
name|getGenericReturnType
argument_list|()
decl_stmt|;
name|Object
name|beanObject
init|=
name|reader
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|Map
operator|.
name|class
argument_list|,
name|mapType
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|simpleBytes
argument_list|)
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|String
argument_list|>
name|map2
init|=
operator|(
name|Map
operator|)
name|beanObject
decl_stmt|;
name|AegisTestBean
name|bean2
init|=
name|map2
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hovercraft"
argument_list|,
name|bean2
operator|.
name|getStrValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|bean2
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

