begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|PropertyException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|ValidationEventHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlAdapter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|attachment
operator|.
name|AttachmentMarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLEventWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|validation
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|Book
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|CollectionsResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|SuperBook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TagVO2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXBElementProviderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testIsWriteableList
parameter_list|()
throws|throws
name|Exception
block|{
name|testIsWriteableCollection
argument_list|(
literal|"getBooks"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsWriteableCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|testIsWriteableCollection
argument_list|(
literal|"getBookCollection"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsWriteableSet
parameter_list|()
throws|throws
name|Exception
block|{
name|testIsWriteableCollection
argument_list|(
literal|"getBookSet"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsWriteableJAXBElements
parameter_list|()
throws|throws
name|Exception
block|{
name|testIsWriteableCollection
argument_list|(
literal|"getBookElements"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testIsWriteableCollection
parameter_list|(
name|String
name|mName
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
name|mName
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|provider
operator|.
name|isWriteable
argument_list|(
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|doWriteUnqualifiedCollection
argument_list|(
literal|true
argument_list|,
literal|"getBookCollection"
argument_list|,
literal|"setBookCollection"
argument_list|,
name|Collection
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteList
parameter_list|()
throws|throws
name|Exception
block|{
name|doWriteUnqualifiedCollection
argument_list|(
literal|true
argument_list|,
literal|"getBooks"
argument_list|,
literal|"setBooks"
argument_list|,
name|List
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteSet
parameter_list|()
throws|throws
name|Exception
block|{
name|doWriteUnqualifiedCollection
argument_list|(
literal|true
argument_list|,
literal|"getBookSet"
argument_list|,
literal|"setBookSet"
argument_list|,
name|Set
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionJaxbName
parameter_list|()
throws|throws
name|Exception
block|{
name|doWriteUnqualifiedCollection
argument_list|(
literal|false
argument_list|,
literal|"getBooks"
argument_list|,
literal|"setBooks"
argument_list|,
name|List
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteArray
parameter_list|()
throws|throws
name|Exception
block|{
name|doWriteUnqualifiedCollection
argument_list|(
literal|true
argument_list|,
literal|"getBooksArray"
argument_list|,
literal|"setBooksArray"
argument_list|,
name|Book
index|[]
operator|.
expr|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|doWriteUnqualifiedCollection
parameter_list|(
name|boolean
name|setName
parameter_list|,
name|String
name|mName
parameter_list|,
name|String
name|setterName
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
if|if
condition|(
name|setName
condition|)
block|{
name|provider
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"Books"
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|books
operator|.
name|add
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|books
operator|.
name|add
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|124L
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|o
init|=
name|type
operator|.
name|isArray
argument_list|()
condition|?
name|books
operator|.
name|toArray
argument_list|()
else|:
name|type
operator|==
name|Set
operator|.
name|class
condition|?
operator|new
name|HashSet
argument_list|<
name|Book
argument_list|>
argument_list|(
name|books
argument_list|)
else|:
name|books
decl_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
name|mName
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|o
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|doReadUnqualifiedCollection
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
name|setterName
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteJAXBElementCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteJAXBCollection
argument_list|(
literal|"getBookElements"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteJAXBElementCollection2
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteJAXBCollection
argument_list|(
literal|"getBookElements2"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteDerivedType
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setJaxbElementClassNames
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|Book
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
operator|new
name|SuperBook
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|b
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|readSuperBook
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteDerivedType2
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|SuperBook
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|b
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|readSuperBook
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWithoutXmlRootElement
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteWithoutXmlRootElement
argument_list|(
literal|"SuperBook"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWithoutXmlRootElement2
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteWithoutXmlRootElement
argument_list|(
literal|"SuperBook"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWithoutXmlRootElement3
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteWithoutXmlRootElement
argument_list|(
literal|"{http://books}SuperBook"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWithoutXmlRootElement4
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteWithoutXmlRootElement
argument_list|(
literal|"SuperBook"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|doTestWriteWithoutXmlRootElement
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|unmarshalAsJaxbElement
parameter_list|,
name|boolean
name|marshalAsJaxbElement
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|marshalAsJaxbElement
condition|)
block|{
name|provider
operator|.
name|setJaxbElementClassMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|provider
operator|.
name|setMarshallAsJaxbElement
argument_list|(
name|marshalAsJaxbElement
argument_list|)
expr_stmt|;
block|}
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
name|b
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|b
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|readSuperBook2
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
name|unmarshalAsJaxbElement
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionWithoutXmlRootElement
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"{http://superbooks}SuperBooks"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setJaxbElementClassMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"{http://superbooks}SuperBook"
argument_list|)
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
name|b
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
argument_list|>
name|books
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|books
argument_list|,
name|List
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"<ns1:SuperBooks xmlns:ns1=\"http://superbooks\">"
operator|+
literal|"<ns1:SuperBook xmlns:ns2=\"http://books\" xmlns:ns1=\"http://superbooks\"><id>123</id>"
operator|+
literal|"<name>CXF in Action</name><superId>124</superId></ns1:SuperBook></ns1:SuperBooks>"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteWithoutXmlRootElementDerived
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setJaxbElementClassMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|Book
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"Book"
argument_list|)
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|Book
name|b
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|b
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|Book
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|readSuperBook2
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|void
name|testWriteWithoutXmlRootElementObjectFactory
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setJaxbElementClassMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"{http://books}SuperBook2"
argument_list|)
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
name|b
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|b
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|JAXBElementProvider
name|provider2
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|bos
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
name|book
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
operator|)
name|provider2
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getSuperId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|readSuperBook
parameter_list|(
name|String
name|data
parameter_list|,
name|boolean
name|xsiTypeExpected
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|xsiTypeExpected
condition|)
block|{
name|assertTrue
argument_list|(
name|data
operator|.
name|contains
argument_list|(
literal|"xsi:type"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|SuperBook
name|book
init|=
operator|(
name|SuperBook
operator|)
name|provider
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|SuperBook
operator|.
name|class
argument_list|,
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getSuperId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|readSuperBook2
parameter_list|(
name|String
name|data
parameter_list|,
name|boolean
name|unmarshalAsJaxbElement
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|unmarshalAsJaxbElement
condition|)
block|{
name|provider
operator|.
name|setJaxbElementClassMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"SuperBook"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|provider
operator|.
name|setUnmarshallAsJaxbElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
name|book
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|)
name|provider
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getSuperId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestWriteJAXBCollection
parameter_list|(
name|String
name|mName
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|JAXBElement
argument_list|<
name|Book
argument_list|>
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|JAXBElement
argument_list|<
name|Book
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|books
operator|.
name|add
argument_list|(
operator|new
name|JAXBElement
argument_list|<
name|Book
argument_list|>
argument_list|(
operator|new
name|QName
argument_list|(
literal|"Books"
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|books
operator|.
name|add
argument_list|(
operator|new
name|JAXBElement
argument_list|<
name|Book
argument_list|>
argument_list|(
operator|new
name|QName
argument_list|(
literal|"Books"
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|124L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
name|mName
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|books
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|doReadUnqualifiedCollection
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
literal|"setBooks"
argument_list|,
name|List
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteQualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"{http://tags}tags"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TagVO2
argument_list|>
name|tags
init|=
operator|new
name|ArrayList
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|TagVO2
argument_list|(
literal|"C"
argument_list|,
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getTags"
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tags
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|doReadQualifiedCollection
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadUnqualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"<Books><Book><id>123</id><name>CXF in Action</name>"
operator|+
literal|"</Book><Book><id>124</id><name>CXF Rocks</name></Book></Books>"
decl_stmt|;
name|doReadUnqualifiedCollection
argument_list|(
name|data
argument_list|,
literal|"setBooks"
argument_list|,
name|List
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|doReadUnqualifiedCollection
parameter_list|(
name|String
name|data
parameter_list|,
name|String
name|mName
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
name|mName
argument_list|,
operator|new
name|Class
index|[]
block|{
name|type
block|}
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|m
operator|.
name|getGenericParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Book
name|b1
init|=
literal|null
decl_stmt|;
name|Book
name|b2
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|isArray
argument_list|()
condition|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|Book
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|b1
operator|=
operator|(
operator|(
name|Book
index|[]
operator|)
name|o
operator|)
index|[
literal|0
index|]
expr_stmt|;
name|b2
operator|=
operator|(
operator|(
name|Book
index|[]
operator|)
name|o
operator|)
index|[
literal|1
index|]
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|==
name|Set
operator|.
name|class
condition|)
block|{
name|Set
argument_list|<
name|Book
argument_list|>
name|set
init|=
operator|(
name|Set
operator|)
name|o
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Book
argument_list|>
argument_list|(
name|set
argument_list|)
argument_list|)
decl_stmt|;
name|b1
operator|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|b2
operator|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|(
name|List
argument_list|<
name|Book
argument_list|>
operator|)
name|o
decl_stmt|;
name|b1
operator|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|b2
operator|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b1
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124
argument_list|,
name|b2
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadQualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"<ns1:tags xmlns:ns1=\"http://tags\"><ns1:thetag><group>B</group><name>A</name>"
operator|+
literal|"</ns1:thetag><ns1:thetag><group>D</group><name>C</name></ns1:thetag></ns1:tags>"
decl_stmt|;
name|doReadQualifiedCollection
argument_list|(
name|data
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadQualifiedArray
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"<ns1:tags xmlns:ns1=\"http://tags\"><ns1:thetag><group>B</group><name>A</name>"
operator|+
literal|"</ns1:thetag><ns1:thetag><group>D</group><name>C</name></ns1:thetag></ns1:tags>"
decl_stmt|;
name|doReadQualifiedCollection
argument_list|(
name|data
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|void
name|doReadQualifiedCollection
parameter_list|(
name|String
name|data
parameter_list|,
name|boolean
name|isArray
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|Method
name|m
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|isArray
condition|)
block|{
name|m
operator|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setTags"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|List
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m
operator|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setTagsArray"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|TagVO2
index|[]
operator|.
expr|class
block|}
argument_list|)
expr_stmt|;
block|}
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|m
operator|.
name|getGenericParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|TagVO2
name|t1
init|=
literal|null
decl_stmt|;
name|TagVO2
name|t2
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|isArray
condition|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
operator|)
name|o
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|t1
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|List
operator|)
name|o
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|t2
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|List
operator|)
name|o
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|Object
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|t1
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|Object
index|[]
operator|)
name|o
argument_list|)
index|[
literal|0
index|]
expr_stmt|;
name|t2
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|Object
index|[]
operator|)
name|o
argument_list|)
index|[
literal|1
index|]
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|t1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|t1
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"C"
argument_list|,
name|t2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"D"
argument_list|,
name|t2
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetSchemasFromClasspath
parameter_list|()
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|locations
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|locations
operator|.
name|add
argument_list|(
literal|"classpath:/test.xsd"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setSchemas
argument_list|(
name|locations
argument_list|)
expr_stmt|;
name|Schema
name|s
init|=
name|provider
operator|.
name|getSchema
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"schema can not be read from classpath"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetSchemasFromDisk
parameter_list|()
block|{
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|locations
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|loc
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test.xsd"
argument_list|)
operator|.
name|getFile
argument_list|()
decl_stmt|;
name|locations
operator|.
name|add
argument_list|(
name|loc
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setSchemas
argument_list|(
name|locations
argument_list|)
expr_stmt|;
name|Schema
name|s
init|=
name|provider
operator|.
name|getSchema
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"schema can not be read from disk"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPackageContext
parameter_list|()
block|{
name|JAXBElementProvider
name|p
init|=
operator|new
name|JAXBElementProvider
argument_list|()
decl_stmt|;
try|try
block|{
name|JAXBContext
name|context
init|=
name|p
operator|.
name|getPackageContext
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|JAXBContext
name|context2
init|=
name|p
operator|.
name|getPackageContext
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|fortest
operator|.
name|jaxb
operator|.
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|context2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
argument_list|,
name|context2
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|JAXBElementProvider
operator|.
name|clearContexts
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetMarshallProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Marshaller
operator|.
name|JAXB_FORMATTED_OUTPUT
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Marshaller
operator|.
name|JAXB_SCHEMA_LOCATION
argument_list|,
literal|"foo.xsd"
argument_list|)
expr_stmt|;
specifier|final
name|TestMarshaller
name|m
init|=
operator|new
name|TestMarshaller
argument_list|()
decl_stmt|;
name|JAXBElementProvider
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|Marshaller
name|createMarshaller
parameter_list|(
name|Object
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|String
name|enc
parameter_list|)
throws|throws
name|JAXBException
block|{
return|return
name|m
return|;
block|}
block|}
decl_stmt|;
name|provider
operator|.
name|setMarshallerProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
literal|"123"
argument_list|,
name|String
operator|.
name|class
argument_list|,
operator|(
name|Type
operator|)
name|String
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
operator|new
name|ByteArrayOutputStream
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Marshall properties have not been set"
argument_list|,
name|props
argument_list|,
name|m
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|TestMarshaller
implements|implements
name|Marshaller
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|TestMarshaller
parameter_list|()
block|{                      }
specifier|public
name|Map
name|getProperties
parameter_list|()
block|{
return|return
name|props
return|;
block|}
specifier|public
parameter_list|<
name|A
extends|extends
name|XmlAdapter
parameter_list|>
name|A
name|getAdapter
parameter_list|(
name|Class
argument_list|<
name|A
argument_list|>
name|type
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|AttachmentMarshaller
name|getAttachmentMarshaller
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|ValidationEventHandler
name|getEventHandler
parameter_list|()
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Listener
name|getListener
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Node
name|getNode
parameter_list|(
name|Object
name|contentTree
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|PropertyException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|Schema
name|getSchema
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|Result
name|result
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|OutputStream
name|os
parameter_list|)
throws|throws
name|JAXBException
block|{         }
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|File
name|output
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|Writer
name|writer
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|ContentHandler
name|handler
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|Node
name|node
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|XMLStreamWriter
name|writer
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|marshal
parameter_list|(
name|Object
name|jaxbElement
parameter_list|,
name|XMLEventWriter
name|writer
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|setAdapter
parameter_list|(
name|XmlAdapter
name|adapter
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
parameter_list|<
name|A
extends|extends
name|XmlAdapter
parameter_list|>
name|void
name|setAdapter
parameter_list|(
name|Class
argument_list|<
name|A
argument_list|>
name|type
parameter_list|,
name|A
name|adapter
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|setAttachmentMarshaller
parameter_list|(
name|AttachmentMarshaller
name|am
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|setEventHandler
parameter_list|(
name|ValidationEventHandler
name|handler
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|setListener
parameter_list|(
name|Listener
name|listener
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|value
parameter_list|)
throws|throws
name|PropertyException
block|{
name|props
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSchema
parameter_list|(
name|Schema
name|schema
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
block|}
end_class

end_unit

