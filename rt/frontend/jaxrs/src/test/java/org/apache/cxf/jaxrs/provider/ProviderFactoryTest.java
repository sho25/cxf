begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ContextResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ExceptionMapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ParamConverter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ParamConverterProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|validation
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|CustomerParameterHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXBContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXBContextProvider2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|WebApplicationExceptionMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|AbstractResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ProviderInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|Book
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|SuperBook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ProviderFactoryTest
extends|extends
name|Assert
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|clearProviders
argument_list|()
expr_stmt|;
name|AbstractResourceInfo
operator|.
name|clearAllMaps
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleFactories
parameter_list|()
block|{
name|assertNotSame
argument_list|(
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
argument_list|,
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOrderOfProvidersWithSameProperties
parameter_list|()
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|WildcardReader
name|reader1
init|=
operator|new
name|WildcardReader
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|reader1
argument_list|)
expr_stmt|;
name|WildcardReader2
name|reader2
init|=
operator|new
name|WildcardReader2
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|reader2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|MessageBodyReader
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|readers
init|=
name|pf
operator|.
name|getMessageReaders
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|readers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|reader1
argument_list|,
name|readers
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|reader2
argument_list|,
name|readers
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomProviderSorting
parameter_list|()
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Comparator
argument_list|<
name|?
argument_list|>
name|comp
init|=
operator|new
name|Comparator
argument_list|<
name|ProviderInfo
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|o1
parameter_list|,
name|ProviderInfo
argument_list|<
name|?
argument_list|>
name|o2
parameter_list|)
block|{
name|Object
name|provider1
init|=
name|o1
operator|.
name|getProvider
argument_list|()
decl_stmt|;
name|Object
name|provider2
init|=
name|o2
operator|.
name|getProvider
argument_list|()
decl_stmt|;
if|if
condition|(
name|provider1
operator|instanceof
name|StringTextProvider
condition|)
block|{
return|return
literal|1
return|;
block|}
elseif|else
if|if
condition|(
name|provider2
operator|instanceof
name|StringTextProvider
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
empty_stmt|;
comment|// writers
name|pf
operator|.
name|setMessageWriterComparator
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|MessageBodyWriter
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|writers
init|=
name|pf
operator|.
name|getMessageWriters
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|writers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|lastWriter
init|=
name|writers
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getProvider
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|lastWriter
operator|instanceof
name|StringTextProvider
argument_list|)
expr_stmt|;
comment|//readers
name|pf
operator|.
name|setMessageReaderComparator
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|MessageBodyReader
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|readers
init|=
name|pf
operator|.
name|getMessageReaders
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|readers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|lastReader
init|=
name|readers
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getProvider
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|lastReader
operator|instanceof
name|StringTextProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomJaxbProvider
parameter_list|()
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|JAXBElementProvider
argument_list|<
name|Book
argument_list|>
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|provider
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
name|customJaxbReader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|customJaxbReader
argument_list|,
name|provider
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|Book
argument_list|>
name|customJaxbWriter
init|=
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|customJaxbWriter
argument_list|,
name|provider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataSourceReader
parameter_list|()
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|DataSourceProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|DataSource
argument_list|>
name|reader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|DataSource
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"image/png"
argument_list|)
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|reader
operator|instanceof
name|DataSourceProvider
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|DataHandler
argument_list|>
name|reader2
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|DataHandler
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"image/png"
argument_list|)
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|reader
argument_list|,
name|reader2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataSourceWriter
parameter_list|()
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|DataSourceProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|DataSource
argument_list|>
name|writer
init|=
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|DataSource
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"image/png"
argument_list|)
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|instanceof
name|DataSourceProvider
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|DataHandler
argument_list|>
name|writer2
init|=
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|DataHandler
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"image/png"
argument_list|)
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|writer
argument_list|,
name|writer2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSchemaLocations
parameter_list|()
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
name|jaxbReader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|jaxbReader
operator|instanceof
name|JAXBElementProvider
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setSchemaLocations
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"classpath:/test.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
name|customJaxbReader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|jaxbReader
operator|instanceof
name|JAXBElementProvider
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|jaxbReader
argument_list|,
name|customJaxbReader
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|(
operator|(
name|JAXBElementProvider
argument_list|<
name|Book
argument_list|>
operator|)
name|customJaxbReader
operator|)
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetFactoryInboundMessage
parameter_list|()
block|{
name|ProviderFactory
name|factory
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|Exchange
name|e
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|setExchange
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|get
argument_list|(
name|ServerProviderFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|e
operator|.
name|put
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|m
argument_list|)
argument_list|,
name|factory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultUserExceptionMappers
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|ExceptionMapper
argument_list|<
name|?
argument_list|>
name|mapper
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mapper
argument_list|)
expr_stmt|;
name|WebApplicationExceptionMapper
name|wm
init|=
operator|new
name|WebApplicationExceptionMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|wm
argument_list|)
expr_stmt|;
name|ExceptionMapper
argument_list|<
name|?
argument_list|>
name|mapper2
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|mapper
argument_list|,
name|mapper2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|wm
argument_list|,
name|mapper2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionMappersHierarchy1
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|WebApplicationExceptionMapper
name|wm
init|=
operator|new
name|WebApplicationExceptionMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|wm
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|wm
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|TestRuntimeExceptionMapper
name|rm
init|=
operator|new
name|TestRuntimeExceptionMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|rm
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|wm
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|rm
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionMappersHierarchy2
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|TestRuntimeExceptionMapper
name|rm
init|=
operator|new
name|TestRuntimeExceptionMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|rm
argument_list|)
expr_stmt|;
name|ExceptionMapper
argument_list|<
name|WebApplicationException
argument_list|>
name|em
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|em
operator|instanceof
name|WebApplicationExceptionMapper
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|rm
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|WebApplicationExceptionMapper
name|wm
init|=
operator|new
name|WebApplicationExceptionMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|wm
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|wm
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|rm
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionMappersHierarchyWithGenerics
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|RuntimeExceptionMapper1
name|exMapper1
init|=
operator|new
name|RuntimeExceptionMapper1
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|exMapper1
argument_list|)
expr_stmt|;
name|RuntimeExceptionMapper2
name|exMapper2
init|=
operator|new
name|RuntimeExceptionMapper2
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|exMapper2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|exMapper1
argument_list|,
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|webExMapper
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|exMapper2
argument_list|,
name|webExMapper
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMessageBodyReaderString
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|MessageBodyReader
argument_list|<
name|String
argument_list|>
name|mbr
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mbr
operator|instanceof
name|StringTextProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMessageBodyReaderBoolean
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|CustomBooleanReader
argument_list|()
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|Boolean
argument_list|>
name|mbr
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Boolean
operator|.
name|class
argument_list|,
name|Boolean
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mbr
operator|instanceof
name|PrimitiveTextProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMessageBodyReaderBoolean2
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|CustomBooleanReader2
argument_list|()
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|Boolean
argument_list|>
name|mbr
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Boolean
operator|.
name|class
argument_list|,
name|Boolean
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mbr
operator|instanceof
name|CustomBooleanReader2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMessageBodyWriterString
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|MessageBodyWriter
argument_list|<
name|String
argument_list|>
name|mbr
init|=
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mbr
operator|instanceof
name|StringTextProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMessageBodyHandlerHierarchy
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|BookReaderWriter
name|bookHandler
init|=
operator|new
name|BookReaderWriter
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|bookHandler
argument_list|)
expr_stmt|;
name|SuperBookReaderWriter
name|superBookHandler
init|=
operator|new
name|SuperBookReaderWriter
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|superBookHandler
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setUserProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|bookHandler
argument_list|,
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|superBookHandler
argument_list|,
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|SuperBook
operator|.
name|class
argument_list|,
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|bookHandler
argument_list|,
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|superBookHandler
argument_list|,
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|SuperBook
operator|.
name|class
argument_list|,
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMessageBodyWriterNoTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|SuperBookReaderWriter2
argument_list|<
name|SuperBook
argument_list|>
name|superBookHandler
init|=
operator|new
name|SuperBookReaderWriter2
argument_list|<
name|SuperBook
argument_list|>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|superBookHandler
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setUserProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|superBookHandler
argument_list|,
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|SuperBook
operator|.
name|class
argument_list|,
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|superBookHandler
argument_list|,
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|SuperBook
operator|.
name|class
argument_list|,
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSortEntityProviders
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|TestStringProvider
argument_list|()
argument_list|)
expr_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|PrimitiveTextProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|MessageBodyReader
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|readers
init|=
name|pf
operator|.
name|getMessageReaders
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|indexOf
argument_list|(
name|readers
argument_list|,
name|TestStringProvider
operator|.
name|class
argument_list|)
operator|<
name|indexOf
argument_list|(
name|readers
argument_list|,
name|PrimitiveTextProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ProviderInfo
argument_list|<
name|MessageBodyWriter
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|writers
init|=
name|pf
operator|.
name|getMessageWriters
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|indexOf
argument_list|(
name|writers
argument_list|,
name|TestStringProvider
operator|.
name|class
argument_list|)
operator|<
name|indexOf
argument_list|(
name|writers
argument_list|,
name|PrimitiveTextProvider
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParameterHandlerProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|ParamConverterProvider
name|h
init|=
operator|new
name|CustomerParameterHandler
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|h
argument_list|)
expr_stmt|;
name|ParamConverter
argument_list|<
name|Customer
argument_list|>
name|h2
init|=
name|pf
operator|.
name|createParameterHandler
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
name|Customer
operator|.
name|class
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|h2
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetStringProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|verifyProvider
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|StringTextProvider
operator|.
name|class
argument_list|,
literal|"text/plain"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBinaryProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|verifyProvider
argument_list|(
name|byte
index|[]
operator|.
expr|class
argument_list|,
name|BinaryDataProvider
operator|.
name|class
argument_list|,
literal|"*/*"
argument_list|)
expr_stmt|;
name|verifyProvider
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|BinaryDataProvider
operator|.
name|class
argument_list|,
literal|"image/png"
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|File
argument_list|>
name|writer
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createMessageBodyWriter
argument_list|(
name|File
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|BinaryDataProvider
operator|.
name|class
operator|==
name|writer
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetComplexProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|ComplexMessageBodyReader
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|Exchange
name|ex
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|setExchange
argument_list|(
name|ex
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|ServerProviderFactory
operator|.
name|IGNORE_TYPE_VARIABLES
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
name|reader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ComplexMessageBodyReader
operator|.
name|class
operator|==
name|reader
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetComplexProvider2
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|ComplexMessageBodyReader
argument_list|()
argument_list|)
expr_stmt|;
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
name|reader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ComplexMessageBodyReader
operator|.
name|class
operator|==
name|reader
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyProvider
parameter_list|(
name|ProviderFactory
name|pf
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|provider
parameter_list|,
name|String
name|mediaType
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|pf
operator|==
literal|null
condition|)
block|{
name|pf
operator|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
name|MediaType
name|mType
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
name|mediaType
argument_list|)
decl_stmt|;
name|MessageBodyReader
argument_list|<
name|?
argument_list|>
name|reader
init|=
name|pf
operator|.
name|createMessageBodyReader
argument_list|(
name|type
argument_list|,
name|type
argument_list|,
literal|null
argument_list|,
name|mType
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
literal|"Unexpected provider found"
argument_list|,
name|provider
argument_list|,
name|reader
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|?
argument_list|>
name|writer
init|=
name|pf
operator|.
name|createMessageBodyWriter
argument_list|(
name|type
argument_list|,
name|type
argument_list|,
literal|null
argument_list|,
name|mType
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Unexpected provider found"
argument_list|,
name|provider
operator|==
name|writer
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyProvider
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|provider
parameter_list|,
name|String
name|mediaType
parameter_list|)
throws|throws
name|Exception
block|{
name|verifyProvider
argument_list|(
literal|null
argument_list|,
name|type
argument_list|,
name|provider
argument_list|,
name|mediaType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetStringProviderWildCard
parameter_list|()
throws|throws
name|Exception
block|{
name|verifyProvider
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|StringTextProvider
operator|.
name|class
argument_list|,
literal|"text/*"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetStringProviderUsingProviderDeclaration
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|TestStringProvider
argument_list|()
argument_list|)
expr_stmt|;
name|verifyProvider
argument_list|(
name|pf
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|TestStringProvider
operator|.
name|class
argument_list|,
literal|"text/html"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisterCustomJSONEntityProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|CustomJSONProvider
argument_list|()
argument_list|)
expr_stmt|;
name|verifyProvider
argument_list|(
name|pf
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|CustomJSONProvider
operator|.
name|class
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComplexExceptionMapper
parameter_list|()
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|SecurityExceptionMapper
argument_list|()
argument_list|)
expr_stmt|;
name|ExceptionMapper
argument_list|<
name|SecurityException
argument_list|>
name|mapper
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|SecurityException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mapper
operator|instanceof
name|SecurityExceptionMapper
argument_list|)
expr_stmt|;
name|ExceptionMapper
argument_list|<
name|Throwable
argument_list|>
name|mapper2
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|Throwable
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|mapper2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisterCustomResolver
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|message
init|=
name|prepareMessage
argument_list|(
literal|"*/*"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
name|pf
operator|.
name|createContextResolver
argument_list|(
name|JAXBContext
operator|.
name|class
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cr
operator|instanceof
name|ProviderFactory
operator|.
name|ContextResolverProxy
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"JAXBContext ContextProvider can not be found"
argument_list|,
name|cr
operator|instanceof
name|JAXBContextProvider
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisterCustomResolver2
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider
argument_list|()
argument_list|)
expr_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider2
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|message
init|=
name|prepareMessage
argument_list|(
literal|"text/xml+b"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
name|pf
operator|.
name|createContextResolver
argument_list|(
name|JAXBContext
operator|.
name|class
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cr
operator|instanceof
name|ProviderFactory
operator|.
name|ContextResolverProxy
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"JAXBContext ContextProvider can not be found"
argument_list|,
name|cr
operator|instanceof
name|JAXBContextProvider2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoCustomResolver
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider
argument_list|()
argument_list|)
expr_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider2
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|message
init|=
name|prepareMessage
argument_list|(
literal|"text/xml+c"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
name|pf
operator|.
name|createContextResolver
argument_list|(
name|JAXBContext
operator|.
name|class
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|cr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomResolverProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider
argument_list|()
argument_list|)
expr_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|JAXBContextProvider2
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|message
init|=
name|prepareMessage
argument_list|(
literal|"text/xml+*"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
name|pf
operator|.
name|createContextResolver
argument_list|(
name|JAXBContext
operator|.
name|class
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cr
operator|instanceof
name|ProviderFactory
operator|.
name|ContextResolverProxy
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ProviderFactory
operator|.
name|ContextResolverProxy
argument_list|<
name|?
argument_list|>
operator|)
name|cr
operator|)
operator|.
name|getResolvers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|JAXBContextProvider
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ProviderFactory
operator|.
name|ContextResolverProxy
argument_list|<
name|?
argument_list|>
operator|)
name|cr
operator|)
operator|.
name|getResolvers
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|instanceof
name|JAXBContextProvider2
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Message
name|prepareMessage
parameter_list|(
name|String
name|contentType
parameter_list|,
name|String
name|acceptType
parameter_list|)
block|{
name|Message
name|message
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|message
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|setInMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|acceptType
operator|!=
literal|null
condition|)
block|{
name|headers
operator|.
name|put
argument_list|(
literal|"Accept"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|acceptType
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|setOutMessage
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|headers
operator|.
name|put
argument_list|(
literal|"Content-Type"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|contentType
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|message
operator|.
name|put
argument_list|(
literal|"Content-Type"
argument_list|,
name|contentType
argument_list|)
expr_stmt|;
name|message
operator|.
name|setExchange
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
return|return
name|message
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisterCustomEntityProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|CustomWidgetProvider
argument_list|()
argument_list|)
expr_stmt|;
name|verifyProvider
argument_list|(
name|pf
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|Book
operator|.
name|class
argument_list|,
name|CustomWidgetProvider
operator|.
name|class
argument_list|,
literal|"application/widget"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|indexOf
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
name|providerInfos
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|providerType
parameter_list|)
block|{
name|int
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Object
name|pi
range|:
name|providerInfos
control|)
block|{
name|Object
name|p
init|=
operator|(
operator|(
name|ProviderInfo
argument_list|<
name|?
argument_list|>
operator|)
name|pi
operator|)
operator|.
name|getProvider
argument_list|()
decl_stmt|;
if|if
condition|(
name|p
operator|.
name|getClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|providerType
argument_list|)
condition|)
block|{
break|break;
block|}
name|index
operator|++
expr_stmt|;
block|}
return|return
name|index
return|;
block|}
annotation|@
name|Consumes
argument_list|(
literal|"text/html"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/html"
argument_list|)
specifier|private
specifier|final
class|class
name|TestStringProvider
implements|implements
name|MessageBodyReader
argument_list|<
name|String
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|String
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|type
operator|==
name|String
operator|.
name|class
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|type
operator|==
name|String
operator|.
name|class
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|String
name|s
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|s
operator|.
name|length
argument_list|()
return|;
block|}
specifier|public
name|String
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|String
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|InputStream
name|is
parameter_list|)
block|{
try|try
block|{
return|return
name|IOUtils
operator|.
name|toString
argument_list|(
name|is
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO: better exception handling
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|String
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|,
name|OutputStream
name|os
parameter_list|)
block|{
try|try
block|{
name|os
operator|.
name|write
argument_list|(
name|obj
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO: better exception handling
block|}
block|}
block|}
annotation|@
name|Consumes
argument_list|(
literal|"application/json"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
specifier|private
specifier|final
class|class
name|CustomJSONProvider
implements|implements
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|Book
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|type
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|type
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|Book
name|b
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|Book
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Book
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|InputStream
name|is
parameter_list|)
block|{
comment|//Dummy
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|Book
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|,
name|OutputStream
name|os
parameter_list|)
block|{
comment|//Dummy
block|}
block|}
annotation|@
name|Consumes
argument_list|(
literal|"application/widget"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/widget"
argument_list|)
specifier|private
specifier|final
class|class
name|CustomWidgetProvider
implements|implements
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|Book
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|type
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
name|type
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|Book
name|s
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|Book
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Book
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|InputStream
name|is
parameter_list|)
block|{
comment|//Dummy
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|Book
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|,
name|OutputStream
name|os
parameter_list|)
block|{
comment|//Dummy
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetSchemasFromClasspath
parameter_list|()
block|{
name|JAXBElementProvider
argument_list|<
name|?
argument_list|>
name|provider
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|ProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|provider
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|locations
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|locations
operator|.
name|add
argument_list|(
literal|"classpath:/test.xsd"
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setSchemaLocations
argument_list|(
name|locations
argument_list|)
expr_stmt|;
name|Schema
name|s
init|=
name|provider
operator|.
name|getSchema
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"schema can not be read from classpath"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|TestRuntimeExceptionMapper
implements|implements
name|ExceptionMapper
argument_list|<
name|RuntimeException
argument_list|>
block|{
specifier|public
name|Response
name|toResponse
parameter_list|(
name|RuntimeException
name|exception
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|private
specifier|static
class|class
name|BookReaderWriter
implements|implements
name|MessageBodyReader
argument_list|<
name|Book
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|Book
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Book
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Book
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|arg4
parameter_list|,
name|InputStream
name|arg5
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|Book
name|t
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|Book
name|arg0
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|arg1
parameter_list|,
name|Type
name|arg2
parameter_list|,
name|Annotation
index|[]
name|arg3
parameter_list|,
name|MediaType
name|arg4
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|arg5
parameter_list|,
name|OutputStream
name|arg6
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|private
specifier|static
class|class
name|SuperBookReaderWriter
implements|implements
name|MessageBodyReader
argument_list|<
name|SuperBook
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|SuperBook
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|SuperBook
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|SuperBook
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|arg4
parameter_list|,
name|InputStream
name|arg5
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|SuperBook
name|t
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|SuperBook
name|arg0
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|arg1
parameter_list|,
name|Type
name|arg2
parameter_list|,
name|Annotation
index|[]
name|arg3
parameter_list|,
name|MediaType
name|arg4
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|arg5
parameter_list|,
name|OutputStream
name|arg6
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|private
specifier|static
class|class
name|SuperBookReaderWriter2
parameter_list|<
name|T
parameter_list|>
implements|implements
name|MessageBodyReader
argument_list|<
name|T
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|T
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|T
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|arg4
parameter_list|,
name|InputStream
name|arg5
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|T
name|t
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|T
name|t
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|httpHeaders
parameter_list|,
name|OutputStream
name|entityStream
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
annotation|@
name|Produces
argument_list|(
literal|"*/*"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"*/*"
argument_list|)
specifier|private
specifier|static
class|class
name|WildcardReader
implements|implements
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Object
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Object
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|arg4
parameter_list|,
name|InputStream
name|arg5
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
annotation|@
name|Produces
argument_list|(
literal|"*/*"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"*/*"
argument_list|)
specifier|private
specifier|static
class|class
name|WildcardReader2
implements|implements
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
block|{
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Object
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Object
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|arg4
parameter_list|,
name|InputStream
name|arg5
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|RuntimeExceptionMapper1
extends|extends
name|AbstractTestExceptionMapper
argument_list|<
name|RuntimeException
argument_list|>
block|{              }
specifier|private
specifier|static
class|class
name|RuntimeExceptionMapper2
extends|extends
name|AbstractTestExceptionMapper
argument_list|<
name|WebApplicationException
argument_list|>
block|{              }
specifier|private
specifier|static
class|class
name|AbstractTestExceptionMapper
parameter_list|<
name|T
extends|extends
name|RuntimeException
parameter_list|>
implements|implements
name|ExceptionMapper
argument_list|<
name|T
argument_list|>
block|{
specifier|public
name|Response
name|toResponse
parameter_list|(
name|T
name|arg0
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|ComplexMessageBodyReader
extends|extends
name|ProviderBase
argument_list|<
name|AClass
argument_list|>
block|{     }
specifier|private
specifier|abstract
specifier|static
class|class
name|ProviderBase
parameter_list|<
name|A
parameter_list|>
implements|implements
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Object
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|arg4
parameter_list|,
name|InputStream
name|arg5
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getSize
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|arg1
parameter_list|,
name|Type
name|arg2
parameter_list|,
name|Annotation
index|[]
name|arg3
parameter_list|,
name|MediaType
name|arg4
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|arg1
parameter_list|,
name|Type
name|arg2
parameter_list|,
name|Annotation
index|[]
name|arg3
parameter_list|,
name|MediaType
name|arg4
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|arg5
parameter_list|,
name|OutputStream
name|arg6
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
specifier|public
specifier|static
class|class
name|AClass
block|{     }
specifier|private
specifier|static
class|class
name|SecurityExceptionMapper
extends|extends
name|AbstractBadRequestExceptionMapper
argument_list|<
name|SecurityException
argument_list|>
block|{     }
specifier|private
specifier|static
class|class
name|CustomWebApplicationExceptionMapper
extends|extends
name|AbstractBadRequestExceptionMapper
argument_list|<
name|WebApplicationException
argument_list|>
block|{     }
specifier|private
specifier|abstract
specifier|static
class|class
name|AbstractBadRequestExceptionMapper
parameter_list|<
name|T
extends|extends
name|Throwable
parameter_list|>
implements|implements
name|ExceptionMapper
argument_list|<
name|T
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Response
name|toResponse
parameter_list|(
name|T
name|exception
parameter_list|)
block|{
return|return
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|entity
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWebApplicationMapperWithGenerics
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|CustomWebApplicationExceptionMapper
name|mapper
init|=
operator|new
name|CustomWebApplicationExceptionMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|mapper
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|WebApplicationException
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|mapperResponse
argument_list|,
name|mapper
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBadCustomExceptionMappersHierarchyWithGenerics
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|BadExceptionMapperA
name|badExceptionMapperA
init|=
operator|new
name|BadExceptionMapperA
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|badExceptionMapperA
argument_list|)
expr_stmt|;
name|BadExceptionMapperB
name|badExceptionMapperB
init|=
operator|new
name|BadExceptionMapperB
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|badExceptionMapperB
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse1
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionA
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|badExceptionMapperA
argument_list|,
name|mapperResponse1
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse2
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionB
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|badExceptionMapperB
argument_list|,
name|mapperResponse2
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse3
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionAA
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|badExceptionMapperA
argument_list|,
name|mapperResponse3
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse4
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionBB
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|badExceptionMapperB
argument_list|,
name|mapperResponse4
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGoodExceptionMappersHierarchyWithGenerics
parameter_list|()
throws|throws
name|Exception
block|{
name|ServerProviderFactory
name|pf
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|GoodRuntimeExceptionAMapper
name|runtimeExceptionAMapper
init|=
operator|new
name|GoodRuntimeExceptionAMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|runtimeExceptionAMapper
argument_list|)
expr_stmt|;
name|GoodRuntimeExceptionBMapper
name|runtimeExceptionBMapper
init|=
operator|new
name|GoodRuntimeExceptionBMapper
argument_list|()
decl_stmt|;
name|pf
operator|.
name|registerUserProvider
argument_list|(
name|runtimeExceptionBMapper
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse1
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionA
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|runtimeExceptionAMapper
argument_list|,
name|mapperResponse1
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse2
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionB
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|runtimeExceptionBMapper
argument_list|,
name|mapperResponse2
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse3
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionAA
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|runtimeExceptionAMapper
argument_list|,
name|mapperResponse3
argument_list|)
expr_stmt|;
name|Object
name|mapperResponse4
init|=
name|pf
operator|.
name|createExceptionMapper
argument_list|(
name|RuntimeExceptionBB
operator|.
name|class
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|runtimeExceptionBMapper
argument_list|,
name|mapperResponse4
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|RuntimeExceptionA
extends|extends
name|RuntimeException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
block|}
specifier|private
specifier|static
class|class
name|RuntimeExceptionAA
extends|extends
name|RuntimeExceptionA
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
block|}
specifier|private
specifier|static
class|class
name|RuntimeExceptionB
extends|extends
name|RuntimeException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
block|}
specifier|private
specifier|static
class|class
name|RuntimeExceptionBB
extends|extends
name|RuntimeExceptionB
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
block|}
specifier|private
specifier|static
class|class
name|GoodRuntimeExceptionAMapper
implements|implements
name|ExceptionMapper
argument_list|<
name|RuntimeExceptionA
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Response
name|toResponse
parameter_list|(
name|RuntimeExceptionA
name|exception
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|GoodRuntimeExceptionBMapper
implements|implements
name|ExceptionMapper
argument_list|<
name|RuntimeExceptionB
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Response
name|toResponse
parameter_list|(
name|RuntimeExceptionB
name|exception
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|abstract
specifier|static
class|class
name|BadParentExceptionMapper
parameter_list|<
name|T
extends|extends
name|Throwable
parameter_list|>
implements|implements
name|ExceptionMapper
argument_list|<
name|T
argument_list|>
block|{     }
specifier|public
specifier|static
class|class
name|BadExceptionMapperA
extends|extends
name|BadParentExceptionMapper
argument_list|<
name|RuntimeExceptionA
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Response
name|toResponse
parameter_list|(
name|RuntimeExceptionA
name|exception
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|BadExceptionMapperB
extends|extends
name|BadParentExceptionMapper
argument_list|<
name|RuntimeExceptionB
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Response
name|toResponse
parameter_list|(
name|RuntimeExceptionB
name|exception
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
annotation|@
name|Consumes
argument_list|(
literal|"text/plain"
argument_list|)
specifier|public
specifier|static
class|class
name|CustomBooleanReader2
extends|extends
name|CustomBooleanReader
block|{              }
specifier|public
specifier|static
class|class
name|CustomBooleanReader
implements|implements
name|MessageBodyReader
argument_list|<
name|Boolean
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|type1
parameter_list|,
name|Annotation
index|[]
name|antns
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
return|return
name|type
operator|==
name|Boolean
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|public
name|Boolean
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|Boolean
argument_list|>
name|type
parameter_list|,
name|Type
name|type1
parameter_list|,
name|Annotation
index|[]
name|antns
parameter_list|,
name|MediaType
name|mt
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mm
parameter_list|,
name|InputStream
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
return|return
name|Boolean
operator|.
name|TRUE
return|;
block|}
block|}
block|}
end_class

end_unit

