begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ResourceInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|PathSegment
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|SecurityContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ContextResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ParamConverter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ParamConverterProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Providers
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer
operator|.
name|CustomerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|CustomerApplication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|CustomerGender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|CustomerParameterHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXBContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|SimpleFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Timezone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|ContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|HttpHeadersImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|HttpServletResponseFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|PathSegmentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ProvidersImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|RequestImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ResourceInfoImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|SecurityContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|UriInfoImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|tl
operator|.
name|ThreadLocalHttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|tl
operator|.
name|ThreadLocalProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|tl
operator|.
name|ThreadLocalServletConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|tl
operator|.
name|ThreadLocalUriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|PerRequestResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|SingletonResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|AbstractResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|MethodDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|URITemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|FormEncodingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ServerProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|AbstractHTTPDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSUtilsTest
extends|extends
name|Assert
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{     }
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|AbstractResourceInfo
operator|.
name|clearAllMaps
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersUTF8Encoding
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestFormParamsWithEncoding
argument_list|(
literal|"UTF-8"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|doTestFormParamsWithEncoding
argument_list|(
literal|"UTF-8"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersISO88591Encoding
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestFormParamsWithEncoding
argument_list|(
literal|"ISO-8859-1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestFormParamsWithEncoding
parameter_list|(
name|String
name|enc
parameter_list|,
name|boolean
name|setEnc
parameter_list|)
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|List
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFormParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|String
name|body
init|=
literal|"p1="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
literal|"\u00E4\u00F6\u00FC"
argument_list|,
name|enc
argument_list|)
operator|+
literal|"&p2=2&p2=3"
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|ct
init|=
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
decl_stmt|;
if|if
condition|(
name|setEnc
condition|)
block|{
name|ct
operator|+=
literal|";charset="
operator|+
name|enc
expr_stmt|;
block|}
name|headers
operator|.
name|putSingle
argument_list|(
literal|"Content-Type"
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"2 form params should've been identified"
argument_list|,
literal|2
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First Form Parameter not matched correctly"
argument_list|,
literal|"\u00E4\u00F6\u00FC"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectBetweenMultipleResourceClasses
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreNoSubResource
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|ClassResourceInfo
name|bStore
init|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/bookstore"
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/bookstore/"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/bookstore/bar"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreNoSubResource
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ClassResourceInfo
name|firstResource
parameter_list|(
name|Map
argument_list|<
name|ClassResourceInfo
argument_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|map
parameter_list|)
block|{
return|return
name|map
operator|==
literal|null
condition|?
literal|null
else|:
name|map
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getKey
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInjectCustomContext
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CustomerContext
name|contextImpl
init|=
operator|new
name|CustomerContext
argument_list|()
block|{
specifier|public
name|String
name|get
parameter_list|()
block|{
return|return
literal|"customerContext"
return|;
block|}
block|}
decl_stmt|;
name|JAXRSServerFactoryBean
name|sf
init|=
operator|new
name|JAXRSServerFactoryBean
argument_list|()
decl_stmt|;
name|Customer
name|customer
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setServiceBeanObjects
argument_list|(
name|customer
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setProvider
argument_list|(
operator|new
name|ContextProvider
argument_list|<
name|CustomerContext
argument_list|>
argument_list|()
block|{
specifier|public
name|CustomerContext
name|createContext
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
return|return
name|contextImpl
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setStart
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Server
name|s
init|=
name|sf
operator|.
name|create
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|customer
operator|.
name|getCustomerContext
argument_list|()
operator|instanceof
name|ThreadLocalProxy
argument_list|<
name|?
argument_list|>
argument_list|)
expr_stmt|;
name|invokeCustomerMethod
argument_list|(
name|sf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|getClassResourceInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|customer
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|CustomerContext
name|context
init|=
name|customer
operator|.
name|getCustomerContext
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"customerContext"
argument_list|,
name|context
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInjectApplicationInSingleton
parameter_list|()
throws|throws
name|Exception
block|{
name|CustomerApplication
name|app
init|=
operator|new
name|CustomerApplication
argument_list|()
decl_stmt|;
name|JAXRSServerFactoryBean
name|sf
init|=
operator|new
name|JAXRSServerFactoryBean
argument_list|()
decl_stmt|;
name|Customer
name|customer
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setServiceBeanObjects
argument_list|(
name|customer
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setApplication
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setStart
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|sf
operator|.
name|create
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|app
argument_list|,
name|customer
operator|.
name|getApplication1
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|app
argument_list|,
name|customer
operator|.
name|getApplication2
argument_list|()
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|ThreadLocalProxy
argument_list|<
name|UriInfo
argument_list|>
name|proxy
init|=
operator|(
name|ThreadLocalProxy
argument_list|<
name|UriInfo
argument_list|>
operator|)
name|app
operator|.
name|getUriInfo
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|invokeCustomerMethod
argument_list|(
name|sf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|getClassResourceInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|customer
argument_list|,
name|server
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|app
argument_list|,
name|customer
operator|.
name|getApplication2
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|proxy
operator|.
name|get
argument_list|()
operator|instanceof
name|UriInfo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInjectApplicationInPerRequestResource
parameter_list|()
throws|throws
name|Exception
block|{
name|CustomerApplication
name|app
init|=
operator|new
name|CustomerApplication
argument_list|()
decl_stmt|;
name|JAXRSServerFactoryBean
name|sf
init|=
operator|new
name|JAXRSServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setServiceClass
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setApplication
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setStart
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|sf
operator|.
name|create
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|ThreadLocalProxy
argument_list|<
name|UriInfo
argument_list|>
name|proxy
init|=
operator|(
name|ThreadLocalProxy
argument_list|<
name|UriInfo
argument_list|>
operator|)
name|app
operator|.
name|getUriInfo
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|sf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|getClassResourceInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Customer
name|customer
init|=
operator|(
name|Customer
operator|)
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|(
name|createMessage
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|customer
operator|.
name|getApplication1
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|customer
operator|.
name|getApplication2
argument_list|()
argument_list|)
expr_stmt|;
name|invokeCustomerMethod
argument_list|(
name|cri
argument_list|,
name|customer
argument_list|,
name|server
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|app
argument_list|,
name|customer
operator|.
name|getApplication1
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|app
argument_list|,
name|customer
operator|.
name|getApplication2
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|proxy
operator|.
name|get
argument_list|()
operator|instanceof
name|UriInfo
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|invokeCustomerMethod
parameter_list|(
name|ClassResourceInfo
name|cri
parameter_list|,
name|Customer
name|customer
parameter_list|,
name|Server
name|server
parameter_list|)
throws|throws
name|Exception
block|{
name|OperationResourceInfo
name|ori
init|=
name|cri
operator|.
name|getMethodDispatcher
argument_list|()
operator|.
name|getOperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"test"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|)
decl_stmt|;
name|JAXRSInvoker
name|invoker
init|=
operator|new
name|JAXRSInvoker
argument_list|()
decl_stmt|;
name|Exchange
name|exc
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|exc
operator|.
name|put
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|,
name|server
operator|.
name|getEndpoint
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|inMessage
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|exc
operator|.
name|setInMessage
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|exc
operator|.
name|put
argument_list|(
name|OperationResourceInfo
operator|.
name|class
argument_list|,
name|ori
argument_list|)
expr_stmt|;
name|invoker
operator|.
name|invoke
argument_list|(
name|exc
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|customer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectBetweenMultipleResourceClasses2
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate1
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate2
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|ClassResourceInfo
name|bStore
init|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1"
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate1
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1/"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate1
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1/foo"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate2
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1/foo/bar"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate2
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectBetweenMultipleResourceClasses3
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate4
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate3
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|ClassResourceInfo
name|bStore
init|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/"
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate3
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|firstResource
argument_list|(
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/test"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate4
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindTargetResourceClass
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreNoSubResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|String
name|contentTypes
init|=
literal|"*/*"
decl_stmt|;
comment|//If acceptContentTypes does not specify a specific Mime type, the
comment|//method is declared with a most specific ProduceMime type is selected.
name|OperationResourceInfo
name|ori
init|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books/123/"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/json,application/xml;q=0.9"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBookJSON"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books/123"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBookJSON"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books/123"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBooks"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test find POST
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books"
argument_list|,
literal|"POST"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"addBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test find PUT
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books"
argument_list|,
literal|"PUT"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test find DELETE
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/1/books/123"
argument_list|,
literal|"DELETE"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"deleteBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|MediaType
argument_list|>
name|getTypes
parameter_list|(
name|String
name|types
parameter_list|)
block|{
return|return
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
name|types
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMediaTypes
parameter_list|()
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|JAXRSUtils
operator|.
name|getMediaTypes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"text/xml"
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|types
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMediaTypes2
parameter_list|()
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|JAXRSUtils
operator|.
name|getMediaTypes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"text/xml"
block|,
literal|"text/plain"
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|types
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMediaTypes3
parameter_list|()
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|JAXRSUtils
operator|.
name|getMediaTypes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"text/xml, text/plain"
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|types
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindTargetResourceClassWithTemplates
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreTemplates
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|String
name|contentTypes
init|=
literal|"*/*"
decl_stmt|;
comment|//If acceptContentTypes does not specify a specific Mime type, the
comment|//method is declared with a most specific ProduceMime type is selected.
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/1/2/"
argument_list|,
literal|"GET"
argument_list|,
name|values
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBooks"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only id and final match groups should be there"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2 {id} values should've been picked up"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FINAL_MATCH_GROUP should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First {id} is 1"
argument_list|,
literal|"1"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second id is 2"
argument_list|,
literal|"2"
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/2"
argument_list|,
literal|"POST"
argument_list|,
name|values
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBookStoreInfo"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only id and final match groups should be there"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only single {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FINAL_MATCH_GROUP should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|"2"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/3/4"
argument_list|,
literal|"PUT"
argument_list|,
name|values
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|3
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"bookId"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|"3"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|"4"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"bookId"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Message
name|createMessage2
parameter_list|()
block|{
name|ProviderFactory
name|factory
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.http.case_insensitive_queries"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Exchange
name|e
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|setExchange
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|e
operator|.
name|setInMessage
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getEndpointInfo
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.jaxrs.comparator"
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|size
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|0
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|get
argument_list|(
name|ServerProviderFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
name|factory
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|e
operator|.
name|put
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindTargetResourceClassWithSubResource
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|String
name|contentTypes
init|=
literal|"*/*"
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/books/123"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/books/123/true/chapter/1"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getNewBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/books"
argument_list|,
literal|"POST"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"addBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/books"
argument_list|,
literal|"PUT"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"/bookstore/books/123"
argument_list|,
literal|"DELETE"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"deleteBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/bar+xml"
argument_list|,
literal|"application/*+xml"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/bar+xml"
argument_list|,
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype2
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/bar+xml"
argument_list|,
literal|"application/bar+xml"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/bar+xml"
argument_list|,
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype3
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/*+xml"
argument_list|,
literal|"application/bar+xml"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/bar+xml"
argument_list|,
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype4
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/*+xml"
argument_list|,
literal|"application/bar+json"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype5
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/bar+xml"
argument_list|,
literal|"application/bar+*"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/bar+xml"
argument_list|,
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype6
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|JAXRSUtils
operator|.
name|PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|JAXRSUtils
operator|.
name|compareCompositeSubtypes
argument_list|(
literal|"application/bar+xml"
argument_list|,
literal|"application/xml"
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype7
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|JAXRSUtils
operator|.
name|PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|JAXRSUtils
operator|.
name|compareCompositeSubtypes
argument_list|(
literal|"application/xml"
argument_list|,
literal|"application/bar+xml"
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype8
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|JAXRSUtils
operator|.
name|PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|JAXRSUtils
operator|.
name|compareCompositeSubtypes
argument_list|(
literal|"application/xml+bar"
argument_list|,
literal|"application/xml"
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype9
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|JAXRSUtils
operator|.
name|PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|JAXRSUtils
operator|.
name|compareCompositeSubtypes
argument_list|(
literal|"application/xml"
argument_list|,
literal|"application/xml+bar"
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype10
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|JAXRSUtils
operator|.
name|PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|JAXRSUtils
operator|.
name|compareCompositeSubtypes
argument_list|(
literal|"application/v1+xml"
argument_list|,
literal|"application/v2+xml"
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesCompositeSubtype11
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|JAXRSUtils
operator|.
name|PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|JAXRSUtils
operator|.
name|compareCompositeSubtypes
argument_list|(
literal|"application/v1+xml"
argument_list|,
literal|"application/json"
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypes
parameter_list|()
throws|throws
name|Exception
block|{
comment|//test basic
name|List
argument_list|<
name|MediaType
argument_list|>
name|methodMimeTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|MediaType
argument_list|>
argument_list|(
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype,application/xml,application/json"
argument_list|)
argument_list|)
decl_stmt|;
name|MediaType
name|acceptContentType
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|methodMimeTypes
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test basic
name|methodMimeTypes
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype, application/json, application/xml"
argument_list|)
expr_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|methodMimeTypes
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test accept wild card */*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/mytype,application/json,application/xml"
argument_list|,
literal|"*/*"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//test accept wild card application/*
name|methodMimeTypes
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"text/html,text/xml,application/xml"
argument_list|)
expr_stmt|;
name|acceptContentType
operator|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/*"
argument_list|)
expr_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|methodMimeTypes
argument_list|,
name|acceptContentType
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MediaType
name|type
range|:
name|candidateList
control|)
block|{
name|assertTrue
argument_list|(
literal|"text/html"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//test produce wild card */*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"*/*"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"application/json"
operator|.
name|equals
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//test produce wild card application/*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/*"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"application/json"
operator|.
name|equals
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//test produce wild card */*, accept wild card */*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"*/*"
argument_list|,
literal|"*/*"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/*"
operator|.
name|equals
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesTwoArray
parameter_list|()
throws|throws
name|Exception
block|{
comment|//test basic
name|List
argument_list|<
name|MediaType
argument_list|>
name|acceptedMimeTypes
init|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype, application/xml, application/json"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|acceptedMimeTypes
argument_list|,
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MediaType
name|type
range|:
name|candidateList
control|)
block|{
name|assertTrue
argument_list|(
literal|"application/mytype"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/xml"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/json"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//test basic
name|acceptedMimeTypes
operator|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|providerMimeTypes
init|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype, application/xml, application/json"
argument_list|)
decl_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|acceptedMimeTypes
argument_list|,
name|providerMimeTypes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MediaType
name|type
range|:
name|candidateList
control|)
block|{
name|assertTrue
argument_list|(
literal|"application/mytype"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/xml"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/json"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//test empty
name|acceptedMimeTypes
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype,application/xml"
argument_list|)
expr_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|acceptedMimeTypes
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"*"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
argument_list|)
expr_stmt|;
name|types
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"text/*"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"*"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|types
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"text/*,text/plain;q=.2,text/xml,TEXT/BAR"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|4
operator|&&
literal|"text/*"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/plain;q=.2"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/bar"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|MediaType
argument_list|>
name|sortMediaTypes
parameter_list|(
name|String
name|mediaTypes
parameter_list|)
block|{
return|return
name|JAXRSUtils
operator|.
name|sortMediaTypes
argument_list|(
name|mediaTypes
argument_list|,
name|JAXRSUtils
operator|.
name|MEDIA_TYPE_Q_PARAM
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|MediaType
argument_list|>
name|sortMediaTypes
parameter_list|(
name|List
argument_list|<
name|MediaType
argument_list|>
name|mediaTypes
parameter_list|)
block|{
return|return
name|JAXRSUtils
operator|.
name|sortMediaTypes
argument_list|(
name|mediaTypes
argument_list|,
name|JAXRSUtils
operator|.
name|MEDIA_TYPE_Q_PARAM
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|int
name|compareSortedMediaTypes
parameter_list|(
name|List
argument_list|<
name|MediaType
argument_list|>
name|mt1
parameter_list|,
name|List
argument_list|<
name|MediaType
argument_list|>
name|mt2
parameter_list|)
block|{
return|return
name|JAXRSUtils
operator|.
name|compareSortedMediaTypes
argument_list|(
name|mt1
argument_list|,
name|mt2
argument_list|,
name|JAXRSUtils
operator|.
name|MEDIA_TYPE_Q_PARAM
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSortMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|sortMediaTypes
argument_list|(
literal|"text/*,text/plain;q=.2,text/xml,TEXT/BAR"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|4
operator|&&
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/bar"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/plain;q=.2"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/*"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|MediaType
name|m1
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml"
argument_list|)
decl_stmt|;
name|MediaType
name|m2
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/*"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml is more specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|m2
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/* is less specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m2
argument_list|,
name|m1
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml should be equal to itself"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"xml"
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/* should be equal to itself"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m2
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"*"
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/plain and text/xml are just two specific media types"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|,
name|m1
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml and text/plain are just two specific media types"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/xml"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
name|m1
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/xml"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
name|m2
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m2
argument_list|,
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|MediaType
name|m3
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml;q=0.2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml should be more preferred than text/xml;q=0.2"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|m3
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|MediaType
name|m4
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml;q=.3"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml;q=.3 should be more preferred than text/xml;q=0.2"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m4
argument_list|,
name|m3
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml;q=.3 should be more preferred than than text/xml;q=0.2"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m3
argument_list|,
name|m4
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareSortedMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|MediaType
name|m1
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml"
argument_list|)
decl_stmt|;
name|MediaType
name|m2
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/*"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml is more specific than text/*"
argument_list|,
name|compareSortedMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|m1
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|m2
argument_list|)
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/* is less specific than text/xml"
argument_list|,
name|compareSortedMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|m2
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|m1
argument_list|)
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml is the same as text/xml"
argument_list|,
name|compareSortedMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|m1
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|m1
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|sortedList1
init|=
operator|new
name|ArrayList
argument_list|<
name|MediaType
argument_list|>
argument_list|()
decl_stmt|;
name|sortedList1
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|sortedList1
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|sortedList2
init|=
operator|new
name|ArrayList
argument_list|<
name|MediaType
argument_list|>
argument_list|()
decl_stmt|;
name|sortedList2
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|sortedList2
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"lists should be equal"
argument_list|,
name|compareSortedMediaTypes
argument_list|(
name|sortedList1
argument_list|,
name|sortedList2
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|sortedList1
operator|.
name|add
argument_list|(
name|MediaType
operator|.
name|WILDCARD_TYPE
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"first list should be less specific"
argument_list|,
name|compareSortedMediaTypes
argument_list|(
name|sortedList1
argument_list|,
name|sortedList2
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|sortedList1
operator|.
name|add
argument_list|(
name|MediaType
operator|.
name|WILDCARD_TYPE
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"second list should be more specific"
argument_list|,
name|compareSortedMediaTypes
argument_list|(
name|sortedList2
argument_list|,
name|sortedList1
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcceptTypesMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"test"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|ClassResourceInfo
name|cr
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml can not be matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"xml"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml can not be matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"*"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml can not be matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"*"
argument_list|,
literal|"*"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"text/plain was matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"plain"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|Integer
operator|.
name|TYPE
block|,
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQuery"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query=24&query2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Query Parameter was not matched correctly"
argument_list|,
literal|"24"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Primitive Query Parameter was not matched correctly"
argument_list|,
literal|24
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParametersIntegerArray
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Integer
index|[]
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQueryIntegerArray"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query=1&query=2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Integer
index|[]
name|intValues
init|=
operator|(
name|Integer
index|[]
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
name|int
operator|)
name|intValues
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
name|int
operator|)
name|intValues
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParametersIntArray
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|int
index|[]
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQueryIntArray"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query=1&query=2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|int
index|[]
name|intValues
init|=
operator|(
name|int
index|[]
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|intValues
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|intValues
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testQueryParamAsListWithDefaultValue
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|List
operator|.
name|class
block|,
name|List
operator|.
name|class
block|,
name|List
operator|.
name|class
block|,
name|Integer
index|[]
operator|.
name|class
block|,
name|List
operator|.
name|class
block|,
name|List
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQueryAsList"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query2=query2Value&query2=query2Value2&query3=1&query3=2&query4"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|queryList
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryList
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|queryList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|queryList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|queryList2
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryList2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|queryList2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"query2Value"
argument_list|,
name|queryList2
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"query2Value2"
argument_list|,
name|queryList2
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|queryList3
init|=
operator|(
name|List
argument_list|<
name|Integer
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryList3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|queryList3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|,
name|queryList3
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|2
argument_list|)
argument_list|,
name|queryList3
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Integer
index|[]
name|queryList3Array
init|=
operator|(
name|Integer
index|[]
operator|)
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryList3Array
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|queryList3Array
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|,
name|queryList3Array
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|2
argument_list|)
argument_list|,
name|queryList3Array
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|queryList4
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryList4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|queryList4
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|queryList4
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|queryList5
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryList5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|queryList5
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCookieParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|Set
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|Set
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testCookieParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"Cookie"
argument_list|,
literal|"c1=c1Value"
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|params
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c1Value"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|Cookie
argument_list|>
name|set1
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Set
argument_list|<
name|?
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|set1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|set1
operator|.
name|contains
argument_list|(
name|Cookie
operator|.
name|valueOf
argument_list|(
literal|"c1=c1Value"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c2Value"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|Cookie
argument_list|>
name|set2
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Set
argument_list|<
name|?
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|set2
operator|.
name|contains
argument_list|(
literal|"c2Value"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|set2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleCookieParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|Cookie
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMultipleCookieParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"Cookie"
argument_list|,
literal|"c1=c1Value; c2=c2Value"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"Cookie"
argument_list|,
literal|"c3=c3Value"
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|params
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c1Value"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c2Value"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c3Value"
argument_list|,
operator|(
operator|(
name|Cookie
operator|)
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFromStringParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|UUID
operator|.
name|class
block|,
name|CustomerGender
operator|.
name|class
block|,
name|CustomerGender
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFromStringParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|UUID
name|u
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1="
operator|+
name|u
operator|.
name|toString
argument_list|()
operator|+
literal|"&p2=1&p3=2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Query UUID Parameter was not matched correctly"
argument_list|,
name|u
operator|.
name|toString
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|CustomerGender
operator|.
name|FEMALE
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|CustomerGender
operator|.
name|MALE
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFromValueEnum
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Timezone
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFromValueParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=Europe%2FLondon"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
literal|"Timezone Parameter was not processed correctly"
argument_list|,
name|Timezone
operator|.
name|EUROPE_LONDON
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomerParameter
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|(
name|messageImpl
argument_list|)
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|CustomerParameterHandler
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|class
block|,
name|Customer
index|[]
operator|.
name|class
block|,
name|Customer2
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testCustomerParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=Fred&p2=Barry&p3=Jack&p4=John"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
name|c
init|=
operator|(
name|Customer
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Fred"
argument_list|,
name|c
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
name|c2
init|=
operator|(
operator|(
name|Customer
index|[]
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
name|c2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Customer2
name|c3
init|=
operator|(
name|Customer2
operator|)
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Jack"
argument_list|,
name|c3
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p3=noName"
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Customer2 constructor does not accept names starting with lower-case chars"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLocaleParameter
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|messageImpl
argument_list|)
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|LocaleParameterHandler
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Locale
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testLocaleParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=en_us"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Locale
name|l
init|=
operator|(
name|Locale
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"en"
argument_list|,
name|l
operator|.
name|getLanguage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"US"
argument_list|,
name|l
operator|.
name|getCountry
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParameter
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|messageImpl
argument_list|)
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|GenericObjectParameterHandler
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Query
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testGenericObjectParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=thequery"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Query
argument_list|<
name|String
argument_list|>
name|query
init|=
operator|(
name|Query
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"thequery"
argument_list|,
name|query
operator|.
name|getEntity
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArrayParamNoProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
index|[]
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testCustomerParam2"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=Fred&p1=Barry"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|values
init|=
operator|(
name|String
index|[]
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Fred"
argument_list|,
name|values
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
name|values
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongType
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|HashMap
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testWrongType"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=1"
argument_list|)
expr_stmt|;
try|try
block|{
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"HashMap can not be handled as parameter"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|ex
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Parameter Class java.util.HashMap has no constructor with "
operator|+
literal|"single String parameter, static valueOf(String) or fromString(String) methods"
argument_list|,
name|ex
operator|.
name|getResponse
argument_list|()
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionDuringConstruction
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|CustomerGender
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testWrongType2"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"p1=3"
argument_list|)
expr_stmt|;
try|try
block|{
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"CustomerGender have no instance with name 3"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|ex
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParametersBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQueryBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue&b=123"
argument_list|)
expr_stmt|;
name|Message
name|complexMessageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|complexMessageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"c=1&a=A&b=123&c=2&c=3&"
operator|+
literal|"d.c=4&d.a=B&d.b=456&d.c=5&d.c=6&"
operator|+
literal|"e.c=41&e.a=B1&e.b=457&e.c=51&e.c=61&"
operator|+
literal|"e.c=42&e.a=B2&e.b=458&e.c=52&e.c=62&"
operator|+
literal|"d.d.c=7&d.d.a=C&d.d.b=789&d.d.c=8&d.d.c=9&"
operator|+
literal|"d.e.c=71&d.e.a=C1&d.e.b=790&d.e.c=81&d.e.c=91&"
operator|+
literal|"d.e.c=72&d.e.a=C2&d.e.b=791&d.e.c=82&d.e.c=92"
argument_list|)
expr_stmt|;
name|verifyParametersBean
argument_list|(
name|m
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|,
literal|null
argument_list|,
name|complexMessageImpl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testXmlAdapterBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testXmlAdapter"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|bean
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|bean
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testXmlAdapterBean2
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testXmlAdapter2"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|bean
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|bean
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testXmlAdapterBean3
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBeanInterface
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testXmlAdapter3"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|bean
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|bean
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPathParametersBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testPathBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|pathTemplates
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|pathTemplates
operator|.
name|add
argument_list|(
literal|"a"
argument_list|,
literal|"aValue"
argument_list|)
expr_stmt|;
name|pathTemplates
operator|.
name|add
argument_list|(
literal|"b"
argument_list|,
literal|"123"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|complexPathTemplates
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"c"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"a"
argument_list|,
literal|"A"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"b"
argument_list|,
literal|"123"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"c"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"c"
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.c"
argument_list|,
literal|"4"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.a"
argument_list|,
literal|"B"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.b"
argument_list|,
literal|"456"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.c"
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.c"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.c"
argument_list|,
literal|"41"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.a"
argument_list|,
literal|"B1"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.b"
argument_list|,
literal|"457"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.c"
argument_list|,
literal|"51"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.c"
argument_list|,
literal|"61"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.c"
argument_list|,
literal|"42"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.a"
argument_list|,
literal|"B2"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.b"
argument_list|,
literal|"458"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.c"
argument_list|,
literal|"52"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"e.c"
argument_list|,
literal|"62"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.d.c"
argument_list|,
literal|"7"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.d.a"
argument_list|,
literal|"C"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.d.b"
argument_list|,
literal|"789"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.d.c"
argument_list|,
literal|"8"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.d.c"
argument_list|,
literal|"9"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.c"
argument_list|,
literal|"71"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.a"
argument_list|,
literal|"C1"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.b"
argument_list|,
literal|"790"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.c"
argument_list|,
literal|"81"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.c"
argument_list|,
literal|"91"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.c"
argument_list|,
literal|"72"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.a"
argument_list|,
literal|"C2"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.b"
argument_list|,
literal|"791"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.c"
argument_list|,
literal|"82"
argument_list|)
expr_stmt|;
name|complexPathTemplates
operator|.
name|add
argument_list|(
literal|"d.e.c"
argument_list|,
literal|"92"
argument_list|)
expr_stmt|;
name|verifyParametersBean
argument_list|(
name|m
argument_list|,
name|pathTemplates
argument_list|,
name|createMessage
argument_list|()
argument_list|,
name|complexPathTemplates
argument_list|,
name|createMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatrixParametersBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMatrixBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar;a=aValue/baz;b=123"
argument_list|)
expr_stmt|;
name|Message
name|complexMessageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|complexMessageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar;c=1/bar;a=A/bar;b=123/bar;c=2/bar;c=3"
operator|+
literal|"/bar;d.c=4/bar;d.a=B/bar;d.b=456/bar;d.c=5/bar;d.c=6"
operator|+
literal|"/bar;e.c=41/bar;e.a=B1/bar;e.b=457/bar;e.c=51/bar;e.c=61"
operator|+
literal|"/bar;e.c=42/bar;e.a=B2/bar;e.b=458/bar;e.c=52/bar;e.c=62"
operator|+
literal|"/bar;d.d.c=7/bar;d.d.a=C/bar;d.d.b=789/bar;d.d.c=8/bar;d.d.c=9"
operator|+
literal|"/bar;d.e.c=71/bar;d.e.a=C1/bar;d.e.b=790/bar;d.e.c=81/bar;d.e.c=91"
operator|+
literal|"/bar;d.e.c=72/bar;d.e.a=C2/bar;d.e.b=791/bar;d.e.c=82/bar;d.e.c=92"
argument_list|)
expr_stmt|;
name|verifyParametersBean
argument_list|(
name|m
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|,
literal|null
argument_list|,
name|complexMessageImpl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersBeanWithBoolean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFormBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|putSingle
argument_list|(
literal|"Content-Type"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|String
name|body
init|=
literal|"a=aValue&b=123&cb=true"
decl_stmt|;
name|messageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Bean should be created"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|cb
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|,
name|cb
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cb
operator|.
name|isCb
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFormBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|putSingle
argument_list|(
literal|"Content-Type"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|String
name|body
init|=
literal|"a=aValue&b=123&cb=true"
decl_stmt|;
name|messageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Message
name|complexMessageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|complexMessageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar"
argument_list|)
expr_stmt|;
name|complexMessageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|body
operator|=
literal|"c=1&a=A&b=123&c=2&c=3&"
operator|+
literal|"d.c=4&d.a=B&d.b=456&d.c=5&d.c=6&"
operator|+
literal|"e.c=41&e.a=B1&e.b=457&e.c=51&e.c=61&"
operator|+
literal|"e.c=42&e.a=B2&e.b=458&e.c=52&e.c=62&"
operator|+
literal|"d.d.c=7&d.d.a=C&d.d.b=789&d.d.c=8&d.d.c=9&"
operator|+
literal|"d.e.c=71&d.e.a=C1&d.e.b=790&d.e.c=81&d.e.c=91&"
operator|+
literal|"d.e.c=72&d.e.a=C2&d.e.b=791&d.e.c=82&d.e.c=92"
expr_stmt|;
name|complexMessageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|verifyParametersBean
argument_list|(
name|m
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|,
literal|null
argument_list|,
name|complexMessageImpl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersBeanWithMap
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFormBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|putSingle
argument_list|(
literal|"Content-Type"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|String
name|body
init|=
literal|"g.b=1&g.b=2"
decl_stmt|;
name|messageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Bean should be created"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|cb
operator|.
name|getG
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
name|cb
operator|.
name|getG
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyParametersBean
parameter_list|(
name|Method
name|m
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|simpleValues
parameter_list|,
name|Message
name|simpleMessageImpl
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|complexValues
parameter_list|,
name|Message
name|complexMessageImpl
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
name|simpleValues
argument_list|,
name|simpleMessageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Bean should be created"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|cb
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|,
name|cb
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
name|complexValues
argument_list|,
name|complexMessageImpl
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bean should be created"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb1
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|cb1
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|,
name|cb1
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list1
init|=
name|cb1
operator|.
name|getC
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|list1
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|list1
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|list1
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb2
init|=
name|cb1
operator|.
name|getD
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|cb2
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|456
argument_list|)
argument_list|,
name|cb2
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list2
init|=
name|cb2
operator|.
name|getC
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|list2
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"5"
argument_list|,
name|list2
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"6"
argument_list|,
name|list2
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Customer
operator|.
name|CustomerBean
argument_list|>
name|cb2List
init|=
name|cb1
operator|.
name|e
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cb2List
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Customer
operator|.
name|CustomerBean
name|cb2E
range|:
name|cb2List
control|)
block|{
name|assertNotNull
argument_list|(
name|cb2E
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"B"
operator|+
name|idx
argument_list|,
name|cb2E
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|456
operator|+
name|idx
argument_list|)
argument_list|,
name|cb2E
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
comment|// ensure C was stripped properly since lists within lists are not supported
name|assertNull
argument_list|(
name|cb2E
operator|.
name|getC
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|cb2E
operator|.
name|getD
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|cb2E
operator|.
name|e
argument_list|)
expr_stmt|;
name|idx
operator|++
expr_stmt|;
block|}
name|Customer
operator|.
name|CustomerBean
name|cb3
init|=
name|cb2
operator|.
name|getD
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"C"
argument_list|,
name|cb3
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|789
argument_list|)
argument_list|,
name|cb3
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list3
init|=
name|cb3
operator|.
name|getC
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"7"
argument_list|,
name|list3
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"8"
argument_list|,
name|list3
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|list3
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Customer
operator|.
name|CustomerBean
argument_list|>
name|cb3List
init|=
name|cb2
operator|.
name|e
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cb3List
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|idx
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|Customer
operator|.
name|CustomerBean
name|cb3E
range|:
name|cb3List
control|)
block|{
name|assertNotNull
argument_list|(
name|cb3E
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"C"
operator|+
name|idx
argument_list|,
name|cb3E
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|789
operator|+
name|idx
argument_list|)
argument_list|,
name|cb3E
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
comment|// ensure C was stripped properly since lists within lists are not supported
name|assertNull
argument_list|(
name|cb3E
operator|.
name|getC
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|cb3E
operator|.
name|getD
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|cb3E
operator|.
name|e
argument_list|)
expr_stmt|;
name|idx
operator|++
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleQueryParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|Long
operator|.
name|class
block|,
name|Boolean
operator|.
name|TYPE
block|,
name|String
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMultipleQuery"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query=first&query2=second&query3=3&query4=true&query5"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"First Query Parameter of multiple was not matched correctly"
argument_list|,
literal|"first"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second Query Parameter of multiple was not matched correctly"
argument_list|,
literal|"second"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Third Query Parameter of multiple was not matched correctly"
argument_list|,
operator|new
name|Long
argument_list|(
literal|3
argument_list|)
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fourth Query Parameter of multiple was not matched correctly"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fourth Query Parameter of multiple was not matched correctly"
argument_list|,
literal|""
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testMatrixParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|List
operator|.
name|class
block|,
name|String
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMatrixParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/foo;p4=0;p3=3/bar;p1=1;p2/baz;p4=4;p4=5;p5"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"5 Matrix params should've been identified"
argument_list|,
literal|6
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First Matrix Parameter not matched correctly"
argument_list|,
literal|"1"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second Matrix Parameter was not matched correctly"
argument_list|,
literal|""
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Third Matrix Parameter was not matched correctly"
argument_list|,
literal|"3"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fourth Matrix Parameter was not matched correctly"
argument_list|,
literal|"0"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"5"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Sixth Matrix Parameter was not matched correctly"
argument_list|,
literal|""
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatrixAndPathSegmentParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|PathSegment
operator|.
name|class
block|,
name|String
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testPathSegment"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/bar%20foo;p4=0%201"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|values
operator|.
name|add
argument_list|(
literal|"ps"
argument_list|,
literal|"bar%20foo;p4=0%201"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
name|values
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"2 params should've been identified"
argument_list|,
literal|2
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|PathSegment
name|ps
init|=
operator|(
name|PathSegment
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"bar foo"
argument_list|,
name|ps
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ps
operator|.
name|getMatrixParameters
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0 1"
argument_list|,
name|ps
operator|.
name|getMatrixParameters
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"p4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar foo"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestFormParameters
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersWithoutMediaType
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestFormParameters
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|doTestFormParameters
parameter_list|(
name|boolean
name|useMediaType
parameter_list|)
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|List
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testFormParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|String
name|body
init|=
literal|"p1=1&p2=2&p2=3"
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|useMediaType
condition|)
block|{
name|headers
operator|.
name|putSingle
argument_list|(
literal|"Content-Type"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
block|}
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"2 form params should've been identified"
argument_list|,
literal|2
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First Form Parameter not matched correctly"
argument_list|,
literal|"1"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testFormParametersAndMap
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|argType
init|=
block|{
name|MultivaluedMap
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|List
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMultivaluedMapAndFormParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
specifier|final
name|Message
name|messageImpl
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|String
name|body
init|=
literal|"p1=1&p2=2&p2=3"
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
literal|"Content-Type"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
name|messageImpl
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|body
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|messageImpl
argument_list|)
operator|.
name|registerUserProvider
argument_list|(
operator|new
name|FormEncodingProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|persistParamsOnMessage
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
block|{
name|messageImpl
operator|.
name|put
argument_list|(
name|FormUtils
operator|.
name|FORM_PARAM_MAP
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"3 params should've been identified"
argument_list|,
literal|3
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|map
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|map
operator|.
name|get
argument_list|(
literal|"p1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First map parameter not matched correctly"
argument_list|,
literal|"1"
argument_list|,
name|map
operator|.
name|getFirst
argument_list|(
literal|"p1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|map
operator|.
name|get
argument_list|(
literal|"p2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|map
operator|.
name|get
argument_list|(
literal|"p2"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|map
operator|.
name|get
argument_list|(
literal|"p2"
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First Form Parameter not matched correctly"
argument_list|,
literal|"1"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Map
argument_list|<
name|ClassResourceInfo
argument_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getMap
parameter_list|(
name|ClassResourceInfo
name|cri
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonMap
argument_list|(
name|cri
argument_list|,
operator|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectResourceMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori1
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItAsXML"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori1
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ori1
operator|.
name|setURITemplate
argument_list|(
operator|new
name|URITemplate
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori2
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItPlain"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori2
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ori2
operator|.
name|setURITemplate
argument_list|(
operator|new
name|URITemplate
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|MethodDispatcher
name|md
init|=
operator|new
name|MethodDispatcher
argument_list|()
decl_stmt|;
name|md
operator|.
name|bind
argument_list|(
name|ori1
argument_list|,
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItAsXML"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
name|md
operator|.
name|bind
argument_list|(
name|ori2
argument_list|,
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItPlain"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
name|cri
operator|.
name|setMethodDispatcher
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|getMap
argument_list|(
name|cri
argument_list|)
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|getTypes
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori2
argument_list|)
expr_stmt|;
name|ori
operator|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|getMap
argument_list|(
name|cri
argument_list|)
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|getTypes
argument_list|(
literal|"text/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori1
argument_list|)
expr_stmt|;
name|ori
operator|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|getMap
argument_list|(
name|cri
argument_list|)
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|sortMediaTypes
argument_list|(
name|getTypes
argument_list|(
literal|"*/*;q=0.1,text/plain,text/xml;q=0.8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori2
argument_list|)
expr_stmt|;
name|ori
operator|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|getMap
argument_list|(
name|cri
argument_list|)
argument_list|,
name|createMessage2
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|sortMediaTypes
argument_list|(
name|getTypes
argument_list|(
literal|"*;q=0.1,text/plain,text/xml;q=0.9,x/y"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testHttpContextParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testParams"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|UriInfo
operator|.
name|class
block|,
name|HttpHeaders
operator|.
name|class
block|,
name|Request
operator|.
name|class
block|,
name|SecurityContext
operator|.
name|class
block|,
name|Providers
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|List
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"Foo"
argument_list|,
literal|"bar, baz"
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.http.header.split"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"7 parameters expected"
argument_list|,
literal|7
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|HttpHeadersImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|RequestImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|SecurityContextImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ProvidersImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong header param"
argument_list|,
literal|"bar"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|params
operator|.
name|get
argument_list|(
literal|6
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong headers size"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong 1st header param"
argument_list|,
literal|"bar"
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong 2nd header param"
argument_list|,
literal|"baz"
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpContextParametersFromInterface
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Method
name|methodToInvoke
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setUriInfoContext"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|UriInfo
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|methodToInvoke
argument_list|,
name|AnnotationUtils
operator|.
name|getAnnotatedMethod
argument_list|(
name|methodToInvoke
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1 parameters expected"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServletContextParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testServletParams"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|HttpServletRequest
operator|.
name|class
block|,
name|HttpServletResponse
operator|.
name|class
block|,
name|ServletContext
operator|.
name|class
block|,
name|ServletConfig
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
operator|new
name|HttpServletResponseFilter
argument_list|(
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ServletContext
name|context
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|ServletConfig
name|config
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ServletConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_REQUEST
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONTEXT
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONFIG
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"4 parameters expected"
argument_list|,
literal|4
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|request
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|response
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|config
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPerRequestContextFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|PerRequestResourceProvider
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
literal|null
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getUriInfo2
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|HttpHeadersImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getHeaders
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|RequestImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getRequest
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|SecurityContextImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getSecurityContext
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ProvidersImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getBodyWorkers
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testSingletonContextFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|ServletContext
name|servletContextMock
init|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONTEXT
argument_list|,
name|servletContextMock
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|httpRequest
init|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_REQUEST
argument_list|,
name|httpRequest
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|httpResponse
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|httpResponse
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextProxies
argument_list|(
name|cri
argument_list|,
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|cri
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextMethods
argument_list|(
name|c
argument_list|,
name|cri
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ThreadLocalUriInfo
operator|.
name|class
argument_list|,
name|c
operator|.
name|getUriInfo2
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|UriInfo
argument_list|>
operator|)
name|c
operator|.
name|getUriInfo2
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|HttpHeadersImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|HttpHeaders
argument_list|>
operator|)
name|c
operator|.
name|getHeaders
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|RequestImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|Request
argument_list|>
operator|)
name|c
operator|.
name|getRequest
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ResourceInfoImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|ResourceInfo
argument_list|>
operator|)
name|c
operator|.
name|getResourceInfo
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|SecurityContextImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|SecurityContext
argument_list|>
operator|)
name|c
operator|.
name|getSecurityContext
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ProvidersImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|Providers
argument_list|>
operator|)
name|c
operator|.
name|getBodyWorkers
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|servletContextMock
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|ServletContext
argument_list|>
operator|)
name|c
operator|.
name|getThreadLocalServletContext
argument_list|()
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|servletContextMock
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|ServletContext
argument_list|>
operator|)
name|c
operator|.
name|getServletContext
argument_list|()
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|servletContextMock
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|ServletContext
argument_list|>
operator|)
name|c
operator|.
name|getSuperServletContext
argument_list|()
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|httpRequest
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|HttpServletRequest
argument_list|>
operator|)
name|c
operator|.
name|getServletRequest
argument_list|()
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|HttpServletResponseFilter
name|filter
init|=
call|(
name|HttpServletResponseFilter
call|)
argument_list|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|HttpServletResponse
argument_list|>
operator|)
name|c
operator|.
name|getServletResponse
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|httpResponse
argument_list|,
name|filter
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testSingletonHttpResourceFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|ServletContext
name|servletContextMock
init|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONTEXT
argument_list|,
name|servletContextMock
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|httpRequest
init|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_REQUEST
argument_list|,
name|httpRequest
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|httpResponse
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|httpResponse
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextProxies
argument_list|(
name|cri
argument_list|,
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|cri
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|servletContextMock
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|ServletContext
argument_list|>
operator|)
name|c
operator|.
name|getServletContextResource
argument_list|()
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|httpRequest
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|HttpServletRequest
argument_list|>
operator|)
name|c
operator|.
name|getServletRequestResource
argument_list|()
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|HttpServletResponseFilter
name|filter
init|=
call|(
name|HttpServletResponseFilter
call|)
argument_list|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|HttpServletResponse
argument_list|>
operator|)
name|c
operator|.
name|getServletResponseResource
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|httpResponse
argument_list|,
name|filter
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testContextAnnotationOnMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextProxies
argument_list|(
name|cri
argument_list|,
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|message
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|InjectionUtils
operator|.
name|injectContextMethods
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getUriInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ThreadLocalUriInfo
operator|.
name|class
argument_list|,
name|c
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
argument_list|<
name|UriInfo
argument_list|>
operator|)
name|c
operator|.
name|getUriInfo
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ThreadLocalServletConfig
operator|.
name|class
argument_list|,
name|c
operator|.
name|getSuperServletConfig
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ThreadLocalHttpServletRequest
operator|.
name|class
argument_list|,
name|c
operator|.
name|getHttpServletRequest
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParamAnnotationOnMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"AHeader2"
argument_list|,
literal|"theAHeader2"
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue&query2=b"
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|injectParameters
argument_list|(
name|ori
argument_list|,
name|c
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|c
operator|.
name|getQueryParam
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"theAHeader2"
argument_list|,
name|c
operator|.
name|getAHeader2
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParamAnnotationOnField
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"AHeader"
argument_list|,
literal|"theAHeader"
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"b=bValue"
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|injectParameters
argument_list|(
name|ori
argument_list|,
name|c
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bValue"
argument_list|,
name|c
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"theAHeader"
argument_list|,
name|c
operator|.
name|getAHeader
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultValueOnField
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|injectParameters
argument_list|(
name|ori
argument_list|,
name|c
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bQuery"
argument_list|,
name|c
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextResolverParam
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testContextResolvers"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|ContextResolver
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
operator|new
name|JAXBContextProvider
argument_list|()
decl_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|m
argument_list|)
operator|.
name|registerUserProvider
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|BASE_PATH
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1 parameters expected"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|cr
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextResolverFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|PerRequestResourceProvider
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
literal|null
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
operator|new
name|JAXBContextProvider
argument_list|()
decl_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|(
name|m
argument_list|)
operator|.
name|registerUserProvider
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|BASE_PATH
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|cr
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getContextResolver
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServletResourceFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|PerRequestResourceProvider
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
literal|null
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
comment|// Creating mocks for the servlet request, response and context
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|ServletContext
name|context
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_REQUEST
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONTEXT
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|request
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletRequestResource
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|HttpServletResponseFilter
name|filter
init|=
operator|(
name|HttpServletResponseFilter
operator|)
name|c
operator|.
name|getServletResponseResource
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|response
operator|.
name|getClass
argument_list|()
argument_list|,
name|filter
operator|.
name|getResponse
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletContextResource
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getServletRequest
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getServletResponse
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getServletContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getServletRequestResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getServletResponseResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getServletContextResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|request
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletRequest
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|=
operator|(
name|HttpServletResponseFilter
operator|)
name|c
operator|.
name|getServletResponse
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|response
operator|.
name|getClass
argument_list|()
argument_list|,
name|filter
operator|.
name|getResponse
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletContext
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConversion
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testConversion"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|PathSegmentImpl
operator|.
name|class
block|,
name|SimpleFactory
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ori
operator|.
name|setURITemplate
argument_list|(
operator|new
name|URITemplate
argument_list|(
literal|"{id1}/{id2}"
argument_list|)
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|values
operator|.
name|putSingle
argument_list|(
literal|"id1"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|values
operator|.
name|putSingle
argument_list|(
literal|"id2"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
name|values
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|PathSegment
name|ps
init|=
operator|(
name|PathSegment
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|ps
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleFactory
name|sf
init|=
operator|(
name|SimpleFactory
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|sf
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|OperationResourceInfo
name|findTargetResourceClass
parameter_list|(
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
parameter_list|,
name|Message
name|message
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|httpMethod
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
parameter_list|,
name|String
name|requestContentType
parameter_list|,
name|List
argument_list|<
name|MediaType
argument_list|>
name|acceptContentTypes
parameter_list|)
block|{
name|Map
argument_list|<
name|ClassResourceInfo
argument_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|mResources
init|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
name|path
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|mResources
operator|!=
literal|null
condition|)
block|{
name|OperationResourceInfo
name|ori
init|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|mResources
argument_list|,
name|message
argument_list|,
name|httpMethod
argument_list|,
name|values
argument_list|,
name|requestContentType
argument_list|,
name|acceptContentTypes
argument_list|)
decl_stmt|;
if|if
condition|(
name|ori
operator|!=
literal|null
condition|)
block|{
return|return
name|ori
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|Message
name|createMessage
parameter_list|()
block|{
name|ProviderFactory
name|factory
init|=
name|ServerProviderFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.http.case_insensitive_queries"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Exchange
name|e
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|setExchange
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|e
operator|.
name|setInMessage
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getEndpointInfo
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|get
argument_list|(
name|Application
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|size
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|0
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|get
argument_list|(
name|ServerProviderFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
name|factory
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|e
operator|.
name|put
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
specifier|private
specifier|static
class|class
name|LocaleParameterHandler
implements|implements
name|ParamConverterProvider
implements|,
name|ParamConverter
argument_list|<
name|Locale
argument_list|>
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|ParamConverter
argument_list|<
name|T
argument_list|>
name|getConverter
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|)
block|{
if|if
condition|(
name|cls
operator|==
name|Locale
operator|.
name|class
condition|)
block|{
return|return
operator|(
name|ParamConverter
argument_list|<
name|T
argument_list|>
operator|)
name|this
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|Locale
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|String
index|[]
name|values
init|=
name|s
operator|.
name|split
argument_list|(
literal|"_"
argument_list|)
decl_stmt|;
return|return
name|values
operator|.
name|length
operator|==
literal|2
condition|?
operator|new
name|Locale
argument_list|(
name|values
index|[
literal|0
index|]
argument_list|,
name|values
index|[
literal|1
index|]
argument_list|)
else|:
operator|new
name|Locale
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|(
name|Locale
name|arg0
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|GenericObjectParameterHandler
implements|implements
name|ParamConverterProvider
implements|,
name|ParamConverter
argument_list|<
name|Query
argument_list|<
name|String
argument_list|>
argument_list|>
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|ParamConverter
argument_list|<
name|T
argument_list|>
name|getConverter
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|)
block|{
if|if
condition|(
name|cls
operator|==
name|Query
operator|.
name|class
condition|)
block|{
return|return
operator|(
name|ParamConverter
argument_list|<
name|T
argument_list|>
operator|)
name|this
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|Query
argument_list|<
name|String
argument_list|>
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
operator|new
name|Query
argument_list|<
name|String
argument_list|>
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|(
name|Query
argument_list|<
name|String
argument_list|>
name|arg0
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

