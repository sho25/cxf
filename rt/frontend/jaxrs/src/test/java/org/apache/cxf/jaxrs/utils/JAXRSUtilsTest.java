begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|PathSegment
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|SecurityContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ContextResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWorkers
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXBContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|SimpleFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|HttpHeadersImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MessageBodyWorkersImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|PathSegmentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|RequestImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|SecurityContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|UriInfoImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|tl
operator|.
name|ThreadLocalProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|tl
operator|.
name|ThreadLocalUriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|PerRequestResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|SingletonResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|MethodDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|URITemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|AbstractHTTPDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSUtilsTest
extends|extends
name|Assert
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{     }
annotation|@
name|Test
specifier|public
name|void
name|testSelectBetweenMultipleResourceClasses
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreNoSubResource
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|ClassResourceInfo
name|bStore
init|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/bookstore"
argument_list|,
name|map
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/bookstore/"
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/bookstore/bar"
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreNoSubResource
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectBetweenMultipleResourceClasses2
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate1
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate2
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|ClassResourceInfo
name|bStore
init|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1"
argument_list|,
name|map
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate1
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1/"
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate1
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1/foo"
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate2
operator|.
name|class
argument_list|)
expr_stmt|;
name|bStore
operator|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
literal|"/1/foo/bar"
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bStore
operator|.
name|getResourceClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TestResourceTemplate2
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindTargetResourceClass
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreNoSubResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|String
name|contentTypes
init|=
literal|"*/*"
decl_stmt|;
comment|//If acceptContentTypes does not specify a specific Mime type, the
comment|//method is declared with a most specific ProduceMime type is selected.
name|OperationResourceInfo
name|ori
init|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books/123/"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBookJSON"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books/123"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBookJSON"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books/123"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBooks"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test find POST
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books"
argument_list|,
literal|"POST"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"addBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test find PUT
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books"
argument_list|,
literal|"PUT"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//test find DELETE
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/1/books/123"
argument_list|,
literal|"DELETE"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"deleteBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|MediaType
argument_list|>
name|getTypes
parameter_list|(
name|String
name|types
parameter_list|)
block|{
return|return
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
name|types
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindTargetResourceClassWithTemplates
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStoreTemplates
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|String
name|contentTypes
init|=
literal|"*/*"
decl_stmt|;
comment|//If acceptContentTypes does not specify a specific Mime type, the
comment|//method is declared with a most specific ProduceMime type is selected.
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/1/2/"
argument_list|,
literal|"GET"
argument_list|,
name|values
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBooks"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only id and final match groups should be there"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2 {id} values should've been picked up"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FINAL_MATCH_GROUP should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First {id} is 1"
argument_list|,
literal|"1"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second id is 2"
argument_list|,
literal|"2"
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/2"
argument_list|,
literal|"POST"
argument_list|,
name|values
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBookStoreInfo"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only id and final match groups should be there"
argument_list|,
literal|2
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only single {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FINAL_MATCH_GROUP should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|"2"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/3/4"
argument_list|,
literal|"PUT"
argument_list|,
name|values
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|3
argument_list|,
name|values
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
literal|"bookId"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|1
argument_list|,
name|values
operator|.
name|get
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|"3"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only the first {id} should've been picked up"
argument_list|,
literal|"4"
argument_list|,
name|values
operator|.
name|getFirst
argument_list|(
literal|"bookId"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindTargetResourceClassWithSubResource
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSServiceFactoryBean
name|sf
init|=
operator|new
name|JAXRSServiceFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
init|=
operator|(
operator|(
name|JAXRSServiceImpl
operator|)
name|sf
operator|.
name|getService
argument_list|()
operator|)
operator|.
name|getClassResourceInfos
argument_list|()
decl_stmt|;
name|String
name|contentTypes
init|=
literal|"*/*"
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/books/123"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/books/123/true/chapter/1"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getNewBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/books"
argument_list|,
literal|"POST"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"addBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/books"
argument_list|,
literal|"PUT"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ori
operator|=
name|findTargetResourceClass
argument_list|(
name|resources
argument_list|,
literal|null
argument_list|,
literal|"/bookstore/books/123"
argument_list|,
literal|"DELETE"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|contentTypes
argument_list|,
name|getTypes
argument_list|(
literal|"*/*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ori
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"deleteBook"
argument_list|,
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypes
parameter_list|()
throws|throws
name|Exception
block|{
comment|//test basic
name|List
argument_list|<
name|MediaType
argument_list|>
name|methodMimeTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|MediaType
argument_list|>
argument_list|(
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype,application/xml,application/json"
argument_list|)
argument_list|)
decl_stmt|;
name|MediaType
name|acceptContentType
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|methodMimeTypes
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test basic
name|methodMimeTypes
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype, application/json, application/xml"
argument_list|)
expr_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|methodMimeTypes
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test accept wild card */*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/mytype,application/json,application/xml"
argument_list|,
literal|"*/*"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//test accept wild card application/*
name|methodMimeTypes
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"text/html,text/xml,application/xml"
argument_list|)
expr_stmt|;
name|acceptContentType
operator|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/*"
argument_list|)
expr_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|methodMimeTypes
argument_list|,
name|acceptContentType
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MediaType
name|type
range|:
name|candidateList
control|)
block|{
name|assertTrue
argument_list|(
literal|"text/html"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//test produce wild card */*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"*/*"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"application/json"
operator|.
name|equals
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//test produce wild card application/*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"application/*"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"application/json"
operator|.
name|equals
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//test produce wild card */*, accept wild card */*
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
literal|"*/*"
argument_list|,
literal|"*/*"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/*"
operator|.
name|equals
argument_list|(
name|candidateList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntersectMimeTypesTwoArray
parameter_list|()
throws|throws
name|Exception
block|{
comment|//test basic
name|List
argument_list|<
name|MediaType
argument_list|>
name|acceptedMimeTypes
init|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype, application/xml, application/json"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|candidateList
init|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|acceptedMimeTypes
argument_list|,
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MediaType
name|type
range|:
name|candidateList
control|)
block|{
name|assertTrue
argument_list|(
literal|"application/mytype"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/xml"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/json"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//test basic
name|acceptedMimeTypes
operator|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MediaType
argument_list|>
name|providerMimeTypes
init|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype, application/xml, application/json"
argument_list|)
decl_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|acceptedMimeTypes
argument_list|,
name|providerMimeTypes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MediaType
name|type
range|:
name|candidateList
control|)
block|{
name|assertTrue
argument_list|(
literal|"application/mytype"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/xml"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
literal|"application/json"
operator|.
name|equals
argument_list|(
name|type
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//test empty
name|acceptedMimeTypes
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"application/mytype,application/xml"
argument_list|)
expr_stmt|;
name|candidateList
operator|=
name|JAXRSUtils
operator|.
name|intersectMimeTypes
argument_list|(
name|acceptedMimeTypes
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|candidateList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"*"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
argument_list|)
expr_stmt|;
name|types
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"text/*"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"*"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|types
operator|=
name|JAXRSUtils
operator|.
name|parseMediaTypes
argument_list|(
literal|"text/*,text/plain;q=.2,text/xml,TEXT/BAR"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|4
operator|&&
literal|"text/*"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/plain;q=.2"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/bar"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSortMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|JAXRSUtils
operator|.
name|sortMediaTypes
argument_list|(
literal|"text/*,text/plain;q=.2,text/xml,TEXT/BAR"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|size
argument_list|()
operator|==
literal|4
operator|&&
literal|"text/bar"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/plain;q=.2"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
literal|"text/*"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareMediaTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|MediaType
name|m1
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml"
argument_list|)
decl_stmt|;
name|MediaType
name|m2
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/*"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml is more specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|m2
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/* is less specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m2
argument_list|,
name|m1
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml should be equal to itself"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"xml"
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/* should be equal to itself"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m2
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"*"
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/plain is alphabetically earlier than text/xml"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|,
name|m1
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml is alphabetically later than text/plain"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/xml"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
name|m1
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/xml"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
name|m2
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"*/* is less specific than text/*"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m2
argument_list|,
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|MediaType
name|m3
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml;q=0.2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml should be more preferred than than text/xml;q=0.2"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m1
argument_list|,
name|m3
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|MediaType
name|m4
init|=
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/xml;q=.3"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml;q=.3 should be more preferred than than text/xml;q=0.2"
argument_list|,
name|JAXRSUtils
operator|.
name|compareMediaTypes
argument_list|(
name|m4
argument_list|,
name|m3
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcceptTypesMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"test"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|ClassResourceInfo
name|cr
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml can not be matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"xml"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml can not be matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"*"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"text/xml can not be matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"*"
argument_list|,
literal|"*"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"text/plain was matched"
argument_list|,
name|JAXRSUtils
operator|.
name|matchMimeTypes
argument_list|(
name|JAXRSUtils
operator|.
name|ALL_TYPES
argument_list|,
operator|new
name|MediaType
argument_list|(
literal|"text"
argument_list|,
literal|"plain"
argument_list|)
argument_list|,
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
name|cr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|Integer
operator|.
name|TYPE
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQuery"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|MessageImpl
name|messageImpl
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query=24"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Query Parameter was not matched correctly"
argument_list|,
literal|"24"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Primitive Query Parameter was not matched correctly"
argument_list|,
literal|24
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryParametersBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testQueryBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|MessageImpl
name|messageImpl
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue&b=123"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Bean should be created"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|cb
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|,
name|cb
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPathParametersBean
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
index|[]
name|argType
init|=
block|{
name|Customer
operator|.
name|CustomerBean
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testPathBean"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|MessageImpl
name|messageImpl
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|pathTamplates
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|pathTamplates
operator|.
name|add
argument_list|(
literal|"a"
argument_list|,
literal|"aValue"
argument_list|)
expr_stmt|;
name|pathTamplates
operator|.
name|add
argument_list|(
literal|"b"
argument_list|,
literal|"123"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
argument_list|,
name|pathTamplates
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Bean should be created"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Customer
operator|.
name|CustomerBean
name|cb
init|=
operator|(
name|Customer
operator|.
name|CustomerBean
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|cb
operator|.
name|getA
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|,
name|cb
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleQueryParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|Long
operator|.
name|class
block|,
name|Boolean
operator|.
name|TYPE
block|,
name|String
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMultipleQuery"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|MessageImpl
name|messageImpl
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"query=first&query2=second&query3=3&query4=true&query5"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"First Query Parameter of multiple was not matched correctly"
argument_list|,
literal|"first"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second Query Parameter of multiple was not matched correctly"
argument_list|,
literal|"second"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Third Query Parameter of multiple was not matched correctly"
argument_list|,
operator|new
name|Long
argument_list|(
literal|3
argument_list|)
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fourth Query Parameter of multiple was not matched correctly"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fourth Query Parameter of multiple was not matched correctly"
argument_list|,
literal|""
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatrixParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
index|[]
name|argType
init|=
block|{
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|}
decl_stmt|;
name|Method
name|m
init|=
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testMatrixParam"
argument_list|,
name|argType
argument_list|)
decl_stmt|;
name|MessageImpl
name|messageImpl
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|messageImpl
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PATH_INFO
argument_list|,
literal|"/foo/bar;p1=1;p2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
operator|new
name|OperationResourceInfo
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|null
argument_list|,
name|messageImpl
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"2 Matrix params should've been identified"
argument_list|,
literal|2
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First Matrix Parameter of multiple was not matched correctly"
argument_list|,
literal|"1"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second Matrix Parameter of multiple was not matched correctly"
argument_list|,
literal|""
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectResourceMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori1
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItAsXML"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori1
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ori1
operator|.
name|setURITemplate
argument_list|(
operator|new
name|URITemplate
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori2
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItPlain"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori2
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ori2
operator|.
name|setURITemplate
argument_list|(
operator|new
name|URITemplate
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|MethodDispatcher
name|md
init|=
operator|new
name|MethodDispatcher
argument_list|()
decl_stmt|;
name|md
operator|.
name|bind
argument_list|(
name|ori1
argument_list|,
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItAsXML"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
name|md
operator|.
name|bind
argument_list|(
name|ori2
argument_list|,
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getItPlain"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
name|cri
operator|.
name|setMethodDispatcher
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|cri
argument_list|,
literal|"/"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|getTypes
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori2
argument_list|)
expr_stmt|;
name|ori
operator|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|cri
argument_list|,
literal|"/"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|getTypes
argument_list|(
literal|"text/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori1
argument_list|)
expr_stmt|;
name|ori
operator|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|cri
argument_list|,
literal|"/"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|getTypes
argument_list|(
literal|"*,text/plain,text/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori2
argument_list|)
expr_stmt|;
name|ori
operator|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|cri
argument_list|,
literal|"/"
argument_list|,
literal|"GET"
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|"*/*"
argument_list|,
name|getTypes
argument_list|(
literal|"*,x/y,text/xml,text/plain"
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ori
argument_list|,
name|ori2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpContextParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testParams"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|UriInfo
operator|.
name|class
block|,
name|HttpHeaders
operator|.
name|class
block|,
name|Request
operator|.
name|class
block|,
name|SecurityContext
operator|.
name|class
block|,
name|MessageBodyWorkers
operator|.
name|class
block|,
name|String
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"Foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|add
argument_list|(
literal|"Foo"
argument_list|,
literal|"baz"
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"6 parameters expected"
argument_list|,
literal|6
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|HttpHeadersImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|RequestImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|SecurityContextImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|MessageBodyWorkersImpl
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong header param"
argument_list|,
literal|"bar,baz"
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServletContextParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testServletParams"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|HttpServletRequest
operator|.
name|class
block|,
name|HttpServletResponse
operator|.
name|class
block|,
name|ServletContext
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|ServletContext
name|context
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_REQUEST
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONTEXT
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"3 parameters expected"
argument_list|,
literal|3
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|request
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|response
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPerRequestHttpContextFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|PerRequestResourceProvider
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
literal|null
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getUriInfo2
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|HttpHeadersImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getHeaders
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|RequestImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getRequest
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|SecurityContextImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getSecurityContext
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|MessageBodyWorkersImpl
operator|.
name|class
argument_list|,
name|c
operator|.
name|getBodyWorkers
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingletonHttpContextFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextProxies
argument_list|(
name|cri
argument_list|,
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|()
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|cri
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ThreadLocalUriInfo
operator|.
name|class
argument_list|,
name|c
operator|.
name|getUriInfo2
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
operator|)
name|c
operator|.
name|getUriInfo2
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|HttpHeadersImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
operator|)
name|c
operator|.
name|getHeaders
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|RequestImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
operator|)
name|c
operator|.
name|getRequest
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|SecurityContextImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
operator|)
name|c
operator|.
name|getSecurityContext
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|MessageBodyWorkersImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
operator|)
name|c
operator|.
name|getBodyWorkers
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextAnnotationOnMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|SingletonResourceProvider
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextProxies
argument_list|(
name|cri
argument_list|,
name|cri
operator|.
name|getResourceProvider
argument_list|()
operator|.
name|getInstance
argument_list|()
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|JAXRSUtils
operator|.
name|handleSetters
argument_list|(
name|ori
argument_list|,
name|c
argument_list|,
operator|new
name|MessageImpl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|c
operator|.
name|getUriInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ThreadLocalUriInfo
operator|.
name|class
argument_list|,
name|c
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|UriInfoImpl
operator|.
name|class
argument_list|,
operator|(
operator|(
name|ThreadLocalProxy
operator|)
name|c
operator|.
name|getUriInfo
argument_list|()
operator|)
operator|.
name|get
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParamAnnotationOnMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"a=aValue&query2=b"
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|handleSetters
argument_list|(
name|ori
argument_list|,
name|c
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aValue"
argument_list|,
name|c
operator|.
name|getQueryParam
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParamAnnotationOnField
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
literal|"b=bValue"
argument_list|)
expr_stmt|;
name|JAXRSUtils
operator|.
name|handleSetters
argument_list|(
name|ori
argument_list|,
name|c
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bValue"
argument_list|,
name|c
operator|.
name|getB
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextResolverParam
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testContextResolvers"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|ContextResolver
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
operator|new
name|JAXBContextProvider
argument_list|()
decl_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|registerUserProvider
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1 parameters expected"
argument_list|,
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|cr
operator|.
name|getClass
argument_list|()
argument_list|,
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextResolverFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|PerRequestResourceProvider
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
literal|null
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
name|cr
init|=
operator|new
name|JAXBContextProvider
argument_list|()
decl_stmt|;
name|ProviderFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|registerUserProvider
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|cr
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getContextResolver
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServletResourceFields
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|cri
operator|.
name|setResourceProvider
argument_list|(
operator|new
name|PerRequestResourceProvider
argument_list|(
name|Customer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
literal|null
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
comment|// Creating mocks for the servlet request, response and context
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|ServletContext
name|context
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_REQUEST
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_RESPONSE
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|AbstractHTTPDestination
operator|.
name|HTTP_CONTEXT
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|InjectionUtils
operator|.
name|injectResourceFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|request
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletRequestResource
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|response
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletResponseResource
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletContextResource
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|c
operator|.
name|getServletRequest
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|c
operator|.
name|getServletResponse
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|c
operator|.
name|getServletContext
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|=
operator|new
name|Customer
argument_list|()
expr_stmt|;
name|InjectionUtils
operator|.
name|injectContextFields
argument_list|(
name|c
argument_list|,
name|ori
operator|.
name|getClassResourceInfo
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|c
operator|.
name|getServletRequestResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|c
operator|.
name|getServletResponseResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|c
operator|.
name|getServletContextResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|request
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletRequest
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|response
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletResponse
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getClass
argument_list|()
argument_list|,
name|c
operator|.
name|getServletContext
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConversion
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassResourceInfo
name|cri
init|=
operator|new
name|ClassResourceInfo
argument_list|(
name|Customer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
operator|new
name|OperationResourceInfo
argument_list|(
name|Customer
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"testConversion"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|PathSegmentImpl
operator|.
name|class
block|,
name|SimpleFactory
operator|.
name|class
block|}
argument_list|)
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|ori
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|ori
operator|.
name|setURITemplate
argument_list|(
operator|new
name|URITemplate
argument_list|(
literal|"{id1}/{id2}"
argument_list|)
argument_list|)
expr_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|values
operator|.
name|putSingle
argument_list|(
literal|"id1"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|values
operator|.
name|putSingle
argument_list|(
literal|"id2"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|JAXRSUtils
operator|.
name|processParameters
argument_list|(
name|ori
argument_list|,
name|values
argument_list|,
name|m
argument_list|)
decl_stmt|;
name|PathSegment
name|ps
init|=
operator|(
name|PathSegment
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|ps
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleFactory
name|sf
init|=
operator|(
name|SimpleFactory
operator|)
name|params
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|sf
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|OperationResourceInfo
name|findTargetResourceClass
parameter_list|(
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|resources
parameter_list|,
name|Message
name|message
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|httpMethod
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
parameter_list|,
name|String
name|requestContentType
parameter_list|,
name|List
argument_list|<
name|MediaType
argument_list|>
name|acceptContentTypes
parameter_list|)
block|{
name|ClassResourceInfo
name|resource
init|=
name|JAXRSUtils
operator|.
name|selectResourceClass
argument_list|(
name|resources
argument_list|,
name|path
argument_list|,
name|values
argument_list|)
decl_stmt|;
if|if
condition|(
name|resource
operator|!=
literal|null
condition|)
block|{
name|String
name|subResourcePath
init|=
name|values
operator|.
name|getFirst
argument_list|(
name|URITemplate
operator|.
name|FINAL_MATCH_GROUP
argument_list|)
decl_stmt|;
name|OperationResourceInfo
name|ori
init|=
name|JAXRSUtils
operator|.
name|findTargetMethod
argument_list|(
name|resource
argument_list|,
name|subResourcePath
argument_list|,
name|httpMethod
argument_list|,
name|values
argument_list|,
name|requestContentType
argument_list|,
name|acceptContentTypes
argument_list|)
decl_stmt|;
if|if
condition|(
name|ori
operator|!=
literal|null
condition|)
block|{
return|return
name|ori
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

