begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|TypeCreationOptions
import|;
end_import

begin_comment
comment|/**  * Class that sets options to disable xml namespaces.  */
end_comment

begin_class
class|class
name|NoNamespaceAegisElementProvider
extends|extends
name|AegisElementProvider
argument_list|<
name|Object
argument_list|>
block|{
comment|/*      * This can't use the cache in AbstractAegisProvider. It could have its own cache.      */
annotation|@
name|Override
specifier|protected
name|AegisContext
name|getAegisContext
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|plainClass
parameter_list|,
name|Type
name|genericType
parameter_list|)
block|{
name|AegisContext
name|context
init|=
operator|new
name|AegisContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setWriteXsiTypes
argument_list|(
name|writeXsiType
argument_list|)
expr_stmt|;
name|context
operator|.
name|setReadXsiTypes
argument_list|(
name|readXsiType
argument_list|)
expr_stmt|;
name|TypeCreationOptions
name|tco
init|=
operator|new
name|TypeCreationOptions
argument_list|()
decl_stmt|;
name|tco
operator|.
name|setQualifyElements
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
name|rootClasses
init|=
operator|new
name|HashSet
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|rootClasses
operator|.
name|add
argument_list|(
name|genericType
argument_list|)
expr_stmt|;
name|context
operator|.
name|setTypeCreationOptions
argument_list|(
name|tco
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRootClasses
argument_list|(
name|rootClasses
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

