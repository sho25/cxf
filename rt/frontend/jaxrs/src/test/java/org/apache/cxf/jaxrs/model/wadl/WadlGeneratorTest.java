begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|wadl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|xmlschema
operator|.
name|XmlSchemaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
operator|.
name|ServletDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|WadlGeneratorTest
extends|extends
name|Assert
block|{
specifier|private
name|IMocksControl
name|control
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|control
operator|=
name|EasyMock
operator|.
name|createNiceControl
argument_list|()
expr_stmt|;
name|control
operator|.
name|makeThreadSafe
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoWadl
parameter_list|()
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|wg
operator|.
name|handleRequest
argument_list|(
operator|new
name|MessageImpl
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomSchemaJaxbContextPrefixes
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setSchemaLocations
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"classpath:/book1.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkGrammars
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"thebook"
argument_list|,
literal|"thebook2"
argument_list|,
literal|"thechapter"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"prefix1:thebook"
argument_list|,
literal|"prefix1:thebook2"
argument_list|,
literal|"prefix1:thechapter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomSchemaWithImportJaxbContextPrefixes
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setSchemaLocations
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"classpath:/books.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|grammarEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"grammars"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|grammarEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|schemasEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|grammarEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"schema"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|schemasEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://books"
argument_list|,
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"targetNamespace"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|elementEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"element"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|elementEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkElement
argument_list|(
name|elementEls
argument_list|,
literal|"books"
argument_list|,
literal|"books"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|complexTypesEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"complexType"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|complexTypesEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkComplexType
argument_list|(
name|complexTypesEls
argument_list|,
literal|"books"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|importEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"import"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|importEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://localhost:8080/baz/book1.xsd"
argument_list|,
name|importEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"schemaLocation"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExternalSchemaJaxbContextPrefixes
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setExternalLinks
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"http://books.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkGrammarsWithLinks
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"http://books.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"prefix1:thebook"
argument_list|,
literal|"prefix1:thebook2"
argument_list|,
literal|"prefix1:thechapter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExternalRelativeSchemaJaxbContextPrefixes
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setExternalLinks
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"books.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkGrammarsWithLinks
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"http://localhost:8080/baz/books.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"prefix1:thebook"
argument_list|,
literal|"prefix1:thebook2"
argument_list|,
literal|"prefix1:thechapter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExternalSchemaCustomPrefix
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setExternalLinks
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"http://books"
argument_list|)
argument_list|)
expr_stmt|;
name|wg
operator|.
name|setUseJaxbContextForQnames
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkGrammarsWithLinks
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"http://books"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"p1:thesuperbook"
argument_list|,
literal|"p1:thesuperbook2"
argument_list|,
literal|"p1:thesuperchapter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustomSchemaAndSchemaPrefixes
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setSchemaLocations
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"classpath:/book2.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|wg
operator|.
name|setUseJaxbContextForQnames
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkGrammars
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"book"
argument_list|,
literal|"book2"
argument_list|,
literal|"chapter"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"prefix1:book"
argument_list|,
literal|"prefix1:book2"
argument_list|,
literal|"prefix1:chapter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingleRootResource
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setApplicationTitle
argument_list|(
literal|"My Application"
argument_list|)
expr_stmt|;
name|wg
operator|.
name|setNamespacePrefix
argument_list|(
literal|"ns"
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkDocs
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"My Application"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|checkGrammars
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"thebook"
argument_list|,
literal|"books"
argument_list|,
literal|"thebook2"
argument_list|,
literal|"thechapter"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"ns1:thebook"
argument_list|,
literal|"ns1:thebook2"
argument_list|,
literal|"ns1:thechapter"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTwoSchemasSameNs
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setApplicationTitle
argument_list|(
literal|"My Application"
argument_list|)
expr_stmt|;
name|wg
operator|.
name|setNamespacePrefix
argument_list|(
literal|"ns"
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|TestResource
operator|.
name|class
argument_list|,
name|TestResource
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkDocs
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"My Application"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|grammarEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"grammars"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|grammarEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|schemasEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|grammarEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"schema"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|schemasEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://example.com/test"
argument_list|,
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"targetNamespace"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://example.com/test"
argument_list|,
name|schemasEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"targetNamespace"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|reps
init|=
name|DOMUtils
operator|.
name|findAllElementsByTagNameNS
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"representation"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|reps
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ns1:testCompositeObject"
argument_list|,
name|reps
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"element"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ns1:testCompositeObject"
argument_list|,
name|reps
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"element"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRootResourceWithSingleSlash
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStoreWithSingleSlash
operator|.
name|class
argument_list|,
name|BookStoreWithSingleSlash
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
name|cri
argument_list|)
decl_stmt|;
name|checkResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|rootEls
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rootEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|resource
init|=
name|rootEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/"
argument_list|,
name|resource
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|resource
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"resource"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resourceEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"book"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|verifyParameters
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Param
argument_list|(
literal|"id"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|)
expr_stmt|;
name|checkGrammars
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"thebook"
argument_list|,
literal|null
argument_list|,
literal|"thechapter"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkResponse
parameter_list|(
name|Response
name|r
parameter_list|)
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|,
name|r
operator|.
name|getMetadata
argument_list|()
operator|.
name|getFirst
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
comment|//        File f = new File("test.xml");
comment|//        f.delete();
comment|//        f.createNewFile();
comment|//        System.out.println(f.getAbsolutePath());
comment|//        FileOutputStream fos = new FileOutputStream(f);
comment|//        fos.write(r.getEntity().toString().getBytes());
comment|//        fos.flush();
comment|//        fos.close();
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleRootResources
parameter_list|()
throws|throws
name|Exception
block|{
name|WadlGenerator
name|wg
init|=
operator|new
name|WadlGenerator
argument_list|()
decl_stmt|;
name|wg
operator|.
name|setDefaultMediaType
argument_list|(
name|WadlGenerator
operator|.
name|WADL_TYPE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClassResourceInfo
name|cri1
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|BookStore
operator|.
name|class
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ClassResourceInfo
name|cri2
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|Orders
operator|.
name|class
argument_list|,
name|Orders
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|cris
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassResourceInfo
argument_list|>
argument_list|()
decl_stmt|;
name|cris
operator|.
name|add
argument_list|(
name|cri1
argument_list|)
expr_stmt|;
name|cris
operator|.
name|add
argument_list|(
name|cri2
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
name|mockMessage
argument_list|(
literal|"http://localhost:8080/baz"
argument_list|,
literal|"/bar"
argument_list|,
name|WadlGenerator
operator|.
name|WADL_QUERY
argument_list|,
name|cris
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wg
operator|.
name|handleRequest
argument_list|(
name|m
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|WadlGenerator
operator|.
name|WADL_TYPE
operator|.
name|toString
argument_list|()
argument_list|,
name|r
operator|.
name|getMetadata
argument_list|()
operator|.
name|getFirst
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|wadl
init|=
name|r
operator|.
name|getEntity
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|wadl
argument_list|)
argument_list|)
decl_stmt|;
name|checkGrammars
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"thebook"
argument_list|,
literal|"books"
argument_list|,
literal|"thebook2"
argument_list|,
literal|"thechapter"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|getWadlResourcesInfo
argument_list|(
name|doc
argument_list|,
literal|"http://localhost:8080/baz"
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|els
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"prefix1:thebook"
argument_list|,
literal|"prefix1:thebook2"
argument_list|,
literal|"prefix1:thechapter"
argument_list|)
expr_stmt|;
name|Element
name|orderResource
init|=
name|els
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/orders"
argument_list|,
name|orderResource
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkGrammars
parameter_list|(
name|Element
name|appElement
parameter_list|,
name|String
name|bookEl
parameter_list|,
name|String
name|book2El
parameter_list|,
name|String
name|chapterEl
parameter_list|)
block|{
name|checkGrammars
argument_list|(
name|appElement
argument_list|,
name|bookEl
argument_list|,
literal|null
argument_list|,
name|book2El
argument_list|,
name|chapterEl
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkGrammars
parameter_list|(
name|Element
name|appElement
parameter_list|,
name|String
name|bookEl
parameter_list|,
name|String
name|booksEl
parameter_list|,
name|String
name|book2El
parameter_list|,
name|String
name|chapterEl
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|grammarEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|appElement
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"grammars"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|grammarEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|schemasEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|grammarEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"schema"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|schemasEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://superbooks"
argument_list|,
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"targetNamespace"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|elementEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"element"
argument_list|)
decl_stmt|;
name|int
name|size
init|=
name|book2El
operator|==
literal|null
condition|?
literal|2
else|:
literal|3
decl_stmt|;
name|int
name|elementSize
init|=
name|size
decl_stmt|;
if|if
condition|(
name|booksEl
operator|!=
literal|null
condition|)
block|{
name|elementSize
operator|++
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|elementSize
argument_list|,
name|elementEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkElement
argument_list|(
name|elementEls
argument_list|,
name|bookEl
argument_list|,
literal|"book"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|book2El
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|checkElement
argument_list|(
name|elementEls
argument_list|,
name|book2El
argument_list|,
literal|"book2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|checkElement
argument_list|(
name|elementEls
argument_list|,
name|chapterEl
argument_list|,
literal|"chapter"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|booksEl
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|checkElement
argument_list|(
name|elementEls
argument_list|,
name|booksEl
argument_list|,
literal|"books"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Element
argument_list|>
name|complexTypesEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|schemasEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"complexType"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|complexTypesEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkComplexType
argument_list|(
name|complexTypesEls
argument_list|,
literal|"book"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|book2El
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|checkComplexType
argument_list|(
name|complexTypesEls
argument_list|,
literal|"book2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|checkComplexType
argument_list|(
name|complexTypesEls
argument_list|,
literal|"chapter"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkGrammarsWithLinks
parameter_list|(
name|Element
name|appElement
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|links
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|links
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|grammarEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|appElement
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"grammars"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|grammarEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|schemasEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|grammarEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"schema"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|schemasEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|includeEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|grammarEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"include"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|links
operator|.
name|size
argument_list|()
argument_list|,
name|includeEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|el
range|:
name|includeEls
control|)
block|{
name|assertTrue
argument_list|(
name|links
operator|.
name|contains
argument_list|(
name|el
operator|.
name|getAttribute
argument_list|(
literal|"href"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|checkComplexType
parameter_list|(
name|List
argument_list|<
name|Element
argument_list|>
name|els
parameter_list|,
name|String
name|name
parameter_list|)
block|{
for|for
control|(
name|Element
name|e
range|:
name|els
control|)
block|{
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkElement
parameter_list|(
name|List
argument_list|<
name|Element
argument_list|>
name|els
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|localTypeName
parameter_list|)
block|{
for|for
control|(
name|Element
name|e
range|:
name|els
control|)
block|{
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
condition|)
block|{
name|String
name|type
init|=
name|e
operator|.
name|getAttribute
argument_list|(
literal|"type"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|String
name|expectedType1
init|=
literal|"tns:"
operator|+
name|localTypeName
decl_stmt|;
name|String
name|expectedType2
init|=
literal|"os:"
operator|+
name|localTypeName
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
name|expectedType1
argument_list|)
operator|||
name|type
operator|.
name|equals
argument_list|(
name|expectedType2
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"books"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|Element
name|ctElement
init|=
operator|(
name|Element
operator|)
name|e
operator|.
name|getElementsByTagNameNS
argument_list|(
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"complexType"
argument_list|)
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Element
name|seqElement
init|=
operator|(
name|Element
operator|)
name|ctElement
operator|.
name|getElementsByTagNameNS
argument_list|(
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"sequence"
argument_list|)
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Element
name|xsElement
init|=
operator|(
name|Element
operator|)
name|seqElement
operator|.
name|getElementsByTagNameNS
argument_list|(
name|XmlSchemaConstants
operator|.
name|XSD_NAMESPACE_URI
argument_list|,
literal|"element"
argument_list|)
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|ref
init|=
name|xsElement
operator|.
name|getAttribute
argument_list|(
literal|"ref"
argument_list|)
decl_stmt|;
name|String
name|expectedRef
init|=
literal|"tns:thebook"
decl_stmt|;
name|String
name|expectedRef2
init|=
literal|"os:thebook"
decl_stmt|;
if|if
condition|(
name|ref
operator|.
name|equals
argument_list|(
name|expectedRef
argument_list|)
operator|||
name|ref
operator|.
name|equals
argument_list|(
name|expectedRef2
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|void
name|checkBookStoreInfo
parameter_list|(
name|Element
name|resource
parameter_list|,
name|String
name|bookEl
parameter_list|,
name|String
name|book2El
parameter_list|,
name|String
name|chapterEl
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"/bookstore/{id}"
argument_list|,
name|resource
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|checkDocs
argument_list|(
name|resource
argument_list|,
literal|"book store resource"
argument_list|,
literal|"super resource"
argument_list|,
literal|"en-us"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|getElements
argument_list|(
name|resource
argument_list|,
literal|"resource"
argument_list|,
literal|8
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/book2"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/books/{bookid}"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/chapter"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/chapter2"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/books/{bookid}"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/booksubresource"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/form"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/itself"
argument_list|,
name|resourceEls
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify root resource starting with "/"
comment|// must have a single template parameter
name|verifyParameters
argument_list|(
name|resource
argument_list|,
literal|1
argument_list|,
operator|new
name|Param
argument_list|(
literal|"id"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:long"
argument_list|)
argument_list|)
expr_stmt|;
comment|// must have 4 methods, 2 GETs, POST and PUT
name|List
argument_list|<
name|Element
argument_list|>
name|methodEls
init|=
name|getElements
argument_list|(
name|resource
argument_list|,
literal|"method"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
comment|// verify 1st GET
name|assertEquals
argument_list|(
literal|"GET"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"param"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// check request
name|List
argument_list|<
name|Element
argument_list|>
name|requestEls
init|=
name|getElements
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// 4 parameters are expected
name|verifyParameters
argument_list|(
name|requestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|5
argument_list|,
operator|new
name|Param
argument_list|(
literal|"a"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"c.a"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"c.b"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"c.d.a"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"e"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
literal|"A"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|requestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"representation"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//check response
name|verifyRepresentation
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"response"
argument_list|,
literal|"text/plain"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// verify 2nd GET
name|assertEquals
argument_list|(
literal|"GET"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify POST
name|assertEquals
argument_list|(
literal|"POST"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|Element
name|formRep
init|=
name|verifyRepresentation
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|"multipart/form-data"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|checkDocs
argument_list|(
name|formRep
argument_list|,
literal|""
argument_list|,
literal|"Attachments"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// verify PUT
name|assertEquals
argument_list|(
literal|"PUT"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|verifyRepresentation
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|"text/plain"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyResponseWithStatus
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"204"
argument_list|)
expr_stmt|;
comment|// verify resource starting with /book2
name|verifyGetResourceMethod
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|book2El
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//verify resource starting with /books/{bookid}
name|checkDocs
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Resource books/{bookid}"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyParameters
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Param
argument_list|(
literal|"id"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:int"
argument_list|,
literal|"book id"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"bookid"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"mid"
argument_list|,
literal|"matrix"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|)
expr_stmt|;
comment|// and 2 methods
name|methodEls
operator|=
name|getElements
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"method"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// POST
name|assertEquals
argument_list|(
literal|"POST"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|checkDocs
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Update the books collection"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|requestEls
operator|=
name|getElements
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|checkDocs
argument_list|(
name|requestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Request"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyParameters
argument_list|(
name|requestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|4
argument_list|,
operator|new
name|Param
argument_list|(
literal|"hid"
argument_list|,
literal|"header"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"provider.bar"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"bookstate"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|,
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"NEW"
argument_list|,
literal|"USED"
argument_list|,
literal|"OLD"
argument_list|)
argument_list|)
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"a"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|verifyXmlJsonRepresentations
argument_list|(
name|requestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|book2El
argument_list|,
literal|"InputBook"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|responseEls
init|=
name|getElements
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"response"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkDocs
argument_list|(
name|responseEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Response"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyXmlJsonRepresentations
argument_list|(
name|responseEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|bookEl
argument_list|,
literal|"Requested Book"
argument_list|)
expr_stmt|;
comment|// PUT
name|assertEquals
argument_list|(
literal|"PUT"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|checkDocs
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Update the book"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|requestEls
operator|=
name|getElements
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyXmlJsonRepresentations
argument_list|(
name|requestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|bookEl
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|verifyResponseWithStatus
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"204"
argument_list|)
expr_stmt|;
comment|// verify resource starting with /chapter
name|verifyGetResourceMethod
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|chapterEl
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// verify resource starting with /chapter2
name|verifyGetResourceMethod
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|chapterEl
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// verify resource starting from /booksubresource
comment|// should have 2 parameters
name|verifyParameters
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Param
argument_list|(
literal|"id"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"mid"
argument_list|,
literal|"matrix"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|)
expr_stmt|;
name|checkDocs
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Book subresource"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// should have 4 child resources
name|List
argument_list|<
name|Element
argument_list|>
name|subResourceEls
init|=
name|getElements
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|"resource"
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/book"
argument_list|,
name|subResourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/form1"
argument_list|,
name|subResourceEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/form2"
argument_list|,
name|subResourceEls
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/form3/{id}"
argument_list|,
name|subResourceEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/form4/{id}"
argument_list|,
name|subResourceEls
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/chapter/{cid}"
argument_list|,
name|subResourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|checkDocs
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"Chapter subresource"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// verify book-subresource /book resource
comment|// GET
name|verifyGetResourceMethod
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|bookEl
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|verifyFormSubResources
argument_list|(
name|subResourceEls
argument_list|)
expr_stmt|;
comment|// verify subresource /chapter/{id}
name|List
argument_list|<
name|Element
argument_list|>
name|chapterMethodEls
init|=
name|getElements
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|"resource"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/id"
argument_list|,
name|chapterMethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|verifyParameters
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Param
argument_list|(
literal|"cid"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:int"
argument_list|)
argument_list|)
expr_stmt|;
comment|// GET
name|verifyGetResourceMethod
argument_list|(
name|chapterMethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|chapterEl
argument_list|,
literal|"Get the chapter"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyFormSubResources
parameter_list|(
name|List
argument_list|<
name|Element
argument_list|>
name|subResourceEls
parameter_list|)
block|{
comment|// verify book-subresource /form1 resource
name|List
argument_list|<
name|Element
argument_list|>
name|form1MethodEls
init|=
name|getElements
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"method"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"POST"
argument_list|,
name|form1MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|verifyRepresentation
argument_list|(
name|form1MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"request"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyResponseWithStatus
argument_list|(
name|form1MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"204"
argument_list|)
expr_stmt|;
comment|// verify book-subresource /form2 resource
name|List
argument_list|<
name|Element
argument_list|>
name|form2MethodEls
init|=
name|getElements
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"method"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"POST"
argument_list|,
name|form2MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|verifyRepresentation
argument_list|(
name|form2MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"response"
argument_list|,
name|MediaType
operator|.
name|TEXT_PLAIN
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyRepresentation
argument_list|(
name|form2MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"request"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|form2RequestEls
init|=
name|getElements
argument_list|(
name|form2MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|form2RequestRepEls
init|=
name|getElements
argument_list|(
name|form2RequestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"representation"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|verifyParameters
argument_list|(
name|form2RequestRepEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Param
argument_list|(
literal|"field1"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"field2"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify book-subresource /form2 resource
name|verifyParameters
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Param
argument_list|(
literal|"id"
argument_list|,
literal|"template"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|form3MethodEls
init|=
name|getElements
argument_list|(
name|subResourceEls
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"method"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|form3RequestEls
init|=
name|getElements
argument_list|(
name|form3MethodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"request"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|verifyParameters
argument_list|(
name|form3RequestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Param
argument_list|(
literal|"headerId"
argument_list|,
literal|"header"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|form3RequestRepEls
init|=
name|getElements
argument_list|(
name|form3RequestEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"representation"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|verifyParameters
argument_list|(
name|form3RequestRepEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Param
argument_list|(
literal|"field1"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|,
operator|new
name|Param
argument_list|(
literal|"field2"
argument_list|,
literal|"query"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|Element
argument_list|>
name|getElements
parameter_list|(
name|Element
name|resource
parameter_list|,
name|String
name|name
parameter_list|,
name|int
name|expectedSize
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|elements
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|resource
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedSize
argument_list|,
name|elements
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|elements
return|;
block|}
specifier|private
name|void
name|verifyParameters
parameter_list|(
name|Element
name|el
parameter_list|,
name|int
name|number
parameter_list|,
name|Param
modifier|...
name|params
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|paramsEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|el
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"param"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|number
argument_list|,
name|paramsEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|number
argument_list|,
name|params
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|number
condition|;
name|i
operator|++
control|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|params
operator|.
name|length
condition|;
name|y
operator|++
control|)
block|{
if|if
condition|(
name|params
index|[
name|y
index|]
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|paramsEls
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
condition|)
block|{
name|checkParameter
argument_list|(
name|paramsEls
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|params
index|[
name|y
index|]
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|found
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkDocs
parameter_list|(
name|Element
name|el
parameter_list|,
name|String
name|title
parameter_list|,
name|String
name|value
parameter_list|,
name|String
name|language
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|docsEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|el
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"doc"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|title
argument_list|,
name|docsEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|value
argument_list|,
name|docsEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|language
argument_list|,
name|docsEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttributeNS
argument_list|(
literal|"http://www.w3.org/XML/1998/namespace"
argument_list|,
literal|"lang"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyGetResourceMethod
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docs
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|methodEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|element
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"method"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|methodEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|docs
operator|!=
literal|null
condition|)
block|{
name|checkDocs
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
name|docs
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"GET"
argument_list|,
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"request"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|responseEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|methodEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|responseEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyXmlJsonRepresentations
argument_list|(
name|responseEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|type
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyResponseWithStatus
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|status
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|responseEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|element
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|responseEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|status
argument_list|,
name|responseEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"status"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|responseEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"representation"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Element
name|verifyRepresentation
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|mediaType
parameter_list|,
name|String
name|elementValue
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|elements
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|element
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|elements
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|representationEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|elements
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"representation"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|representationEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyMediTypeAndElementValue
argument_list|(
name|representationEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|mediaType
argument_list|,
name|elementValue
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"text/plain"
operator|.
name|equals
argument_list|(
name|mediaType
argument_list|)
condition|)
block|{
name|String
name|pName
init|=
literal|"request"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|?
literal|"request"
else|:
literal|"result"
decl_stmt|;
name|verifyParameters
argument_list|(
name|representationEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Param
argument_list|(
name|pName
argument_list|,
literal|"plain"
argument_list|,
literal|"xs:string"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|representationEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
name|void
name|verifyXmlJsonRepresentations
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|docs
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|repEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|element
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"representation"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|repEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyMediTypeAndElementValue
argument_list|(
name|repEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"application/xml"
argument_list|,
name|type
argument_list|,
name|docs
argument_list|)
expr_stmt|;
name|verifyMediTypeAndElementValue
argument_list|(
name|repEls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"application/json"
argument_list|,
literal|""
argument_list|,
name|docs
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyMediTypeAndElementValue
parameter_list|(
name|Element
name|el
parameter_list|,
name|String
name|mediaType
parameter_list|,
name|String
name|elementValue
parameter_list|,
name|String
name|docs
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|mediaType
argument_list|,
name|el
operator|.
name|getAttribute
argument_list|(
literal|"mediaType"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|elementValue
argument_list|,
name|el
operator|.
name|getAttribute
argument_list|(
literal|"element"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|docs
operator|!=
literal|null
condition|)
block|{
name|checkDocs
argument_list|(
name|el
argument_list|,
literal|""
argument_list|,
name|docs
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkParameter
parameter_list|(
name|Element
name|paramEl
parameter_list|,
name|Param
name|p
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|p
operator|.
name|getName
argument_list|()
argument_list|,
name|paramEl
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
operator|.
name|getType
argument_list|()
argument_list|,
name|paramEl
operator|.
name|getAttribute
argument_list|(
literal|"style"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
operator|.
name|getSchemaType
argument_list|()
argument_list|,
name|paramEl
operator|.
name|getAttribute
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|p
operator|.
name|isRepeating
argument_list|()
argument_list|,
name|Boolean
operator|.
name|valueOf
argument_list|(
name|paramEl
operator|.
name|getAttribute
argument_list|(
literal|"repeating"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|options
init|=
name|p
operator|.
name|getOptions
argument_list|()
decl_stmt|;
if|if
condition|(
name|options
operator|!=
literal|null
condition|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|actualOptions
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|els
init|=
name|DOMUtils
operator|.
name|getChildrenWithNamespace
argument_list|(
name|paramEl
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|els
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|options
operator|.
name|size
argument_list|()
argument_list|,
name|els
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|op
range|:
name|els
control|)
block|{
name|actualOptions
operator|.
name|add
argument_list|(
name|op
operator|.
name|getAttribute
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|options
argument_list|,
name|actualOptions
argument_list|)
expr_stmt|;
block|}
name|String
name|docs
init|=
name|p
operator|.
name|getDocs
argument_list|()
decl_stmt|;
if|if
condition|(
name|docs
operator|!=
literal|null
condition|)
block|{
name|checkDocs
argument_list|(
name|paramEl
argument_list|,
literal|""
argument_list|,
name|docs
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|Element
argument_list|>
name|getWadlResourcesInfo
parameter_list|(
name|Document
name|doc
parameter_list|,
name|String
name|baseURI
parameter_list|,
name|int
name|size
parameter_list|)
throws|throws
name|Exception
block|{
name|Element
name|root
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
name|root
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application"
argument_list|,
name|root
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|resourcesEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|root
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"resources"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resourcesEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|resourcesEl
init|=
name|resourcesEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|baseURI
argument_list|,
name|resourcesEl
operator|.
name|getAttribute
argument_list|(
literal|"base"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|resourcesEl
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"resource"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|resourceEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resourceEls
return|;
block|}
specifier|private
name|Message
name|mockMessage
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|String
name|pathInfo
parameter_list|,
name|String
name|query
parameter_list|,
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|cris
parameter_list|)
block|{
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|Exchange
name|e
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|e
operator|.
name|put
argument_list|(
name|Service
operator|.
name|class
argument_list|,
operator|new
name|JAXRSServiceImpl
argument_list|(
name|cris
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|.
name|setExchange
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|control
operator|.
name|reset
argument_list|()
expr_stmt|;
name|ServletDestination
name|d
init|=
name|control
operator|.
name|createMock
argument_list|(
name|ServletDestination
operator|.
name|class
argument_list|)
decl_stmt|;
name|EndpointInfo
name|epr
init|=
operator|new
name|EndpointInfo
argument_list|()
decl_stmt|;
name|epr
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
name|d
operator|.
name|getEndpointInfo
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
name|epr
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|e
operator|.
name|setDestination
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
name|pathInfo
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|QUERY_STRING
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|HTTP_REQUEST_METHOD
argument_list|,
literal|"GET"
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
return|return
name|m
return|;
block|}
specifier|private
specifier|static
class|class
name|Param
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|type
decl_stmt|;
specifier|private
name|String
name|schemaType
decl_stmt|;
specifier|private
name|String
name|docs
decl_stmt|;
specifier|private
name|boolean
name|repeating
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|options
decl_stmt|;
specifier|public
name|Param
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|schemaType
parameter_list|)
block|{
name|this
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|schemaType
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Param
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|schemaType
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|opts
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|schemaType
operator|=
name|schemaType
expr_stmt|;
name|this
operator|.
name|options
operator|=
name|opts
expr_stmt|;
block|}
specifier|public
name|Param
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|schemaType
parameter_list|,
name|boolean
name|repeating
parameter_list|)
block|{
name|this
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|schemaType
argument_list|,
name|repeating
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Param
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|schemaType
parameter_list|,
name|String
name|docs
parameter_list|)
block|{
name|this
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|schemaType
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Param
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|schemaType
parameter_list|,
name|boolean
name|repeating
parameter_list|,
name|String
name|docs
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|schemaType
operator|=
name|schemaType
expr_stmt|;
name|this
operator|.
name|docs
operator|=
name|docs
expr_stmt|;
name|this
operator|.
name|repeating
operator|=
name|repeating
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getOptions
parameter_list|()
block|{
return|return
name|options
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|public
name|String
name|getSchemaType
parameter_list|()
block|{
return|return
name|schemaType
return|;
block|}
specifier|public
name|String
name|getDocs
parameter_list|()
block|{
return|return
name|docs
return|;
block|}
specifier|public
name|boolean
name|isRepeating
parameter_list|()
block|{
return|return
name|repeating
return|;
block|}
block|}
annotation|@
name|XmlRootElement
argument_list|(
name|namespace
operator|=
literal|"http://example.com/test"
argument_list|)
specifier|public
specifier|static
class|class
name|TestCompositeObject
block|{
specifier|private
name|int
name|id
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|public
name|int
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|TestResource
block|{
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"setTest3"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|TestCompositeObject
name|setTest3
parameter_list|(
name|TestCompositeObject
name|transfer
parameter_list|)
block|{
return|return
name|transfer
return|;
block|}
block|}
block|}
end_class

end_unit

