begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|proxy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AbstractAegisTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|databinding
operator|.
name|AegisDatabinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|BeanInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ProxyTest
extends|extends
name|AbstractAegisTest
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|Server
name|s
init|=
name|createService
argument_list|(
name|HelloProxyService
operator|.
name|class
argument_list|,
operator|new
name|HelloProxyServiceImpl
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|s
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|setInvoker
argument_list|(
operator|new
name|BeanInvoker
argument_list|(
operator|new
name|HelloProxyServiceImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientProxyFactoryBean
name|proxyFac
init|=
operator|new
name|ClientProxyFactoryBean
argument_list|()
decl_stmt|;
name|proxyFac
operator|.
name|setAddress
argument_list|(
literal|"local://HelloProxyService"
argument_list|)
expr_stmt|;
name|proxyFac
operator|.
name|setServiceClass
argument_list|(
name|HelloProxyService
operator|.
name|class
argument_list|)
expr_stmt|;
name|proxyFac
operator|.
name|setBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|AegisContext
name|aegisContext
init|=
operator|new
name|AegisContext
argument_list|()
decl_stmt|;
name|aegisContext
operator|.
name|getBeanImplementationMap
argument_list|()
operator|.
name|put
argument_list|(
name|Hello
operator|.
name|class
argument_list|,
name|MyHello
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|AegisDatabinding
name|binding
init|=
operator|new
name|AegisDatabinding
argument_list|()
decl_stmt|;
name|binding
operator|.
name|setAegisContext
argument_list|(
name|aegisContext
argument_list|)
expr_stmt|;
name|setupAegis
argument_list|(
name|proxyFac
operator|.
name|getClientFactoryBean
argument_list|()
argument_list|,
name|binding
argument_list|)
expr_stmt|;
name|HelloProxyService
name|client
init|=
operator|(
name|HelloProxyService
operator|)
name|proxyFac
operator|.
name|create
argument_list|()
decl_stmt|;
name|Hello
name|h
init|=
name|client
operator|.
name|sayHiWithProxy
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|h
operator|instanceof
name|MyHello
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|HelloProxyServiceImpl
implements|implements
name|HelloProxyService
block|{
specifier|public
name|Hello
name|sayHiWithProxy
parameter_list|()
block|{
return|return
operator|new
name|MyHello
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

