begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|java5
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AbstractAegisTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|AegisType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|DefaultTypeMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|TypeCreationOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|XMLTypeCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|basic
operator|.
name|BeanType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|basic
operator|.
name|BeanTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|ConfigurationTest
extends|extends
name|AbstractAegisTest
block|{
name|DefaultTypeMapping
name|tm
decl_stmt|;
name|TypeCreationOptions
name|config
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|AegisContext
name|context
init|=
operator|new
name|AegisContext
argument_list|()
decl_stmt|;
name|config
operator|=
operator|new
name|TypeCreationOptions
argument_list|()
expr_stmt|;
name|context
operator|.
name|setTypeCreationOptions
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|XMLTypeCreator
name|creator
init|=
operator|new
name|XMLTypeCreator
argument_list|()
decl_stmt|;
name|creator
operator|.
name|setConfiguration
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|Java5TypeCreator
name|next
init|=
operator|new
name|Java5TypeCreator
argument_list|()
decl_stmt|;
name|next
operator|.
name|setConfiguration
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setNextCreator
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|tm
operator|=
operator|(
name|DefaultTypeMapping
operator|)
name|context
operator|.
name|getTypeMapping
argument_list|()
expr_stmt|;
name|tm
operator|.
name|setTypeCreator
argument_list|(
name|creator
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNillableDefaultTrue
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setDefaultNillable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|AegisType
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|AnnotatedBean1
operator|.
name|class
argument_list|)
decl_stmt|;
name|BeanTypeInfo
name|info
init|=
operator|(
operator|(
name|BeanType
operator|)
name|type
operator|)
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|isNillable
argument_list|(
operator|new
name|QName
argument_list|(
name|info
operator|.
name|getDefaultNamespace
argument_list|()
argument_list|,
literal|"bogusProperty"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNillableDefaultFalse
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setDefaultNillable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|AegisType
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|AnnotatedBean1
operator|.
name|class
argument_list|)
decl_stmt|;
name|BeanTypeInfo
name|info
init|=
operator|(
operator|(
name|BeanType
operator|)
name|type
operator|)
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|info
operator|.
name|isNillable
argument_list|(
operator|new
name|QName
argument_list|(
name|info
operator|.
name|getDefaultNamespace
argument_list|()
argument_list|,
literal|"bogusProperty"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMinOccursDefault0
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setDefaultMinOccurs
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|AegisType
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|AnnotatedBean1
operator|.
name|class
argument_list|)
decl_stmt|;
name|BeanTypeInfo
name|info
init|=
operator|(
operator|(
name|BeanType
operator|)
name|type
operator|)
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|info
operator|.
name|getMinOccurs
argument_list|(
operator|new
name|QName
argument_list|(
name|info
operator|.
name|getDefaultNamespace
argument_list|()
argument_list|,
literal|"bogusProperty"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMinOccursDefault1
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setDefaultMinOccurs
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|AegisType
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|AnnotatedBean1
operator|.
name|class
argument_list|)
decl_stmt|;
name|BeanTypeInfo
name|info
init|=
operator|(
operator|(
name|BeanType
operator|)
name|type
operator|)
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|info
operator|.
name|getMinOccurs
argument_list|(
operator|new
name|QName
argument_list|(
name|info
operator|.
name|getDefaultNamespace
argument_list|()
argument_list|,
literal|"bogusProperty"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExtensibleDefaultTrue
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setDefaultExtensibleElements
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setDefaultExtensibleAttributes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|AegisType
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|AnnotatedBean1
operator|.
name|class
argument_list|)
decl_stmt|;
name|BeanTypeInfo
name|info
init|=
operator|(
operator|(
name|BeanType
operator|)
name|type
operator|)
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|isExtensibleElements
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|isExtensibleAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExtensibleDefaultFalse
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setDefaultExtensibleElements
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|setDefaultExtensibleAttributes
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|AegisType
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|AnnotatedBean1
operator|.
name|class
argument_list|)
decl_stmt|;
name|BeanTypeInfo
name|info
init|=
operator|(
operator|(
name|BeanType
operator|)
name|type
operator|)
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|info
operator|.
name|isExtensibleElements
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|info
operator|.
name|isExtensibleAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

