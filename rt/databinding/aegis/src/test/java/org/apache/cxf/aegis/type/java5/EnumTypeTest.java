begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|java5
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AbstractAegisTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|DefaultTypeMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|TypeCreationOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|java5
operator|.
name|CurrencyService
operator|.
name|Currency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|xml
operator|.
name|jdom
operator|.
name|JDOMReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|xml
operator|.
name|jdom
operator|.
name|JDOMWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|SOAPConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|EnumTypeTest
extends|extends
name|AbstractAegisTest
block|{
specifier|private
name|DefaultTypeMapping
name|tm
decl_stmt|;
specifier|private
enum|enum
name|smallEnum
block|{
name|VALUE1
block|,
name|VALUE2
block|;
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|name
argument_list|()
operator|+
literal|"*"
return|;
block|}
block|}
empty_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|tm
operator|=
operator|new
name|DefaultTypeMapping
argument_list|()
expr_stmt|;
name|Java5TypeCreator
name|creator
init|=
operator|new
name|Java5TypeCreator
argument_list|()
decl_stmt|;
name|creator
operator|.
name|setConfiguration
argument_list|(
operator|new
name|TypeCreationOptions
argument_list|()
argument_list|)
expr_stmt|;
name|tm
operator|.
name|setTypeCreator
argument_list|(
name|creator
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testType
parameter_list|()
throws|throws
name|Exception
block|{
name|EnumType
name|type
init|=
operator|new
name|EnumType
argument_list|()
decl_stmt|;
name|type
operator|.
name|setTypeClass
argument_list|(
name|smallEnum
operator|.
name|class
argument_list|)
expr_stmt|;
name|type
operator|.
name|setSchemaType
argument_list|(
operator|new
name|QName
argument_list|(
literal|"urn:test"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|tm
operator|.
name|register
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|Element
name|root
init|=
operator|new
name|Element
argument_list|(
literal|"root"
argument_list|)
decl_stmt|;
name|JDOMWriter
name|writer
init|=
operator|new
name|JDOMWriter
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|type
operator|.
name|writeObject
argument_list|(
name|smallEnum
operator|.
name|VALUE1
argument_list|,
name|writer
argument_list|,
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VALUE1"
argument_list|,
name|root
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|JDOMReader
name|reader
init|=
operator|new
name|JDOMReader
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|Object
name|value
init|=
name|type
operator|.
name|readObject
argument_list|(
name|reader
argument_list|,
name|getContext
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|smallEnum
operator|.
name|VALUE1
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAutoCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|Type
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|smallEnum
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|type
operator|instanceof
name|EnumType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTypeAttributeOnEnum
parameter_list|()
throws|throws
name|Exception
block|{
name|Type
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|TestEnum
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"urn:xfire:foo"
argument_list|,
name|type
operator|.
name|getSchemaType
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|type
operator|instanceof
name|EnumType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testXFireTypeAttributeOnEnum
parameter_list|()
throws|throws
name|Exception
block|{
name|Type
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|XFireTestEnum
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"urn:xfire:foo"
argument_list|,
name|type
operator|.
name|getSchemaType
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|type
operator|instanceof
name|EnumType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJaxbTypeAttributeOnEnum
parameter_list|()
throws|throws
name|Exception
block|{
name|Type
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|JaxbTestEnum
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"urn:xfire:foo"
argument_list|,
name|type
operator|.
name|getSchemaType
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|type
operator|instanceof
name|EnumType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWSDL
parameter_list|()
throws|throws
name|Exception
block|{
name|EnumType
name|type
init|=
operator|new
name|EnumType
argument_list|()
decl_stmt|;
name|type
operator|.
name|setTypeClass
argument_list|(
name|smallEnum
operator|.
name|class
argument_list|)
expr_stmt|;
name|type
operator|.
name|setSchemaType
argument_list|(
operator|new
name|QName
argument_list|(
literal|"urn:test"
argument_list|,
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|XmlSchema
name|schema
init|=
name|newXmlSchema
argument_list|(
literal|"urn:test"
argument_list|)
decl_stmt|;
name|type
operator|.
name|writeSchema
argument_list|(
name|schema
argument_list|)
expr_stmt|;
name|XmlSchemaSerializer
name|ser
init|=
operator|new
name|XmlSchemaSerializer
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|ser
operator|.
name|serializeSchema
argument_list|(
name|schema
argument_list|,
literal|false
argument_list|)
index|[
literal|0
index|]
decl_stmt|;
name|addNamespace
argument_list|(
literal|"xsd"
argument_list|,
name|SOAPConstants
operator|.
name|XSD
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:simpleType[@name='test']/xsd:restriction[@base='xsd:string']"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:restriction[@base='xsd:string']/xsd:enumeration[@value='VALUE1']"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:restriction[@base='xsd:string']/xsd:enumeration[@value='VALUE2']"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCurrencyService
parameter_list|()
throws|throws
name|Exception
block|{
name|createService
argument_list|(
name|CurrencyService
operator|.
name|class
argument_list|)
expr_stmt|;
name|Document
name|wsdl
init|=
name|getWSDLDocument
argument_list|(
literal|"CurrencyService"
argument_list|)
decl_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:element[@name='inputCurrency'][@minOccurs='0']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:simpleType[@name='Currency']/xsd:restriction[@base='xsd:string']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:restriction[@base='xsd:string']/xsd:enumeration[@value='USD']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:restriction[@base='xsd:string']/xsd:enumeration[@value='EURO']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//xsd:restriction[@base='xsd:string']/xsd:enumeration[@value='POUNDS']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNillable
parameter_list|()
throws|throws
name|Exception
block|{
name|Type
name|type
init|=
name|tm
operator|.
name|getTypeCreator
argument_list|()
operator|.
name|createType
argument_list|(
name|EnumBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|tm
operator|.
name|register
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|Element
name|root
init|=
operator|new
name|Element
argument_list|(
literal|"root"
argument_list|)
decl_stmt|;
name|JDOMWriter
name|writer
init|=
operator|new
name|JDOMWriter
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|type
operator|.
name|writeObject
argument_list|(
operator|new
name|EnumBean
argument_list|()
argument_list|,
name|writer
argument_list|,
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|JDOMReader
name|reader
init|=
operator|new
name|JDOMReader
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|Object
name|value
init|=
name|type
operator|.
name|readObject
argument_list|(
name|reader
argument_list|,
name|getContext
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|value
operator|instanceof
name|EnumBean
argument_list|)
expr_stmt|;
name|EnumBean
name|bean
init|=
operator|(
name|EnumBean
operator|)
name|value
decl_stmt|;
name|assertNull
argument_list|(
name|bean
operator|.
name|getCurrency
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|EnumBean
block|{
specifier|private
name|Currency
name|currency
decl_stmt|;
specifier|public
name|Currency
name|getCurrency
parameter_list|()
block|{
return|return
name|currency
return|;
block|}
specifier|public
name|void
name|setCurrency
parameter_list|(
name|Currency
name|currency
parameter_list|)
block|{
name|this
operator|.
name|currency
operator|=
name|currency
expr_stmt|;
block|}
specifier|public
name|Currency
index|[]
name|getSomeCurrencies
parameter_list|()
block|{
return|return
operator|new
name|Currency
index|[]
block|{
name|Currency
operator|.
name|EURO
block|,
literal|null
block|}
return|;
block|}
specifier|public
name|void
name|setSomeCurrencies
parameter_list|(
name|Currency
index|[]
name|currencies
parameter_list|)
block|{          }
block|}
block|}
end_class

end_unit

