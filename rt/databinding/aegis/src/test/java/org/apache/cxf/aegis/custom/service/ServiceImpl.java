begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|custom
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|ServiceImpl
implements|implements
name|Service
block|{
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|NoDefaultConstructorBean
argument_list|>
name|getByIds
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|beanIds
parameter_list|)
block|{
if|if
condition|(
name|beanIds
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"beanIds is null"
argument_list|)
throw|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|NoDefaultConstructorBean
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|NoDefaultConstructorBean
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"1"
argument_list|,
operator|new
name|NoDefaultConstructorBeanImpl
argument_list|(
literal|"1"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"2"
argument_list|,
operator|new
name|NoDefaultConstructorBeanImpl
argument_list|(
literal|"2"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
name|getByName
parameter_list|(
name|NoDefaultConstructorBeanKey
name|key
parameter_list|)
block|{
if|if
condition|(
name|key
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"key is null"
argument_list|)
throw|;
block|}
name|Collection
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
name|collection
init|=
operator|new
name|ArrayList
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
argument_list|()
decl_stmt|;
name|collection
operator|.
name|add
argument_list|(
operator|new
name|NoDefaultConstructorBeanImpl
argument_list|(
literal|"1"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|collection
return|;
block|}
specifier|public
name|Map
argument_list|<
name|NoDefaultConstructorBeanKey
argument_list|,
name|Collection
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
argument_list|>
name|getByNames
parameter_list|(
name|Collection
argument_list|<
name|NoDefaultConstructorBeanKey
argument_list|>
name|keys
parameter_list|)
block|{
if|if
condition|(
name|keys
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"keys is null"
argument_list|)
throw|;
block|}
name|Map
argument_list|<
name|NoDefaultConstructorBeanKey
argument_list|,
name|Collection
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|NoDefaultConstructorBeanKey
argument_list|,
name|Collection
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
name|collection
init|=
operator|new
name|ArrayList
argument_list|<
name|NoDefaultConstructorBean
argument_list|>
argument_list|()
decl_stmt|;
name|collection
operator|.
name|add
argument_list|(
operator|new
name|NoDefaultConstructorBeanImpl
argument_list|(
literal|"1"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
operator|new
name|NoDefaultConstructorBeanKeyImpl
argument_list|(
literal|"name"
argument_list|)
argument_list|,
name|collection
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
specifier|public
name|String
name|getException
parameter_list|(
name|NoDefaultConstructorBeanKey
name|key
parameter_list|)
throws|throws
name|ServiceException
block|{
if|if
condition|(
name|key
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"key is null"
argument_list|)
throw|;
block|}
throw|throw
operator|new
name|ServiceException
argument_list|(
literal|"Key: "
operator|+
name|key
operator|.
name|getKey
argument_list|()
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

