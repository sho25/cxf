begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|inheritance
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AbstractAegisTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|databinding
operator|.
name|AegisDatabinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|inheritance
operator|.
name|ws1
operator|.
name|WS1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|inheritance
operator|.
name|ws1
operator|.
name|WS1ExtendedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|inheritance
operator|.
name|ws1
operator|.
name|impl
operator|.
name|WS1Impl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|services
operator|.
name|SimpleBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|LoggingFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|BeanInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ExceptionInheritanceTest
extends|extends
name|AbstractAegisTest
block|{
specifier|private
name|WS1
name|client
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|AegisContext
name|globalContext
init|=
operator|new
name|AegisContext
argument_list|()
decl_stmt|;
name|globalContext
operator|.
name|setWriteXsiTypes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|l
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|l
operator|.
name|add
argument_list|(
name|SimpleBean
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|.
name|add
argument_list|(
name|WS1ExtendedException
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|globalContext
operator|.
name|setRootClassNames
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|AegisDatabinding
name|binding
init|=
operator|new
name|AegisDatabinding
argument_list|()
decl_stmt|;
name|binding
operator|.
name|setAegisContext
argument_list|(
name|globalContext
argument_list|)
expr_stmt|;
name|ClientProxyFactoryBean
name|pf
init|=
operator|new
name|ClientProxyFactoryBean
argument_list|()
decl_stmt|;
name|setupAegis
argument_list|(
name|pf
operator|.
name|getClientFactoryBean
argument_list|()
argument_list|,
name|binding
argument_list|)
expr_stmt|;
name|pf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setAddress
argument_list|(
literal|"local://WS1"
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|client
operator|=
name|pf
operator|.
name|create
argument_list|(
name|WS1
operator|.
name|class
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|createService
argument_list|(
name|WS1
operator|.
name|class
argument_list|,
operator|new
name|WS1Impl
argument_list|()
argument_list|,
literal|"WS1"
argument_list|,
name|binding
argument_list|)
decl_stmt|;
operator|new
name|LoggingFeature
argument_list|()
operator|.
name|initialize
argument_list|(
name|server
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|setInvoker
argument_list|(
operator|new
name|BeanInvoker
argument_list|(
operator|new
name|WS1Impl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ServerFactoryBean
name|createServiceFactory
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|serviceClass
parameter_list|,
name|Object
name|serviceBean
parameter_list|,
name|String
name|address
parameter_list|,
name|QName
name|name
parameter_list|,
name|AegisDatabinding
name|b
parameter_list|)
block|{
name|ServerFactoryBean
name|sf
init|=
name|super
operator|.
name|createServiceFactory
argument_list|(
name|serviceClass
argument_list|,
name|serviceBean
argument_list|,
name|address
argument_list|,
name|name
argument_list|,
name|b
argument_list|)
decl_stmt|;
name|sf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
return|return
name|sf
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClient
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|client
operator|.
name|throwException
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"No exception was thrown!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WS1ExtendedException
name|ex
parameter_list|)
block|{
name|Object
name|sb
init|=
name|ex
operator|.
name|getSimpleBean
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|sb
operator|instanceof
name|SimpleBean
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

