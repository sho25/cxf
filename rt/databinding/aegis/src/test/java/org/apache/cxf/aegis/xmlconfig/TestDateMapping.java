begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|xmlconfig
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLOutputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|AegisType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|TestUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestDateMapping
block|{
specifier|private
name|AegisContext
name|context
decl_stmt|;
specifier|private
name|TestUtilities
name|testUtilities
decl_stmt|;
specifier|private
name|XMLOutputFactory
name|xmlOutputFactory
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
name|testUtilities
operator|=
operator|new
name|TestUtilities
argument_list|(
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|testUtilities
operator|.
name|addNamespace
argument_list|(
literal|"test"
argument_list|,
literal|"urn:test"
argument_list|)
expr_stmt|;
name|xmlOutputFactory
operator|=
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteSqlDateAsDate
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|Set
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
name|rootClasses
init|=
operator|new
name|HashSet
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|rootClasses
operator|.
name|add
argument_list|(
name|BeanWithDate
operator|.
name|class
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRootClasses
argument_list|(
name|rootClasses
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|BeanWithDate
name|bean
init|=
operator|new
name|BeanWithDate
argument_list|()
decl_stmt|;
name|java
operator|.
name|sql
operator|.
name|Date
name|date
init|=
operator|new
name|java
operator|.
name|sql
operator|.
name|Date
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setFig
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|AegisType
name|sbType
init|=
name|context
operator|.
name|getTypeMapping
argument_list|()
operator|.
name|getType
argument_list|(
name|bean
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|AegisWriter
argument_list|<
name|XMLStreamWriter
argument_list|>
name|writer
init|=
name|context
operator|.
name|createXMLStreamWriter
argument_list|()
decl_stmt|;
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|xmlWriter
init|=
name|xmlOutputFactory
operator|.
name|createXMLStreamWriter
argument_list|(
name|stringWriter
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|bean
argument_list|,
operator|new
name|QName
argument_list|(
literal|"urn:test"
argument_list|,
literal|"beanWithDate"
argument_list|)
argument_list|,
literal|false
argument_list|,
name|xmlWriter
argument_list|,
name|sbType
argument_list|)
expr_stmt|;
name|xmlWriter
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// an absence of exception is success here.
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCustomTypeSchemaType
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|Set
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
name|rootClasses
init|=
operator|new
name|HashSet
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|rootClasses
operator|.
name|add
argument_list|(
name|BeanWithDate
operator|.
name|class
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRootClasses
argument_list|(
name|rootClasses
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|BeanWithDate
name|bean
init|=
operator|new
name|BeanWithDate
argument_list|()
decl_stmt|;
name|java
operator|.
name|sql
operator|.
name|Date
name|date
init|=
operator|new
name|java
operator|.
name|sql
operator|.
name|Date
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setFig
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|AegisType
name|sbType
init|=
name|context
operator|.
name|getTypeMapping
argument_list|()
operator|.
name|getType
argument_list|(
name|bean
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|XmlSchema
name|root
init|=
operator|new
name|XmlSchema
argument_list|()
decl_stmt|;
comment|// dummy to put schema in.
comment|/* will explode if the type object created for the custom mapping isn't fully initialized.       */
name|sbType
operator|.
name|writeSchema
argument_list|(
name|root
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

