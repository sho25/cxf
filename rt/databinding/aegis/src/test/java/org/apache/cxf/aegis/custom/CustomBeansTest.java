begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|custom
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|custom
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|custom
operator|.
name|types
operator|.
name|NoDefaultConstructorBeanKeyTypeRegistrar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|custom
operator|.
name|types
operator|.
name|NoDefaultConstructorBeanTypeRegistrar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|databinding
operator|.
name|AegisDatabinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|DefaultTypeMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|CustomBeansTest
block|{
comment|// CXF-2093 reports an explosion with this case.
annotation|@
name|Test
specifier|public
name|void
name|testClientSetup
parameter_list|()
throws|throws
name|Exception
block|{
name|JaxWsProxyFactoryBean
name|clientFactory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|clientFactory
operator|.
name|setAddress
argument_list|(
literal|"local:not-really"
argument_list|)
expr_stmt|;
name|clientFactory
operator|.
name|setServiceClass
argument_list|(
name|Service
operator|.
name|class
argument_list|)
expr_stmt|;
name|AegisDatabinding
name|dataBinding
init|=
operator|new
name|AegisDatabinding
argument_list|()
decl_stmt|;
name|NoDefaultConstructorBeanTypeRegistrar
name|beanRegistrar
init|=
operator|new
name|NoDefaultConstructorBeanTypeRegistrar
argument_list|()
decl_stmt|;
name|beanRegistrar
operator|.
name|setDataBinding
argument_list|(
name|dataBinding
argument_list|)
expr_stmt|;
name|beanRegistrar
operator|.
name|register
argument_list|()
expr_stmt|;
name|NoDefaultConstructorBeanKeyTypeRegistrar
name|beanKeyRegistrar
init|=
operator|new
name|NoDefaultConstructorBeanKeyTypeRegistrar
argument_list|()
decl_stmt|;
name|beanKeyRegistrar
operator|.
name|setDataBinding
argument_list|(
name|dataBinding
argument_list|)
expr_stmt|;
name|beanKeyRegistrar
operator|.
name|register
argument_list|()
expr_stmt|;
name|clientFactory
operator|.
name|setDataBinding
argument_list|(
name|dataBinding
argument_list|)
expr_stmt|;
name|clientFactory
operator|.
name|create
argument_list|()
expr_stmt|;
name|String
name|uri
init|=
name|dataBinding
operator|.
name|getAegisContext
argument_list|()
operator|.
name|getTypeMapping
argument_list|()
operator|.
name|getMappingIdentifierURI
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|DefaultTypeMapping
operator|.
name|DEFAULT_MAPPING_URI
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

