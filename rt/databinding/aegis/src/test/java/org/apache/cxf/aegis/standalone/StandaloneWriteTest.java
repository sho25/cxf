begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|standalone
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|XMLConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLInputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLOutputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|services
operator|.
name|SimpleBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|AegisType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|basic
operator|.
name|StringType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|TestUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|StandaloneWriteTest
block|{
specifier|private
name|AegisContext
name|context
decl_stmt|;
specifier|private
name|TestUtilities
name|testUtilities
decl_stmt|;
specifier|private
name|XMLOutputFactory
name|xmlOutputFactory
decl_stmt|;
specifier|private
name|XMLInputFactory
name|xmlInputFactory
decl_stmt|;
specifier|private
interface|interface
name|ListStringInterface
block|{
name|List
argument_list|<
name|String
argument_list|>
name|method
parameter_list|()
function_decl|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
name|testUtilities
operator|=
operator|new
name|TestUtilities
argument_list|(
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|testUtilities
operator|.
name|addNamespace
argument_list|(
literal|"feline"
argument_list|,
literal|"urn:meow"
argument_list|)
expr_stmt|;
name|xmlOutputFactory
operator|=
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
name|xmlInputFactory
operator|=
name|XMLInputFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTypeLookup
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|AegisType
name|st
init|=
name|context
operator|.
name|getTypeMapping
argument_list|()
operator|.
name|getType
argument_list|(
operator|new
name|QName
argument_list|(
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
argument_list|,
literal|"string"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|st
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|st
operator|.
name|getClass
argument_list|()
argument_list|,
name|StringType
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicTypeWrite
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|AegisWriter
argument_list|<
name|XMLStreamWriter
argument_list|>
name|writer
init|=
name|context
operator|.
name|createXMLStreamWriter
argument_list|()
decl_stmt|;
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|xmlWriter
init|=
name|xmlOutputFactory
operator|.
name|createXMLStreamWriter
argument_list|(
name|stringWriter
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"ball-of-yarn"
argument_list|,
operator|new
name|QName
argument_list|(
literal|"urn:meow"
argument_list|,
literal|"cat-toy"
argument_list|)
argument_list|,
literal|false
argument_list|,
name|xmlWriter
argument_list|,
operator|new
name|StringType
argument_list|()
argument_list|)
expr_stmt|;
name|xmlWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|xml
init|=
name|stringWriter
operator|.
name|toString
argument_list|()
decl_stmt|;
name|XMLStreamReader
name|reader
init|=
name|xmlInputFactory
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xml
argument_list|)
argument_list|)
decl_stmt|;
name|reader
operator|.
name|nextTag
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"urn:meow"
argument_list|,
name|reader
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cat-toy"
argument_list|,
name|reader
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|next
argument_list|()
expr_stmt|;
name|String
name|text
init|=
name|reader
operator|.
name|getText
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ball-of-yarn"
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|context
operator|.
name|setWriteXsiTypes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|strings
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|strings
operator|.
name|add
argument_list|(
literal|"cat"
argument_list|)
expr_stmt|;
name|strings
operator|.
name|add
argument_list|(
literal|"dog"
argument_list|)
expr_stmt|;
name|strings
operator|.
name|add
argument_list|(
literal|"hailstorm"
argument_list|)
expr_stmt|;
name|AegisWriter
argument_list|<
name|XMLStreamWriter
argument_list|>
name|writer
init|=
name|context
operator|.
name|createXMLStreamWriter
argument_list|()
decl_stmt|;
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|xmlWriter
init|=
name|xmlOutputFactory
operator|.
name|createXMLStreamWriter
argument_list|(
name|stringWriter
argument_list|)
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
name|listStringType
init|=
name|ListStringInterface
operator|.
name|class
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
operator|.
name|getGenericReturnType
argument_list|()
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|strings
argument_list|,
operator|new
name|QName
argument_list|(
literal|"urn:borghes"
argument_list|,
literal|"items"
argument_list|)
argument_list|,
literal|false
argument_list|,
name|xmlWriter
argument_list|,
name|listStringType
argument_list|)
expr_stmt|;
name|xmlWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|xml
init|=
name|stringWriter
operator|.
name|toString
argument_list|()
decl_stmt|;
name|XMLStreamReader
name|reader
init|=
name|xmlInputFactory
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xml
argument_list|)
argument_list|)
decl_stmt|;
name|reader
operator|.
name|nextTag
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"urn:borghes"
argument_list|,
name|reader
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"items"
argument_list|,
name|reader
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|nextTag
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
literal|"urn:org.apache.cxf.aegis.types"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"string"
argument_list|,
name|reader
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|text
init|=
name|reader
operator|.
name|getElementText
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cat"
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|reader
operator|.
name|nextTag
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
literal|"urn:org.apache.cxf.aegis.types"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"string"
argument_list|,
name|reader
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|=
name|reader
operator|.
name|getElementText
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dog"
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|reader
operator|.
name|nextTag
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
literal|"urn:org.apache.cxf.aegis.types"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"string"
argument_list|,
name|reader
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|=
name|reader
operator|.
name|getElementText
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hailstorm"
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBean
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|Set
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
name|rootClasses
init|=
operator|new
name|HashSet
argument_list|<
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|rootClasses
operator|.
name|add
argument_list|(
name|SimpleBean
operator|.
name|class
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRootClasses
argument_list|(
name|rootClasses
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|SimpleBean
name|sb
init|=
operator|new
name|SimpleBean
argument_list|()
decl_stmt|;
name|sb
operator|.
name|setCharacter
argument_list|(
literal|'\u4000'
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setHowdy
argument_list|(
literal|"doody"
argument_list|)
expr_stmt|;
name|AegisType
name|sbType
init|=
name|context
operator|.
name|getTypeMapping
argument_list|()
operator|.
name|getType
argument_list|(
name|sb
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|AegisWriter
argument_list|<
name|XMLStreamWriter
argument_list|>
name|writer
init|=
name|context
operator|.
name|createXMLStreamWriter
argument_list|()
decl_stmt|;
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|xmlWriter
init|=
name|xmlOutputFactory
operator|.
name|createXMLStreamWriter
argument_list|(
name|stringWriter
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|sb
argument_list|,
operator|new
name|QName
argument_list|(
literal|"urn:meow"
argument_list|,
literal|"catnip"
argument_list|)
argument_list|,
literal|false
argument_list|,
name|xmlWriter
argument_list|,
name|sbType
argument_list|)
expr_stmt|;
name|xmlWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|xml
init|=
name|stringWriter
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|xml
operator|.
name|contains
argument_list|(
literal|"doody"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

