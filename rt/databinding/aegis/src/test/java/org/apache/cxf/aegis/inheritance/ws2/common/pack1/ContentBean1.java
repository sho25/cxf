begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|inheritance
operator|.
name|ws2
operator|.
name|common
operator|.
name|pack1
package|;
end_package

begin_class
specifier|public
class|class
name|ContentBean1
block|{
specifier|private
name|String
name|data1
decl_stmt|;
specifier|public
name|ContentBean1
parameter_list|()
block|{     }
specifier|public
name|ContentBean1
parameter_list|(
name|String
name|data1
parameter_list|)
block|{
name|this
operator|.
name|data1
operator|=
name|data1
expr_stmt|;
block|}
specifier|public
name|String
name|getData1
parameter_list|()
block|{
return|return
name|data1
return|;
block|}
specifier|public
name|void
name|setData1
parameter_list|(
name|String
name|data1
parameter_list|)
block|{
name|this
operator|.
name|data1
operator|=
name|data1
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"["
operator|+
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"] data1="
operator|+
name|data1
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
specifier|final
name|ContentBean1
name|that
init|=
operator|(
name|ContentBean1
operator|)
name|o
decl_stmt|;
return|return
operator|!
operator|(
name|data1
operator|!=
literal|null
condition|?
operator|!
name|data1
operator|.
name|equals
argument_list|(
name|that
operator|.
name|data1
argument_list|)
else|:
name|that
operator|.
name|data1
operator|!=
literal|null
operator|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|data1
operator|!=
literal|null
condition|?
name|data1
operator|.
name|hashCode
argument_list|()
else|:
literal|0
return|;
block|}
block|}
end_class

end_unit

