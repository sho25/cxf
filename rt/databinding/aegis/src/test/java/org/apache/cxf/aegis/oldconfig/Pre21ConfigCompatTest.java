begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|oldconfig
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AbstractAegisTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|databinding
operator|.
name|AegisDatabinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|inheritance
operator|.
name|ws1
operator|.
name|WS1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|proxy
operator|.
name|Hello
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|proxy
operator|.
name|MyHello
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|services
operator|.
name|SimpleBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|Pre21ConfigCompatTest
extends|extends
name|AbstractAegisTest
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testCompat
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|AegisDatabinding
operator|.
name|WRITE_XSI_TYPE_KEY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
name|AegisDatabinding
operator|.
name|READ_XSI_TYPE_KEY
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|l
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|l
operator|.
name|add
argument_list|(
name|SimpleBean
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
name|AegisDatabinding
operator|.
name|OVERRIDE_TYPES_KEY
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Hello
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|".implementation"
argument_list|,
name|MyHello
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ClientProxyFactoryBean
name|pf
init|=
operator|new
name|ClientProxyFactoryBean
argument_list|()
decl_stmt|;
name|setupAegis
argument_list|(
name|pf
operator|.
name|getClientFactoryBean
argument_list|()
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setServiceClass
argument_list|(
name|WS1
operator|.
name|class
argument_list|)
expr_stmt|;
name|pf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setAddress
argument_list|(
literal|"local://WS1"
argument_list|)
expr_stmt|;
name|pf
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|ClientFactoryBean
name|cfb
init|=
name|pf
operator|.
name|getClientFactoryBean
argument_list|()
decl_stmt|;
name|cfb
operator|.
name|create
argument_list|()
expr_stmt|;
name|AegisDatabinding
name|db
init|=
operator|(
name|AegisDatabinding
operator|)
name|cfb
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|getDataBinding
argument_list|()
decl_stmt|;
name|AegisContext
name|context
init|=
name|db
operator|.
name|getAegisContext
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|context
operator|.
name|isWriteXsiTypes
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|context
operator|.
name|isReadXsiTypes
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|classes
init|=
name|context
operator|.
name|getRootClassNames
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|classes
operator|.
name|contains
argument_list|(
name|SimpleBean
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MyHello
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|context
operator|.
name|getBeanImplementationMap
argument_list|()
operator|.
name|get
argument_list|(
name|Hello
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

