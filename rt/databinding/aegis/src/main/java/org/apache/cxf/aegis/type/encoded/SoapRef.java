begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|encoded
package|;
end_package

begin_comment
comment|/**  * SoapRef represents an encoded SOAP 1.1 href or SOAP 1.2 ref object. This data class is updated when the ref  * is resolved which can be immedately when the ref is resolved, or later when an instance with the referenced  * id is unmarshalled.  *<p/>  * When the reference is resolved, an optional Action will be invoked which is commonly used to update a  * property on the source object of the reference.  */
end_comment

begin_class
specifier|public
class|class
name|SoapRef
block|{
specifier|private
name|Object
name|instance
decl_stmt|;
specifier|private
name|Action
name|action
decl_stmt|;
comment|/**      * Gets the referenced object instance or null if the reference has not been resolved yet;      *      * @return the referenced object instance or null      */
specifier|public
name|Object
name|get
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
comment|/**      * Sets the referenced object instance.  If an action is registered the onSet method is invoked.      *      * @param object the reference instance; not null      */
specifier|public
name|void
name|set
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"object is null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|instance
operator|=
name|object
expr_stmt|;
if|if
condition|(
name|action
operator|!=
literal|null
condition|)
block|{
name|action
operator|.
name|onSet
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Registers an action to invoke when the instance is set.  If the instance, has already been set, the      * onSet method will immedately be invoked.      *      * @return the action to invoke when this reference is resolved; not null      */
specifier|public
name|void
name|setAction
parameter_list|(
name|Action
name|action
parameter_list|)
block|{
if|if
condition|(
name|action
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"action is null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
if|if
condition|(
name|instance
operator|!=
literal|null
condition|)
block|{
name|action
operator|.
name|onSet
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|Action
block|{
name|void
name|onSet
parameter_list|(
name|SoapRef
name|ref
parameter_list|)
function_decl|;
block|}
block|}
end_class

end_unit

