begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
package|;
end_package

begin_import
import|import
name|java
operator|.
name|beans
operator|.
name|PropertyDescriptor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_interface
specifier|public
interface|interface
name|TypeCreator
block|{
comment|/**      * Get the mapped name of a method parameter.      *      * @param m      * @param index      * @return      */
name|QName
name|getElementName
parameter_list|(
name|Method
name|m
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
name|AegisType
name|createType
parameter_list|(
name|Method
name|m
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
name|AegisType
name|createType
parameter_list|(
name|PropertyDescriptor
name|pd
parameter_list|)
function_decl|;
name|AegisType
name|createType
parameter_list|(
name|Type
name|type
parameter_list|)
function_decl|;
name|AegisType
name|createType
parameter_list|(
name|Field
name|f
parameter_list|)
function_decl|;
name|TypeCreator
name|getParent
parameter_list|()
function_decl|;
name|void
name|setParent
parameter_list|(
name|TypeCreator
name|creator
parameter_list|)
function_decl|;
name|void
name|setTypeMapping
parameter_list|(
name|TypeMapping
name|typeMapping
parameter_list|)
function_decl|;
comment|/** Retrieve the classInfo for a method. Needed to get parameters right.      *      * @param m Method object      * @param index index in the parameter list      * @return info      */
name|TypeClassInfo
name|createClassInfo
parameter_list|(
name|Method
name|m
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      * Create class info for a Type.      * @param itemType      * @return info      */
name|TypeClassInfo
name|createBasicClassInfo
parameter_list|(
name|Type
name|itemType
parameter_list|)
function_decl|;
comment|/**      * Turn a TypeClassInfo into a type.      * @param info      * @return      */
name|AegisType
name|createTypeForClass
parameter_list|(
name|TypeClassInfo
name|info
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

