begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlNsForm
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|W3CDOMStreamWriter
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|AegisElementDataWriter
extends|extends
name|AbstractAegisIoImpl
implements|implements
name|AegisWriter
argument_list|<
name|Element
argument_list|>
block|{
specifier|protected
name|AegisXMLStreamDataWriter
name|writer
decl_stmt|;
specifier|public
name|AegisElementDataWriter
parameter_list|(
name|AegisContext
name|globalContext
parameter_list|)
block|{
name|super
argument_list|(
name|globalContext
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|AegisXMLStreamDataWriter
argument_list|(
name|globalContext
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|Object
name|obj
parameter_list|,
name|QName
name|elementName
parameter_list|,
name|boolean
name|optional
parameter_list|,
name|Element
name|output
parameter_list|,
name|Type
name|aegisType
parameter_list|)
throws|throws
name|Exception
block|{
name|W3CDOMStreamWriter
name|swriter
init|=
operator|new
name|W3CDOMStreamWriter
argument_list|(
name|output
argument_list|)
decl_stmt|;
name|QName
name|elementNameToWrite
init|=
name|elementName
decl_stmt|;
if|if
condition|(
name|aegisContext
operator|.
name|getElementForm
argument_list|()
operator|==
name|XmlNsForm
operator|.
name|UNQUALIFIED
condition|)
block|{
name|elementNameToWrite
operator|=
operator|new
name|QName
argument_list|(
name|elementName
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|write
argument_list|(
name|obj
argument_list|,
name|elementNameToWrite
argument_list|,
name|optional
argument_list|,
name|swriter
argument_list|,
name|aegisType
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

