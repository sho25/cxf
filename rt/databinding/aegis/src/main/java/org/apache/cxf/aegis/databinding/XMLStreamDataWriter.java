begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|databinding
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|validation
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|DatabindingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|TypeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|xml
operator|.
name|MessageWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|xml
operator|.
name|stax
operator|.
name|ElementWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataBindingValidation2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|MessagePartInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaElement
import|;
end_import

begin_class
specifier|public
class|class
name|XMLStreamDataWriter
implements|implements
name|DataWriter
argument_list|<
name|XMLStreamWriter
argument_list|>
implements|,
name|DataBindingValidation2
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|XMLStreamDataReader
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AegisDatabinding
name|databinding
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|attachments
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
decl_stmt|;
specifier|public
name|XMLStreamDataWriter
parameter_list|(
name|AegisDatabinding
name|databinding
parameter_list|)
block|{
name|this
operator|.
name|databinding
operator|=
name|databinding
expr_stmt|;
block|}
specifier|public
name|void
name|setAttachments
parameter_list|(
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|attachments
parameter_list|)
block|{
name|this
operator|.
name|attachments
operator|=
name|attachments
expr_stmt|;
block|}
specifier|public
name|void
name|setSchema
parameter_list|(
name|Schema
name|s
parameter_list|)
block|{     }
specifier|public
name|void
name|write
parameter_list|(
name|Object
name|obj
parameter_list|,
name|MessagePartInfo
name|part
parameter_list|,
name|XMLStreamWriter
name|output
parameter_list|)
block|{
name|Type
name|type
init|=
name|databinding
operator|.
name|getType
argument_list|(
name|part
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
operator|new
name|Message
argument_list|(
literal|"NO_MESSAGE_FOR_PART"
argument_list|,
name|LOG
argument_list|,
name|part
argument_list|)
argument_list|)
throw|;
block|}
name|Context
name|context
init|=
operator|new
name|Context
argument_list|(
name|databinding
operator|.
name|getAegisContext
argument_list|()
argument_list|)
decl_stmt|;
name|context
operator|.
name|setAttachments
argument_list|(
name|attachments
argument_list|)
expr_stmt|;
name|type
operator|=
name|TypeUtil
operator|.
name|getWriteType
argument_list|(
name|databinding
operator|.
name|getAegisContext
argument_list|()
argument_list|,
name|obj
argument_list|,
name|type
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|part
operator|.
name|getXmlSchema
argument_list|()
operator|instanceof
name|XmlSchemaElement
operator|&&
operator|(
operator|(
name|XmlSchemaElement
operator|)
name|part
operator|.
name|getXmlSchema
argument_list|()
operator|)
operator|.
name|getMinOccurs
argument_list|()
operator|==
literal|0
condition|)
block|{
comment|//skip writing minOccurs=0 stuff if obj is null
return|return;
block|}
elseif|else
if|if
condition|(
name|type
operator|.
name|isNillable
argument_list|()
operator|&&
name|type
operator|.
name|isWriteOuter
argument_list|()
condition|)
block|{
name|ElementWriter
name|writer
init|=
operator|new
name|ElementWriter
argument_list|(
name|output
argument_list|)
decl_stmt|;
name|MessageWriter
name|w2
init|=
name|writer
operator|.
name|getElementWriter
argument_list|(
name|part
operator|.
name|getConcreteName
argument_list|()
argument_list|)
decl_stmt|;
name|w2
operator|.
name|writeXsiNil
argument_list|()
expr_stmt|;
name|w2
operator|.
name|close
argument_list|()
expr_stmt|;
return|return;
block|}
block|}
name|ElementWriter
name|writer
init|=
operator|new
name|ElementWriter
argument_list|(
name|output
argument_list|)
decl_stmt|;
name|MessageWriter
name|w2
init|=
name|writer
operator|.
name|getElementWriter
argument_list|(
name|part
operator|.
name|getConcreteName
argument_list|()
argument_list|)
decl_stmt|;
name|type
operator|.
name|writeObject
argument_list|(
name|obj
argument_list|,
name|w2
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|w2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DatabindingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|write
parameter_list|(
name|Object
name|obj
parameter_list|,
name|XMLStreamWriter
name|output
parameter_list|)
block|{
name|write
argument_list|(
name|obj
argument_list|,
literal|null
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|prop
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
name|properties
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|properties
operator|.
name|put
argument_list|(
name|prop
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|key
parameter_list|)
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|properties
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|void
name|setSchema
parameter_list|(
name|XmlSchemaCollection
name|schema
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
end_class

end_unit

