begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|mtom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
operator|.
name|AttachmentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
import|;
end_import

begin_comment
comment|/**  * Binding for {@link javax.activation.DataSource}.  */
end_comment

begin_class
specifier|public
class|class
name|DataSourceType
extends|extends
name|AbstractXOPType
block|{
specifier|public
name|DataSourceType
parameter_list|(
name|boolean
name|useXmimeBinaryType
parameter_list|,
name|String
name|expectedContentTypes
parameter_list|)
block|{
name|super
argument_list|(
name|useXmimeBinaryType
argument_list|,
name|expectedContentTypes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Object
name|readAttachment
parameter_list|(
name|Attachment
name|att
parameter_list|,
name|Context
name|context
parameter_list|)
block|{
return|return
name|att
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getDataSource
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Attachment
name|createAttachment
parameter_list|(
name|Object
name|object
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|DataSource
name|source
init|=
operator|(
name|DataSource
operator|)
name|object
decl_stmt|;
name|DataHandler
name|handler
init|=
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|AttachmentImpl
name|att
init|=
operator|new
name|AttachmentImpl
argument_list|(
name|id
argument_list|,
name|handler
argument_list|)
decl_stmt|;
name|att
operator|.
name|setXOP
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|att
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getContentType
parameter_list|(
name|Object
name|object
parameter_list|,
name|Context
name|context
parameter_list|)
block|{
return|return
operator|(
operator|(
name|DataSource
operator|)
name|object
operator|)
operator|.
name|getContentType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Object
name|wrapBytes
parameter_list|(
name|byte
index|[]
name|bareBytes
parameter_list|,
name|String
name|contentType
parameter_list|)
block|{
return|return
operator|new
name|StreamDataSource
argument_list|(
name|contentType
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bareBytes
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|byte
index|[]
name|getBytes
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|DataSource
name|dataSource
init|=
operator|(
name|DataSource
operator|)
name|object
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|InputStream
name|stream
init|=
name|dataSource
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|stream
argument_list|,
name|baos
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|baos
operator|.
name|toByteArray
argument_list|()
return|;
block|}
block|}
end_class

end_unit

