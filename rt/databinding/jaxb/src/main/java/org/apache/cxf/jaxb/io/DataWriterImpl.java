begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xml
operator|.
name|bind
operator|.
name|api
operator|.
name|TypeReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|JAXBDataBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|JAXBDataBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|JAXBEncoderDecoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|MessagePartInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaElement
import|;
end_import

begin_class
specifier|public
class|class
name|DataWriterImpl
parameter_list|<
name|T
parameter_list|>
extends|extends
name|JAXBDataBase
implements|implements
name|DataWriter
argument_list|<
name|T
argument_list|>
block|{
specifier|private
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|contextClasses
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|public
name|DataWriterImpl
parameter_list|(
name|JAXBContext
name|ctx
parameter_list|,
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|contextClasses
parameter_list|)
block|{
name|super
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|this
operator|.
name|contextClasses
operator|=
name|contextClasses
expr_stmt|;
block|}
specifier|public
name|DataWriterImpl
parameter_list|(
name|JAXBContext
name|ctx
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
parameter_list|,
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|contextClasses
parameter_list|)
block|{
name|super
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|this
operator|.
name|marshallerProperties
operator|=
name|marshallerProperties
expr_stmt|;
name|this
operator|.
name|contextClasses
operator|=
name|contextClasses
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|Object
name|obj
parameter_list|,
name|T
name|output
parameter_list|)
block|{
name|write
argument_list|(
name|obj
argument_list|,
literal|null
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|Object
name|obj
parameter_list|,
name|MessagePartInfo
name|part
parameter_list|,
name|T
name|output
parameter_list|)
block|{
name|boolean
name|honorJaxbAnnotation
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|part
operator|!=
literal|null
operator|&&
name|part
operator|.
name|getProperty
argument_list|(
literal|"honor.jaxb.annotations"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|honorJaxbAnnotation
operator|=
operator|(
name|Boolean
operator|)
name|part
operator|.
name|getProperty
argument_list|(
literal|"honor.jaxb.annotations"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|obj
operator|!=
literal|null
operator|||
operator|!
operator|(
name|part
operator|.
name|getXmlSchema
argument_list|()
operator|instanceof
name|XmlSchemaElement
operator|)
condition|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|Exception
operator|&&
name|part
operator|!=
literal|null
operator|&&
name|Boolean
operator|.
name|TRUE
operator|.
name|equals
argument_list|(
name|part
operator|.
name|getProperty
argument_list|(
name|JAXBDataBinding
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|".CUSTOM_EXCEPTION"
argument_list|)
argument_list|)
condition|)
block|{
name|JAXBEncoderDecoder
operator|.
name|marshallException
argument_list|(
name|getJAXBContext
argument_list|()
argument_list|,
name|getSchema
argument_list|()
argument_list|,
operator|(
name|Exception
operator|)
name|obj
argument_list|,
name|part
argument_list|,
name|output
argument_list|,
name|getAttachmentMarshaller
argument_list|()
argument_list|,
name|marshallerProperties
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Annotation
index|[]
name|anns
init|=
name|getJAXBAnnotation
argument_list|(
name|part
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|honorJaxbAnnotation
operator|||
name|anns
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|JAXBEncoderDecoder
operator|.
name|marshall
argument_list|(
name|getJAXBContext
argument_list|()
argument_list|,
name|getSchema
argument_list|()
argument_list|,
name|obj
argument_list|,
name|part
argument_list|,
name|output
argument_list|,
name|getAttachmentMarshaller
argument_list|()
argument_list|,
name|marshallerProperties
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|honorJaxbAnnotation
operator|&&
name|anns
operator|.
name|length
operator|>
literal|0
condition|)
block|{
comment|//RpcLit will use the JAXB Bridge to marshall part message when it is
comment|//annotated with @XmlList,@XmlAttachmentRef,@XmlJavaTypeAdapter
comment|//TODO:Cache the JAXBRIContext
name|QName
name|qname
init|=
operator|new
name|QName
argument_list|(
literal|null
argument_list|,
name|part
operator|.
name|getConcreteName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
decl_stmt|;
name|TypeReference
name|typeReference
init|=
operator|new
name|TypeReference
argument_list|(
name|qname
argument_list|,
name|part
operator|.
name|getTypeClass
argument_list|()
argument_list|,
name|anns
argument_list|)
decl_stmt|;
name|JAXBEncoderDecoder
operator|.
name|marshalWithBridge
argument_list|(
name|typeReference
argument_list|,
name|contextClasses
argument_list|,
name|obj
argument_list|,
name|output
argument_list|,
name|getAttachmentMarshaller
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
operator|&&
name|needToRender
argument_list|(
name|obj
argument_list|,
name|part
argument_list|)
condition|)
block|{
name|JAXBEncoderDecoder
operator|.
name|marshallNullElement
argument_list|(
name|getJAXBContext
argument_list|()
argument_list|,
name|getSchema
argument_list|()
argument_list|,
name|output
argument_list|,
name|part
argument_list|,
name|marshallerProperties
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|needToRender
parameter_list|(
name|Object
name|obj
parameter_list|,
name|MessagePartInfo
name|part
parameter_list|)
block|{
if|if
condition|(
name|part
operator|!=
literal|null
operator|&&
name|part
operator|.
name|getXmlSchema
argument_list|()
operator|instanceof
name|XmlSchemaElement
condition|)
block|{
name|XmlSchemaElement
name|element
init|=
operator|(
name|XmlSchemaElement
operator|)
name|part
operator|.
name|getXmlSchema
argument_list|()
decl_stmt|;
return|return
name|element
operator|.
name|isNillable
argument_list|()
operator|&&
name|element
operator|.
name|getMinOccurs
argument_list|()
operator|>
literal|0
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getMarshallerProperties
parameter_list|()
block|{
return|return
name|marshallerProperties
return|;
block|}
specifier|public
name|void
name|setMarshallerProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
parameter_list|)
block|{
name|this
operator|.
name|marshallerProperties
operator|=
name|marshallerProperties
expr_stmt|;
block|}
block|}
end_class

end_unit

