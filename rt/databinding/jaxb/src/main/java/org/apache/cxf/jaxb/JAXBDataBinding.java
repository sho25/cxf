begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|ParameterizedType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|ValidationEventHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLEventReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLEventWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBContextCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBContextCache
operator|.
name|CachedContextAndSchemas
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ModCountCopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PropertyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ReflectionUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|xmlschema
operator|.
name|SchemaCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|AbstractDataBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|AbstractWrapperHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|WrapperCapableDatabinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|WrapperHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Interceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|InterceptorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|attachment
operator|.
name|JAXBAttachmentSchemaValidationHack
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|io
operator|.
name|DataReaderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|io
operator|.
name|DataWriterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|resource
operator|.
name|URIResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
operator|.
name|ServiceConstructionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ObjectFactory
import|;
end_import

begin_class
annotation|@
name|NoJSR250Annotations
specifier|public
class|class
name|JAXBDataBinding
extends|extends
name|AbstractDataBinding
implements|implements
name|WrapperCapableDatabinding
implements|,
name|InterceptorProvider
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SCHEMA_RESOURCE
init|=
literal|"SCHEMRESOURCE"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MTOM_THRESHOLD
init|=
literal|"org.apache.cxf.jaxb.mtomThreshold"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|UNWRAP_JAXB_ELEMENT
init|=
literal|"unwrap.jaxb.element"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USE_JAXB_BRIDGE
init|=
literal|"use.jaxb.bridge"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JAXB_SCAN_PACKAGES
init|=
literal|"jaxb.scanPackages"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|JAXBDataBinding
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|SUPPORTED_READER_FORMATS
index|[]
init|=
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|Node
operator|.
name|class
operator|,
name|XMLEventReader
operator|.
name|class
operator|,
name|XMLStreamReader
operator|.
name|class
block|}
empty_stmt|;
specifier|private
specifier|static
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|SUPPORTED_WRITER_FORMATS
index|[]
init|=
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|OutputStream
operator|.
name|class
operator|,
name|Node
operator|.
name|class
operator|,
name|XMLEventWriter
operator|.
name|class
operator|,
name|XMLStreamWriter
operator|.
name|class
block|}
empty_stmt|;
specifier|private
specifier|static
class|class
name|DelayedDOMResult
extends|extends
name|DOMResult
block|{
specifier|private
specifier|final
name|URL
name|resource
decl_stmt|;
specifier|private
specifier|final
name|String
name|publicId
decl_stmt|;
specifier|public
name|DelayedDOMResult
parameter_list|(
name|URL
name|url
parameter_list|,
name|String
name|sysId
parameter_list|,
name|String
name|pId
parameter_list|)
block|{
name|super
argument_list|(
literal|null
argument_list|,
name|sysId
argument_list|)
expr_stmt|;
name|resource
operator|=
name|url
expr_stmt|;
name|publicId
operator|=
name|pId
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|Node
name|getNode
parameter_list|()
block|{
name|Node
name|nd
init|=
name|super
operator|.
name|getNode
argument_list|()
decl_stmt|;
if|if
condition|(
name|nd
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|InputSource
name|src
init|=
operator|new
name|InputSource
argument_list|(
name|resource
operator|.
name|openStream
argument_list|()
argument_list|)
decl_stmt|;
name|src
operator|.
name|setSystemId
argument_list|(
name|this
operator|.
name|getSystemId
argument_list|()
argument_list|)
expr_stmt|;
name|src
operator|.
name|setPublicId
argument_list|(
name|publicId
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|setNode
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|nd
operator|=
name|super
operator|.
name|getNode
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
return|return
name|nd
return|;
block|}
block|}
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|DOMResult
argument_list|>
name|BUILT_IN_SCHEMAS
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|DOMResult
argument_list|>
argument_list|()
decl_stmt|;
static|static
block|{
name|URIResolver
name|resolver
init|=
operator|new
name|URIResolver
argument_list|()
decl_stmt|;
try|try
block|{
name|resolver
operator|.
name|resolve
argument_list|(
literal|""
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr-wsdl.xsd"
argument_list|,
name|JAXBDataBinding
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|resolver
operator|.
name|isResolved
argument_list|()
condition|)
block|{
name|resolver
operator|.
name|getInputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|DOMResult
name|dr
init|=
operator|new
name|DelayedDOMResult
argument_list|(
name|resolver
operator|.
name|getURL
argument_list|()
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr-wsdl.xsd"
argument_list|,
literal|"http://www.w3.org/2005/02/addressing/wsdl"
argument_list|)
decl_stmt|;
name|BUILT_IN_SCHEMAS
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2005/02/addressing/wsdl"
argument_list|,
name|dr
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|unresolve
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//IGNORE
block|}
try|try
block|{
name|resolver
operator|.
name|resolve
argument_list|(
literal|""
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr.xsd"
argument_list|,
name|JAXBDataBinding
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|resolver
operator|.
name|isResolved
argument_list|()
condition|)
block|{
name|resolver
operator|.
name|getInputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|DOMResult
name|dr
init|=
operator|new
name|DelayedDOMResult
argument_list|(
name|resolver
operator|.
name|getURL
argument_list|()
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr.xsd"
argument_list|,
literal|"http://www.w3.org/2005/08/addressing"
argument_list|)
decl_stmt|;
name|BUILT_IN_SCHEMAS
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2005/08/addressing"
argument_list|,
name|dr
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|unresolve
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//IGNORE
block|}
try|try
block|{
name|resolver
operator|.
name|resolve
argument_list|(
literal|""
argument_list|,
literal|"classpath:/schemas/wsdl/wsrm.xsd"
argument_list|,
name|JAXBDataBinding
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|resolver
operator|.
name|isResolved
argument_list|()
condition|)
block|{
name|resolver
operator|.
name|getInputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|DOMResult
name|dr
init|=
operator|new
name|DelayedDOMResult
argument_list|(
name|resolver
operator|.
name|getURL
argument_list|()
argument_list|,
literal|"classpath:/schemas/wsdl/wsrm.xsd"
argument_list|,
literal|"http://schemas.xmlsoap.org/ws/2005/02/rm"
argument_list|)
decl_stmt|;
name|BUILT_IN_SCHEMAS
operator|.
name|put
argument_list|(
literal|"http://schemas.xmlsoap.org/ws/2005/02/rm"
argument_list|,
name|dr
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|unresolve
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//IGNORE
block|}
block|}
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|extraClass
decl_stmt|;
name|JAXBContext
name|context
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|contextClasses
decl_stmt|;
name|Collection
argument_list|<
name|Object
argument_list|>
name|typeRefs
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|cls
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|contextProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|unmarshallerProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|private
name|Unmarshaller
operator|.
name|Listener
name|unmarshallerListener
decl_stmt|;
specifier|private
name|Marshaller
operator|.
name|Listener
name|marshallerListener
decl_stmt|;
specifier|private
name|ValidationEventHandler
name|validationEventHandler
decl_stmt|;
specifier|private
name|boolean
name|unwrapJAXBElement
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|scanPackages
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|qualifiedSchemas
decl_stmt|;
specifier|private
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|in
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|out
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|outFault
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|inFault
init|=
operator|new
name|ModCountCopyOnWriteArrayList
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|JAXBDataBinding
parameter_list|()
block|{     }
specifier|public
name|JAXBDataBinding
parameter_list|(
name|boolean
name|q
parameter_list|)
block|{
name|this
operator|.
name|qualifiedSchemas
operator|=
name|q
expr_stmt|;
block|}
specifier|public
name|JAXBDataBinding
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|classes
parameter_list|)
throws|throws
name|JAXBException
block|{
name|contextClasses
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|contextClasses
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|classes
argument_list|)
argument_list|)
expr_stmt|;
name|setContext
argument_list|(
name|createJAXBContext
argument_list|(
name|contextClasses
argument_list|)
argument_list|)
expr_stmt|;
comment|//NOPMD - specifically allow this
block|}
specifier|public
name|JAXBDataBinding
parameter_list|(
name|boolean
name|qualified
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
parameter_list|)
throws|throws
name|JAXBException
block|{
name|this
argument_list|(
name|qualified
argument_list|)
expr_stmt|;
if|if
condition|(
name|props
operator|!=
literal|null
operator|&&
name|props
operator|.
name|get
argument_list|(
literal|"jaxb.additionalContextClasses"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|Object
name|o
init|=
name|props
operator|.
name|get
argument_list|(
literal|"jaxb.additionalContextClasses"
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|Class
condition|)
block|{
name|o
operator|=
operator|new
name|Class
index|[]
block|{
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|o
block|}
expr_stmt|;
block|}
name|extraClass
operator|=
operator|(
name|Class
index|[]
operator|)
name|o
expr_stmt|;
block|}
comment|// the default for scan packages is true, so the jaxb scan packages
comment|// property must be explicitly set to false to disable it
if|if
condition|(
name|PropertyUtils
operator|.
name|isFalse
argument_list|(
name|props
argument_list|,
name|JAXB_SCAN_PACKAGES
argument_list|)
condition|)
block|{
name|scanPackages
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|public
name|JAXBDataBinding
parameter_list|(
name|JAXBContext
name|context
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JAXBContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
specifier|public
specifier|final
name|void
name|setContext
parameter_list|(
name|JAXBContext
name|ctx
parameter_list|)
block|{
name|context
operator|=
name|ctx
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|DataWriter
argument_list|<
name|T
argument_list|>
name|createWriter
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|c
parameter_list|)
block|{
name|Integer
name|mtomThresholdInt
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|getMtomThreshold
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|==
name|XMLStreamWriter
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|XMLStreamWriter
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|XMLStreamWriter
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|OutputStream
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|OutputStream
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|OutputStream
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|XMLEventWriter
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|XMLEventWriter
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|XMLEventWriter
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|Node
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|Node
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|Node
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|getSupportedWriterFormats
parameter_list|()
block|{
return|return
name|SUPPORTED_WRITER_FORMATS
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|DataReader
argument_list|<
name|T
argument_list|>
name|createReader
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|c
parameter_list|)
block|{
name|DataReader
argument_list|<
name|T
argument_list|>
name|dr
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|c
operator|==
name|XMLStreamReader
operator|.
name|class
condition|)
block|{
name|dr
operator|=
operator|(
name|DataReader
argument_list|<
name|T
argument_list|>
operator|)
operator|new
name|DataReaderImpl
argument_list|<
name|XMLStreamReader
argument_list|>
argument_list|(
name|this
argument_list|,
name|unwrapJAXBElement
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|XMLEventReader
operator|.
name|class
condition|)
block|{
name|dr
operator|=
operator|(
name|DataReader
argument_list|<
name|T
argument_list|>
operator|)
operator|new
name|DataReaderImpl
argument_list|<
name|XMLEventReader
argument_list|>
argument_list|(
name|this
argument_list|,
name|unwrapJAXBElement
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|Node
operator|.
name|class
condition|)
block|{
name|dr
operator|=
operator|(
name|DataReader
argument_list|<
name|T
argument_list|>
operator|)
operator|new
name|DataReaderImpl
argument_list|<
name|Node
argument_list|>
argument_list|(
name|this
argument_list|,
name|unwrapJAXBElement
argument_list|)
expr_stmt|;
block|}
return|return
name|dr
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|getSupportedReaderFormats
parameter_list|()
block|{
return|return
name|SUPPORTED_READER_FORMATS
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|synchronized
name|void
name|initialize
parameter_list|(
name|Service
name|service
parameter_list|)
block|{
name|in
operator|.
name|addIfAbsent
argument_list|(
name|JAXBAttachmentSchemaValidationHack
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|inFault
operator|.
name|addIfAbsent
argument_list|(
name|JAXBAttachmentSchemaValidationHack
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
comment|// context is already set, don't redo it
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|contextClasses
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|ServiceInfo
name|serviceInfo
range|:
name|service
operator|.
name|getServiceInfos
argument_list|()
control|)
block|{
name|JAXBContextInitializer
name|initializer
init|=
operator|new
name|JAXBContextInitializer
argument_list|(
name|serviceInfo
argument_list|,
name|contextClasses
argument_list|,
name|typeRefs
argument_list|)
decl_stmt|;
name|initializer
operator|.
name|walk
argument_list|()
expr_stmt|;
if|if
condition|(
name|serviceInfo
operator|.
name|getProperty
argument_list|(
literal|"extra.class"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|exClasses
init|=
name|serviceInfo
operator|.
name|getProperty
argument_list|(
literal|"extra.class"
argument_list|,
name|Set
operator|.
name|class
argument_list|)
decl_stmt|;
name|contextClasses
operator|.
name|addAll
argument_list|(
name|exClasses
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|tns
init|=
name|getNamespaceToUse
argument_list|(
name|service
argument_list|)
decl_stmt|;
name|CachedContextAndSchemas
name|cachedContextAndSchemas
init|=
literal|null
decl_stmt|;
name|JAXBContext
name|ctx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cachedContextAndSchemas
operator|=
name|createJAXBContextAndSchemas
argument_list|(
name|contextClasses
argument_list|,
name|tns
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e1
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceConstructionException
argument_list|(
name|e1
argument_list|)
throw|;
block|}
name|ctx
operator|=
name|cachedContextAndSchemas
operator|.
name|getContext
argument_list|()
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isLoggable
argument_list|(
name|Level
operator|.
name|FINE
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|FINE
argument_list|,
literal|"CREATED_JAXB_CONTEXT"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|ctx
block|,
name|contextClasses
block|}
argument_list|)
expr_stmt|;
block|}
name|setContext
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
for|for
control|(
name|ServiceInfo
name|serviceInfo
range|:
name|service
operator|.
name|getServiceInfos
argument_list|()
control|)
block|{
name|SchemaCollection
name|col
init|=
name|serviceInfo
operator|.
name|getXmlSchemaCollection
argument_list|()
decl_stmt|;
if|if
condition|(
name|col
operator|.
name|getXmlSchemas
argument_list|()
operator|.
name|length
operator|>
literal|1
condition|)
block|{
comment|// someone has already filled in the types
continue|continue;
block|}
name|boolean
name|schemasFromCache
init|=
literal|false
decl_stmt|;
name|Collection
argument_list|<
name|DOMSource
argument_list|>
name|schemas
init|=
name|getSchemas
argument_list|()
decl_stmt|;
if|if
condition|(
name|schemas
operator|==
literal|null
operator|||
name|schemas
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|schemas
operator|=
name|cachedContextAndSchemas
operator|.
name|getSchemas
argument_list|()
expr_stmt|;
if|if
condition|(
name|schemas
operator|!=
literal|null
condition|)
block|{
name|schemasFromCache
operator|=
literal|true
expr_stmt|;
block|}
block|}
else|else
block|{
name|schemasFromCache
operator|=
literal|true
expr_stmt|;
block|}
name|Set
argument_list|<
name|DOMSource
argument_list|>
name|bi
init|=
operator|new
name|LinkedHashSet
argument_list|<
name|DOMSource
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|schemas
operator|==
literal|null
condition|)
block|{
name|schemas
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|DOMSource
argument_list|>
argument_list|()
expr_stmt|;
try|try
block|{
for|for
control|(
name|DOMResult
name|r
range|:
name|generateJaxbSchemas
argument_list|()
control|)
block|{
name|DOMSource
name|src
init|=
operator|new
name|DOMSource
argument_list|(
name|r
operator|.
name|getNode
argument_list|()
argument_list|,
name|r
operator|.
name|getSystemId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|BUILT_IN_SCHEMAS
operator|.
name|containsValue
argument_list|(
name|r
argument_list|)
condition|)
block|{
name|bi
operator|.
name|add
argument_list|(
name|src
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|schemas
operator|.
name|add
argument_list|(
name|src
argument_list|)
expr_stmt|;
block|}
block|}
comment|//put any builtins at the end.   Anything that DOES import them
comment|//will cause it to load automatically and we'll skip them later
name|schemas
operator|.
name|addAll
argument_list|(
name|bi
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceConstructionException
argument_list|(
literal|"SCHEMA_GEN_EXC"
argument_list|,
name|LOG
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|ids
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|DOMSource
name|r
range|:
name|schemas
control|)
block|{
name|ids
operator|.
name|add
argument_list|(
name|r
operator|.
name|getSystemId
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|DOMSource
name|r
range|:
name|schemas
control|)
block|{
if|if
condition|(
name|bi
operator|.
name|contains
argument_list|(
name|r
argument_list|)
condition|)
block|{
name|String
name|ns
init|=
operator|(
operator|(
name|Document
operator|)
name|r
operator|.
name|getNode
argument_list|()
operator|)
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"targetNamespace"
argument_list|)
decl_stmt|;
if|if
condition|(
name|serviceInfo
operator|.
name|getSchema
argument_list|(
name|ns
argument_list|)
operator|!=
literal|null
condition|)
block|{
continue|continue;
block|}
block|}
name|addSchemaDocument
argument_list|(
name|serviceInfo
argument_list|,
name|col
argument_list|,
operator|(
name|Document
operator|)
name|r
operator|.
name|getNode
argument_list|()
argument_list|,
name|r
operator|.
name|getSystemId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JAXBContext
name|riContext
decl_stmt|;
if|if
condition|(
name|context
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.sun.xml."
argument_list|)
condition|)
block|{
name|riContext
operator|=
name|context
expr_stmt|;
block|}
else|else
block|{
comment|// fall back if we're using another jaxb implementation
try|try
block|{
name|riContext
operator|=
name|JAXBUtils
operator|.
name|createRIContext
argument_list|(
name|contextClasses
operator|.
name|toArray
argument_list|(
operator|new
name|Class
index|[
name|contextClasses
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|tns
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceConstructionException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
name|JAXBSchemaInitializer
name|schemaInit
init|=
operator|new
name|JAXBSchemaInitializer
argument_list|(
name|serviceInfo
argument_list|,
name|col
argument_list|,
name|riContext
argument_list|,
name|this
operator|.
name|qualifiedSchemas
argument_list|)
decl_stmt|;
name|schemaInit
operator|.
name|walk
argument_list|()
expr_stmt|;
if|if
condition|(
name|cachedContextAndSchemas
operator|!=
literal|null
operator|&&
operator|!
name|schemasFromCache
condition|)
block|{
name|cachedContextAndSchemas
operator|.
name|setSchemas
argument_list|(
name|schemas
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|String
name|getNamespaceToUse
parameter_list|(
name|Service
name|service
parameter_list|)
block|{
if|if
condition|(
literal|"true"
operator|.
name|equals
argument_list|(
name|service
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.databinding.namespace"
argument_list|)
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
name|tns
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|service
operator|.
name|getServiceInfos
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|tns
operator|=
name|service
operator|.
name|getServiceInfos
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|tns
operator|=
name|service
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
expr_stmt|;
block|}
return|return
name|tns
return|;
block|}
specifier|public
name|void
name|setExtraClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|userExtraClass
parameter_list|)
block|{
name|extraClass
operator|=
name|userExtraClass
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|getExtraClass
parameter_list|()
block|{
return|return
name|extraClass
return|;
block|}
comment|// default access for tests.
name|List
argument_list|<
name|DOMResult
argument_list|>
name|generateJaxbSchemas
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|JAXBUtils
operator|.
name|generateJaxbSchemas
argument_list|(
name|context
argument_list|,
name|BUILT_IN_SCHEMAS
argument_list|)
return|;
block|}
specifier|public
name|JAXBContext
name|createJAXBContext
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
throws|throws
name|JAXBException
block|{
return|return
name|createJAXBContext
argument_list|(
name|classes
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|JAXBContext
name|createJAXBContext
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|,
name|String
name|defaultNs
parameter_list|)
throws|throws
name|JAXBException
block|{
return|return
name|createJAXBContextAndSchemas
argument_list|(
name|classes
argument_list|,
name|defaultNs
argument_list|)
operator|.
name|getContext
argument_list|()
return|;
block|}
specifier|public
name|CachedContextAndSchemas
name|createJAXBContextAndSchemas
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|,
name|String
name|defaultNs
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|//add user extra class into jaxb context
if|if
condition|(
name|extraClass
operator|!=
literal|null
operator|&&
name|extraClass
operator|.
name|length
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|clz
range|:
name|extraClass
control|)
block|{
name|classes
operator|.
name|add
argument_list|(
name|clz
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scanPackages
condition|)
block|{
name|JAXBContextCache
operator|.
name|scanPackages
argument_list|(
name|classes
argument_list|)
expr_stmt|;
block|}
name|addWsAddressingTypes
argument_list|(
name|classes
argument_list|)
expr_stmt|;
return|return
name|JAXBContextCache
operator|.
name|getCachedContextAndSchemas
argument_list|(
name|classes
argument_list|,
name|defaultNs
argument_list|,
name|contextProperties
argument_list|,
name|typeRefs
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|private
name|void
name|addWsAddressingTypes
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
if|if
condition|(
name|classes
operator|.
name|contains
argument_list|(
name|ObjectFactory
operator|.
name|class
argument_list|)
condition|)
block|{
comment|// ws-addressing is used, lets add the specific types
try|try
block|{
name|classes
operator|.
name|add
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.cxf.ws.addressing.wsdl.ObjectFactory"
argument_list|)
argument_list|)
expr_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.cxf.ws.addressing.wsdl.AttributedQNameType"
argument_list|)
argument_list|)
expr_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.cxf.ws.addressing.wsdl.ServiceNameType"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|unused
parameter_list|)
block|{
comment|// REVISIT - ignorable if WS-ADDRESSING not available?
comment|// maybe add a way to allow interceptors to add stuff to the
comment|// context?
block|}
block|}
block|}
specifier|public
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getContextClasses
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|this
operator|.
name|contextClasses
argument_list|)
return|;
block|}
comment|/**      * Return a map of properties. These properties are passed to      * JAXBContext.newInstance when this object creates a context.      *      * @return the map of JAXB context properties.      */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getContextProperties
parameter_list|()
block|{
return|return
name|contextProperties
return|;
block|}
comment|/**      * Set a map of JAXB context properties. These properties are passed to      * JAXBContext.newInstance when this object creates a context. Note that if      * you create a JAXB context elsewhere, you will not respect these      * properties unless you handle it manually.      *      * @param contextProperties map of properties.      */
specifier|public
name|void
name|setContextProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|contextProperties
parameter_list|)
block|{
name|this
operator|.
name|contextProperties
operator|=
name|contextProperties
expr_stmt|;
block|}
comment|/**      * Return a map of properties. These properties are set into the JAXB      * Marshaller (via Marshaller.setProperty(...) when the marshaller is      * created.      *      * @return the map of JAXB marshaller properties.      */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getMarshallerProperties
parameter_list|()
block|{
return|return
name|marshallerProperties
return|;
block|}
comment|/**      * Set a map of JAXB marshaller properties. These properties are set into      * the JAXB Marshaller (via Marshaller.setProperty(...) when the marshaller      * is created.      *      * @param marshallerProperties map of properties.      */
specifier|public
name|void
name|setMarshallerProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
parameter_list|)
block|{
name|this
operator|.
name|marshallerProperties
operator|=
name|marshallerProperties
expr_stmt|;
block|}
comment|/**      * Return a map of properties. These properties are set into the JAXB      * Unmarshaller (via Unmarshaller.setProperty(...) when the unmarshaller is      * created.      *      * @return the map of JAXB unmarshaller properties.      */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getUnmarshallerProperties
parameter_list|()
block|{
return|return
name|unmarshallerProperties
return|;
block|}
comment|/**      * Set a map of JAXB unmarshaller properties. These properties are set into      * the JAXB Unmarshaller (via Unmarshaller.setProperty(...) when the unmarshaller      * is created.      *      * @param unmarshallerProperties map of properties.      */
specifier|public
name|void
name|setUnmarshallerProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|unmarshallerProperties
parameter_list|)
block|{
name|this
operator|.
name|unmarshallerProperties
operator|=
name|unmarshallerProperties
expr_stmt|;
block|}
comment|/**      * Returns the Unmarshaller.Listener that will be registered on the Unmarshallers      * @return      */
specifier|public
name|Unmarshaller
operator|.
name|Listener
name|getUnmarshallerListener
parameter_list|()
block|{
return|return
name|unmarshallerListener
return|;
block|}
comment|/**      * Sets the Unmarshaller.Listener that will be registered on the Unmarshallers      * @param unmarshallerListener      */
specifier|public
name|void
name|setUnmarshallerListener
parameter_list|(
name|Unmarshaller
operator|.
name|Listener
name|unmarshallerListener
parameter_list|)
block|{
name|this
operator|.
name|unmarshallerListener
operator|=
name|unmarshallerListener
expr_stmt|;
block|}
comment|/**      * Returns the Marshaller.Listener that will be registered on the Marshallers      * @return      */
specifier|public
name|Marshaller
operator|.
name|Listener
name|getMarshallerListener
parameter_list|()
block|{
return|return
name|marshallerListener
return|;
block|}
comment|/**      * Sets the Marshaller.Listener that will be registered on the Marshallers      * @param marshallerListener      */
specifier|public
name|void
name|setMarshallerListener
parameter_list|(
name|Marshaller
operator|.
name|Listener
name|marshallerListener
parameter_list|)
block|{
name|this
operator|.
name|marshallerListener
operator|=
name|marshallerListener
expr_stmt|;
block|}
specifier|public
name|ValidationEventHandler
name|getValidationEventHandler
parameter_list|()
block|{
return|return
name|validationEventHandler
return|;
block|}
specifier|public
name|void
name|setValidationEventHandler
parameter_list|(
name|ValidationEventHandler
name|validationEventHandler
parameter_list|)
block|{
name|this
operator|.
name|validationEventHandler
operator|=
name|validationEventHandler
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUnwrapJAXBElement
parameter_list|()
block|{
return|return
name|unwrapJAXBElement
return|;
block|}
specifier|public
name|void
name|setUnwrapJAXBElement
parameter_list|(
name|boolean
name|unwrapJAXBElement
parameter_list|)
block|{
name|this
operator|.
name|unwrapJAXBElement
operator|=
name|unwrapJAXBElement
expr_stmt|;
block|}
specifier|public
name|WrapperHelper
name|createWrapperHelper
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|wrapperType
parameter_list|,
name|QName
name|wrapperName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partNames
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|elTypeNames
parameter_list|,
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|partClasses
parameter_list|)
block|{
name|List
argument_list|<
name|Method
argument_list|>
name|getMethods
init|=
operator|new
name|ArrayList
argument_list|<
name|Method
argument_list|>
argument_list|(
name|partNames
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Method
argument_list|>
name|setMethods
init|=
operator|new
name|ArrayList
argument_list|<
name|Method
argument_list|>
argument_list|(
name|partNames
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Method
argument_list|>
name|jaxbMethods
init|=
operator|new
name|ArrayList
argument_list|<
name|Method
argument_list|>
argument_list|(
name|partNames
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Field
argument_list|>
name|fields
init|=
operator|new
name|ArrayList
argument_list|<
name|Field
argument_list|>
argument_list|(
name|partNames
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|Method
name|allMethods
index|[]
init|=
name|wrapperType
operator|.
name|getMethods
argument_list|()
decl_stmt|;
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|wrapperType
argument_list|)
decl_stmt|;
comment|//if wrappertype class is generated by ASM,getPackage() always return null
if|if
condition|(
name|wrapperType
operator|.
name|getPackage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|packageName
operator|=
name|wrapperType
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
name|String
name|objectFactoryClassName
init|=
name|packageName
operator|+
literal|".ObjectFactory"
decl_stmt|;
name|Object
name|objectFactory
init|=
literal|null
decl_stmt|;
try|try
block|{
name|objectFactory
operator|=
name|wrapperType
operator|.
name|getClassLoader
argument_list|()
operator|.
name|loadClass
argument_list|(
name|objectFactoryClassName
argument_list|)
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//ignore, probably won't need it
block|}
name|Method
name|allOFMethods
index|[]
decl_stmt|;
if|if
condition|(
name|objectFactory
operator|!=
literal|null
condition|)
block|{
name|allOFMethods
operator|=
name|objectFactory
operator|.
name|getClass
argument_list|()
operator|.
name|getMethods
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|allOFMethods
operator|=
operator|new
name|Method
index|[
literal|0
index|]
expr_stmt|;
block|}
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|partNames
operator|.
name|size
argument_list|()
condition|;
name|x
operator|++
control|)
block|{
name|String
name|partName
init|=
name|partNames
operator|.
name|get
argument_list|(
name|x
argument_list|)
decl_stmt|;
if|if
condition|(
name|partName
operator|==
literal|null
condition|)
block|{
name|getMethods
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|setMethods
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fields
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|jaxbMethods
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|String
name|elementType
init|=
name|elTypeNames
operator|.
name|get
argument_list|(
name|x
argument_list|)
decl_stmt|;
name|String
name|getAccessor
init|=
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
name|partName
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
decl_stmt|;
name|String
name|setAccessor
init|=
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
name|partName
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
decl_stmt|;
name|Method
name|getMethod
init|=
literal|null
decl_stmt|;
name|Method
name|setMethod
init|=
literal|null
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|valueClass
init|=
name|wrapperType
decl_stmt|;
try|try
block|{
name|getMethod
operator|=
name|valueClass
operator|.
name|getMethod
argument_list|(
name|getAccessor
argument_list|,
name|AbstractWrapperHelper
operator|.
name|NO_CLASSES
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|ex
parameter_list|)
block|{
comment|//ignore for now
block|}
name|Field
name|elField
init|=
name|getElField
argument_list|(
name|partName
argument_list|,
name|valueClass
argument_list|)
decl_stmt|;
if|if
condition|(
name|getMethod
operator|==
literal|null
operator|&&
name|elementType
operator|!=
literal|null
operator|&&
literal|"boolean"
operator|.
name|equals
argument_list|(
name|elementType
operator|.
name|toLowerCase
argument_list|()
argument_list|)
operator|&&
operator|(
name|elField
operator|==
literal|null
operator|||
operator|(
operator|!
name|Collection
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|elField
operator|.
name|getType
argument_list|()
argument_list|)
operator|&&
operator|!
name|elField
operator|.
name|getType
argument_list|()
operator|.
name|isArray
argument_list|()
operator|)
operator|)
condition|)
block|{
try|try
block|{
name|String
name|newAcc
init|=
name|getAccessor
operator|.
name|replaceFirst
argument_list|(
literal|"get"
argument_list|,
literal|"is"
argument_list|)
decl_stmt|;
name|getMethod
operator|=
name|wrapperType
operator|.
name|getMethod
argument_list|(
name|newAcc
argument_list|,
name|AbstractWrapperHelper
operator|.
name|NO_CLASSES
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|ex
parameter_list|)
block|{
comment|//ignore for now
block|}
block|}
if|if
condition|(
name|getMethod
operator|==
literal|null
operator|&&
literal|"return"
operator|.
name|equals
argument_list|(
name|partName
argument_list|)
condition|)
block|{
comment|//RI generated code uses this
try|try
block|{
name|getMethod
operator|=
name|valueClass
operator|.
name|getMethod
argument_list|(
literal|"get_return"
argument_list|,
name|AbstractWrapperHelper
operator|.
name|NO_CLASSES
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|ex
parameter_list|)
block|{
try|try
block|{
name|getMethod
operator|=
name|valueClass
operator|.
name|getMethod
argument_list|(
literal|"is_return"
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|ex2
parameter_list|)
block|{
comment|//ignore for now
block|}
block|}
block|}
if|if
condition|(
name|getMethod
operator|==
literal|null
operator|&&
name|elField
operator|!=
literal|null
condition|)
block|{
name|getAccessor
operator|=
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
name|elField
operator|.
name|getName
argument_list|()
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
expr_stmt|;
name|setAccessor
operator|=
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
name|elField
operator|.
name|getName
argument_list|()
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
expr_stmt|;
try|try
block|{
name|getMethod
operator|=
name|valueClass
operator|.
name|getMethod
argument_list|(
name|getAccessor
argument_list|,
name|AbstractWrapperHelper
operator|.
name|NO_CLASSES
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|ex
parameter_list|)
block|{
comment|//ignore for now
block|}
block|}
name|String
name|setAccessor2
init|=
name|setAccessor
decl_stmt|;
if|if
condition|(
literal|"return"
operator|.
name|equals
argument_list|(
name|partName
argument_list|)
condition|)
block|{
comment|//some versions of jaxb map "return" to "set_return" instead of "setReturn"
name|setAccessor2
operator|=
literal|"set_return"
expr_stmt|;
block|}
for|for
control|(
name|Method
name|method
range|:
name|allMethods
control|)
block|{
if|if
condition|(
name|method
operator|.
name|getParameterTypes
argument_list|()
operator|!=
literal|null
operator|&&
name|method
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
operator|==
literal|1
operator|&&
operator|(
name|setAccessor
operator|.
name|equals
argument_list|(
name|method
operator|.
name|getName
argument_list|()
argument_list|)
operator|||
name|setAccessor2
operator|.
name|equals
argument_list|(
name|method
operator|.
name|getName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|setMethod
operator|=
name|method
expr_stmt|;
break|break;
block|}
block|}
name|getMethods
operator|.
name|add
argument_list|(
name|getMethod
argument_list|)
expr_stmt|;
name|setMethods
operator|.
name|add
argument_list|(
name|setMethod
argument_list|)
expr_stmt|;
if|if
condition|(
name|setMethod
operator|!=
literal|null
operator|&&
name|JAXBElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|setMethod
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|)
condition|)
block|{
name|Type
name|t
init|=
name|setMethod
operator|.
name|getGenericParameterTypes
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|pcls
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|t
operator|instanceof
name|ParameterizedType
condition|)
block|{
name|t
operator|=
operator|(
operator|(
name|ParameterizedType
operator|)
name|t
operator|)
operator|.
name|getActualTypeArguments
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
block|}
if|if
condition|(
name|t
operator|instanceof
name|Class
condition|)
block|{
name|pcls
operator|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|t
expr_stmt|;
block|}
name|String
name|methodName
init|=
literal|"create"
operator|+
name|wrapperType
operator|.
name|getSimpleName
argument_list|()
operator|+
name|setMethod
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|allOFMethods
control|)
block|{
if|if
condition|(
name|m
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|methodName
argument_list|)
operator|&&
name|m
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
operator|==
literal|1
operator|&&
operator|(
name|pcls
operator|==
literal|null
operator|||
name|pcls
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|)
condition|)
block|{
name|jaxbMethods
operator|.
name|add
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|jaxbMethods
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|elField
operator|!=
literal|null
condition|)
block|{
comment|// JAXB Type get XmlElement Annotation
name|XmlElement
name|el
init|=
name|elField
operator|.
name|getAnnotation
argument_list|(
name|XmlElement
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|el
operator|!=
literal|null
operator|&&
operator|(
name|partName
operator|.
name|equals
argument_list|(
name|el
operator|.
name|name
argument_list|()
argument_list|)
operator|||
literal|"##default"
operator|.
name|equals
argument_list|(
name|el
operator|.
name|name
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|ReflectionUtil
operator|.
name|setAccessible
argument_list|(
name|elField
argument_list|)
expr_stmt|;
name|fields
operator|.
name|add
argument_list|(
name|elField
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|getMethod
operator|==
literal|null
operator|&&
name|setMethod
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|el
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|warning
argument_list|(
literal|"Could not create accessor for property "
operator|+
name|partName
operator|+
literal|" of type "
operator|+
name|wrapperType
operator|.
name|getName
argument_list|()
operator|+
literal|" as the @XmlElement "
operator|+
literal|"defines the name as "
operator|+
name|el
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|warning
argument_list|(
literal|"Could not create accessor for property "
operator|+
name|partName
operator|+
literal|" of type "
operator|+
name|wrapperType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|fields
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|fields
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|createWrapperHelper
argument_list|(
name|wrapperType
argument_list|,
name|setMethods
operator|.
name|toArray
argument_list|(
operator|new
name|Method
index|[
name|setMethods
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|getMethods
operator|.
name|toArray
argument_list|(
operator|new
name|Method
index|[
name|getMethods
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|jaxbMethods
operator|.
name|toArray
argument_list|(
operator|new
name|Method
index|[
name|jaxbMethods
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|fields
operator|.
name|toArray
argument_list|(
operator|new
name|Field
index|[
name|fields
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|objectFactory
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Field
name|getElField
parameter_list|(
name|String
name|partName
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|wrapperType
parameter_list|)
block|{
name|String
name|fieldName
init|=
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
name|partName
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
decl_stmt|;
for|for
control|(
name|Field
name|field
range|:
name|wrapperType
operator|.
name|getDeclaredFields
argument_list|()
control|)
block|{
name|XmlElement
name|el
init|=
name|field
operator|.
name|getAnnotation
argument_list|(
name|XmlElement
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|el
operator|!=
literal|null
operator|&&
name|partName
operator|.
name|equals
argument_list|(
name|el
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|field
return|;
block|}
if|if
condition|(
name|field
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
condition|)
block|{
return|return
name|field
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
specifier|static
name|WrapperHelper
name|createWrapperHelper
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|wrapperType
parameter_list|,
name|Method
name|setMethods
index|[]
parameter_list|,
name|Method
name|getMethods
index|[]
parameter_list|,
name|Method
name|jaxbMethods
index|[]
parameter_list|,
name|Field
name|fields
index|[]
parameter_list|,
name|Object
name|objectFactory
parameter_list|)
block|{
name|WrapperHelper
name|wh
init|=
name|compileWrapperHelper
argument_list|(
name|wrapperType
argument_list|,
name|setMethods
argument_list|,
name|getMethods
argument_list|,
name|jaxbMethods
argument_list|,
name|fields
argument_list|,
name|objectFactory
argument_list|)
decl_stmt|;
if|if
condition|(
name|wh
operator|==
literal|null
condition|)
block|{
name|wh
operator|=
operator|new
name|JAXBWrapperHelper
argument_list|(
name|wrapperType
argument_list|,
name|setMethods
argument_list|,
name|getMethods
argument_list|,
name|jaxbMethods
argument_list|,
name|fields
argument_list|,
name|objectFactory
argument_list|)
expr_stmt|;
block|}
return|return
name|wh
return|;
block|}
specifier|private
specifier|static
name|WrapperHelper
name|compileWrapperHelper
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|wrapperType
parameter_list|,
name|Method
name|setMethods
index|[]
parameter_list|,
name|Method
name|getMethods
index|[]
parameter_list|,
name|Method
name|jaxbMethods
index|[]
parameter_list|,
name|Field
name|fields
index|[]
parameter_list|,
name|Object
name|objectFactory
parameter_list|)
block|{
return|return
name|WrapperHelperCompiler
operator|.
name|compileWrapperHelper
argument_list|(
name|wrapperType
argument_list|,
name|setMethods
argument_list|,
name|getMethods
argument_list|,
name|jaxbMethods
argument_list|,
name|fields
argument_list|,
name|objectFactory
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getOutFaultInterceptors
parameter_list|()
block|{
return|return
name|outFault
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getInFaultInterceptors
parameter_list|()
block|{
return|return
name|inFault
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getInInterceptors
parameter_list|()
block|{
return|return
name|in
return|;
block|}
specifier|public
name|List
argument_list|<
name|Interceptor
argument_list|<
name|?
extends|extends
name|Message
argument_list|>
argument_list|>
name|getOutInterceptors
parameter_list|()
block|{
return|return
name|out
return|;
block|}
block|}
end_class

end_unit

