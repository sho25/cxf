begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|ref
operator|.
name|WeakReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|SchemaOutputResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|ValidationEventHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementDecl
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLEventReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLEventWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|CacheMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|xmlschema
operator|.
name|SchemaCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|AbstractDataBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|DataWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|io
operator|.
name|DataReaderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
operator|.
name|io
operator|.
name|DataWriterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
operator|.
name|ServiceConstructionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ObjectFactory
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|JAXBDataBinding
extends|extends
name|AbstractDataBinding
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SCHEMA_RESOURCE
init|=
literal|"SCHEMRESOURCE"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MTOM_THRESHOLD
init|=
literal|"org.apache.cxf.jaxb.mtomThreshold"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|UNWRAP_JAXB_ELEMENT
init|=
literal|"unwrap.jaxb.element"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|USE_JAXB_BRIDGE
init|=
literal|"use.jaxb.bridge"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|JAXBDataBinding
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|SUPPORTED_READER_FORMATS
index|[]
init|=
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|Node
operator|.
name|class
operator|,
name|XMLEventReader
operator|.
name|class
operator|,
name|XMLStreamReader
operator|.
name|class
block|}
empty_stmt|;
specifier|private
specifier|static
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|SUPPORTED_WRITER_FORMATS
index|[]
init|=
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|OutputStream
operator|.
name|class
operator|,
name|Node
operator|.
name|class
operator|,
name|XMLEventWriter
operator|.
name|class
operator|,
name|XMLStreamWriter
operator|.
name|class
block|}
empty_stmt|;
specifier|private
specifier|static
specifier|final
class|class
name|CachedContextAndSchemas
block|{
specifier|private
name|JAXBContext
name|context
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|DOMSource
argument_list|>
name|schemas
decl_stmt|;
name|CachedContextAndSchemas
parameter_list|(
name|JAXBContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
specifier|public
name|JAXBContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|DOMSource
argument_list|>
name|getSchemas
parameter_list|()
block|{
return|return
name|schemas
return|;
block|}
specifier|public
name|void
name|setSchemas
parameter_list|(
name|Collection
argument_list|<
name|DOMSource
argument_list|>
name|schemas
parameter_list|)
block|{
name|this
operator|.
name|schemas
operator|=
name|schemas
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
specifier|final
class|class
name|CachedClassOrNull
block|{
specifier|private
name|WeakReference
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|cachedClass
decl_stmt|;
specifier|public
name|CachedClassOrNull
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cachedClass
parameter_list|)
block|{
name|this
operator|.
name|cachedClass
operator|=
operator|new
name|WeakReference
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|(
name|cachedClass
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getCachedClass
parameter_list|()
block|{
return|return
name|cachedClass
operator|==
literal|null
condition|?
literal|null
else|:
name|cachedClass
operator|.
name|get
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCachedClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cachedClass
parameter_list|)
block|{
name|this
operator|.
name|cachedClass
operator|=
operator|new
name|WeakReference
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|(
name|cachedClass
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|,
name|CachedContextAndSchemas
argument_list|>
name|JAXBCONTEXT_CACHE
init|=
operator|new
name|CacheMap
argument_list|<
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|,
name|CachedContextAndSchemas
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|Package
argument_list|,
name|CachedClassOrNull
argument_list|>
name|OBJECT_FACTORY_CACHE
init|=
operator|new
name|CacheMap
argument_list|<
name|Package
argument_list|,
name|CachedClassOrNull
argument_list|>
argument_list|()
decl_stmt|;
name|Class
index|[]
name|extraClass
decl_stmt|;
name|JAXBContext
name|context
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|contextClasses
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|cls
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|contextProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|unmarshallerProperties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|private
name|Unmarshaller
operator|.
name|Listener
name|unmarshallerListener
decl_stmt|;
specifier|private
name|Marshaller
operator|.
name|Listener
name|marshallerListener
decl_stmt|;
specifier|private
name|ValidationEventHandler
name|validationEventHandler
decl_stmt|;
specifier|private
name|boolean
name|qualifiedSchemas
decl_stmt|;
specifier|private
name|Service
name|service
decl_stmt|;
specifier|public
name|JAXBDataBinding
parameter_list|()
block|{     }
specifier|public
name|JAXBDataBinding
parameter_list|(
name|boolean
name|q
parameter_list|)
block|{
name|this
operator|.
name|qualifiedSchemas
operator|=
name|q
expr_stmt|;
block|}
specifier|public
name|JAXBDataBinding
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|classes
parameter_list|)
throws|throws
name|JAXBException
block|{
name|contextClasses
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|contextClasses
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|classes
argument_list|)
argument_list|)
expr_stmt|;
name|setContext
argument_list|(
name|createJAXBContext
argument_list|(
name|contextClasses
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JAXBDataBinding
parameter_list|(
name|JAXBContext
name|context
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JAXBContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
specifier|public
name|void
name|setContext
parameter_list|(
name|JAXBContext
name|ctx
parameter_list|)
block|{
name|context
operator|=
name|ctx
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|DataWriter
argument_list|<
name|T
argument_list|>
name|createWriter
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|c
parameter_list|)
block|{
name|Integer
name|mtomThresholdInt
init|=
operator|new
name|Integer
argument_list|(
name|getMtomThreshold
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|==
name|XMLStreamWriter
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|XMLStreamWriter
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|XMLStreamWriter
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|OutputStream
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|OutputStream
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|OutputStream
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|XMLEventWriter
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|XMLEventWriter
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|XMLEventWriter
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|Node
operator|.
name|class
condition|)
block|{
name|DataWriterImpl
argument_list|<
name|Node
argument_list|>
name|r
init|=
operator|new
name|DataWriterImpl
argument_list|<
name|Node
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|r
operator|.
name|setMtomThreshold
argument_list|(
name|mtomThresholdInt
argument_list|)
expr_stmt|;
return|return
operator|(
name|DataWriter
argument_list|<
name|T
argument_list|>
operator|)
name|r
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|getSupportedWriterFormats
parameter_list|()
block|{
return|return
name|SUPPORTED_WRITER_FORMATS
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|DataReader
argument_list|<
name|T
argument_list|>
name|createReader
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|c
parameter_list|)
block|{
name|DataReader
argument_list|<
name|T
argument_list|>
name|dr
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|c
operator|==
name|XMLStreamReader
operator|.
name|class
condition|)
block|{
name|dr
operator|=
operator|(
name|DataReader
argument_list|<
name|T
argument_list|>
operator|)
operator|new
name|DataReaderImpl
argument_list|<
name|XMLStreamReader
argument_list|>
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|XMLEventReader
operator|.
name|class
condition|)
block|{
name|dr
operator|=
operator|(
name|DataReader
argument_list|<
name|T
argument_list|>
operator|)
operator|new
name|DataReaderImpl
argument_list|<
name|XMLEventReader
argument_list|>
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|Node
operator|.
name|class
condition|)
block|{
name|dr
operator|=
operator|(
name|DataReader
argument_list|<
name|T
argument_list|>
operator|)
operator|new
name|DataReaderImpl
argument_list|<
name|Node
argument_list|>
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
return|return
name|dr
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|getSupportedReaderFormats
parameter_list|()
block|{
return|return
name|SUPPORTED_READER_FORMATS
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|void
name|initialize
parameter_list|(
name|Service
name|aservice
parameter_list|)
block|{
name|this
operator|.
name|service
operator|=
name|aservice
expr_stmt|;
comment|// context is already set, don't redo it
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|contextClasses
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|ServiceInfo
name|serviceInfo
range|:
name|service
operator|.
name|getServiceInfos
argument_list|()
control|)
block|{
name|JAXBContextInitializer
name|initializer
init|=
operator|new
name|JAXBContextInitializer
argument_list|(
name|serviceInfo
argument_list|,
name|contextClasses
argument_list|)
decl_stmt|;
name|initializer
operator|.
name|walk
argument_list|()
expr_stmt|;
if|if
condition|(
name|serviceInfo
operator|.
name|getProperty
argument_list|(
literal|"extra.class"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|exClasses
init|=
name|serviceInfo
operator|.
name|getProperty
argument_list|(
literal|"extra.class"
argument_list|,
name|Set
operator|.
name|class
argument_list|)
decl_stmt|;
name|contextClasses
operator|.
name|addAll
argument_list|(
name|exClasses
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|tns
init|=
name|service
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
name|CachedContextAndSchemas
name|cachedContextAndSchemas
init|=
literal|null
decl_stmt|;
name|JAXBContext
name|ctx
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
name|service
operator|.
name|getServiceInfos
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|tns
operator|=
name|service
operator|.
name|getServiceInfos
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
expr_stmt|;
block|}
name|cachedContextAndSchemas
operator|=
name|createJAXBContextAndSchemas
argument_list|(
name|contextClasses
argument_list|,
name|tns
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e1
parameter_list|)
block|{
comment|// load jaxb needed class and try to create jaxb context for more
comment|// times
name|boolean
name|added
init|=
name|addJaxbObjectFactory
argument_list|(
name|e1
argument_list|)
decl_stmt|;
while|while
condition|(
name|cachedContextAndSchemas
operator|==
literal|null
operator|&&
name|added
condition|)
block|{
try|try
block|{
name|ctx
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|contextClasses
operator|.
name|toArray
argument_list|(
operator|new
name|Class
index|[
name|contextClasses
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|cachedContextAndSchemas
operator|=
operator|new
name|CachedContextAndSchemas
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
name|e1
operator|=
name|e
expr_stmt|;
name|added
operator|=
name|addJaxbObjectFactory
argument_list|(
name|e1
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|ctx
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ServiceConstructionException
argument_list|(
name|e1
argument_list|)
throw|;
block|}
else|else
block|{
synchronized|synchronized
init|(
name|JAXBCONTEXT_CACHE
init|)
block|{
name|JAXBCONTEXT_CACHE
operator|.
name|put
argument_list|(
name|contextClasses
argument_list|,
name|cachedContextAndSchemas
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|ctx
operator|=
name|cachedContextAndSchemas
operator|.
name|getContext
argument_list|()
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isLoggable
argument_list|(
name|Level
operator|.
name|FINE
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|FINE
argument_list|,
literal|"CREATED_JAXB_CONTEXT"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|ctx
block|,
name|contextClasses
block|}
argument_list|)
expr_stmt|;
block|}
name|setContext
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
for|for
control|(
name|ServiceInfo
name|serviceInfo
range|:
name|service
operator|.
name|getServiceInfos
argument_list|()
control|)
block|{
name|SchemaCollection
name|col
init|=
name|serviceInfo
operator|.
name|getXmlSchemaCollection
argument_list|()
decl_stmt|;
if|if
condition|(
name|col
operator|.
name|getXmlSchemas
argument_list|()
operator|.
name|length
operator|>
literal|1
condition|)
block|{
comment|// someone has already filled in the types
continue|continue;
block|}
name|boolean
name|schemasFromCache
init|=
literal|false
decl_stmt|;
name|Collection
argument_list|<
name|DOMSource
argument_list|>
name|schemas
init|=
name|getSchemas
argument_list|()
decl_stmt|;
if|if
condition|(
name|schemas
operator|==
literal|null
condition|)
block|{
name|schemas
operator|=
name|cachedContextAndSchemas
operator|.
name|getSchemas
argument_list|()
expr_stmt|;
if|if
condition|(
name|schemas
operator|!=
literal|null
condition|)
block|{
name|schemasFromCache
operator|=
literal|true
expr_stmt|;
block|}
block|}
else|else
block|{
name|schemasFromCache
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|schemas
operator|==
literal|null
condition|)
block|{
name|schemas
operator|=
operator|new
name|HashSet
argument_list|<
name|DOMSource
argument_list|>
argument_list|()
expr_stmt|;
try|try
block|{
for|for
control|(
name|DOMResult
name|r
range|:
name|generateJaxbSchemas
argument_list|()
control|)
block|{
name|schemas
operator|.
name|add
argument_list|(
operator|new
name|DOMSource
argument_list|(
name|r
operator|.
name|getNode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceConstructionException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"SCHEMA_GEN_EXC"
argument_list|,
name|LOG
argument_list|)
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
for|for
control|(
name|DOMSource
name|r
range|:
name|schemas
control|)
block|{
name|addSchemaDocument
argument_list|(
name|serviceInfo
argument_list|,
name|col
argument_list|,
operator|(
name|Document
operator|)
name|r
operator|.
name|getNode
argument_list|()
argument_list|,
name|r
operator|.
name|getSystemId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JAXBContext
name|riContext
decl_stmt|;
if|if
condition|(
name|context
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.sun.xml."
argument_list|)
condition|)
block|{
name|riContext
operator|=
name|context
expr_stmt|;
block|}
else|else
block|{
comment|// fall back if we're using another jaxb implementation
try|try
block|{
name|riContext
operator|=
name|JAXBUtils
operator|.
name|createRIContext
argument_list|(
name|contextClasses
operator|.
name|toArray
argument_list|(
operator|new
name|Class
index|[
name|contextClasses
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|tns
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceConstructionException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
name|JAXBSchemaInitializer
name|schemaInit
init|=
operator|new
name|JAXBSchemaInitializer
argument_list|(
name|serviceInfo
argument_list|,
name|col
argument_list|,
name|riContext
argument_list|,
name|this
operator|.
name|qualifiedSchemas
argument_list|)
decl_stmt|;
name|schemaInit
operator|.
name|walk
argument_list|()
expr_stmt|;
if|if
condition|(
name|cachedContextAndSchemas
operator|!=
literal|null
operator|&&
operator|!
name|schemasFromCache
condition|)
block|{
name|cachedContextAndSchemas
operator|.
name|setSchemas
argument_list|(
name|schemas
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setExtraClass
parameter_list|(
name|Class
index|[]
name|userExtraClass
parameter_list|)
block|{
name|extraClass
operator|=
name|userExtraClass
expr_stmt|;
block|}
specifier|public
name|Class
index|[]
name|getExtraClass
parameter_list|()
block|{
return|return
name|extraClass
return|;
block|}
comment|// default access for tests.
name|List
argument_list|<
name|DOMResult
argument_list|>
name|generateJaxbSchemas
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|List
argument_list|<
name|DOMResult
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<
name|DOMResult
argument_list|>
argument_list|()
decl_stmt|;
name|context
operator|.
name|generateSchema
argument_list|(
operator|new
name|SchemaOutputResolver
argument_list|()
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|builtIns
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
block|{
name|builtIns
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2005/02/addressing/wsdl"
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr-wsdl.xsd"
argument_list|)
expr_stmt|;
name|builtIns
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2005/08/addressing"
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr.xsd"
argument_list|)
expr_stmt|;
name|builtIns
operator|.
name|put
argument_list|(
literal|"http://schemas.xmlsoap.org/ws/2005/02/rm"
argument_list|,
literal|"classpath:/schemas/wsdl/wsrm.xsd"
argument_list|)
expr_stmt|;
name|builtIns
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2005/05/xmlmime"
argument_list|,
literal|"classpath:/schemas/wsdl/ws-addr.xsd"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Result
name|createOutput
parameter_list|(
name|String
name|ns
parameter_list|,
name|String
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|DOMResult
name|result
init|=
operator|new
name|DOMResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|builtIns
operator|.
name|containsKey
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|result
operator|.
name|setSystemId
argument_list|(
name|builtIns
operator|.
name|get
argument_list|(
name|ns
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
name|result
operator|.
name|setSystemId
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|results
operator|.
name|add
argument_list|(
name|result
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|results
return|;
block|}
specifier|public
name|JAXBContext
name|createJAXBContext
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
throws|throws
name|JAXBException
block|{
return|return
name|createJAXBContext
argument_list|(
name|classes
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|JAXBContext
name|createJAXBContext
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|,
name|String
name|defaultNs
parameter_list|)
throws|throws
name|JAXBException
block|{
return|return
name|createJAXBContextAndSchemas
argument_list|(
name|classes
argument_list|,
name|defaultNs
argument_list|)
operator|.
name|getContext
argument_list|()
return|;
block|}
specifier|public
name|CachedContextAndSchemas
name|createJAXBContextAndSchemas
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|,
name|String
name|defaultNs
parameter_list|)
throws|throws
name|JAXBException
block|{
comment|// add user extra class into jaxb context
if|if
condition|(
name|extraClass
operator|!=
literal|null
operator|&&
name|extraClass
operator|.
name|length
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Class
name|clz
range|:
name|extraClass
control|)
block|{
name|classes
operator|.
name|add
argument_list|(
name|clz
argument_list|)
expr_stmt|;
block|}
block|}
name|scanPackages
argument_list|(
name|classes
argument_list|)
expr_stmt|;
name|addWsAddressingTypes
argument_list|(
name|classes
argument_list|)
expr_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|clz
range|:
name|classes
control|)
block|{
if|if
condition|(
name|clz
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"ObjectFactory"
argument_list|)
operator|&&
name|checkObjectFactoryNamespaces
argument_list|(
name|clz
argument_list|)
condition|)
block|{
comment|// kind of a hack, but ObjectFactories may be created with empty
comment|// namespaces
name|defaultNs
operator|=
literal|null
expr_stmt|;
block|}
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|defaultNs
operator|!=
literal|null
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"com.sun.xml.bind.defaultNamespaceRemap"
argument_list|,
name|defaultNs
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|contextProperties
operator|!=
literal|null
condition|)
block|{
comment|// add any specified context properties into the properties map
name|map
operator|.
name|putAll
argument_list|(
name|contextProperties
argument_list|)
expr_stmt|;
block|}
name|CachedContextAndSchemas
name|cachedContextAndSchemas
init|=
literal|null
decl_stmt|;
synchronized|synchronized
init|(
name|JAXBCONTEXT_CACHE
init|)
block|{
name|cachedContextAndSchemas
operator|=
name|JAXBCONTEXT_CACHE
operator|.
name|get
argument_list|(
name|classes
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cachedContextAndSchemas
operator|==
literal|null
condition|)
block|{
name|JAXBContext
name|ctx
decl_stmt|;
try|try
block|{
name|ctx
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|classes
operator|.
name|toArray
argument_list|(
operator|new
name|Class
index|[
name|classes
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
if|if
condition|(
name|map
operator|.
name|containsKey
argument_list|(
literal|"com.sun.xml.bind.defaultNamespaceRemap"
argument_list|)
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"com.sun.xml.internal.bind.defaultNamespaceRemap"
argument_list|,
name|map
operator|.
name|remove
argument_list|(
literal|"com.sun.xml.bind.defaultNamespaceRemap"
argument_list|)
argument_list|)
expr_stmt|;
name|ctx
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|classes
operator|.
name|toArray
argument_list|(
operator|new
name|Class
index|[
name|classes
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
name|ex
throw|;
block|}
block|}
name|cachedContextAndSchemas
operator|=
operator|new
name|CachedContextAndSchemas
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|JAXBCONTEXT_CACHE
init|)
block|{
name|JAXBCONTEXT_CACHE
operator|.
name|put
argument_list|(
name|classes
argument_list|,
name|cachedContextAndSchemas
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|cachedContextAndSchemas
return|;
block|}
specifier|private
name|void
name|scanPackages
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
comment|// try and read any jaxb.index files that are with the other classes.
comment|// This should
comment|// allow loading of extra classes (such as subclasses for inheritance
comment|// reasons)
comment|// that are in the same package. Also check for ObjectFactory classes
name|Map
argument_list|<
name|String
argument_list|,
name|InputStream
argument_list|>
name|packages
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|InputStream
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ClassLoader
argument_list|>
name|packageLoaders
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ClassLoader
argument_list|>
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|objectFactories
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|jcls
range|:
name|classes
control|)
block|{
name|String
name|pkgName
init|=
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|jcls
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|packages
operator|.
name|containsKey
argument_list|(
name|pkgName
argument_list|)
condition|)
block|{
name|Package
name|pkg
init|=
name|jcls
operator|.
name|getPackage
argument_list|()
decl_stmt|;
name|packages
operator|.
name|put
argument_list|(
name|pkgName
argument_list|,
name|jcls
operator|.
name|getResourceAsStream
argument_list|(
literal|"jaxb.index"
argument_list|)
argument_list|)
expr_stmt|;
name|packageLoaders
operator|.
name|put
argument_list|(
name|pkgName
argument_list|,
name|jcls
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|objectFactoryClassName
init|=
name|pkgName
operator|+
literal|"."
operator|+
literal|"ObjectFactory"
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|ofactory
init|=
literal|null
decl_stmt|;
name|CachedClassOrNull
name|cachedFactory
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|pkg
operator|!=
literal|null
condition|)
block|{
synchronized|synchronized
init|(
name|OBJECT_FACTORY_CACHE
init|)
block|{
name|cachedFactory
operator|=
name|OBJECT_FACTORY_CACHE
operator|.
name|get
argument_list|(
name|pkg
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|cachedFactory
operator|!=
literal|null
condition|)
block|{
name|ofactory
operator|=
name|cachedFactory
operator|.
name|getCachedClass
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|ofactory
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|ofactory
operator|=
name|Class
operator|.
name|forName
argument_list|(
name|objectFactoryClassName
argument_list|,
literal|false
argument_list|,
name|jcls
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|objectFactories
operator|.
name|add
argument_list|(
name|ofactory
argument_list|)
expr_stmt|;
name|addToObjectFactoryCache
argument_list|(
name|pkg
argument_list|,
name|ofactory
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
name|addToObjectFactoryCache
argument_list|(
name|pkg
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|objectFactories
operator|.
name|add
argument_list|(
name|ofactory
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|InputStream
argument_list|>
name|entry
range|:
name|packages
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|entry
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|pkg
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|ClassLoader
name|loader
init|=
name|packageLoaders
operator|.
name|get
argument_list|(
name|pkg
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|pkg
argument_list|)
condition|)
block|{
name|pkg
operator|+=
literal|"."
expr_stmt|;
block|}
name|String
name|line
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
while|while
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
name|line
operator|=
name|line
operator|.
name|trim
argument_list|()
expr_stmt|;
if|if
condition|(
name|line
operator|.
name|indexOf
argument_list|(
literal|"#"
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|line
operator|=
name|line
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|line
operator|.
name|indexOf
argument_list|(
literal|"#"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|line
argument_list|)
condition|)
block|{
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|ncls
init|=
name|Class
operator|.
name|forName
argument_list|(
name|pkg
operator|+
name|line
argument_list|,
literal|false
argument_list|,
name|loader
argument_list|)
decl_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|ncls
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
finally|finally
block|{
try|try
block|{
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
block|}
name|classes
operator|.
name|addAll
argument_list|(
name|objectFactories
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|checkObjectFactoryNamespaces
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clz
parameter_list|)
block|{
for|for
control|(
name|Method
name|meth
range|:
name|clz
operator|.
name|getMethods
argument_list|()
control|)
block|{
name|XmlElementDecl
name|decl
init|=
name|meth
operator|.
name|getAnnotation
argument_list|(
name|XmlElementDecl
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|decl
operator|!=
literal|null
operator|&&
name|XmlElementDecl
operator|.
name|GLOBAL
operator|.
name|class
operator|.
name|equals
argument_list|(
name|decl
operator|.
name|scope
argument_list|()
argument_list|)
operator|&&
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|decl
operator|.
name|namespace
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|void
name|addToObjectFactoryCache
parameter_list|(
name|Package
name|objectFactoryPkg
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|ofactory
parameter_list|)
block|{
if|if
condition|(
name|objectFactoryPkg
operator|==
literal|null
condition|)
block|{
return|return;
block|}
synchronized|synchronized
init|(
name|OBJECT_FACTORY_CACHE
init|)
block|{
name|OBJECT_FACTORY_CACHE
operator|.
name|put
argument_list|(
name|objectFactoryPkg
argument_list|,
operator|new
name|CachedClassOrNull
argument_list|(
name|ofactory
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|addWsAddressingTypes
parameter_list|(
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
if|if
condition|(
name|classes
operator|.
name|contains
argument_list|(
name|ObjectFactory
operator|.
name|class
argument_list|)
condition|)
block|{
comment|// ws-addressing is used, lets add the specific types
try|try
block|{
name|classes
operator|.
name|add
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.cxf.ws.addressing.wsdl.ObjectFactory"
argument_list|)
argument_list|)
expr_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.cxf.ws.addressing.wsdl.AttributedQNameType"
argument_list|)
argument_list|)
expr_stmt|;
name|classes
operator|.
name|add
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.cxf.ws.addressing.wsdl.ServiceNameType"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|unused
parameter_list|)
block|{
comment|// REVISIT - ignorable if WS-ADDRESSING not available?
comment|// maybe add a way to allow interceptors to add stuff to the
comment|// context?
block|}
block|}
block|}
specifier|public
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getContextClasses
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|this
operator|.
name|contextClasses
argument_list|)
return|;
block|}
comment|// Now we can not add all the classes that Jaxb needed into JaxbContext,
comment|// especially when
comment|// an ObjectFactory is pointed to by an jaxb @XmlElementDecl annotation
comment|// added this workaround method to load the jaxb needed ObjectFactory class
specifier|public
name|boolean
name|addJaxbObjectFactory
parameter_list|(
name|JAXBException
name|e1
parameter_list|)
block|{
name|boolean
name|added
init|=
literal|false
decl_stmt|;
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
name|bout
init|=
operator|new
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|java
operator|.
name|io
operator|.
name|PrintStream
name|pout
init|=
operator|new
name|java
operator|.
name|io
operator|.
name|PrintStream
argument_list|(
name|bout
argument_list|)
decl_stmt|;
name|e1
operator|.
name|printStackTrace
argument_list|(
name|pout
argument_list|)
expr_stmt|;
name|String
name|str
init|=
operator|new
name|String
argument_list|(
name|bout
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|Pattern
name|pattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"(?<=There's\\sno\\sObjectFactory\\swith\\san\\s"
operator|+
literal|"@XmlElementDecl\\sfor\\sthe\\selement\\s\\{)\\S*(?=\\})"
argument_list|)
decl_stmt|;
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
name|matcher
init|=
name|pattern
operator|.
name|matcher
argument_list|(
name|str
argument_list|)
decl_stmt|;
while|while
condition|(
name|matcher
operator|.
name|find
argument_list|()
condition|)
block|{
name|String
name|pkgName
init|=
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
name|matcher
operator|.
name|group
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|Class
name|clz
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|loadClass
argument_list|(
name|pkgName
operator|+
literal|"."
operator|+
literal|"ObjectFactory"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|contextClasses
operator|.
name|contains
argument_list|(
name|clz
argument_list|)
condition|)
block|{
name|contextClasses
operator|.
name|add
argument_list|(
name|clz
argument_list|)
expr_stmt|;
name|added
operator|=
literal|true
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
return|return
name|added
return|;
block|}
comment|/**      * Return a map of properties. These properties are passed to      * JAXBContext.newInstance when this object creates a context.      *       * @return the map of JAXB context properties.      */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getContextProperties
parameter_list|()
block|{
return|return
name|contextProperties
return|;
block|}
comment|/**      * Set a map of JAXB context properties. These properties are passed to      * JAXBContext.newInstance when this object creates a context. Note that if      * you create a JAXB context elsewhere, you will not respect these      * properties unless you handle it manually.      *       * @param contextProperties map of properties.      */
specifier|public
name|void
name|setContextProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|contextProperties
parameter_list|)
block|{
name|this
operator|.
name|contextProperties
operator|=
name|contextProperties
expr_stmt|;
block|}
comment|/**      * Return a map of properties. These properties are set into the JAXB      * Marshaller (via Marshaller.setProperty(...) when the marshaller is      * created.      *       * @return the map of JAXB marshaller properties.      */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getMarshallerProperties
parameter_list|()
block|{
return|return
name|marshallerProperties
return|;
block|}
comment|/**      * Set a map of JAXB marshaller properties. These properties are set into      * the JAXB Marshaller (via Marshaller.setProperty(...) when the marshaller      * is created.      *       * @param marshallerProperties map of properties.      */
specifier|public
name|void
name|setMarshallerProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|marshallerProperties
parameter_list|)
block|{
name|this
operator|.
name|marshallerProperties
operator|=
name|marshallerProperties
expr_stmt|;
block|}
comment|/**      * Return a map of properties. These properties are set into the JAXB      * Unmarshaller (via Unmarshaller.setProperty(...) when the unmarshaller is      * created.      *       * @return the map of JAXB unmarshaller properties.      */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getUnmarshallerProperties
parameter_list|()
block|{
return|return
name|unmarshallerProperties
return|;
block|}
comment|/**      * Set a map of JAXB unmarshaller properties. These properties are set into      * the JAXB Unmarshaller (via Unmarshaller.setProperty(...) when the unmarshaller      * is created.      *       * @param unmarshallerProperties map of properties.      */
specifier|public
name|void
name|setUnmarshallerProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|unmarshallerProperties
parameter_list|)
block|{
name|this
operator|.
name|unmarshallerProperties
operator|=
name|unmarshallerProperties
expr_stmt|;
block|}
comment|/**      * Returns the Unmarshaller.Listener that will be registered on the Unmarshallers      * @return      */
specifier|public
name|Unmarshaller
operator|.
name|Listener
name|getUnmarshallerListener
parameter_list|()
block|{
return|return
name|unmarshallerListener
return|;
block|}
comment|/**      * Sets the Unmarshaller.Listener that will be registered on the Unmarshallers      * @param unmarshallerListener      */
specifier|public
name|void
name|setUnmarshallerListener
parameter_list|(
name|Unmarshaller
operator|.
name|Listener
name|unmarshallerListener
parameter_list|)
block|{
name|this
operator|.
name|unmarshallerListener
operator|=
name|unmarshallerListener
expr_stmt|;
block|}
comment|/**      * Returns the Marshaller.Listener that will be registered on the Marshallers      * @return      */
specifier|public
name|Marshaller
operator|.
name|Listener
name|getMarshallerListener
parameter_list|()
block|{
return|return
name|marshallerListener
return|;
block|}
comment|/**      * Sets the Marshaller.Listener that will be registered on the Marshallers      * @param marshallerListener      */
specifier|public
name|void
name|setMarshallerListener
parameter_list|(
name|Marshaller
operator|.
name|Listener
name|marshallerListener
parameter_list|)
block|{
name|this
operator|.
name|marshallerListener
operator|=
name|marshallerListener
expr_stmt|;
block|}
specifier|public
name|ValidationEventHandler
name|getValidationEventHandler
parameter_list|()
block|{
return|return
name|validationEventHandler
return|;
block|}
specifier|public
name|void
name|setValidationEventHandler
parameter_list|(
name|ValidationEventHandler
name|validationEventHandler
parameter_list|)
block|{
name|this
operator|.
name|validationEventHandler
operator|=
name|validationEventHandler
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|clearCaches
parameter_list|()
block|{
synchronized|synchronized
init|(
name|JAXBCONTEXT_CACHE
init|)
block|{
name|JAXBCONTEXT_CACHE
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
synchronized|synchronized
init|(
name|OBJECT_FACTORY_CACHE
init|)
block|{
name|OBJECT_FACTORY_CACHE
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

