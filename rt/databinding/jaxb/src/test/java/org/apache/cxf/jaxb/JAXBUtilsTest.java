begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ReflectionUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|GreetMe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
specifier|public
class|class
name|JAXBUtilsTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBuiltInTypeToJavaType
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"boolean"
argument_list|,
name|JAXBUtils
operator|.
name|builtInTypeToJavaType
argument_list|(
literal|"boolean"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javax.xml.datatype.XMLGregorianCalendar"
argument_list|,
name|JAXBUtils
operator|.
name|builtInTypeToJavaType
argument_list|(
literal|"gYear"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|JAXBUtils
operator|.
name|builtInTypeToJavaType
argument_list|(
literal|"other"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPackageNames
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types"
argument_list|)
argument_list|)
expr_stmt|;
comment|// tests of JAXB 2.2 Appendix D.5.1, Rule #1: schemes to be removed are just http and urn
name|assertEquals
argument_list|(
literal|"auto.org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"auto://cxf.apache.org/configuration/types"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mouse.org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"mouse://cxf.apache.org/configuration/types"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h.org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"h://cxf.apache.org/configuration/types"
argument_list|)
argument_list|)
expr_stmt|;
comment|// tests of JAXB 2.2 Appendix D.5.1, Rule #2: file type is one of .?? or .??? or .html
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types_h"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types.h"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types.hi"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types.xsd"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types.html"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types_auto"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types.auto"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.configuration.types_mouse"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/configuration/types.mouse"
argument_list|)
argument_list|)
expr_stmt|;
comment|// other tests
name|assertEquals
argument_list|(
literal|"https.com.mytech.rosette_analysis"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"https://mytech.com/rosette.analysis"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.config._4types_"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/config/4types."
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.config_types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/config-types"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf._default.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://cxf.apache.org/default/types"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com.progress.configuration.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"http://www.progress.com/configuration/types"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.config.types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"urn:cxf-apache-org:config:types"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"types"
argument_list|,
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
literal|"types"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNameToIdentifier
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"_return"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"return"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getReturn"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"return"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setReturn"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"return"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"_public"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"public"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getPublic"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"public"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setPublic"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"public"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"arg0"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"arg0"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getArg0"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"arg0"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setArg0"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"arg0"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"mixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"mixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setMixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"mixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MIXED_CASE_NAME"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"mixedCaseName"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CONSTANT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"answer42"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"Answer42"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Answer42"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"Answer42"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getAnswer42"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"Answer42"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ANSWER_42"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"Answer42"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CONSTANT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"nameWithDashes"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"name-with-dashes"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NameWithDashes"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"name-with-dashes"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setNameWithDashes"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"name-with-dashes"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|SETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NAME_WITH_DASHES"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"name-with-dashes"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CONSTANT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"otherPunctChars"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"other_punct-chars"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|VARIABLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OtherPunctChars"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"other_punct-chars"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getOtherPunctChars"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"other_punct-chars"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|GETTER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OTHER_PUNCT_CHARS"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"other_punct-chars"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CONSTANT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XMLTransfer"
argument_list|,
name|JAXBUtils
operator|.
name|nameToIdentifier
argument_list|(
literal|"XMLTransfer"
argument_list|,
name|JAXBUtils
operator|.
name|IdentifierType
operator|.
name|CLASS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNsToPkg
parameter_list|()
block|{
name|String
name|urn
init|=
literal|"urn:cxf.apache.org"
decl_stmt|;
name|String
name|pkg
init|=
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
name|urn
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf"
argument_list|,
name|pkg
argument_list|)
expr_stmt|;
name|urn
operator|=
literal|"urn:cxf.apache.org:test.v4.6.4"
expr_stmt|;
name|pkg
operator|=
name|JAXBUtils
operator|.
name|namespaceURIToPackage
argument_list|(
name|urn
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.test_v4_6_4"
argument_list|,
name|pkg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetNamespaceMapper
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBContext
name|ctx
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|GreetMe
operator|.
name|class
argument_list|)
decl_stmt|;
name|Marshaller
name|marshaller
init|=
name|ctx
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nspref
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|nspref
operator|.
name|put
argument_list|(
literal|"http://cxf.apache.org/hello_world_soap_http/types"
argument_list|,
literal|"x"
argument_list|)
expr_stmt|;
name|JAXBUtils
operator|.
name|setNamespaceMapper
argument_list|(
name|nspref
argument_list|,
name|marshaller
argument_list|)
expr_stmt|;
name|String
name|mapperkey
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|marshaller
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|contains
argument_list|(
literal|".internal."
argument_list|)
condition|)
block|{
name|mapperkey
operator|=
literal|"com.sun.xml.internal.bind.namespacePrefixMapper"
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|marshaller
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.sun"
argument_list|)
condition|)
block|{
name|mapperkey
operator|=
literal|"com.sun.xml.bind.namespacePrefixMapper"
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|marshaller
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|contains
argument_list|(
literal|"eclipse"
argument_list|)
condition|)
block|{
name|mapperkey
operator|=
literal|"eclipselink.namespace-prefix-mapper"
expr_stmt|;
block|}
if|if
condition|(
name|mapperkey
operator|!=
literal|null
condition|)
block|{
name|Object
name|mapper
init|=
name|marshaller
operator|.
name|getProperty
argument_list|(
name|mapperkey
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mapper
argument_list|)
expr_stmt|;
comment|// also verify this mapper has setContextualNamespaceDecls
name|Method
name|m
init|=
name|ReflectionUtil
operator|.
name|getDeclaredMethod
argument_list|(
name|mapper
operator|.
name|getClass
argument_list|()
argument_list|,
literal|"setContextualNamespaceDecls"
argument_list|,
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|String
index|[]
operator|.
expr|class
block|}
block|)
empty_stmt|;
name|assertNotNull
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
block|}
end_class

unit|}
end_unit

