begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sdo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|AssertionFailedError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractHelloWorldTest
extends|extends
name|AbstractSDOTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBasicInvoke
parameter_list|()
throws|throws
name|Exception
block|{
name|Node
name|response
init|=
name|invoke
argument_list|(
literal|"TestService"
argument_list|,
literal|"bean11.xml"
argument_list|)
decl_stmt|;
name|addNamespace
argument_list|(
literal|"ns1"
argument_list|,
literal|"http://apache.org/cxf/databinding/sdo/hello_world_soap_http/types"
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"/s:Envelope/s:Body/ns1:greetMeResponse"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//ns1:greetMeResponse/ns1:responseType"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//ns1:greetMeResponse/ns1:responseType[text()='Hello World']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStructure
parameter_list|()
throws|throws
name|Exception
block|{
name|Node
name|response
init|=
name|invoke
argument_list|(
literal|"TestService"
argument_list|,
literal|"structure.xml"
argument_list|)
decl_stmt|;
name|addNamespace
argument_list|(
literal|"ns1"
argument_list|,
literal|"http://apache.org/cxf/databinding/sdo/hello_world_soap_http/types"
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"/s:Envelope/s:Body/ns1:echoStructResponse"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//ns1:echoStructResponse/ns1:return"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertValid
argument_list|(
literal|"//ns1:echoStructResponse/ns1:return/ns1:text[text()='Hello']"
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWSDL
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|Document
argument_list|>
name|docs
init|=
name|getWSDLDocuments
argument_list|(
literal|"TestService"
argument_list|)
decl_stmt|;
for|for
control|(
name|Document
name|doc
range|:
name|docs
control|)
block|{
try|try
block|{
name|assertValid
argument_list|(
literal|"/wsdl:definitions/wsdl:types/xsd:schema"
operator|+
literal|"[@targetNamespace='http://apache.org/cxf"
operator|+
literal|"/databinding/sdo/hello_world_soap_http/types']"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
return|return;
block|}
catch|catch
parameter_list|(
name|AssertionFailedError
name|ex
parameter_list|)
block|{
comment|//ignore
block|}
block|}
name|fail
argument_list|(
literal|"Did not find schemas"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

