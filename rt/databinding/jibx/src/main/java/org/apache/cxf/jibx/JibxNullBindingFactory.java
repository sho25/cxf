begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jibx
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jibx
operator|.
name|runtime
operator|.
name|IBindingFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jibx
operator|.
name|runtime
operator|.
name|impl
operator|.
name|BindingFactoryBase
import|;
end_import

begin_comment
comment|/**  * Dummy binding factory for conversion of simple value conversion which do not require a real JiBX binding.  * This code was take from Axis2 JiBX code generation tool.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|JibxNullBindingFactory
extends|extends
name|BindingFactoryBase
implements|implements
name|IBindingFactory
block|{
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|EMPTY_ARRAY
init|=
operator|new
name|String
index|[
literal|0
index|]
decl_stmt|;
specifier|private
specifier|static
name|JibxNullBindingFactory
name|instance
decl_stmt|;
specifier|private
name|JibxNullBindingFactory
parameter_list|()
block|{
name|super
argument_list|(
literal|"null"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|EMPTY_ARRAY
argument_list|,
name|EMPTY_ARRAY
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|EMPTY_ARRAY
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|EMPTY_ARRAY
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getCompilerDistribution
parameter_list|()
block|{
comment|// normally only used by BindingDirectory code, so okay to punt
return|return
literal|""
return|;
block|}
specifier|public
name|int
name|getCompilerVersion
parameter_list|()
block|{
comment|// normally only used by BindingDirectory code, so okay to punt
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getTypeIndex
parameter_list|(
name|String
name|type
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
specifier|public
specifier|static
specifier|synchronized
name|JibxNullBindingFactory
name|getFactory
parameter_list|()
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|JibxNullBindingFactory
argument_list|()
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
block|}
end_class

end_unit

