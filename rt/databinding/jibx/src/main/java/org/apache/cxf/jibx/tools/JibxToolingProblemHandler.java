begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jibx
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jibx
operator|.
name|schema
operator|.
name|validation
operator|.
name|ProblemHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jibx
operator|.
name|schema
operator|.
name|validation
operator|.
name|ValidationProblem
import|;
end_import

begin_class
specifier|public
class|class
name|JibxToolingProblemHandler
implements|implements
name|ProblemHandler
block|{
comment|// We are using JiBXToolingDataBinding logger
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|JibxToolingDataBinding
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|void
name|handleError
parameter_list|(
name|ValidationProblem
name|prob
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|prob
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleFatal
parameter_list|(
name|ValidationProblem
name|prob
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|prob
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleUnimplemented
parameter_list|(
name|ValidationProblem
name|prob
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
literal|"Unimplemented feature - "
operator|+
name|prob
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleWarning
parameter_list|(
name|ValidationProblem
name|prob
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
name|prob
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|report
parameter_list|(
name|String
name|msg
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|terminate
parameter_list|(
name|String
name|msg
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|terminate
parameter_list|(
name|String
name|msg
parameter_list|,
name|Throwable
name|thrown
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|msg
argument_list|,
name|thrown
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleSevere
parameter_list|(
name|String
name|msg
parameter_list|,
name|Throwable
name|thrown
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|msg
argument_list|,
name|thrown
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

