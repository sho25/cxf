begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|browser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|safehtml
operator|.
name|shared
operator|.
name|SafeHtmlUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiTemplate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|browser
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|browser
operator|.
name|Links
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|resources
operator|.
name|LogBrowserConstans
import|;
end_import

begin_class
annotation|@
name|Singleton
specifier|public
class|class
name|ViewerViewImpl
extends|extends
name|Composite
implements|implements
name|ViewerView
block|{
specifier|private
specifier|static
specifier|final
name|DateTimeFormat
name|DT_FORMATTER
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
literal|"HH:mm:ss dd.MM.yyyy"
argument_list|)
decl_stmt|;
annotation|@
name|UiTemplate
argument_list|(
literal|"ViewerView.ui.xml"
argument_list|)
interface|interface
name|ViewerViewUiBinder
extends|extends
name|UiBinder
argument_list|<
name|Widget
argument_list|,
name|ViewerViewImpl
argument_list|>
block|{ }
specifier|private
specifier|static
specifier|final
name|ViewerViewUiBinder
name|UI_BINDER
init|=
name|GWT
operator|.
name|create
argument_list|(
name|ViewerViewUiBinder
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|EntryTable
name|entryTable
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|HTML
name|entryDetails
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|Anchor
name|refreshButton
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|Anchor
name|newerButton
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|Anchor
name|olderButton
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|Anchor
name|lastButton
decl_stmt|;
annotation|@
name|UiField
annotation|@
name|Nonnull
name|Anchor
name|firstButton
decl_stmt|;
specifier|private
name|Presenter
name|presenter
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|LogBrowserConstans
name|constans
decl_stmt|;
annotation|@
name|Inject
specifier|public
name|ViewerViewImpl
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|LogBrowserConstans
name|constans
parameter_list|)
block|{
name|this
operator|.
name|constans
operator|=
name|constans
expr_stmt|;
name|initWidget
argument_list|(
name|UI_BINDER
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|initEntryTable
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setEntries
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|List
argument_list|<
name|Entry
argument_list|>
name|entries
parameter_list|)
block|{
name|entryTable
operator|.
name|setData
argument_list|(
name|entries
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMessageInsteadOfEntries
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|String
name|message
parameter_list|,
annotation|@
name|Nullable
specifier|final
name|String
name|styleName
parameter_list|)
block|{
name|entryTable
operator|.
name|setMessageInsteadOfData
argument_list|(
name|message
argument_list|,
name|styleName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEntryDetails
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|Entry
name|entry
parameter_list|)
block|{
if|if
condition|(
name|entry
operator|==
literal|null
condition|)
block|{
name|entryDetails
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|val
init|=
name|entry
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|?
name|entry
operator|.
name|getMessage
argument_list|()
else|:
name|entry
operator|.
name|getThrowable
argument_list|()
operator|!=
literal|null
condition|?
name|entry
operator|.
name|getThrowable
argument_list|()
else|:
literal|""
decl_stmt|;
name|entryDetails
operator|.
name|setHTML
argument_list|(
name|SafeHtmlUtils
operator|.
name|fromString
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setLinks
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Links
name|links
parameter_list|)
block|{
name|olderButton
operator|.
name|setVisible
argument_list|(
name|links
operator|.
name|previousAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|newerButton
operator|.
name|setVisible
argument_list|(
name|links
operator|.
name|nextAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|refreshButton
operator|.
name|setVisible
argument_list|(
name|links
operator|.
name|selfAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|lastButton
operator|.
name|setVisible
argument_list|(
name|links
operator|.
name|lastAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|firstButton
operator|.
name|setVisible
argument_list|(
name|links
operator|.
name|firstAvailable
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"firstButton"
argument_list|)
name|void
name|onFirstButtonClicked
parameter_list|(
annotation|@
name|Nonnull
name|ClickEvent
name|event
parameter_list|)
block|{
assert|assert
name|presenter
operator|!=
literal|null
assert|;
name|presenter
operator|.
name|onFirstButtonClicked
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"newerButton"
argument_list|)
name|void
name|onNewerButtonClicked
parameter_list|(
annotation|@
name|Nonnull
name|ClickEvent
name|event
parameter_list|)
block|{
assert|assert
name|presenter
operator|!=
literal|null
assert|;
name|presenter
operator|.
name|onNewerButtonClicked
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"refreshButton"
argument_list|)
name|void
name|onRefreshButtonClicked
parameter_list|(
annotation|@
name|Nonnull
name|ClickEvent
name|event
parameter_list|)
block|{
assert|assert
name|presenter
operator|!=
literal|null
assert|;
name|presenter
operator|.
name|onRefreshButtonClicked
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"olderButton"
argument_list|)
name|void
name|onOlderButtonClicked
parameter_list|(
annotation|@
name|Nonnull
name|ClickEvent
name|event
parameter_list|)
block|{
assert|assert
name|presenter
operator|!=
literal|null
assert|;
name|presenter
operator|.
name|onOlderButtonClicked
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"lastButton"
argument_list|)
name|void
name|onLastButtonClicked
parameter_list|(
annotation|@
name|Nonnull
name|ClickEvent
name|event
parameter_list|)
block|{
assert|assert
name|presenter
operator|!=
literal|null
assert|;
name|presenter
operator|.
name|onLastButtonClicked
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initEntryTable
parameter_list|()
block|{
name|entryTable
operator|.
name|setColumnDefinitions
argument_list|(
operator|new
name|SelectableTable
operator|.
name|ColumnDefinition
argument_list|<
name|Entry
argument_list|>
argument_list|()
block|{
specifier|public
name|String
name|getContent
parameter_list|(
name|Entry
name|entry
parameter_list|)
block|{
return|return
name|DT_FORMATTER
operator|.
name|format
argument_list|(
name|entry
operator|.
name|getEventTimestamp
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|String
name|getWidth
parameter_list|()
block|{
return|return
name|constans
operator|.
name|browseTabDatatimeColumnWidth
argument_list|()
return|;
block|}
block|}
argument_list|,
operator|new
name|SelectableTable
operator|.
name|ColumnDefinition
argument_list|<
name|Entry
argument_list|>
argument_list|()
block|{
specifier|public
name|String
name|getContent
parameter_list|(
name|Entry
name|entry
parameter_list|)
block|{
return|return
name|entry
operator|.
name|getLevel
argument_list|()
return|;
block|}
specifier|public
name|String
name|getWidth
parameter_list|()
block|{
return|return
name|constans
operator|.
name|browseTabLevelColumnWidth
argument_list|()
return|;
block|}
block|}
argument_list|,
operator|new
name|SelectableTable
operator|.
name|ColumnDefinition
argument_list|<
name|Entry
argument_list|>
argument_list|()
block|{
specifier|public
name|String
name|getContent
parameter_list|(
name|Entry
name|entry
parameter_list|)
block|{
return|return
name|entry
operator|.
name|getTitle
argument_list|()
return|;
block|}
specifier|public
name|String
name|getWidth
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|entryTable
operator|.
name|addSelectRowHandler
argument_list|(
operator|new
name|SelectableTable
operator|.
name|SelectRowHandler
argument_list|()
block|{
specifier|public
name|void
name|onSelectRow
parameter_list|(
name|int
name|row
parameter_list|)
block|{
assert|assert
name|presenter
operator|!=
literal|null
assert|;
name|presenter
operator|.
name|onEntryItemClicked
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setPresenter
parameter_list|(
name|Presenter
name|presenter
parameter_list|)
block|{
name|this
operator|.
name|presenter
operator|=
name|presenter
expr_stmt|;
block|}
specifier|public
name|Widget
name|asWidget
parameter_list|()
block|{
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

