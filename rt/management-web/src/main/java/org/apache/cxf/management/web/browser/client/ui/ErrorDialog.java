begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|resources
operator|.
name|LogBrowserConstans
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|resources
operator|.
name|LogBrowserResources
import|;
end_import

begin_comment
comment|/**  * A dialog box showing an error message, when bad things happen.  */
end_comment

begin_class
specifier|public
class|class
name|ErrorDialog
extends|extends
name|PopupPanel
block|{
annotation|@
name|Nonnull
specifier|private
specifier|final
name|LogBrowserResources
name|resources
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|LogBrowserConstans
name|contants
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|Button
name|closeButton
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|ErrorDialog
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|LogBrowserResources
name|resources
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|LogBrowserConstans
name|contants
parameter_list|)
block|{
name|super
argument_list|(
comment|/* auto hide */
literal|false
argument_list|,
comment|/* modal */
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|this
operator|.
name|contants
operator|=
name|contants
expr_stmt|;
name|this
operator|.
name|closeButton
operator|=
operator|new
name|Button
argument_list|()
expr_stmt|;
block|}
comment|/**      * Create a dialog box to nicely format an exception.      */
specifier|public
name|void
name|setException
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Throwable
name|exception
parameter_list|)
block|{
name|String
name|errorClassName
init|=
name|exception
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
comment|// Remove unwanted package (which begins on 'java.lang.' or 'org.apache.cxf.')
if|if
condition|(
name|errorClassName
operator|.
name|startsWith
argument_list|(
literal|"java.lang."
argument_list|)
condition|)
block|{
name|errorClassName
operator|=
name|errorClassName
operator|.
name|substring
argument_list|(
literal|"java.lang."
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|errorClassName
operator|.
name|startsWith
argument_list|(
literal|"org.apache.cxf."
argument_list|)
condition|)
block|{
name|errorClassName
operator|=
name|errorClassName
operator|.
name|substring
argument_list|(
name|errorClassName
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Remove unwanted suffixes from class name (i.e. 'Exception', 'Error')
if|if
condition|(
name|errorClassName
operator|.
name|endsWith
argument_list|(
literal|"Exception"
argument_list|)
condition|)
block|{
name|errorClassName
operator|=
name|errorClassName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|errorClassName
operator|.
name|length
argument_list|()
operator|-
literal|"Exception"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|errorClassName
operator|.
name|endsWith
argument_list|(
literal|"Error"
argument_list|)
condition|)
block|{
name|errorClassName
operator|=
name|errorClassName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|errorClassName
operator|.
name|length
argument_list|()
operator|-
literal|"Error"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|initializeLayout
argument_list|(
name|errorClassName
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|center
parameter_list|()
block|{
name|show
argument_list|()
expr_stmt|;
name|closeButton
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initializeLayout
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|String
name|errorName
parameter_list|,
annotation|@
name|Nullable
specifier|final
name|String
name|errorMessage
parameter_list|)
block|{
comment|// Create error name and error message labels
name|Label
name|errorNameLabel
init|=
operator|new
name|Label
argument_list|(
name|errorName
argument_list|)
decl_stmt|;
name|errorNameLabel
operator|.
name|setStyleName
argument_list|(
name|resources
operator|.
name|css
argument_list|()
operator|.
name|errorDialogErrorType
argument_list|()
argument_list|)
expr_stmt|;
name|Label
name|errorMessageLabel
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|errorMessage
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|errorMessage
argument_list|)
condition|)
block|{
name|errorMessageLabel
operator|=
operator|new
name|Label
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|errorMessageLabel
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"whiteSpace"
argument_list|,
literal|"pre"
argument_list|)
expr_stmt|;
block|}
comment|// Initialize 'close' button
name|closeButton
operator|.
name|setText
argument_list|(
name|contants
operator|.
name|errorDialogContineButton
argument_list|()
argument_list|)
expr_stmt|;
name|closeButton
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|closeButton
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
comment|/*                 if the close button is triggered by a key we need to consume the key                 event, otherwise the key event would be propagated to the parent                 screen and eventually trigger some unwanted action there after the                 error dialog was closed                  */
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Create 'title' label
name|Label
name|titleLabel
init|=
operator|new
name|Label
argument_list|()
decl_stmt|;
name|titleLabel
operator|.
name|setStyleName
argument_list|(
name|resources
operator|.
name|css
argument_list|()
operator|.
name|errorDialogTitle
argument_list|()
argument_list|)
expr_stmt|;
name|titleLabel
operator|.
name|setText
argument_list|(
name|contants
operator|.
name|errorDialogTitle
argument_list|()
argument_list|)
expr_stmt|;
comment|// Create wrapper panel for 'error name' and 'error message' labels
name|FlowPanel
name|contentPanel
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|contentPanel
operator|.
name|add
argument_list|(
name|errorNameLabel
argument_list|)
expr_stmt|;
name|contentPanel
operator|.
name|add
argument_list|(
name|errorMessageLabel
argument_list|)
expr_stmt|;
comment|// Create wrapper panel for 'close' button
name|FlowPanel
name|buttonsPanel
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|buttonsPanel
operator|.
name|setStyleName
argument_list|(
name|resources
operator|.
name|css
argument_list|()
operator|.
name|errorDialogButtons
argument_list|()
argument_list|)
expr_stmt|;
name|buttonsPanel
operator|.
name|add
argument_list|(
name|closeButton
argument_list|)
expr_stmt|;
comment|// Create main panel and add all remain widgets
name|FlowPanel
name|centerPanel
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|centerPanel
operator|.
name|add
argument_list|(
name|titleLabel
argument_list|)
expr_stmt|;
name|centerPanel
operator|.
name|add
argument_list|(
name|contentPanel
argument_list|)
expr_stmt|;
name|centerPanel
operator|.
name|add
argument_list|(
name|buttonsPanel
argument_list|)
expr_stmt|;
comment|// Add styles to window
name|setGlassEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|getGlassElement
argument_list|()
operator|.
name|addClassName
argument_list|(
name|resources
operator|.
name|css
argument_list|()
operator|.
name|errorDialogGlass
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|resources
operator|.
name|css
argument_list|()
operator|.
name|errorDialog
argument_list|()
argument_list|)
expr_stmt|;
comment|// Add main panel
name|add
argument_list|(
name|centerPanel
argument_list|)
expr_stmt|;
comment|// Set window position
name|int
name|left
init|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
literal|20
decl_stmt|;
name|int
name|top
init|=
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|20
decl_stmt|;
name|setPopupPosition
argument_list|(
name|left
argument_list|,
name|top
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

