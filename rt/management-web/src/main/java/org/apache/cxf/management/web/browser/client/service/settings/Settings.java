begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|settings
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_class
specifier|public
class|class
name|Settings
block|{
annotation|@
name|Nullable
specifier|private
name|Credentials
name|credentials
decl_stmt|;
annotation|@
name|Nullable
specifier|private
name|Set
argument_list|<
name|Subscription
argument_list|>
name|subscriptions
decl_stmt|;
annotation|@
name|Nonnull
specifier|public
name|Credentials
name|getCredentials
parameter_list|()
block|{
if|if
condition|(
name|credentials
operator|==
literal|null
condition|)
block|{
name|credentials
operator|=
name|Credentials
operator|.
name|EMPTY
expr_stmt|;
block|}
return|return
name|credentials
return|;
block|}
specifier|public
name|void
name|setCredentials
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Credentials
name|credentials
parameter_list|)
block|{
name|this
operator|.
name|credentials
operator|=
name|credentials
expr_stmt|;
block|}
annotation|@
name|Nonnull
specifier|public
name|Set
argument_list|<
name|Subscription
argument_list|>
name|getSubscriptions
parameter_list|()
block|{
if|if
condition|(
name|subscriptions
operator|==
literal|null
condition|)
block|{
name|subscriptions
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|Subscription
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|subscriptions
return|;
block|}
block|}
end_class

end_unit

