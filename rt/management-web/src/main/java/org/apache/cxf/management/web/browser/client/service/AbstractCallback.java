begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|RequestCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|Response
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractCallback
parameter_list|<
name|T
parameter_list|>
implements|implements
name|RequestCallback
block|{
specifier|private
specifier|static
specifier|final
name|int
name|OK
init|=
literal|200
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|UNAUTHORIZED
init|=
literal|401
decl_stmt|;
specifier|public
name|void
name|onResponseReceived
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Request
name|request
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|Response
name|response
parameter_list|)
block|{
if|if
condition|(
name|OK
operator|==
name|response
operator|.
name|getStatusCode
argument_list|()
condition|)
block|{
name|onSuccess
argument_list|(
name|parse
argument_list|(
name|response
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|UNAUTHORIZED
operator|==
name|response
operator|.
name|getStatusCode
argument_list|()
condition|)
block|{
name|onAccessDenied
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|// TODO add custom exception
name|onError
argument_list|(
name|request
argument_list|,
operator|new
name|RuntimeException
argument_list|(
literal|"Undefined remote service error"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onError
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Throwable
name|ex
parameter_list|)
block|{
comment|// TODO add custom exception
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
specifier|public
specifier|abstract
name|void
name|onAccessDenied
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|void
name|onSuccess
parameter_list|(
name|T
name|obj
parameter_list|)
function_decl|;
specifier|protected
specifier|abstract
name|T
name|parse
parameter_list|(
name|Response
name|response
parameter_list|)
function_decl|;
block|}
end_class

end_unit

