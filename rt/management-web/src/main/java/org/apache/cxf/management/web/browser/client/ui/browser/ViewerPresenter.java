begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|browser
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|EventBus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|name
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|event
operator|.
name|SelectedSubscriptionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|event
operator|.
name|SelectedSubscriptionEventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|browser
operator|.
name|Feed
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|browser
operator|.
name|FeedProxyImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|BasePresenter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|BindStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|resources
operator|.
name|LogBrowserConstans
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|resources
operator|.
name|LogBrowserResources
import|;
end_import

begin_class
annotation|@
name|Singleton
specifier|public
class|class
name|ViewerPresenter
extends|extends
name|BasePresenter
implements|implements
name|ViewerView
operator|.
name|Presenter
block|{
annotation|@
name|Nonnull
specifier|private
specifier|final
name|FeedProxyImpl
name|proxy
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
name|Feed
name|feed
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|ViewerView
name|view
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|LogBrowserConstans
name|constans
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|LogBrowserResources
name|resources
decl_stmt|;
annotation|@
name|Inject
specifier|public
name|ViewerPresenter
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|EventBus
name|eventBus
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|ViewerView
name|view
parameter_list|,
annotation|@
name|Nonnull
annotation|@
name|Named
argument_list|(
literal|"BindStrategyForViewer"
argument_list|)
specifier|final
name|BindStrategy
name|bindStrategy
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|FeedProxyImpl
name|proxy
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|LogBrowserConstans
name|constans
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|LogBrowserResources
name|resources
parameter_list|)
block|{
name|super
argument_list|(
name|eventBus
argument_list|,
name|view
argument_list|,
name|bindStrategy
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|=
name|view
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|setPresenter
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|proxy
operator|=
name|proxy
expr_stmt|;
name|this
operator|.
name|constans
operator|=
name|constans
expr_stmt|;
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|setFeed
argument_list|(
name|Feed
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|bind
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|bind
parameter_list|()
block|{
name|eventBus
operator|.
name|addHandler
argument_list|(
name|SelectedSubscriptionEvent
operator|.
name|TYPE
argument_list|,
operator|new
name|SelectedSubscriptionEventHandler
argument_list|()
block|{
specifier|public
name|void
name|onSelectedSubscription
parameter_list|(
name|SelectedSubscriptionEvent
name|event
parameter_list|)
block|{
name|getFeed
argument_list|(
name|event
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onEntryItemClicked
parameter_list|(
specifier|final
name|int
name|row
parameter_list|)
block|{
assert|assert
name|row
operator|>=
literal|0
operator|&&
name|row
operator|<
name|feed
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
assert|;
name|view
operator|.
name|setEntryDetails
argument_list|(
name|feed
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onNewerButtonClicked
parameter_list|()
block|{
name|getFeed
argument_list|(
name|feed
operator|.
name|getLinks
argument_list|()
operator|.
name|getNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onLastButtonClicked
parameter_list|()
block|{
name|getFeed
argument_list|(
name|feed
operator|.
name|getLinks
argument_list|()
operator|.
name|getLast
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFirstButtonClicked
parameter_list|()
block|{
name|getFeed
argument_list|(
name|feed
operator|.
name|getLinks
argument_list|()
operator|.
name|getFirst
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onRefreshButtonClicked
parameter_list|()
block|{
name|getFeed
argument_list|(
name|feed
operator|.
name|getLinks
argument_list|()
operator|.
name|getSelf
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onOlderButtonClicked
parameter_list|()
block|{
name|getFeed
argument_list|(
name|feed
operator|.
name|getLinks
argument_list|()
operator|.
name|getPrevious
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setFeed
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Feed
name|newFeed
parameter_list|)
block|{
name|feed
operator|=
name|newFeed
expr_stmt|;
name|view
operator|.
name|setEntryDetails
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|view
operator|.
name|setLinks
argument_list|(
name|feed
operator|.
name|getLinks
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|feed
operator|.
name|getEntries
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setNoEntriesMessage
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|view
operator|.
name|setEntries
argument_list|(
name|feed
operator|.
name|getEntries
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|setNoEntriesMessage
parameter_list|()
block|{
name|view
operator|.
name|setMessageInsteadOfEntries
argument_list|(
name|constans
operator|.
name|browserTabNoEntries
argument_list|()
argument_list|,
name|resources
operator|.
name|css
argument_list|()
operator|.
name|browserTabNoEntriesMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setLoadingMessage
parameter_list|()
block|{
name|view
operator|.
name|setMessageInsteadOfEntries
argument_list|(
name|constans
operator|.
name|browserTabLoading
argument_list|()
argument_list|,
name|resources
operator|.
name|css
argument_list|()
operator|.
name|browserTabLoadingMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//TODO Rename this method. Name should emphasize that it gets and sets feed
specifier|private
name|void
name|getFeed
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|String
name|url
parameter_list|)
block|{
name|setLoadingMessage
argument_list|()
expr_stmt|;
name|proxy
operator|.
name|getFeed
argument_list|(
name|url
argument_list|,
operator|new
name|FeedProxyImpl
operator|.
name|Callback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Feed
name|newFeed
parameter_list|)
block|{
name|setFeed
argument_list|(
name|newFeed
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onError
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Request
name|request
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|Throwable
name|ex
parameter_list|)
block|{
name|setFeed
argument_list|(
name|Feed
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
name|super
operator|.
name|onError
argument_list|(
name|request
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

