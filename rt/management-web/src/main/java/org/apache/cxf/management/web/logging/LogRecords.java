begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|logging
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|Validate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|EqualsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|HashCodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|ToStringBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|ToStringStyle
import|;
end_import

begin_comment
comment|/**  * List of {@link LogRecord}s. Necessary wrapper for {@link List} used in JAXB context.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|public
class|class
name|LogRecords
block|{
specifier|private
name|List
argument_list|<
name|LogRecord
argument_list|>
name|logRecords
init|=
operator|new
name|ArrayList
argument_list|<
name|LogRecord
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"logRecord"
argument_list|,
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|public
name|List
argument_list|<
name|LogRecord
argument_list|>
name|getLogRecords
parameter_list|()
block|{
return|return
name|logRecords
return|;
block|}
specifier|public
name|void
name|setLogRecords
parameter_list|(
name|List
argument_list|<
name|LogRecord
argument_list|>
name|logRecords
parameter_list|)
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|logRecords
argument_list|,
literal|"logRecords is null"
argument_list|)
expr_stmt|;
name|this
operator|.
name|logRecords
operator|=
name|logRecords
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|EqualsBuilder
operator|.
name|reflectionEquals
argument_list|(
name|obj
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|HashCodeBuilder
operator|.
name|reflectionHashCode
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|ToStringBuilder
operator|.
name|reflectionToString
argument_list|(
name|this
argument_list|,
name|ToStringStyle
operator|.
name|SHORT_PREFIX_STYLE
argument_list|)
return|;
block|}
block|}
end_class

end_unit

