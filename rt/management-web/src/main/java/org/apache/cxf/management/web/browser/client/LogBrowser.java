begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|EntryPoint
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|ErrorDialog
import|;
end_import

begin_class
specifier|public
class|class
name|LogBrowser
implements|implements
name|EntryPoint
block|{
annotation|@
name|Nonnull
specifier|private
specifier|final
name|Injector
name|injector
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Injector
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|void
name|onModuleLoad
parameter_list|()
block|{
name|injector
operator|.
name|getResources
argument_list|()
operator|.
name|css
argument_list|()
operator|.
name|ensureInjected
argument_list|()
expr_stmt|;
name|GWT
operator|.
name|setUncaughtExceptionHandler
argument_list|(
operator|new
name|GWT
operator|.
name|UncaughtExceptionHandler
argument_list|()
block|{
specifier|public
name|void
name|onUncaughtException
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Throwable
name|throwable
parameter_list|)
block|{
name|ErrorDialog
name|errorDialog
init|=
name|injector
operator|.
name|getErrorDialog
argument_list|()
decl_stmt|;
name|errorDialog
operator|.
name|setException
argument_list|(
name|throwable
argument_list|)
expr_stmt|;
name|errorDialog
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|injector
operator|.
name|getDispatcher
argument_list|()
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

