begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|bootstrapping
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlSchemaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|datatype
operator|.
name|DatatypeConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|datatype
operator|.
name|DatatypeFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|datatype
operator|.
name|XMLGregorianCalendar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|Validate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_class
specifier|public
class|class
name|SimpleXMLSettingsStorage
implements|implements
name|SettingsStorage
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_FILENAME
init|=
literal|"logbrowser-settings.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Settings
name|DEFAULT_SETTINGS
init|=
operator|new
name|Settings
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|String
name|filename
decl_stmt|;
specifier|private
specifier|final
name|Marshaller
name|marshaller
decl_stmt|;
specifier|private
name|Entries
name|entries
decl_stmt|;
specifier|public
name|SimpleXMLSettingsStorage
parameter_list|()
block|{
name|this
argument_list|(
name|DEFAULT_FILENAME
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SimpleXMLSettingsStorage
parameter_list|(
specifier|final
name|String
name|filename
parameter_list|)
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|filename
argument_list|,
literal|"filename is null"
argument_list|)
expr_stmt|;
name|Validate
operator|.
name|notEmpty
argument_list|(
name|filename
argument_list|,
literal|"filename is empty"
argument_list|)
expr_stmt|;
name|this
operator|.
name|filename
operator|=
name|filename
expr_stmt|;
try|try
block|{
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|Entries
operator|.
name|class
argument_list|,
name|Entry
operator|.
name|class
argument_list|,
name|Settings
operator|.
name|class
argument_list|,
name|Subscription
operator|.
name|class
argument_list|)
decl_stmt|;
name|marshaller
operator|=
name|context
operator|.
name|createMarshaller
argument_list|()
expr_stmt|;
name|marshaller
operator|.
name|setProperty
argument_list|(
name|Marshaller
operator|.
name|JAXB_FORMATTED_OUTPUT
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
name|file
operator|.
name|exists
argument_list|()
condition|)
block|{
name|Unmarshaller
name|unmarshaller
init|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
argument_list|)
decl_stmt|;
name|entries
operator|=
operator|(
name|Entries
operator|)
name|unmarshaller
operator|.
name|unmarshal
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|entries
operator|==
literal|null
condition|)
block|{
name|entries
operator|=
operator|new
name|Entries
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|synchronized
name|Settings
name|getSettings
parameter_list|(
specifier|final
name|String
name|username
parameter_list|)
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|username
argument_list|,
literal|"username is null"
argument_list|)
expr_stmt|;
name|Validate
operator|.
name|notEmpty
argument_list|(
name|username
argument_list|,
literal|"username is empty"
argument_list|)
expr_stmt|;
name|Entry
name|entry
init|=
name|getCachedEntry
argument_list|(
name|username
argument_list|)
decl_stmt|;
return|return
name|entry
operator|!=
literal|null
condition|?
name|entry
operator|.
name|getSettings
argument_list|()
else|:
name|DEFAULT_SETTINGS
return|;
block|}
specifier|public
specifier|synchronized
name|void
name|setSettings
parameter_list|(
specifier|final
name|String
name|username
parameter_list|,
specifier|final
name|Settings
name|settings
parameter_list|)
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|username
argument_list|,
literal|"username is null"
argument_list|)
expr_stmt|;
name|Validate
operator|.
name|notEmpty
argument_list|(
name|username
argument_list|,
literal|"username is empty"
argument_list|)
expr_stmt|;
name|Entry
name|entry
init|=
name|getCachedEntry
argument_list|(
name|username
argument_list|)
decl_stmt|;
if|if
condition|(
name|entry
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setModified
argument_list|(
name|getCurrentTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|entries
operator|.
name|getEntries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Entry
argument_list|(
name|username
argument_list|,
name|getCurrentTime
argument_list|()
argument_list|,
name|settings
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|FileOutputStream
name|outputStream
init|=
literal|null
decl_stmt|;
try|try
block|{
name|outputStream
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|filename
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|marshal
argument_list|(
name|entries
argument_list|,
name|outputStream
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|outputStream
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|outputStream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|private
name|Entry
name|getCachedEntry
parameter_list|(
specifier|final
name|String
name|username
parameter_list|)
block|{
assert|assert
name|username
operator|!=
literal|null
assert|;
assert|assert
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|username
argument_list|)
assert|;
for|for
control|(
name|Entry
name|entry
range|:
name|entries
operator|.
name|getEntries
argument_list|()
control|)
block|{
if|if
condition|(
name|username
operator|.
name|equals
argument_list|(
name|entry
operator|.
name|getUsername
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|entry
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|XMLGregorianCalendar
name|getCurrentTime
parameter_list|()
block|{
try|try
block|{
return|return
name|DatatypeFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXMLGregorianCalendar
argument_list|(
operator|(
name|GregorianCalendar
operator|)
name|GregorianCalendar
operator|.
name|getInstance
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|DatatypeConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|XmlRootElement
argument_list|(
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|private
specifier|static
class|class
name|Entries
block|{
specifier|private
name|List
argument_list|<
name|Entry
argument_list|>
name|entries
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"entry"
argument_list|,
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|public
name|List
argument_list|<
name|Entry
argument_list|>
name|getEntries
parameter_list|()
block|{
if|if
condition|(
name|entries
operator|==
literal|null
condition|)
block|{
name|entries
operator|=
operator|new
name|ArrayList
argument_list|<
name|Entry
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|entries
return|;
block|}
block|}
annotation|@
name|XmlRootElement
argument_list|(
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|private
specifier|static
class|class
name|Entry
block|{
specifier|private
name|Settings
name|settings
decl_stmt|;
specifier|private
name|String
name|username
decl_stmt|;
specifier|private
name|XMLGregorianCalendar
name|modified
decl_stmt|;
specifier|private
name|Entry
parameter_list|()
block|{ }
name|Entry
parameter_list|(
specifier|final
name|String
name|username
parameter_list|,
specifier|final
name|XMLGregorianCalendar
name|modified
parameter_list|,
specifier|final
name|Settings
name|settings
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|settings
expr_stmt|;
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
name|this
operator|.
name|modified
operator|=
name|modified
expr_stmt|;
block|}
annotation|@
name|XmlElement
argument_list|(
name|required
operator|=
literal|true
argument_list|,
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|public
name|Settings
name|getSettings
parameter_list|()
block|{
return|return
name|settings
return|;
block|}
specifier|public
name|void
name|setSettings
parameter_list|(
name|Settings
name|value
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|XmlAttribute
argument_list|(
name|name
operator|=
literal|"username"
argument_list|,
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
specifier|public
name|String
name|getUsername
parameter_list|()
block|{
return|return
name|username
return|;
block|}
specifier|public
name|void
name|setUsername
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|username
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|XmlAttribute
argument_list|(
name|name
operator|=
literal|"modified"
argument_list|,
name|namespace
operator|=
literal|"http://cxf.apache.org/log"
argument_list|)
annotation|@
name|XmlSchemaType
argument_list|(
name|name
operator|=
literal|"date"
argument_list|)
specifier|public
name|XMLGregorianCalendar
name|getModified
parameter_list|()
block|{
return|return
name|modified
return|;
block|}
specifier|public
name|void
name|setModified
parameter_list|(
name|XMLGregorianCalendar
name|value
parameter_list|)
block|{
name|this
operator|.
name|modified
operator|=
name|value
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

