begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasWidgets
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|EventBus
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|BasePresenter
implements|implements
name|Presenter
block|{
annotation|@
name|Nonnull
specifier|protected
specifier|final
name|EventBus
name|eventBus
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|View
name|view
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|BindStrategy
name|bindStrategy
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|List
argument_list|<
name|HandlerRegistration
argument_list|>
name|handlerRegistrations
decl_stmt|;
specifier|public
name|BasePresenter
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|EventBus
name|eventBus
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|View
name|view
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|BindStrategy
name|bindStrategy
parameter_list|)
block|{
name|this
operator|.
name|eventBus
operator|=
name|eventBus
expr_stmt|;
name|this
operator|.
name|view
operator|=
name|view
expr_stmt|;
name|this
operator|.
name|bindStrategy
operator|=
name|bindStrategy
expr_stmt|;
name|this
operator|.
name|handlerRegistrations
operator|=
operator|new
name|ArrayList
argument_list|<
name|HandlerRegistration
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|go
parameter_list|(
name|HasWidgets
name|container
parameter_list|)
block|{
name|bindStrategy
operator|.
name|bind
argument_list|(
name|container
argument_list|,
name|view
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unbind
parameter_list|()
block|{
name|bindStrategy
operator|.
name|unbind
argument_list|(
name|view
argument_list|)
expr_stmt|;
for|for
control|(
name|HandlerRegistration
name|handlerRegistration
range|:
name|handlerRegistrations
control|)
block|{
name|handlerRegistration
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
block|}
name|handlerRegistrations
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|registerHandler
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|HandlerRegistration
name|handlerRegistration
parameter_list|)
block|{
name|handlerRegistrations
operator|.
name|add
argument_list|(
name|handlerRegistration
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

