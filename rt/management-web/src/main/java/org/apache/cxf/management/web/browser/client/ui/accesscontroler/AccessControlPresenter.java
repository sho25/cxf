begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|accesscontroler
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasWidgets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|name
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|EventBus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|event
operator|.
name|RemoteStorageAccessDeniedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|event
operator|.
name|RemoteStorageAccessDeniedEventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|settings
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|settings
operator|.
name|SettingsFacade
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|settings
operator|.
name|SettingsFacade
operator|.
name|StorageStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|BasePresenter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|ui
operator|.
name|BindStrategy
import|;
end_import

begin_class
annotation|@
name|Singleton
specifier|public
class|class
name|AccessControlPresenter
extends|extends
name|BasePresenter
implements|implements
name|AccessControlView
operator|.
name|Presenter
block|{
annotation|@
name|Nonnull
specifier|private
specifier|final
name|AccessControlView
name|view
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|SettingsFacade
name|settingsFacade
decl_stmt|;
annotation|@
name|Inject
specifier|public
name|AccessControlPresenter
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|EventBus
name|eventBus
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|AccessControlView
name|view
parameter_list|,
annotation|@
name|Nonnull
annotation|@
name|Named
argument_list|(
literal|"BindStrategyForAccessControl"
argument_list|)
specifier|final
name|BindStrategy
name|bindStrategy
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|SettingsFacade
name|settingsFacade
parameter_list|)
block|{
name|super
argument_list|(
name|eventBus
argument_list|,
name|view
argument_list|,
name|bindStrategy
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|=
name|view
expr_stmt|;
name|this
operator|.
name|settingsFacade
operator|=
name|settingsFacade
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|setPresenter
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|bind
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|go
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|HasWidgets
name|container
parameter_list|)
block|{
name|container
operator|.
name|clear
argument_list|()
expr_stmt|;
name|container
operator|.
name|add
argument_list|(
name|view
operator|.
name|asWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSignInButtonClicked
parameter_list|()
block|{
name|String
name|username
init|=
name|view
operator|.
name|getUsername
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|view
operator|.
name|getPassword
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|isNotEmpty
argument_list|(
name|username
argument_list|)
operator|&&
name|isNotEmpty
argument_list|(
name|password
argument_list|)
condition|)
block|{
name|Boolean
name|rememberMe
init|=
name|view
operator|.
name|getRememberMe
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Credentials
name|credentials
init|=
operator|new
name|Credentials
argument_list|(
name|username
argument_list|,
name|password
argument_list|)
decl_stmt|;
if|if
condition|(
name|rememberMe
operator|!=
literal|null
operator|&&
name|rememberMe
condition|)
block|{
name|settingsFacade
operator|.
name|initialize
argument_list|(
name|StorageStrategy
operator|.
name|LOCAL_AND_REMOTE
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|settingsFacade
operator|.
name|initialize
argument_list|(
name|StorageStrategy
operator|.
name|REMOTE
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|bind
parameter_list|()
block|{
name|registerHandler
argument_list|(
name|eventBus
operator|.
name|addHandler
argument_list|(
name|RemoteStorageAccessDeniedEvent
operator|.
name|TYPE
argument_list|,
operator|new
name|RemoteStorageAccessDeniedEventHandler
argument_list|()
block|{
specifier|public
name|void
name|onRemoteStorageAccessDenied
parameter_list|(
name|RemoteStorageAccessDeniedEvent
name|event
parameter_list|)
block|{
name|view
operator|.
name|showAccessDeniedMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|isNotEmpty
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|String
name|str
parameter_list|)
block|{
return|return
name|str
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|str
argument_list|)
return|;
block|}
block|}
end_class

end_unit

