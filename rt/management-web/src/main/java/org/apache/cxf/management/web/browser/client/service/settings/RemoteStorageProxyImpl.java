begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|settings
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JavaScriptObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArray
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|RequestBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|RequestCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|RequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|json
operator|.
name|client
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|json
operator|.
name|client
operator|.
name|JSONValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|AbstractCallback
import|;
end_import

begin_class
specifier|public
class|class
name|RemoteStorageProxyImpl
implements|implements
name|RemoteStorageProxy
block|{
specifier|private
specifier|static
specifier|final
name|String
name|HOSTED_MODE_ENDPOINT_URL
init|=
literal|"settings"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RESOURCES_ENDPOINT_SUFFIX
init|=
literal|"/resources/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SETTINGS_ENDPOINT_SUFFIX
init|=
literal|"/settings"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONTENT_TYPE_HEADER
init|=
literal|"Content-Type"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ACCEPT_HEADER
init|=
literal|"Accept"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JSON_TYPE
init|=
literal|"application/json"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SETTINGS_KEY
init|=
literal|"settings"
decl_stmt|;
specifier|private
name|String
name|endpointURL
decl_stmt|;
specifier|public
name|void
name|saveSettings
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|RequestCallback
name|callback
parameter_list|)
block|{
name|RequestBuilder
name|builder
init|=
name|buildRequest
argument_list|(
name|RequestBuilder
operator|.
name|GET
argument_list|,
name|buildEndpointURL
argument_list|()
argument_list|)
decl_stmt|;
name|execute
argument_list|(
literal|null
argument_list|,
name|builder
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|retrieveSettings
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Settings
name|settings
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|RequestCallback
name|callback
parameter_list|)
block|{
name|RequestBuilder
name|builder
init|=
name|buildRequest
argument_list|(
name|RequestBuilder
operator|.
name|PUT
argument_list|,
name|buildEndpointURL
argument_list|()
argument_list|)
decl_stmt|;
name|execute
argument_list|(
name|Converter
operator|.
name|convertToRemoteSettings
argument_list|(
name|settings
argument_list|)
argument_list|,
name|builder
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nonnull
specifier|private
name|String
name|buildEndpointURL
parameter_list|()
block|{
if|if
condition|(
name|endpointURL
operator|==
literal|null
condition|)
block|{
name|String
name|baseURL
init|=
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
decl_stmt|;
if|if
condition|(
name|baseURL
operator|.
name|endsWith
argument_list|(
name|RESOURCES_ENDPOINT_SUFFIX
argument_list|)
condition|)
block|{
comment|// compute URL by replace "resources" suffix with "settings" suffix
name|endpointURL
operator|=
name|cutResourcesSuffix
argument_list|(
name|baseURL
argument_list|)
operator|+
name|SETTINGS_ENDPOINT_SUFFIX
expr_stmt|;
block|}
else|else
block|{
comment|// it ought to execute only in hosted mode, because there is diffrent base URL
name|endpointURL
operator|=
name|HOSTED_MODE_ENDPOINT_URL
expr_stmt|;
block|}
block|}
return|return
name|endpointURL
return|;
block|}
annotation|@
name|Nonnull
specifier|private
name|String
name|cutResourcesSuffix
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|String
name|url
parameter_list|)
block|{
return|return
name|url
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|url
operator|.
name|lastIndexOf
argument_list|(
name|RESOURCES_ENDPOINT_SUFFIX
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Nonnull
specifier|private
name|RequestBuilder
name|buildRequest
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|RequestBuilder
operator|.
name|Method
name|method
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|String
name|url
parameter_list|)
block|{
assert|assert
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|url
argument_list|)
assert|;
name|RequestBuilder
name|builder
init|=
operator|new
name|RequestBuilder
argument_list|(
name|method
argument_list|,
name|url
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setHeader
argument_list|(
name|CONTENT_TYPE_HEADER
argument_list|,
name|JSON_TYPE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setHeader
argument_list|(
name|ACCEPT_HEADER
argument_list|,
name|JSON_TYPE
argument_list|)
expr_stmt|;
return|return
name|builder
return|;
block|}
specifier|private
name|void
name|execute
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|RemoteSettings
name|remoteSettings
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|RequestBuilder
name|builder
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|RequestCallback
name|callback
parameter_list|)
block|{
name|String
name|json
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|remoteSettings
operator|!=
literal|null
condition|)
block|{
comment|// TODO add appropriate comment - wrap
name|JSONObject
name|rootElement
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
name|rootElement
operator|.
name|put
argument_list|(
name|SETTINGS_KEY
argument_list|,
operator|new
name|JSONObject
argument_list|(
name|remoteSettings
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|=
name|rootElement
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|builder
operator|.
name|sendRequest
argument_list|(
name|json
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RequestException
name|ex
parameter_list|)
block|{
comment|// TODO add custom exception
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|RemoteSettings
extends|extends
name|JavaScriptObject
block|{
specifier|protected
name|RemoteSettings
parameter_list|()
block|{         }
specifier|public
specifier|final
specifier|native
name|void
name|setSubscriptions
parameter_list|(
annotation|@
name|Nullable
name|JsArray
argument_list|<
name|RemoteSubscription
argument_list|>
name|subscriptions
parameter_list|)
comment|/*-{             this.subscriptions = subscriptions;         }-*/
function_decl|;
annotation|@
name|Nonnull
specifier|public
specifier|final
specifier|native
name|JsArray
argument_list|<
name|RemoteSubscription
argument_list|>
name|getSubscriptions
parameter_list|()
comment|/*-{             if (this.subscriptions != null) {                 return this.subscriptions;             } else {                 return [];             }         }-*/
function_decl|;
block|}
specifier|protected
specifier|static
class|class
name|RemoteSubscription
extends|extends
name|JavaScriptObject
block|{
specifier|protected
name|RemoteSubscription
parameter_list|()
block|{         }
specifier|public
specifier|final
specifier|native
name|void
name|setId
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|String
name|id
parameter_list|)
comment|/*-{             this.id = id;         }-*/
function_decl|;
annotation|@
name|Nullable
specifier|public
specifier|final
specifier|native
name|String
name|getId
parameter_list|()
comment|/*-{             return this.id;         }-*/
function_decl|;
specifier|public
specifier|final
specifier|native
name|void
name|setUrl
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|String
name|url
parameter_list|)
comment|/*-{             this.url = url;         }-*/
function_decl|;
annotation|@
name|Nullable
specifier|public
specifier|final
specifier|native
name|String
name|getUrl
parameter_list|()
comment|/*-{             return this.url;         }-*/
function_decl|;
specifier|public
specifier|final
specifier|native
name|void
name|setName
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|String
name|name
parameter_list|)
comment|/*-{             this.name = name;         }-*/
function_decl|;
annotation|@
name|Nullable
specifier|public
specifier|final
specifier|native
name|String
name|getName
parameter_list|()
comment|/*-{             return this.name;         }-*/
function_decl|;
block|}
specifier|protected
specifier|static
specifier|final
class|class
name|Converter
block|{
specifier|private
name|Converter
parameter_list|()
block|{         }
annotation|@
name|Nonnull
specifier|public
specifier|static
name|Settings
name|convertToSettings
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|RemoteSettings
name|remoteSettings
parameter_list|)
block|{
name|Settings
name|settings
init|=
operator|new
name|Settings
argument_list|()
decl_stmt|;
name|JsArray
argument_list|<
name|RemoteSubscription
argument_list|>
name|remoteSubscriptions
init|=
name|remoteSettings
operator|.
name|getSubscriptions
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|remoteSubscriptions
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|settings
operator|.
name|getSubscriptions
argument_list|()
operator|.
name|add
argument_list|(
name|convertToSubscription
argument_list|(
name|remoteSubscriptions
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|settings
return|;
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|Subscription
name|convertToSubscription
parameter_list|(
annotation|@
name|Nonnull
name|RemoteSubscription
name|remoteSubscription
parameter_list|)
block|{
return|return
operator|new
name|Subscription
argument_list|(
name|remoteSubscription
operator|.
name|getId
argument_list|()
argument_list|,
name|remoteSubscription
operator|.
name|getName
argument_list|()
argument_list|,
name|remoteSubscription
operator|.
name|getUrl
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Nonnull
specifier|public
specifier|static
name|RemoteSettings
name|convertToRemoteSettings
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Settings
name|settings
parameter_list|)
block|{
name|RemoteSettings
name|remoteSettings
init|=
operator|(
name|RemoteSettings
operator|)
name|JavaScriptObject
operator|.
name|createObject
argument_list|()
decl_stmt|;
name|JsArray
argument_list|<
name|RemoteSubscription
argument_list|>
name|remoteSubscriptions
init|=
operator|(
name|JsArray
argument_list|<
name|RemoteSubscription
argument_list|>
operator|)
name|JavaScriptObject
operator|.
name|createArray
argument_list|()
decl_stmt|;
for|for
control|(
name|Subscription
name|subscription
range|:
name|settings
operator|.
name|getSubscriptions
argument_list|()
control|)
block|{
name|remoteSubscriptions
operator|.
name|push
argument_list|(
name|convertToRemoteSubscription
argument_list|(
name|subscription
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|remoteSettings
operator|.
name|setSubscriptions
argument_list|(
name|remoteSubscriptions
argument_list|)
expr_stmt|;
return|return
name|remoteSettings
return|;
block|}
annotation|@
name|Nonnull
specifier|public
specifier|static
name|RemoteSubscription
name|convertToRemoteSubscription
parameter_list|(
annotation|@
name|Nonnull
name|Subscription
name|subscription
parameter_list|)
block|{
name|RemoteSubscription
name|remoteSubscription
init|=
operator|(
name|RemoteSubscription
operator|)
name|JavaScriptObject
operator|.
name|createObject
argument_list|()
decl_stmt|;
name|remoteSubscription
operator|.
name|setId
argument_list|(
name|subscription
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|remoteSubscription
operator|.
name|setName
argument_list|(
name|subscription
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|remoteSubscription
operator|.
name|setUrl
argument_list|(
name|subscription
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|remoteSubscription
return|;
block|}
block|}
specifier|public
specifier|abstract
specifier|static
class|class
name|Callback
extends|extends
name|AbstractCallback
argument_list|<
name|Settings
argument_list|>
block|{
annotation|@
name|Override
annotation|@
name|Nullable
specifier|protected
name|Settings
name|parse
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Response
name|response
parameter_list|)
block|{
name|RemoteSettings
name|result
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|response
operator|.
name|getText
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|response
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
comment|// TODO add appropriate comment - unwrap
name|JSONValue
name|rootElement
init|=
operator|new
name|JSONObject
argument_list|(
name|convertFromJSON
argument_list|(
name|response
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|SETTINGS_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|rootElement
operator|!=
literal|null
operator|&&
name|rootElement
operator|.
name|isObject
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|result
operator|=
operator|(
name|RemoteSettings
operator|)
name|rootElement
operator|.
name|isObject
argument_list|()
operator|.
name|getJavaScriptObject
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|result
operator|!=
literal|null
condition|?
name|Converter
operator|.
name|convertToSettings
argument_list|(
name|result
argument_list|)
else|:
literal|null
return|;
block|}
comment|// TODO check if this method must be final regardless to GWT's guidelines
comment|// CHECKSTYLE:OFF
annotation|@
name|Nonnull
specifier|private
specifier|final
specifier|native
name|JavaScriptObject
name|convertFromJSON
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|String
name|json
parameter_list|)
comment|/*-{             return $wnd.JSON.parse(json);         }-*/
function_decl|;
comment|// CHECKSTYLE:ON
block|}
specifier|public
specifier|static
class|class
name|NoActionCallback
extends|extends
name|AbstractCallback
argument_list|<
name|Settings
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|Settings
name|obj
parameter_list|)
block|{ }
annotation|@
name|Override
annotation|@
name|Nullable
specifier|protected
name|Settings
name|parse
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Response
name|response
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

