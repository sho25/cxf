begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|service
operator|.
name|settings
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|EventBus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|web
operator|.
name|browser
operator|.
name|client
operator|.
name|event
operator|.
name|ChangedSubscriptionsEvent
import|;
end_import

begin_comment
comment|//TODO Remove StorageStrategy feature
end_comment

begin_class
annotation|@
name|Singleton
specifier|public
class|class
name|SettingsFacade
block|{
annotation|@
name|Nonnull
specifier|private
specifier|final
name|RemoteStorageProxy
name|remoteStorage
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|EventBus
name|eventBus
decl_stmt|;
annotation|@
name|Nullable
specifier|private
name|StorageLayer
name|storageLayer
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|IdentifierGenerator
name|identifierGenerator
decl_stmt|;
specifier|private
name|boolean
name|initialized
decl_stmt|;
specifier|public
enum|enum
name|StorageStrategy
block|{
name|REMOTE
block|}
annotation|@
name|Inject
specifier|public
name|SettingsFacade
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|RemoteStorageProxy
name|remoteStorage
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|EventBus
name|eventBus
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|IdentifierGenerator
name|identifierGenerator
parameter_list|)
block|{
name|this
operator|.
name|remoteStorage
operator|=
name|remoteStorage
expr_stmt|;
name|this
operator|.
name|eventBus
operator|=
name|eventBus
expr_stmt|;
name|this
operator|.
name|identifierGenerator
operator|=
name|identifierGenerator
expr_stmt|;
block|}
specifier|public
name|void
name|initialize
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|StorageStrategy
name|strategy
parameter_list|)
block|{
name|storageLayer
operator|=
name|createStorageLayers
argument_list|(
name|strategy
argument_list|)
expr_stmt|;
name|storageLayer
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|initialized
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|addSubscription
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|String
name|name
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|String
name|url
parameter_list|)
block|{
assert|assert
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|name
argument_list|)
assert|;
assert|assert
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|url
argument_list|)
assert|;
assert|assert
name|storageLayer
operator|!=
literal|null
assert|;
name|isValid
argument_list|()
expr_stmt|;
name|String
name|id
init|=
name|identifierGenerator
operator|.
name|generateUUID
argument_list|()
decl_stmt|;
assert|assert
name|id
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|id
argument_list|)
assert|;
name|storageLayer
operator|.
name|getSettings
argument_list|()
operator|.
name|getSubscriptions
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Subscription
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|storageLayer
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|updateSubscription
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Subscription
name|subscription
parameter_list|)
block|{
assert|assert
name|subscription
operator|.
name|getUrl
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|subscription
operator|.
name|getUrl
argument_list|()
argument_list|)
assert|;
assert|assert
name|storageLayer
operator|!=
literal|null
assert|;
name|isValid
argument_list|()
expr_stmt|;
name|storageLayer
operator|.
name|getSettings
argument_list|()
operator|.
name|getSubscriptions
argument_list|()
operator|.
name|remove
argument_list|(
name|subscription
argument_list|)
expr_stmt|;
name|storageLayer
operator|.
name|getSettings
argument_list|()
operator|.
name|getSubscriptions
argument_list|()
operator|.
name|add
argument_list|(
name|subscription
argument_list|)
expr_stmt|;
name|storageLayer
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|removeSubscription
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Subscription
name|subscription
parameter_list|)
block|{
assert|assert
name|subscription
operator|.
name|getUrl
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|subscription
operator|.
name|getUrl
argument_list|()
argument_list|)
assert|;
assert|assert
name|storageLayer
operator|!=
literal|null
assert|;
name|isValid
argument_list|()
expr_stmt|;
name|storageLayer
operator|.
name|getSettings
argument_list|()
operator|.
name|getSubscriptions
argument_list|()
operator|.
name|remove
argument_list|(
name|subscription
argument_list|)
expr_stmt|;
name|storageLayer
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Nonnull
specifier|public
name|List
argument_list|<
name|Subscription
argument_list|>
name|getSubscriptions
parameter_list|()
block|{
assert|assert
name|storageLayer
operator|!=
literal|null
assert|;
name|isValid
argument_list|()
expr_stmt|;
return|return
operator|new
name|ArrayList
argument_list|<
name|Subscription
argument_list|>
argument_list|(
name|storageLayer
operator|.
name|getSettings
argument_list|()
operator|.
name|getSubscriptions
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|void
name|isValid
parameter_list|()
block|{
if|if
condition|(
operator|!
name|initialized
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Storage layers not initialized"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Nonnull
specifier|private
name|StorageLayer
name|createStorageLayers
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|StorageStrategy
name|storageStrategy
parameter_list|)
block|{
switch|switch
condition|(
name|storageStrategy
condition|)
block|{
case|case
name|REMOTE
case|:
return|return
operator|new
name|RemoteStorageLayer
argument_list|(
name|remoteStorage
argument_list|,
operator|new
name|MemoryStorageLayer
argument_list|()
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown storage strategy type"
argument_list|)
throw|;
block|}
block|}
specifier|private
interface|interface
name|StorageLayer
block|{
name|boolean
name|initialize
parameter_list|()
function_decl|;
name|Settings
name|getSettings
parameter_list|()
function_decl|;
name|void
name|update
parameter_list|(
name|Settings
name|settings
parameter_list|)
function_decl|;
name|void
name|update
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
block|}
specifier|private
specifier|static
class|class
name|MemoryStorageLayer
implements|implements
name|StorageLayer
block|{
annotation|@
name|Nonnull
specifier|private
name|Settings
name|settings
decl_stmt|;
specifier|public
name|boolean
name|initialize
parameter_list|()
block|{
name|this
operator|.
name|settings
operator|=
operator|new
name|Settings
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
annotation|@
name|Nonnull
specifier|public
name|Settings
name|getSettings
parameter_list|()
block|{
return|return
name|this
operator|.
name|settings
return|;
block|}
specifier|public
name|void
name|update
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Settings
name|newSettings
parameter_list|)
block|{
name|this
operator|.
name|settings
operator|=
name|newSettings
expr_stmt|;
block|}
specifier|public
name|void
name|update
parameter_list|()
block|{         }
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|this
operator|.
name|settings
operator|=
operator|new
name|Settings
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|RemoteStorageLayer
implements|implements
name|StorageLayer
block|{
annotation|@
name|Nonnull
specifier|private
specifier|final
name|StorageLayer
name|parent
decl_stmt|;
annotation|@
name|Nonnull
specifier|private
specifier|final
name|RemoteStorageProxy
name|remoteStorage
decl_stmt|;
name|RemoteStorageLayer
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|RemoteStorageProxy
name|remoteStorage
parameter_list|,
annotation|@
name|Nonnull
specifier|final
name|StorageLayer
name|parent
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|this
operator|.
name|remoteStorage
operator|=
name|remoteStorage
expr_stmt|;
block|}
specifier|public
name|boolean
name|initialize
parameter_list|()
block|{
name|boolean
name|isSuccess
init|=
name|parent
operator|.
name|initialize
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|isSuccess
condition|)
block|{
name|remoteStorage
operator|.
name|saveSettings
argument_list|(
operator|new
name|RemoteStorageProxyImpl
operator|.
name|Callback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|Settings
name|retrievedSettings
parameter_list|)
block|{
name|Settings
name|settings
init|=
name|retrievedSettings
operator|!=
literal|null
condition|?
name|retrievedSettings
else|:
operator|new
name|Settings
argument_list|()
decl_stmt|;
name|parent
operator|.
name|update
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|eventBus
operator|.
name|fireEvent
argument_list|(
operator|new
name|ChangedSubscriptionsEvent
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Nonnull
specifier|public
name|Settings
name|getSettings
parameter_list|()
block|{
return|return
name|parent
operator|.
name|getSettings
argument_list|()
return|;
block|}
specifier|public
name|void
name|update
parameter_list|(
annotation|@
name|Nonnull
specifier|final
name|Settings
name|settings
parameter_list|)
block|{
assert|assert
name|settings
operator|!=
literal|null
assert|;
name|parent
operator|.
name|update
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|remoteStorage
operator|.
name|retrieveSettings
argument_list|(
name|settings
argument_list|,
operator|new
name|RemoteStorageProxyImpl
operator|.
name|NoActionCallback
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|update
parameter_list|()
block|{
name|update
argument_list|(
name|parent
operator|.
name|getSettings
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|parent
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

