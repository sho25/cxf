begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|Provider
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|ConfiguredBeanLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|AbstractPortableFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|DelegatingFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|InterceptorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|CountingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|MetricsMessageClientOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|MetricsMessageInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|MetricsMessageInOneWayInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|MetricsMessageInPostInvokeInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|MetricsMessageInPreInvokeInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|interceptors
operator|.
name|MetricsMessageOutInterceptor
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|NoJSR250Annotations
annotation|@
name|Provider
argument_list|(
name|Type
operator|.
name|Feature
argument_list|)
specifier|public
class|class
name|MetricsFeature
extends|extends
name|DelegatingFeature
argument_list|<
name|MetricsFeature
operator|.
name|Portable
argument_list|>
block|{
specifier|public
name|MetricsFeature
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|Portable
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsFeature
parameter_list|(
name|MetricsProvider
name|provider
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|Portable
argument_list|(
name|provider
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsFeature
parameter_list|(
name|MetricsProvider
modifier|...
name|providers
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|Portable
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Provider
argument_list|(
name|Type
operator|.
name|Feature
argument_list|)
specifier|public
specifier|static
class|class
name|Portable
implements|implements
name|AbstractPortableFeature
block|{
name|MetricsProvider
index|[]
name|providers
decl_stmt|;
specifier|public
name|Portable
parameter_list|()
block|{
name|this
operator|.
name|providers
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|Portable
parameter_list|(
name|MetricsProvider
name|provider
parameter_list|)
block|{
name|this
operator|.
name|providers
operator|=
operator|new
name|MetricsProvider
index|[]
block|{
name|provider
block|}
expr_stmt|;
block|}
specifier|public
name|Portable
parameter_list|(
name|MetricsProvider
modifier|...
name|providers
parameter_list|)
block|{
name|this
operator|.
name|providers
operator|=
name|providers
operator|.
name|length
operator|>
literal|0
condition|?
name|providers
else|:
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|Server
name|server
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|createDefaultProvidersIfNeeded
argument_list|(
name|bus
argument_list|)
expr_stmt|;
comment|//can optimize for server case and just put interceptors it needs
name|Endpoint
name|provider
init|=
name|server
operator|.
name|getEndpoint
argument_list|()
decl_stmt|;
name|MetricsMessageOutInterceptor
name|out
init|=
operator|new
name|MetricsMessageOutInterceptor
argument_list|(
name|providers
argument_list|)
decl_stmt|;
name|CountingOutInterceptor
name|countingOut
init|=
operator|new
name|CountingOutInterceptor
argument_list|()
decl_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInOneWayInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPreInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|countingOut
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|countingOut
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|Client
name|client
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|createDefaultProvidersIfNeeded
argument_list|(
name|bus
argument_list|)
expr_stmt|;
comment|//can optimize for client case and just put interceptors it needs
name|MetricsMessageOutInterceptor
name|out
init|=
operator|new
name|MetricsMessageOutInterceptor
argument_list|(
name|providers
argument_list|)
decl_stmt|;
name|CountingOutInterceptor
name|countingOut
init|=
operator|new
name|CountingOutInterceptor
argument_list|()
decl_stmt|;
name|client
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPostInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|getInFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPostInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|countingOut
argument_list|)
expr_stmt|;
name|client
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|client
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageClientOutInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|doInitializeProvider
parameter_list|(
name|InterceptorProvider
name|provider
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|createDefaultProvidersIfNeeded
argument_list|(
name|bus
argument_list|)
expr_stmt|;
comment|//if feature is added to the bus, we need to add all the interceptors
name|MetricsMessageOutInterceptor
name|out
init|=
operator|new
name|MetricsMessageOutInterceptor
argument_list|(
name|providers
argument_list|)
decl_stmt|;
name|CountingOutInterceptor
name|countingOut
init|=
operator|new
name|CountingOutInterceptor
argument_list|()
decl_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInOneWayInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPreInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPostInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPreInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageInPostInvokeInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|countingOut
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MetricsMessageClientOutInterceptor
argument_list|(
name|providers
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|countingOut
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createDefaultProvidersIfNeeded
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
if|if
condition|(
name|providers
operator|==
literal|null
condition|)
block|{
name|ConfiguredBeanLocator
name|b
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|ConfiguredBeanLocator
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|Collection
argument_list|<
name|?
argument_list|>
name|coll
init|=
name|b
operator|.
name|getBeansOfType
argument_list|(
name|MetricsProvider
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|coll
operator|!=
literal|null
condition|)
block|{
name|providers
operator|=
name|coll
operator|.
name|toArray
argument_list|(
operator|new
name|MetricsProvider
index|[]
block|{}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|providers
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|cls
init|=
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.metrics.codahale.CodahaleMetricsProvider"
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|metrics
operator|.
name|MetricsFeature
operator|.
name|class
argument_list|)
decl_stmt|;
name|Constructor
argument_list|<
name|?
argument_list|>
name|c
init|=
name|cls
operator|.
name|getConstructor
argument_list|(
name|Bus
operator|.
name|class
argument_list|)
decl_stmt|;
name|providers
operator|=
operator|new
name|MetricsProvider
index|[]
block|{
operator|(
name|MetricsProvider
operator|)
name|c
operator|.
name|newInstance
argument_list|(
name|bus
argument_list|)
block|}
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|// ignore;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

