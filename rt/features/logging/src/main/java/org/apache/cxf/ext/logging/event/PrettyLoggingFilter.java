begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|event
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_class
specifier|public
class|class
name|PrettyLoggingFilter
implements|implements
name|LogEventSender
block|{
specifier|private
name|LogEventSender
name|next
decl_stmt|;
specifier|private
name|boolean
name|prettyLogging
decl_stmt|;
specifier|private
name|TransformerFactory
name|transformerFactory
decl_stmt|;
specifier|public
name|PrettyLoggingFilter
parameter_list|(
name|LogEventSender
name|next
parameter_list|)
block|{
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
name|this
operator|.
name|prettyLogging
operator|=
literal|false
expr_stmt|;
name|transformerFactory
operator|=
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|send
parameter_list|(
name|LogEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|shouldPrettyPrint
argument_list|(
name|event
argument_list|)
condition|)
block|{
name|event
operator|.
name|setPayload
argument_list|(
name|getPrettyMessage
argument_list|(
name|event
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|next
operator|.
name|send
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|shouldPrettyPrint
parameter_list|(
name|LogEvent
name|event
parameter_list|)
block|{
return|return
name|prettyLogging
operator|&&
name|event
operator|.
name|getContentType
argument_list|()
operator|!=
literal|null
operator|&&
name|event
operator|.
name|getContentType
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"xml"
argument_list|)
operator|>=
literal|0
operator|&&
name|event
operator|.
name|getPayload
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
return|;
block|}
specifier|public
name|String
name|getPrettyMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
try|try
block|{
name|Transformer
name|serializer
init|=
name|transformerFactory
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|setOutputProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setOutputProperty
argument_list|(
literal|"{http://xml.apache.org/xslt}indent-amount"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|StringWriter
name|swriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|transform
argument_list|(
operator|new
name|StreamSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|,
operator|new
name|StreamResult
argument_list|(
name|swriter
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|swriter
operator|.
name|toString
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|TransformerException
name|e
parameter_list|)
block|{
return|return
name|message
return|;
block|}
block|}
specifier|public
name|void
name|setNext
parameter_list|(
name|LogEventSender
name|next
parameter_list|)
block|{
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
block|}
specifier|public
name|void
name|setPrettyLogging
parameter_list|(
name|boolean
name|prettyLogging
parameter_list|)
block|{
name|this
operator|.
name|prettyLogging
operator|=
name|prettyLogging
expr_stmt|;
block|}
block|}
end_class

end_unit

