begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|sse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletableFuture
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletionStage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArraySet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiConsumer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|sse
operator|.
name|OutboundSseEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|sse
operator|.
name|SseBroadcaster
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|sse
operator|.
name|SseEventSink
import|;
end_import

begin_class
specifier|public
class|class
name|SseBroadcasterImpl
implements|implements
name|SseBroadcaster
block|{
specifier|private
specifier|final
name|Set
argument_list|<
name|SseEventSink
argument_list|>
name|subscribers
init|=
operator|new
name|CopyOnWriteArraySet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|Consumer
argument_list|<
name|SseEventSink
argument_list|>
argument_list|>
name|closers
init|=
operator|new
name|CopyOnWriteArraySet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|BiConsumer
argument_list|<
name|SseEventSink
argument_list|,
name|Throwable
argument_list|>
argument_list|>
name|exceptioners
init|=
operator|new
name|CopyOnWriteArraySet
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|register
parameter_list|(
name|SseEventSink
name|sink
parameter_list|)
block|{
name|subscribers
operator|.
name|add
argument_list|(
name|sink
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|CompletionStage
argument_list|<
name|?
argument_list|>
name|broadcast
parameter_list|(
name|OutboundSseEvent
name|event
parameter_list|)
block|{
specifier|final
name|Collection
argument_list|<
name|CompletableFuture
argument_list|<
name|?
argument_list|>
argument_list|>
name|futures
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|SseEventSink
name|sink
range|:
name|subscribers
control|)
block|{
try|try
block|{
name|futures
operator|.
name|add
argument_list|(
name|sink
operator|.
name|send
argument_list|(
name|event
argument_list|)
operator|.
name|toCompletableFuture
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Exception
name|ex
parameter_list|)
block|{
name|exceptioners
operator|.
name|forEach
argument_list|(
name|exceptioner
lambda|->
name|exceptioner
operator|.
name|accept
argument_list|(
name|sink
argument_list|,
name|ex
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|CompletableFuture
operator|.
name|allOf
argument_list|(
name|futures
operator|.
name|toArray
argument_list|(
operator|new
name|CompletableFuture
index|[
name|futures
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onClose
parameter_list|(
name|Consumer
argument_list|<
name|SseEventSink
argument_list|>
name|subscriber
parameter_list|)
block|{
name|closers
operator|.
name|add
argument_list|(
name|subscriber
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onError
parameter_list|(
name|BiConsumer
argument_list|<
name|SseEventSink
argument_list|,
name|Throwable
argument_list|>
name|exceptioner
parameter_list|)
block|{
name|exceptioners
operator|.
name|add
argument_list|(
name|exceptioner
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
name|subscribers
operator|.
name|forEach
argument_list|(
name|subscriber
lambda|->
block|{
name|subscriber
operator|.
name|close
argument_list|()
expr_stmt|;
name|closers
operator|.
name|forEach
argument_list|(
name|closer
lambda|->
name|closer
operator|.
name|accept
argument_list|(
name|subscriber
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

