begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|PreMatching
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ServerProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|InjectionUtils
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|config
operator|.
name|BeanConfig
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|listing
operator|.
name|ApiListingResource
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|listing
operator|.
name|SwaggerSerializers
import|;
end_import

begin_class
specifier|public
class|class
name|Swagger2Feature
extends|extends
name|AbstractSwaggerFeature
block|{
annotation|@
name|Override
specifier|protected
name|void
name|addSwaggerResource
parameter_list|(
name|Server
name|server
parameter_list|)
block|{
if|if
condition|(
operator|!
name|runAsFilter
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|serviceBeans
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|ApiListingResource
name|apiListingResource
init|=
operator|new
name|ApiListingResource
argument_list|()
decl_stmt|;
name|serviceBeans
operator|.
name|add
argument_list|(
name|apiListingResource
argument_list|)
expr_stmt|;
name|JAXRSServiceFactoryBean
name|sfb
init|=
operator|(
name|JAXRSServiceFactoryBean
operator|)
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|get
argument_list|(
name|JAXRSServiceFactoryBean
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|sfb
operator|.
name|setResourceClassesFromBeans
argument_list|(
name|serviceBeans
argument_list|)
expr_stmt|;
for|for
control|(
name|ClassResourceInfo
name|cri
range|:
name|sfb
operator|.
name|getClassResourceInfo
argument_list|()
control|)
block|{
if|if
condition|(
name|ApiListingResource
operator|.
name|class
operator|==
name|cri
operator|.
name|getResourceClass
argument_list|()
condition|)
block|{
name|InjectionUtils
operator|.
name|injectContextProxiesAndApplication
argument_list|(
name|cri
argument_list|,
name|apiListingResource
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|runAsFilter
condition|)
block|{
name|providers
operator|.
name|add
argument_list|(
operator|new
name|SwaggerContainerRequestFilter
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|providers
operator|.
name|add
argument_list|(
operator|new
name|SwaggerSerializers
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ServerProviderFactory
operator|)
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|get
argument_list|(
name|ServerProviderFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|)
operator|.
name|setUserProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
name|BeanConfig
name|beanConfig
init|=
operator|new
name|BeanConfig
argument_list|()
decl_stmt|;
name|beanConfig
operator|.
name|setResourcePackage
argument_list|(
name|getResourcePackage
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setVersion
argument_list|(
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setBasePath
argument_list|(
name|getBasePath
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setTitle
argument_list|(
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setDescription
argument_list|(
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setContact
argument_list|(
name|getContact
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setLicense
argument_list|(
name|getLicense
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setLicenseUrl
argument_list|(
name|getLicenseUrl
argument_list|()
argument_list|)
expr_stmt|;
name|beanConfig
operator|.
name|setScan
argument_list|(
name|isScan
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|setBasePathByAddress
parameter_list|(
name|String
name|address
parameter_list|)
block|{
if|if
condition|(
operator|!
name|address
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
comment|// get rid of the path
name|address
operator|=
name|URI
operator|.
name|create
argument_list|(
name|address
argument_list|)
operator|.
name|getPath
argument_list|()
expr_stmt|;
block|}
name|setBasePath
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PreMatching
specifier|private
specifier|static
class|class
name|SwaggerContainerRequestFilter
extends|extends
name|ApiListingResource
implements|implements
name|ContainerRequestFilter
block|{
specifier|private
specifier|static
specifier|final
name|String
name|APIDOCS_LISTING_PATH_JSON
init|=
literal|"swagger.json"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|APIDOCS_LISTING_PATH_YAML
init|=
literal|"swagger.yaml"
decl_stmt|;
annotation|@
name|Context
specifier|private
name|MessageContext
name|mc
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|requestContext
parameter_list|)
throws|throws
name|IOException
block|{
name|UriInfo
name|ui
init|=
name|mc
operator|.
name|getUriInfo
argument_list|()
decl_stmt|;
if|if
condition|(
name|ui
operator|.
name|getPath
argument_list|()
operator|.
name|endsWith
argument_list|(
name|APIDOCS_LISTING_PATH_JSON
argument_list|)
condition|)
block|{
name|Response
name|r
init|=
name|getListingJson
argument_list|(
literal|null
argument_list|,
name|mc
operator|.
name|getServletConfig
argument_list|()
argument_list|,
name|mc
operator|.
name|getHttpHeaders
argument_list|()
argument_list|,
name|ui
argument_list|)
decl_stmt|;
name|requestContext
operator|.
name|abortWith
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ui
operator|.
name|getPath
argument_list|()
operator|.
name|endsWith
argument_list|(
name|APIDOCS_LISTING_PATH_YAML
argument_list|)
condition|)
block|{
name|Response
name|r
init|=
name|getListingYaml
argument_list|(
literal|null
argument_list|,
name|mc
operator|.
name|getServletConfig
argument_list|()
argument_list|,
name|mc
operator|.
name|getHttpHeaders
argument_list|()
argument_list|,
name|ui
argument_list|)
decl_stmt|;
name|requestContext
operator|.
name|abortWith
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

