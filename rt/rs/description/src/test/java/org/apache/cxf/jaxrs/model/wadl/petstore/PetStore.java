begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|wadl
operator|.
name|petstore
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_comment
comment|/**  * The Pet Store  */
end_comment

begin_class
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
specifier|public
class|class
name|PetStore
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CLOSED
init|=
literal|"The Pet Store is closed"
decl_stmt|;
specifier|public
name|PetStore
parameter_list|()
block|{     }
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
literal|"text/plain"
argument_list|)
comment|/**      * Return Pet Status with no params      *       * @return status       * @throws Exception      */
specifier|public
name|Response
name|getBaseStatus
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|CLOSED
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**      * Return Pet Status with 2 params      * @param petId the pet id      * @param query the query      * @return status       * @throws Exception      */
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/petstore/pets/{petId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
specifier|public
name|Response
name|getStatus2Params
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"petId"
argument_list|)
name|String
name|petId
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"query"
argument_list|)
name|String
name|query
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|CLOSED
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**      * Return Pet Status With 1 Param      * @param petId the pet id      * @return status       * @throws Exception      */
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/petstore/pets/id/{petId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
specifier|public
name|Response
name|getStatus1Param
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"petId"
argument_list|)
name|String
name|petId
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|CLOSED
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**      * Return Pet Status With 3 Params      * @param petId the pet id      * @param query the query      * @param query2 the query2      * @return status       * @throws Exception      */
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/petstore/pets/{petId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
specifier|public
name|Response
name|getStatus3Params
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"petId"
argument_list|)
name|String
name|petId
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"query"
argument_list|)
name|String
name|query
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"query2"
argument_list|)
name|String
name|query2
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|CLOSED
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

