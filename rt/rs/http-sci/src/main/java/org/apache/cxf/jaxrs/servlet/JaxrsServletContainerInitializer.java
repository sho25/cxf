begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContainerInitializer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRegistration
operator|.
name|Dynamic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|annotation
operator|.
name|HandlesTypes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ClasspathScanner
import|;
end_import

begin_class
annotation|@
name|HandlesTypes
argument_list|(
name|Application
operator|.
name|class
argument_list|)
specifier|public
class|class
name|JaxrsServletContainerInitializer
implements|implements
name|ServletContainerInitializer
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|JaxrsServletContainerInitializer
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|onStartup
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|,
specifier|final
name|ServletContext
name|ctx
parameter_list|)
throws|throws
name|ServletException
block|{
specifier|final
name|Dynamic
name|servlet
init|=
name|ctx
operator|.
name|addServlet
argument_list|(
literal|"CXFServlet"
argument_list|,
name|CXFNonSpringJaxrsServlet
operator|.
name|class
argument_list|)
decl_stmt|;
name|servlet
operator|.
name|addMapping
argument_list|(
literal|"/*"
argument_list|)
expr_stmt|;
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|application
init|=
name|findCandidate
argument_list|(
name|classes
argument_list|)
decl_stmt|;
if|if
condition|(
name|application
operator|!=
literal|null
condition|)
block|{
name|servlet
operator|.
name|setInitParameter
argument_list|(
literal|"javax.ws.rs.Application"
argument_list|,
name|application
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
specifier|final
name|Map
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|Annotation
argument_list|>
argument_list|,
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|>
name|providersAndResources
init|=
name|ClasspathScanner
operator|.
name|findClasses
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ClasspathScanner
operator|.
name|WILDCARD
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|Provider
operator|.
name|class
argument_list|,
name|Path
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|servlet
operator|.
name|setInitParameter
argument_list|(
literal|"jaxrs.providers"
argument_list|,
name|getClassNames
argument_list|(
name|providersAndResources
operator|.
name|get
argument_list|(
name|Provider
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setInitParameter
argument_list|(
literal|"jaxrs.serviceClasses"
argument_list|,
name|getClassNames
argument_list|(
name|providersAndResources
operator|.
name|get
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|ClassNotFoundException
decl||
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Unabled to perform classpath scan"
argument_list|,
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
specifier|private
specifier|static
name|String
name|getClassNames
parameter_list|(
specifier|final
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
specifier|final
name|StringBuilder
name|classNames
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
range|:
name|classes
control|)
block|{
name|classNames
operator|.
name|append
argument_list|(
operator|(
name|classNames
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|)
condition|?
literal|","
else|:
literal|""
argument_list|)
operator|.
name|append
argument_list|(
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|classNames
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|Class
argument_list|<
name|?
argument_list|>
name|findCandidate
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
parameter_list|)
block|{
for|for
control|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
range|:
name|classes
control|)
block|{
if|if
condition|(
operator|!
name|clazz
operator|.
name|getPackage
argument_list|()
operator|.
name|equals
argument_list|(
name|JaxrsServletContainerInitializer
operator|.
name|class
operator|.
name|getPackage
argument_list|()
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"Found JAX-RS application to initialize: "
operator|+
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|clazz
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

