begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|openapi
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|jaxrs2
operator|.
name|integration
operator|.
name|ServletConfigContextUtils
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|jaxrs2
operator|.
name|integration
operator|.
name|resources
operator|.
name|OpenApiResource
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|integration
operator|.
name|GenericOpenApiContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|integration
operator|.
name|OpenApiContextLocator
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|integration
operator|.
name|api
operator|.
name|OpenAPIConfiguration
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|integration
operator|.
name|api
operator|.
name|OpenApiContext
import|;
end_import

begin_class
specifier|public
class|class
name|OpenApiCustomizedResource
extends|extends
name|OpenApiResource
block|{
specifier|private
specifier|final
name|OpenApiCustomizer
name|customizer
decl_stmt|;
specifier|public
name|OpenApiCustomizedResource
parameter_list|(
specifier|final
name|OpenApiCustomizer
name|customizer
parameter_list|)
block|{
name|this
operator|.
name|customizer
operator|=
name|customizer
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
literal|"application/yaml"
block|}
argument_list|)
annotation|@
name|Operation
argument_list|(
name|hidden
operator|=
literal|true
argument_list|)
specifier|public
name|Response
name|getOpenApi
parameter_list|(
annotation|@
name|Context
name|ServletConfig
name|config
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"type"
argument_list|)
name|String
name|type
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|customizer
operator|!=
literal|null
condition|)
block|{
specifier|final
name|OpenAPIConfiguration
name|configuration
init|=
name|customizer
operator|.
name|customize
argument_list|(
name|getOpenApiConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|setOpenApiConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
comment|// By default, the OpenApiContext instance is cached. It means that the configuration
comment|// changes won't be taken into account (due to the deep copying rather than reference
comment|// passing). In order to reflect any changes which customization may do, we have to
comment|// update reader's configuration directly.
specifier|final
name|String
name|ctxId
init|=
name|ServletConfigContextUtils
operator|.
name|getContextIdFromServletConfig
argument_list|(
name|config
argument_list|)
decl_stmt|;
specifier|final
name|OpenApiContext
name|ctx
init|=
name|OpenApiContextLocator
operator|.
name|getInstance
argument_list|()
operator|.
name|getOpenApiContext
argument_list|(
name|ctxId
argument_list|)
decl_stmt|;
if|if
condition|(
name|ctx
operator|instanceof
name|GenericOpenApiContext
argument_list|<
name|?
argument_list|>
condition|)
block|{
operator|(
operator|(
name|GenericOpenApiContext
argument_list|<
name|?
argument_list|>
operator|)
name|ctx
operator|)
operator|.
name|getOpenApiReader
argument_list|()
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|customizer
operator|.
name|customize
argument_list|(
name|ctx
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|super
operator|.
name|getOpenApi
argument_list|(
name|headers
argument_list|,
name|uriInfo
argument_list|,
name|type
argument_list|)
return|;
block|}
block|}
end_class

end_unit

