begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|tuple
operator|.
name|ImmutablePair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|tuple
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|doc
operator|.
name|DocumentationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|listing
operator|.
name|SwaggerSerializers
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Swagger
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Tag
import|;
end_import

begin_class
specifier|public
class|class
name|Swagger2Serializers
extends|extends
name|SwaggerSerializers
block|{
specifier|protected
specifier|final
name|boolean
name|dynamicBasePath
decl_stmt|;
specifier|protected
specifier|final
name|boolean
name|replaceTags
decl_stmt|;
specifier|protected
specifier|final
name|DocumentationProvider
name|javadocProvider
decl_stmt|;
specifier|protected
specifier|final
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|cris
decl_stmt|;
specifier|public
name|Swagger2Serializers
parameter_list|(
specifier|final
name|boolean
name|dynamicBasePath
parameter_list|,
specifier|final
name|boolean
name|replaceTags
parameter_list|,
specifier|final
name|DocumentationProvider
name|javadocProvider
parameter_list|,
specifier|final
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|cris
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|dynamicBasePath
operator|=
name|dynamicBasePath
expr_stmt|;
name|this
operator|.
name|replaceTags
operator|=
name|replaceTags
expr_stmt|;
name|this
operator|.
name|javadocProvider
operator|=
name|javadocProvider
expr_stmt|;
name|this
operator|.
name|cris
operator|=
name|cris
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
specifier|final
name|Swagger
name|data
parameter_list|,
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
specifier|final
name|Type
name|genericType
parameter_list|,
specifier|final
name|Annotation
index|[]
name|annotations
parameter_list|,
specifier|final
name|MediaType
name|mediaType
parameter_list|,
specifier|final
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|,
specifier|final
name|OutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|dynamicBasePath
condition|)
block|{
name|MessageContext
name|ctx
init|=
name|JAXRSUtils
operator|.
name|createContextValue
argument_list|(
name|JAXRSUtils
operator|.
name|getCurrentMessage
argument_list|()
argument_list|,
literal|null
argument_list|,
name|MessageContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|data
operator|.
name|setBasePath
argument_list|(
name|StringUtils
operator|.
name|substringBeforeLast
argument_list|(
name|ctx
operator|.
name|getHttpServletRequest
argument_list|()
operator|.
name|getRequestURI
argument_list|()
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|replaceTags
operator|||
name|javadocProvider
operator|!=
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|ClassResourceInfo
argument_list|>
name|operations
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Pair
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|,
name|OperationResourceInfo
argument_list|>
name|methods
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|ClassResourceInfo
name|cri
range|:
name|cris
control|)
block|{
for|for
control|(
name|OperationResourceInfo
name|ori
range|:
name|cri
operator|.
name|getMethodDispatcher
argument_list|()
operator|.
name|getOperationResourceInfos
argument_list|()
control|)
block|{
name|String
name|normalizedPath
init|=
name|getNormalizedPath
argument_list|(
name|cri
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|,
name|ori
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|operations
operator|.
name|put
argument_list|(
name|normalizedPath
argument_list|,
name|cri
argument_list|)
expr_stmt|;
name|methods
operator|.
name|put
argument_list|(
name|ImmutablePair
operator|.
name|of
argument_list|(
name|ori
operator|.
name|getHttpMethod
argument_list|()
argument_list|,
name|normalizedPath
argument_list|)
argument_list|,
name|ori
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|replaceTags
operator|&&
name|data
operator|.
name|getTags
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|data
operator|.
name|getTags
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
for|for
control|(
specifier|final
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Path
argument_list|>
name|entry
range|:
name|data
operator|.
name|getPaths
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Tag
name|tag
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|replaceTags
operator|&&
name|operations
operator|.
name|containsKey
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|ClassResourceInfo
name|cri
init|=
name|operations
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|tag
operator|=
operator|new
name|Tag
argument_list|()
expr_stmt|;
name|tag
operator|.
name|setName
argument_list|(
name|cri
operator|.
name|getURITemplate
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|javadocProvider
operator|!=
literal|null
condition|)
block|{
name|tag
operator|.
name|setDescription
argument_list|(
name|javadocProvider
operator|.
name|getClassDoc
argument_list|(
name|cri
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|data
operator|.
name|addTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|HttpMethod
argument_list|,
name|Operation
argument_list|>
name|subentry
range|:
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|getOperationMap
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|replaceTags
operator|&&
name|tag
operator|!=
literal|null
condition|)
block|{
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|setTags
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Pair
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|key
init|=
name|ImmutablePair
operator|.
name|of
argument_list|(
name|subentry
operator|.
name|getKey
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|methods
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
operator|&&
name|javadocProvider
operator|!=
literal|null
condition|)
block|{
name|OperationResourceInfo
name|ori
init|=
name|methods
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|setSummary
argument_list|(
name|javadocProvider
operator|.
name|getMethodDoc
argument_list|(
name|ori
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|getParameters
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|setDescription
argument_list|(
name|javadocProvider
operator|.
name|getMethodParameterDoc
argument_list|(
name|ori
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|getResponses
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|getResponses
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|subentry
operator|.
name|getValue
argument_list|()
operator|.
name|getResponses
argument_list|()
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|setDescription
argument_list|(
name|javadocProvider
operator|.
name|getMethodResponseDoc
argument_list|(
name|ori
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|super
operator|.
name|writeTo
argument_list|(
name|data
argument_list|,
name|type
argument_list|,
name|genericType
argument_list|,
name|annotations
argument_list|,
name|mediaType
argument_list|,
name|headers
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|String
name|getNormalizedPath
parameter_list|(
name|String
name|classResourcePath
parameter_list|,
name|String
name|operationResourcePath
parameter_list|)
block|{
name|StringBuilder
name|normalizedPath
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|String
index|[]
name|segments
init|=
name|StringUtils
operator|.
name|split
argument_list|(
name|classResourcePath
operator|+
name|operationResourcePath
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|segment
range|:
name|segments
control|)
block|{
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|segment
argument_list|)
condition|)
block|{
name|normalizedPath
operator|.
name|append
argument_list|(
literal|"/"
argument_list|)
operator|.
name|append
argument_list|(
name|segment
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Adapt to Swagger's path expression
if|if
condition|(
name|normalizedPath
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|":.*}"
argument_list|)
condition|)
block|{
name|normalizedPath
operator|.
name|setLength
argument_list|(
name|normalizedPath
operator|.
name|length
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
name|normalizedPath
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
block|}
return|return
name|StringUtils
operator|.
name|EMPTY
operator|.
name|equals
argument_list|(
name|normalizedPath
operator|.
name|toString
argument_list|()
argument_list|)
condition|?
literal|"/"
else|:
name|normalizedPath
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

