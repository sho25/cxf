begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|PreMatching
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|Provider
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|Provider
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PropertyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|common
operator|.
name|openapi
operator|.
name|DefaultApplicationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|common
operator|.
name|openapi
operator|.
name|SwaggerProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|ContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ApplicationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ServerProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|swagger
operator|.
name|ui
operator|.
name|SwaggerUiConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|swagger
operator|.
name|ui
operator|.
name|SwaggerUiSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|InjectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|config
operator|.
name|BeanConfig
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|config
operator|.
name|DefaultReaderConfig
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|config
operator|.
name|ReaderConfig
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|config
operator|.
name|SwaggerContextService
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|listing
operator|.
name|ApiListingResource
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|listing
operator|.
name|SwaggerSerializers
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Swagger
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|auth
operator|.
name|SecuritySchemeDefinition
import|;
end_import

begin_class
annotation|@
name|Provider
argument_list|(
name|value
operator|=
name|Type
operator|.
name|Feature
argument_list|,
name|scope
operator|=
name|Scope
operator|.
name|Server
argument_list|)
specifier|public
class|class
name|Swagger2Feature
extends|extends
name|AbstractSwaggerFeature
implements|implements
name|SwaggerUiSupport
implements|,
name|SwaggerProperties
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SCHEMES_PROPERTY
init|=
literal|"schemes"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|HOST_PROPERTY
init|=
literal|"host"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USE_PATH_CFG_PROPERTY
init|=
literal|"use.path.based.config"
decl_stmt|;
specifier|private
name|boolean
name|scan
decl_stmt|;
specifier|private
name|boolean
name|scanAllResources
decl_stmt|;
specifier|private
name|String
name|ignoreRoutes
decl_stmt|;
specifier|private
name|Boolean
name|supportSwaggerUi
decl_stmt|;
specifier|private
name|String
name|swaggerUiVersion
decl_stmt|;
specifier|private
name|String
name|swaggerUiMavenGroupAndArtifact
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|swaggerUiMediaTypes
decl_stmt|;
specifier|private
name|boolean
name|dynamicBasePath
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|SecuritySchemeDefinition
argument_list|>
name|securityDefinitions
decl_stmt|;
specifier|private
name|Swagger2Customizer
name|customizer
decl_stmt|;
specifier|private
name|String
name|host
decl_stmt|;
specifier|private
name|String
index|[]
name|schemes
decl_stmt|;
specifier|private
name|Boolean
name|prettyPrint
decl_stmt|;
specifier|private
name|Boolean
name|usePathBasedConfig
decl_stmt|;
specifier|private
name|String
name|propertiesLocation
init|=
name|DEFAULT_PROPS_LOCATION
decl_stmt|;
comment|// Swagger UI configuration parameters (to be passed as query string).
specifier|private
name|SwaggerUiConfig
name|swaggerUiConfig
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|calculateDefaultBasePath
parameter_list|(
name|Server
name|server
parameter_list|)
block|{
name|dynamicBasePath
operator|=
literal|true
expr_stmt|;
name|super
operator|.
name|calculateDefaultBasePath
argument_list|(
name|server
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|addSwaggerResource
parameter_list|(
name|Server
name|server
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|JAXRSServiceFactoryBean
name|sfb
init|=
operator|(
name|JAXRSServiceFactoryBean
operator|)
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|get
argument_list|(
name|JAXRSServiceFactoryBean
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|ServerProviderFactory
name|factory
init|=
operator|(
name|ServerProviderFactory
operator|)
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|get
argument_list|(
name|ServerProviderFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|ApplicationInfo
name|appInfo
init|=
name|DefaultApplicationFactory
operator|.
name|createApplicationInfoOrDefault
argument_list|(
name|server
argument_list|,
name|factory
argument_list|,
name|sfb
argument_list|,
name|bus
argument_list|,
name|isScan
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|swaggerResources
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|customizer
operator|==
literal|null
condition|)
block|{
name|customizer
operator|=
operator|new
name|Swagger2Customizer
argument_list|()
expr_stmt|;
block|}
name|ApiListingResource
name|apiListingResource
init|=
operator|new
name|Swagger2ApiListingResource
argument_list|(
name|customizer
argument_list|)
decl_stmt|;
name|swaggerResources
operator|.
name|add
argument_list|(
name|apiListingResource
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|SwaggerSerializers
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isRunAsFilter
argument_list|()
condition|)
block|{
name|providers
operator|.
name|add
argument_list|(
operator|new
name|SwaggerContainerRequestFilter
argument_list|(
name|appInfo
operator|==
literal|null
condition|?
literal|null
else|:
name|appInfo
operator|.
name|getProvider
argument_list|()
argument_list|,
name|customizer
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|final
name|Properties
name|swaggerProps
init|=
name|getSwaggerProperties
argument_list|(
name|propertiesLocation
argument_list|,
name|bus
argument_list|)
decl_stmt|;
specifier|final
name|Registration
name|swaggerUiRegistration
init|=
name|getSwaggerUi
argument_list|(
name|bus
argument_list|,
name|swaggerProps
argument_list|,
name|isRunAsFilter
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|isRunAsFilter
argument_list|()
condition|)
block|{
name|swaggerResources
operator|.
name|addAll
argument_list|(
name|swaggerUiRegistration
operator|.
name|getResources
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|providers
operator|.
name|addAll
argument_list|(
name|swaggerUiRegistration
operator|.
name|getProviders
argument_list|()
argument_list|)
expr_stmt|;
name|sfb
operator|.
name|setResourceClassesFromBeans
argument_list|(
name|swaggerResources
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ClassResourceInfo
argument_list|>
name|cris
init|=
name|sfb
operator|.
name|getClassResourceInfo
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|isRunAsFilter
argument_list|()
condition|)
block|{
for|for
control|(
name|ClassResourceInfo
name|cri
range|:
name|cris
control|)
block|{
if|if
condition|(
name|ApiListingResource
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|cri
operator|.
name|getResourceClass
argument_list|()
argument_list|)
condition|)
block|{
name|InjectionUtils
operator|.
name|injectContextProxies
argument_list|(
name|cri
argument_list|,
name|apiListingResource
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|customizer
operator|.
name|setClassResourceInfos
argument_list|(
name|cris
argument_list|)
expr_stmt|;
name|customizer
operator|.
name|setDynamicBasePath
argument_list|(
name|dynamicBasePath
argument_list|)
expr_stmt|;
name|BeanConfig
name|beanConfig
init|=
name|appInfo
operator|==
literal|null
condition|?
operator|new
name|BeanConfig
argument_list|()
else|:
operator|new
name|ApplicationBeanConfig
argument_list|(
name|appInfo
operator|.
name|getProvider
argument_list|()
argument_list|)
decl_stmt|;
name|initBeanConfig
argument_list|(
name|beanConfig
argument_list|,
name|swaggerProps
argument_list|)
expr_stmt|;
name|Swagger
name|swagger
init|=
name|beanConfig
operator|.
name|getSwagger
argument_list|()
decl_stmt|;
if|if
condition|(
name|swagger
operator|!=
literal|null
operator|&&
name|securityDefinitions
operator|!=
literal|null
condition|)
block|{
name|swagger
operator|.
name|setSecurityDefinitions
argument_list|(
name|securityDefinitions
argument_list|)
expr_stmt|;
block|}
name|customizer
operator|.
name|setBeanConfig
argument_list|(
name|beanConfig
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ReaderConfigFilter
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|beanConfig
operator|.
name|isUsePathBasedConfig
argument_list|()
condition|)
block|{
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ServletConfigProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|factory
operator|.
name|setUserProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|initBeanConfig
parameter_list|(
name|BeanConfig
name|beanConfig
parameter_list|,
name|Properties
name|props
parameter_list|)
block|{
comment|// resource package
name|String
name|theResourcePackage
init|=
name|getResourcePackage
argument_list|()
decl_stmt|;
if|if
condition|(
name|theResourcePackage
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theResourcePackage
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|RESOURCE_PACKAGE_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setResourcePackage
argument_list|(
name|theResourcePackage
argument_list|)
expr_stmt|;
comment|// use path based configuration
name|Boolean
name|theUsePathBasedConfig
init|=
name|isUsePathBasedConfig
argument_list|()
decl_stmt|;
if|if
condition|(
name|theUsePathBasedConfig
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theUsePathBasedConfig
operator|=
name|PropertyUtils
operator|.
name|isTrue
argument_list|(
name|props
operator|.
name|get
argument_list|(
name|USE_PATH_CFG_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|theUsePathBasedConfig
operator|==
literal|null
condition|)
block|{
name|theUsePathBasedConfig
operator|=
literal|false
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setUsePathBasedConfig
argument_list|(
name|theUsePathBasedConfig
argument_list|)
expr_stmt|;
comment|// version
name|String
name|theVersion
init|=
name|getVersion
argument_list|()
decl_stmt|;
if|if
condition|(
name|theVersion
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theVersion
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|VERSION_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setVersion
argument_list|(
name|theVersion
argument_list|)
expr_stmt|;
comment|// host
name|String
name|theHost
init|=
name|getHost
argument_list|()
decl_stmt|;
if|if
condition|(
name|theHost
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theHost
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|HOST_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setHost
argument_list|(
name|theHost
argument_list|)
expr_stmt|;
comment|// schemes
name|String
index|[]
name|theSchemes
init|=
name|getSchemes
argument_list|()
decl_stmt|;
if|if
condition|(
name|theSchemes
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
operator|&&
name|props
operator|.
name|containsKey
argument_list|(
name|SCHEMES_PROPERTY
argument_list|)
condition|)
block|{
name|theSchemes
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|SCHEMES_PROPERTY
argument_list|)
operator|.
name|split
argument_list|(
literal|","
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setSchemes
argument_list|(
name|theSchemes
argument_list|)
expr_stmt|;
comment|// title
name|String
name|theTitle
init|=
name|getTitle
argument_list|()
decl_stmt|;
if|if
condition|(
name|theTitle
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theTitle
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|TITLE_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setTitle
argument_list|(
name|theTitle
argument_list|)
expr_stmt|;
comment|// description
name|String
name|theDescription
init|=
name|getDescription
argument_list|()
decl_stmt|;
if|if
condition|(
name|theDescription
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theDescription
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|DESCRIPTION_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setDescription
argument_list|(
name|theDescription
argument_list|)
expr_stmt|;
comment|// contact
name|String
name|theContact
init|=
name|getContact
argument_list|()
decl_stmt|;
if|if
condition|(
name|theContact
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theContact
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|CONTACT_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setContact
argument_list|(
name|theContact
argument_list|)
expr_stmt|;
comment|// license
name|String
name|theLicense
init|=
name|getLicense
argument_list|()
decl_stmt|;
if|if
condition|(
name|theLicense
operator|==
literal|null
operator|&&
operator|!
name|licenseWasSet
condition|)
block|{
if|if
condition|(
name|props
operator|!=
literal|null
condition|)
block|{
name|theLicense
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|LICENSE_PROPERTY
argument_list|)
expr_stmt|;
if|if
condition|(
name|theLicense
operator|!=
literal|null
operator|&&
name|theLicense
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|theLicense
operator|=
literal|null
expr_stmt|;
block|}
block|}
else|else
block|{
name|theLicense
operator|=
name|DEFAULT_LICENSE_VALUE
expr_stmt|;
block|}
block|}
name|beanConfig
operator|.
name|setLicense
argument_list|(
name|theLicense
argument_list|)
expr_stmt|;
comment|// license url
name|String
name|theLicenseUrl
init|=
name|getLicenseUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|theLicenseUrl
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theLicenseUrl
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|LICENSE_URL_PROPERTY
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|theLicenseUrl
operator|==
literal|null
operator|&&
name|DEFAULT_LICENSE_VALUE
operator|.
name|equals
argument_list|(
name|theLicense
argument_list|)
condition|)
block|{
name|theLicenseUrl
operator|=
name|DEFAULT_LICENSE_URL
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setLicenseUrl
argument_list|(
name|theLicenseUrl
argument_list|)
expr_stmt|;
comment|// terms of service url
name|String
name|theTermsUrl
init|=
name|getTermsOfServiceUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|theTermsUrl
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theTermsUrl
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|TERMS_URL_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setTermsOfServiceUrl
argument_list|(
name|theTermsUrl
argument_list|)
expr_stmt|;
comment|// pretty print
name|Boolean
name|thePrettyPrint
init|=
name|isPrettyPrint
argument_list|()
decl_stmt|;
if|if
condition|(
name|thePrettyPrint
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|thePrettyPrint
operator|=
name|PropertyUtils
operator|.
name|isTrue
argument_list|(
name|props
operator|.
name|get
argument_list|(
name|PRETTY_PRINT_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|thePrettyPrint
operator|==
literal|null
condition|)
block|{
name|thePrettyPrint
operator|=
literal|false
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setPrettyPrint
argument_list|(
name|thePrettyPrint
argument_list|)
expr_stmt|;
comment|// filter class
name|String
name|theFilterClass
init|=
name|getFilterClass
argument_list|()
decl_stmt|;
if|if
condition|(
name|theFilterClass
operator|==
literal|null
operator|&&
name|props
operator|!=
literal|null
condition|)
block|{
name|theFilterClass
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|FILTER_CLASS_PROPERTY
argument_list|)
expr_stmt|;
block|}
name|beanConfig
operator|.
name|setFilterClass
argument_list|(
name|theFilterClass
argument_list|)
expr_stmt|;
comment|// scan
name|beanConfig
operator|.
name|setScan
argument_list|(
name|isScan
argument_list|()
argument_list|)
expr_stmt|;
comment|// base path is calculated dynamically
name|beanConfig
operator|.
name|setBasePath
argument_list|(
name|getBasePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Boolean
name|isUsePathBasedConfig
parameter_list|()
block|{
return|return
name|usePathBasedConfig
return|;
block|}
specifier|public
name|void
name|setUsePathBasedConfig
parameter_list|(
name|Boolean
name|usePathBasedConfig
parameter_list|)
block|{
name|this
operator|.
name|usePathBasedConfig
operator|=
name|usePathBasedConfig
expr_stmt|;
block|}
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getSchemes
parameter_list|()
block|{
return|return
name|schemes
return|;
block|}
specifier|public
name|void
name|setSchemes
parameter_list|(
name|String
index|[]
name|schemes
parameter_list|)
block|{
name|this
operator|.
name|schemes
operator|=
name|schemes
expr_stmt|;
block|}
specifier|public
name|Boolean
name|isPrettyPrint
parameter_list|()
block|{
return|return
name|prettyPrint
return|;
block|}
specifier|public
name|void
name|setPrettyPrint
parameter_list|(
name|Boolean
name|prettyPrint
parameter_list|)
block|{
name|this
operator|.
name|prettyPrint
operator|=
name|prettyPrint
expr_stmt|;
block|}
specifier|public
name|Swagger2Customizer
name|getCustomizer
parameter_list|()
block|{
return|return
name|customizer
return|;
block|}
specifier|public
name|void
name|setCustomizer
parameter_list|(
name|Swagger2Customizer
name|customizer
parameter_list|)
block|{
name|this
operator|.
name|customizer
operator|=
name|customizer
expr_stmt|;
block|}
specifier|public
name|boolean
name|isScanAllResources
parameter_list|()
block|{
return|return
name|scanAllResources
return|;
block|}
specifier|public
name|void
name|setScanAllResources
parameter_list|(
name|boolean
name|scanAllResources
parameter_list|)
block|{
name|this
operator|.
name|scanAllResources
operator|=
name|scanAllResources
expr_stmt|;
block|}
specifier|public
name|String
name|getIgnoreRoutes
parameter_list|()
block|{
return|return
name|ignoreRoutes
return|;
block|}
specifier|public
name|void
name|setIgnoreRoutes
parameter_list|(
name|String
name|ignoreRoutes
parameter_list|)
block|{
name|this
operator|.
name|ignoreRoutes
operator|=
name|ignoreRoutes
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|setBasePathByAddress
parameter_list|(
name|String
name|address
parameter_list|)
block|{
if|if
condition|(
operator|!
name|address
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
comment|// get the path part
name|URI
name|u
init|=
name|URI
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|setBasePath
argument_list|(
name|u
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getHost
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setHost
argument_list|(
name|u
operator|.
name|getPort
argument_list|()
operator|<
literal|0
condition|?
name|u
operator|.
name|getHost
argument_list|()
else|:
name|u
operator|.
name|getHost
argument_list|()
operator|+
literal|":"
operator|+
name|u
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|setBasePath
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Set SwaggerUI Maven group and artifact using the "groupId/artifactId" format.      * @param swaggerUiMavenGroupAndArtifact      */
specifier|public
name|void
name|setSwaggerUiMavenGroupAndArtifact
parameter_list|(
name|String
name|swaggerUiMavenGroupAndArtifact
parameter_list|)
block|{
name|this
operator|.
name|swaggerUiMavenGroupAndArtifact
operator|=
name|swaggerUiMavenGroupAndArtifact
expr_stmt|;
block|}
specifier|public
name|void
name|setSwaggerUiVersion
parameter_list|(
name|String
name|swaggerUiVersion
parameter_list|)
block|{
name|this
operator|.
name|swaggerUiVersion
operator|=
name|swaggerUiVersion
expr_stmt|;
block|}
specifier|public
name|void
name|setSupportSwaggerUi
parameter_list|(
name|boolean
name|supportSwaggerUi
parameter_list|)
block|{
name|this
operator|.
name|supportSwaggerUi
operator|=
name|supportSwaggerUi
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Boolean
name|isSupportSwaggerUi
parameter_list|()
block|{
return|return
name|supportSwaggerUi
return|;
block|}
specifier|public
name|void
name|setSwaggerUiMediaTypes
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|swaggerUiMediaTypes
parameter_list|)
block|{
name|this
operator|.
name|swaggerUiMediaTypes
operator|=
name|swaggerUiMediaTypes
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getSwaggerUiMediaTypes
parameter_list|()
block|{
return|return
name|swaggerUiMediaTypes
return|;
block|}
specifier|public
name|void
name|setSecurityDefinitions
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|SecuritySchemeDefinition
argument_list|>
name|securityDefinitions
parameter_list|)
block|{
name|this
operator|.
name|securityDefinitions
operator|=
name|securityDefinitions
expr_stmt|;
block|}
specifier|public
name|String
name|getPropertiesLocation
parameter_list|()
block|{
return|return
name|propertiesLocation
return|;
block|}
specifier|public
name|void
name|setPropertiesLocation
parameter_list|(
name|String
name|propertiesLocation
parameter_list|)
block|{
name|this
operator|.
name|propertiesLocation
operator|=
name|propertiesLocation
expr_stmt|;
block|}
specifier|public
name|boolean
name|isScan
parameter_list|()
block|{
return|return
name|scan
return|;
block|}
specifier|public
name|void
name|setScan
parameter_list|(
name|boolean
name|scan
parameter_list|)
block|{
name|this
operator|.
name|scan
operator|=
name|scan
expr_stmt|;
block|}
specifier|public
name|void
name|setSwaggerUiConfig
parameter_list|(
specifier|final
name|SwaggerUiConfig
name|swaggerUiConfig
parameter_list|)
block|{
name|this
operator|.
name|swaggerUiConfig
operator|=
name|swaggerUiConfig
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|SwaggerUiConfig
name|getSwaggerUiConfig
parameter_list|()
block|{
return|return
name|swaggerUiConfig
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|findSwaggerUiRoot
parameter_list|()
block|{
return|return
name|SwaggerUi
operator|.
name|findSwaggerUiRoot
argument_list|(
name|swaggerUiMavenGroupAndArtifact
argument_list|,
name|swaggerUiVersion
argument_list|)
return|;
block|}
specifier|private
class|class
name|ServletConfigProvider
implements|implements
name|ContextProvider
argument_list|<
name|ServletConfig
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|ServletConfig
name|createContext
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
specifier|final
name|ServletConfig
name|sc
init|=
operator|(
name|ServletConfig
operator|)
name|message
operator|.
name|get
argument_list|(
literal|"HTTP.CONFIG"
argument_list|)
decl_stmt|;
comment|// When deploying into OSGi container, it is possible to use embedded Jetty
comment|// transport. In this case, the ServletConfig is not available and Swagger
comment|// does not take into account certain configuration parameters. To overcome
comment|// that, the ServletConfig is synthesized from ServletContext instance.
if|if
condition|(
name|sc
operator|==
literal|null
condition|)
block|{
specifier|final
name|ServletContext
name|context
init|=
operator|(
name|ServletContext
operator|)
name|message
operator|.
name|get
argument_list|(
literal|"HTTP.CONTEXT"
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|SyntheticServletConfig
argument_list|(
name|context
argument_list|)
return|;
block|}
block|}
elseif|else
if|if
condition|(
name|sc
operator|.
name|getInitParameter
argument_list|(
name|SwaggerContextService
operator|.
name|USE_PATH_BASED_CONFIG
argument_list|)
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|DelegatingServletConfig
argument_list|(
name|sc
argument_list|)
return|;
block|}
return|return
name|sc
return|;
block|}
block|}
annotation|@
name|PreMatching
specifier|protected
specifier|static
class|class
name|SwaggerContainerRequestFilter
extends|extends
name|Swagger2ApiListingResource
implements|implements
name|ContainerRequestFilter
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|APIDOCS_LISTING_PATH_JSON
init|=
literal|"swagger.json"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|APIDOCS_LISTING_PATH_YAML
init|=
literal|"swagger.yaml"
decl_stmt|;
annotation|@
name|Context
specifier|protected
name|MessageContext
name|mc
decl_stmt|;
specifier|private
name|Application
name|app
decl_stmt|;
specifier|public
name|SwaggerContainerRequestFilter
parameter_list|(
name|Application
name|app
parameter_list|,
name|Swagger2Customizer
name|customizer
parameter_list|)
block|{
name|super
argument_list|(
name|customizer
argument_list|)
expr_stmt|;
name|this
operator|.
name|app
operator|=
name|app
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|requestContext
parameter_list|)
throws|throws
name|IOException
block|{
name|UriInfo
name|ui
init|=
name|mc
operator|.
name|getUriInfo
argument_list|()
decl_stmt|;
name|Response
name|response
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ui
operator|.
name|getPath
argument_list|()
operator|.
name|endsWith
argument_list|(
name|APIDOCS_LISTING_PATH_JSON
argument_list|)
condition|)
block|{
name|response
operator|=
name|getListingJsonResponse
argument_list|(
name|app
argument_list|,
name|mc
operator|.
name|getServletContext
argument_list|()
argument_list|,
name|mc
operator|.
name|getServletConfig
argument_list|()
argument_list|,
name|mc
operator|.
name|getHttpHeaders
argument_list|()
argument_list|,
name|ui
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ui
operator|.
name|getPath
argument_list|()
operator|.
name|endsWith
argument_list|(
name|APIDOCS_LISTING_PATH_YAML
argument_list|)
condition|)
block|{
name|response
operator|=
name|getListingYamlResponse
argument_list|(
name|app
argument_list|,
name|mc
operator|.
name|getServletContext
argument_list|()
argument_list|,
name|mc
operator|.
name|getServletConfig
argument_list|()
argument_list|,
name|mc
operator|.
name|getHttpHeaders
argument_list|()
argument_list|,
name|ui
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|response
operator|!=
literal|null
condition|)
block|{
name|requestContext
operator|.
name|abortWith
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
class|class
name|ReaderConfigFilter
implements|implements
name|ContainerRequestFilter
block|{
annotation|@
name|Context
specifier|protected
name|MessageContext
name|mc
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|requestContext
parameter_list|)
throws|throws
name|IOException
block|{
name|ServletContext
name|servletContext
init|=
name|mc
operator|.
name|getServletContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|servletContext
operator|!=
literal|null
operator|&&
name|servletContext
operator|.
name|getAttribute
argument_list|(
name|ReaderConfig
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|mc
operator|.
name|getServletConfig
argument_list|()
operator|!=
literal|null
operator|&&
name|Boolean
operator|.
name|valueOf
argument_list|(
name|mc
operator|.
name|getServletConfig
argument_list|()
operator|.
name|getInitParameter
argument_list|(
literal|"scan.all.resources"
argument_list|)
argument_list|)
condition|)
block|{
name|addReaderConfig
argument_list|(
name|mc
operator|.
name|getServletConfig
argument_list|()
operator|.
name|getInitParameter
argument_list|(
literal|"ignore.routes"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|isScanAllResources
argument_list|()
condition|)
block|{
name|addReaderConfig
argument_list|(
name|getIgnoreRoutes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|void
name|addReaderConfig
parameter_list|(
name|String
name|ignoreRoutesParam
parameter_list|)
block|{
name|DefaultReaderConfig
name|rc
init|=
operator|new
name|DefaultReaderConfig
argument_list|()
decl_stmt|;
name|rc
operator|.
name|setScanAllResources
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|ignoreRoutesParam
operator|!=
literal|null
condition|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|routes
init|=
operator|new
name|LinkedHashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|route
range|:
name|ignoreRoutesParam
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|routes
operator|.
name|add
argument_list|(
name|route
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|rc
operator|.
name|setIgnoredRoutes
argument_list|(
name|routes
argument_list|)
expr_stmt|;
block|}
name|mc
operator|.
name|getServletContext
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|ReaderConfig
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|rc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

