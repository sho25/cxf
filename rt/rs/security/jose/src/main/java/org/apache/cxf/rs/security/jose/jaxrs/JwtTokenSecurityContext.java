begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|security
operator|.
name|SimpleGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|security
operator|.
name|SimplePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JwtToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|security
operator|.
name|LoginSecurityContext
import|;
end_import

begin_class
specifier|public
class|class
name|JwtTokenSecurityContext
implements|implements
name|LoginSecurityContext
block|{
specifier|private
specifier|final
name|JwtToken
name|token
decl_stmt|;
specifier|private
specifier|final
name|Principal
name|principal
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|Principal
argument_list|>
name|roles
decl_stmt|;
specifier|public
name|JwtTokenSecurityContext
parameter_list|(
name|JwtToken
name|jwt
parameter_list|,
name|String
name|roleClaim
parameter_list|)
block|{
name|principal
operator|=
operator|new
name|SimplePrincipal
argument_list|(
name|jwt
operator|.
name|getClaims
argument_list|()
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|token
operator|=
name|jwt
expr_stmt|;
if|if
condition|(
name|roleClaim
operator|!=
literal|null
operator|&&
name|jwt
operator|.
name|getClaims
argument_list|()
operator|.
name|containsProperty
argument_list|(
name|roleClaim
argument_list|)
condition|)
block|{
name|roles
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
name|String
name|role
init|=
name|jwt
operator|.
name|getClaims
argument_list|()
operator|.
name|getStringProperty
argument_list|(
name|roleClaim
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|r
range|:
name|role
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|roles
operator|.
name|add
argument_list|(
operator|new
name|SimpleGroup
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|roles
operator|=
name|Collections
operator|.
name|emptySet
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|JwtToken
name|getToken
parameter_list|()
block|{
return|return
name|token
return|;
block|}
annotation|@
name|Override
specifier|public
name|Subject
name|getSubject
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|Principal
argument_list|>
name|getUserRoles
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|roles
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Principal
name|getUserPrincipal
parameter_list|()
block|{
return|return
name|principal
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isUserInRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
for|for
control|(
name|Principal
name|principalRole
range|:
name|roles
control|)
block|{
if|if
condition|(
name|principalRole
operator|!=
name|principal
operator|&&
name|principalRole
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|role
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

