begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwk
package|;
end_package

begin_enum
specifier|public
enum|enum
name|PublicKeyUse
block|{
name|SIGN
parameter_list|(
name|JsonWebKey
operator|.
name|PUBLIC_KEY_USE_SIGN
parameter_list|)
operator|,
constructor|ENCRYPT(JsonWebKey.PUBLIC_KEY_USE_ENCRYPT
block|)
enum|;
end_enum

begin_decl_stmt
specifier|private
specifier|final
name|String
name|use
decl_stmt|;
end_decl_stmt

begin_constructor
specifier|private
name|PublicKeyUse
parameter_list|(
name|String
name|use
parameter_list|)
block|{
name|this
operator|.
name|use
operator|=
name|use
expr_stmt|;
block|}
end_constructor

begin_function
specifier|public
specifier|static
name|PublicKeyUse
name|getPublicKeyUse
parameter_list|(
name|String
name|use
parameter_list|)
block|{
if|if
condition|(
name|use
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|JsonWebKey
operator|.
name|PUBLIC_KEY_USE_SIGN
operator|.
name|equals
argument_list|(
name|use
argument_list|)
condition|)
block|{
return|return
name|SIGN
return|;
block|}
elseif|else
if|if
condition|(
name|JsonWebKey
operator|.
name|PUBLIC_KEY_USE_ENCRYPT
operator|.
name|equals
argument_list|(
name|use
argument_list|)
condition|)
block|{
return|return
name|ENCRYPT
return|;
block|}
else|else
block|{
return|return
name|valueOf
argument_list|(
name|use
argument_list|)
return|;
block|}
block|}
end_function

begin_function
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|use
return|;
block|}
end_function

unit|}
end_unit

