begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|json
operator|.
name|AbstractJsonMapObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|json
operator|.
name|JsonMapObjectReaderWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|JoseUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwk
operator|.
name|JsonWebKey
import|;
end_import

begin_class
specifier|public
class|class
name|JwsJsonConsumer
block|{
specifier|private
name|String
name|jwsSignedDocument
decl_stmt|;
specifier|private
name|String
name|encodedJwsPayload
decl_stmt|;
specifier|private
name|List
argument_list|<
name|JwsJsonSignatureEntry
argument_list|>
name|signatureEntries
decl_stmt|;
comment|/**      * @param jwsSignedDocument      *            signed JWS Document      */
specifier|public
name|JwsJsonConsumer
parameter_list|(
name|String
name|jwsSignedDocument
parameter_list|)
block|{
name|this
operator|.
name|jwsSignedDocument
operator|=
name|jwsSignedDocument
expr_stmt|;
name|prepare
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|prepare
parameter_list|()
block|{
name|AbstractJsonMapObject
name|jsonObject
init|=
operator|new
name|AbstractJsonMapObject
argument_list|()
block|{ }
decl_stmt|;
operator|new
name|JsonMapObjectReaderWriter
argument_list|()
operator|.
name|fromJson
argument_list|(
name|jsonObject
argument_list|,
name|jwsSignedDocument
argument_list|)
expr_stmt|;
name|this
operator|.
name|encodedJwsPayload
operator|=
operator|(
name|String
operator|)
name|jsonObject
operator|.
name|asMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"payload"
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|signatureArray
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|jsonObject
operator|.
name|asMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"signatures"
argument_list|)
decl_stmt|;
name|this
operator|.
name|signatureEntries
operator|=
operator|new
name|ArrayList
argument_list|<
name|JwsJsonSignatureEntry
argument_list|>
argument_list|(
name|signatureArray
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|signatureEntry
range|:
name|signatureArray
control|)
block|{
name|String
name|protectedHeader
init|=
operator|(
name|String
operator|)
name|signatureEntry
operator|.
name|get
argument_list|(
literal|"protected"
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|header
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|signatureEntry
operator|.
name|get
argument_list|(
literal|"header"
argument_list|)
decl_stmt|;
name|String
name|signature
init|=
operator|(
name|String
operator|)
name|signatureEntry
operator|.
name|get
argument_list|(
literal|"signature"
argument_list|)
decl_stmt|;
if|if
condition|(
name|protectedHeader
operator|==
literal|null
operator|&&
name|header
operator|==
literal|null
operator|||
name|signature
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
literal|"Invalid security entry"
argument_list|)
throw|;
block|}
name|JwsJsonSignatureEntry
name|signatureObject
init|=
operator|new
name|JwsJsonSignatureEntry
argument_list|(
name|encodedJwsPayload
argument_list|,
name|protectedHeader
argument_list|,
name|signature
argument_list|,
operator|new
name|JwsJsonUnprotectedHeader
argument_list|(
name|header
argument_list|)
argument_list|)
decl_stmt|;
name|this
operator|.
name|signatureEntries
operator|.
name|add
argument_list|(
name|signatureObject
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getSignedDocument
parameter_list|()
block|{
return|return
name|this
operator|.
name|jwsSignedDocument
return|;
block|}
specifier|public
name|String
name|getEncodedJwsPayload
parameter_list|()
block|{
return|return
name|this
operator|.
name|encodedJwsPayload
return|;
block|}
specifier|public
name|String
name|getDecodedJwsPayload
parameter_list|()
block|{
return|return
name|JoseUtils
operator|.
name|decodeToString
argument_list|(
name|encodedJwsPayload
argument_list|)
return|;
block|}
specifier|public
name|byte
index|[]
name|getDecodedJwsPayloadBytes
parameter_list|()
block|{
return|return
name|StringUtils
operator|.
name|toBytesUTF8
argument_list|(
name|getDecodedJwsPayload
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|JwsJsonSignatureEntry
argument_list|>
name|getSignatureEntries
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|signatureEntries
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|verifySignatureWith
parameter_list|(
name|JwsSignatureVerifier
name|validator
parameter_list|)
block|{
for|for
control|(
name|JwsJsonSignatureEntry
name|signatureEntry
range|:
name|signatureEntries
control|)
block|{
if|if
condition|(
name|signatureEntry
operator|.
name|verifySignatureWith
argument_list|(
name|validator
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|verifySignatureWith
parameter_list|(
name|JsonWebKey
name|key
parameter_list|)
block|{
return|return
name|verifySignatureWith
argument_list|(
name|JwsUtils
operator|.
name|getSignatureVerifier
argument_list|(
name|key
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

