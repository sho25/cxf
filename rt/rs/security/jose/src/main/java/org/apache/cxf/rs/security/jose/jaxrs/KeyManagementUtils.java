begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivateKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PublicKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PropertyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|crypto
operator|.
name|CryptoUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwk
operator|.
name|JsonWebKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|security
operator|.
name|SecurityContext
import|;
end_import

begin_comment
comment|/**  * Encryption helpers  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|KeyManagementUtils
block|{
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_STORE_TYPE
init|=
literal|"rs.security.keystore.type"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_STORE_PSWD
init|=
literal|"rs.security.keystore.password"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_PSWD
init|=
literal|"rs.security.key.password"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_STORE_ALIAS
init|=
literal|"rs.security.keystore.alias"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_STORE_ALIASES
init|=
literal|"rs.security.keystore.aliases"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_STORE_FILE
init|=
literal|"rs.security.keystore.file"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_PRINCIPAL_NAME
init|=
literal|"rs.security.principal.name"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_KEY_PSWD_PROVIDER
init|=
literal|"rs.security.key.password.provider"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_SIG_KEY_PSWD_PROVIDER
init|=
literal|"rs.security.signature.key.password.provider"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_DECRYPT_KEY_PSWD_PROVIDER
init|=
literal|"rs.security.decryption.key.password.provider"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSSEC_DEFAULT_ALGORITHMS
init|=
literal|"rs.security.default.algorithms"
decl_stmt|;
specifier|private
name|KeyManagementUtils
parameter_list|()
block|{     }
specifier|public
specifier|static
name|PublicKey
name|loadPublicKey
parameter_list|(
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|)
block|{
name|KeyStore
name|keyStore
init|=
name|KeyManagementUtils
operator|.
name|loadPersistKeyStore
argument_list|(
name|m
argument_list|,
name|props
argument_list|)
decl_stmt|;
return|return
name|CryptoUtils
operator|.
name|loadPublicKey
argument_list|(
name|keyStore
argument_list|,
name|props
operator|.
name|getProperty
argument_list|(
name|RSSEC_KEY_STORE_ALIAS
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PublicKey
name|loadPublicKey
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|keyStoreLocProp
parameter_list|)
block|{
return|return
name|loadPublicKey
argument_list|(
name|m
argument_list|,
name|keyStoreLocProp
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PublicKey
name|loadPublicKey
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|keyStoreLocPropPreferred
parameter_list|,
name|String
name|keyStoreLocPropDefault
parameter_list|)
block|{
name|String
name|keyStoreLoc
init|=
name|getMessageProperty
argument_list|(
name|m
argument_list|,
name|keyStoreLocPropPreferred
argument_list|,
name|keyStoreLocPropDefault
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getBus
argument_list|()
decl_stmt|;
try|try
block|{
name|Properties
name|props
init|=
name|ResourceUtils
operator|.
name|loadProperties
argument_list|(
name|keyStoreLoc
argument_list|,
name|bus
argument_list|)
decl_stmt|;
return|return
name|KeyManagementUtils
operator|.
name|loadPublicKey
argument_list|(
name|m
argument_list|,
name|props
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|String
name|getMessageProperty
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|keyStoreLocPropPreferred
parameter_list|,
name|String
name|keyStoreLocPropDefault
parameter_list|)
block|{
name|String
name|propLoc
init|=
operator|(
name|String
operator|)
name|MessageUtils
operator|.
name|getContextualProperty
argument_list|(
name|m
argument_list|,
name|keyStoreLocPropPreferred
argument_list|,
name|keyStoreLocPropDefault
argument_list|)
decl_stmt|;
if|if
condition|(
name|propLoc
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|()
throw|;
block|}
return|return
name|propLoc
return|;
block|}
specifier|private
specifier|static
name|PrivateKey
name|loadPrivateKey
parameter_list|(
name|KeyStore
name|keyStore
parameter_list|,
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|,
name|Bus
name|bus
parameter_list|,
name|PrivateKeyPasswordProvider
name|provider
parameter_list|,
name|String
name|keyOper
parameter_list|)
block|{
name|String
name|keyPswd
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|RSSEC_KEY_PSWD
argument_list|)
decl_stmt|;
name|String
name|alias
init|=
name|getKeyId
argument_list|(
name|m
argument_list|,
name|props
argument_list|,
name|RSSEC_KEY_STORE_ALIAS
argument_list|,
name|keyOper
argument_list|)
decl_stmt|;
name|char
index|[]
name|keyPswdChars
init|=
name|provider
operator|!=
literal|null
condition|?
name|provider
operator|.
name|getPassword
argument_list|(
name|props
argument_list|)
else|:
name|keyPswd
operator|!=
literal|null
condition|?
name|keyPswd
operator|.
name|toCharArray
argument_list|()
else|:
literal|null
decl_stmt|;
return|return
name|CryptoUtils
operator|.
name|loadPrivateKey
argument_list|(
name|keyStore
argument_list|,
name|keyPswdChars
argument_list|,
name|alias
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PrivateKey
name|loadPrivateKey
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|keyStoreLocProp
parameter_list|,
name|String
name|keyOper
parameter_list|)
block|{
return|return
name|loadPrivateKey
argument_list|(
name|m
argument_list|,
name|keyStoreLocProp
argument_list|,
literal|null
argument_list|,
name|keyOper
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|PrivateKey
name|loadPrivateKey
parameter_list|(
name|Message
name|m
parameter_list|,
name|String
name|keyStoreLocPropPreferred
parameter_list|,
name|String
name|keyStoreLocPropDefault
parameter_list|,
name|String
name|keyOper
parameter_list|)
block|{
name|String
name|keyStoreLoc
init|=
name|getMessageProperty
argument_list|(
name|m
argument_list|,
name|keyStoreLocPropPreferred
argument_list|,
name|keyStoreLocPropDefault
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getBus
argument_list|()
decl_stmt|;
try|try
block|{
name|Properties
name|props
init|=
name|ResourceUtils
operator|.
name|loadProperties
argument_list|(
name|keyStoreLoc
argument_list|,
name|bus
argument_list|)
decl_stmt|;
return|return
name|loadPrivateKey
argument_list|(
name|m
argument_list|,
name|props
argument_list|,
name|keyOper
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|String
name|getKeyId
parameter_list|(
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|,
name|String
name|preferredPropertyName
parameter_list|,
name|String
name|keyOper
parameter_list|)
block|{
name|String
name|kid
init|=
literal|null
decl_stmt|;
name|String
name|altPropertyName
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|keyOper
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|keyOper
operator|.
name|equals
argument_list|(
name|JsonWebKey
operator|.
name|KEY_OPER_ENCRYPT
argument_list|)
operator|||
name|keyOper
operator|.
name|equals
argument_list|(
name|JsonWebKey
operator|.
name|KEY_OPER_DECRYPT
argument_list|)
condition|)
block|{
name|altPropertyName
operator|=
name|preferredPropertyName
operator|+
literal|".jwe"
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|keyOper
operator|.
name|equals
argument_list|(
name|JsonWebKey
operator|.
name|KEY_OPER_SIGN
argument_list|)
operator|||
name|keyOper
operator|.
name|equals
argument_list|(
name|JsonWebKey
operator|.
name|KEY_OPER_VERIFY
argument_list|)
condition|)
block|{
name|altPropertyName
operator|=
name|preferredPropertyName
operator|+
literal|".jws"
expr_stmt|;
block|}
name|String
name|direction
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getOutMessage
argument_list|()
operator|==
name|m
condition|?
literal|".out"
else|:
literal|".in"
decl_stmt|;
name|kid
operator|=
operator|(
name|String
operator|)
name|MessageUtils
operator|.
name|getContextualProperty
argument_list|(
name|m
argument_list|,
name|preferredPropertyName
argument_list|,
name|altPropertyName
operator|+
name|direction
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kid
operator|==
literal|null
condition|)
block|{
name|kid
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|preferredPropertyName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kid
operator|==
literal|null
operator|&&
name|altPropertyName
operator|!=
literal|null
condition|)
block|{
name|kid
operator|=
name|props
operator|.
name|getProperty
argument_list|(
name|altPropertyName
argument_list|)
expr_stmt|;
block|}
return|return
name|kid
return|;
block|}
specifier|public
specifier|static
name|PrivateKeyPasswordProvider
name|loadPasswordProvider
parameter_list|(
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|,
name|String
name|keyOper
parameter_list|)
block|{
name|PrivateKeyPasswordProvider
name|cb
init|=
operator|(
name|PrivateKeyPasswordProvider
operator|)
name|m
operator|.
name|getContextualProperty
argument_list|(
name|RSSEC_KEY_PSWD_PROVIDER
argument_list|)
decl_stmt|;
if|if
condition|(
name|cb
operator|==
literal|null
operator|&&
name|keyOper
operator|!=
literal|null
condition|)
block|{
name|String
name|propName
init|=
name|keyOper
operator|.
name|equals
argument_list|(
name|JsonWebKey
operator|.
name|KEY_OPER_SIGN
argument_list|)
condition|?
name|RSSEC_SIG_KEY_PSWD_PROVIDER
else|:
name|keyOper
operator|.
name|equals
argument_list|(
name|JsonWebKey
operator|.
name|KEY_OPER_DECRYPT
argument_list|)
condition|?
name|RSSEC_DECRYPT_KEY_PSWD_PROVIDER
else|:
literal|null
decl_stmt|;
if|if
condition|(
name|propName
operator|!=
literal|null
condition|)
block|{
name|cb
operator|=
operator|(
name|PrivateKeyPasswordProvider
operator|)
name|m
operator|.
name|getContextualProperty
argument_list|(
name|propName
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|cb
return|;
block|}
specifier|public
specifier|static
name|PrivateKey
name|loadPrivateKey
parameter_list|(
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|,
name|String
name|keyOper
parameter_list|)
block|{
name|Bus
name|bus
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getBus
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|loadPersistKeyStore
argument_list|(
name|m
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|PrivateKeyPasswordProvider
name|cb
init|=
name|loadPasswordProvider
argument_list|(
name|m
argument_list|,
name|props
argument_list|,
name|keyOper
argument_list|)
decl_stmt|;
if|if
condition|(
name|cb
operator|!=
literal|null
operator|&&
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getInMessage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|SecurityContext
name|sc
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getInMessage
argument_list|()
operator|.
name|get
argument_list|(
name|SecurityContext
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|sc
operator|!=
literal|null
condition|)
block|{
name|Principal
name|p
init|=
name|sc
operator|.
name|getUserPrincipal
argument_list|()
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
condition|)
block|{
name|props
operator|.
name|setProperty
argument_list|(
name|RSSEC_PRINCIPAL_NAME
argument_list|,
name|p
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|loadPrivateKey
argument_list|(
name|keyStore
argument_list|,
name|m
argument_list|,
name|props
argument_list|,
name|bus
argument_list|,
name|cb
argument_list|,
name|keyOper
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|KeyStore
name|loadPersistKeyStore
parameter_list|(
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|)
block|{
name|KeyStore
name|keyStore
init|=
operator|(
name|KeyStore
operator|)
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|props
operator|.
name|get
argument_list|(
name|RSSEC_KEY_STORE_FILE
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|keyStore
operator|==
literal|null
condition|)
block|{
name|keyStore
operator|=
name|loadKeyStore
argument_list|(
name|props
argument_list|,
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|put
argument_list|(
operator|(
name|String
operator|)
name|props
operator|.
name|get
argument_list|(
name|RSSEC_KEY_STORE_FILE
argument_list|)
argument_list|,
name|keyStore
argument_list|)
expr_stmt|;
block|}
return|return
name|keyStore
return|;
block|}
specifier|public
specifier|static
name|KeyStore
name|loadKeyStore
parameter_list|(
name|Properties
name|props
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|String
name|keyStoreType
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|RSSEC_KEY_STORE_TYPE
argument_list|)
decl_stmt|;
name|String
name|keyStoreLoc
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|RSSEC_KEY_STORE_FILE
argument_list|)
decl_stmt|;
name|String
name|keyStorePswd
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|RSSEC_KEY_STORE_PSWD
argument_list|)
decl_stmt|;
try|try
block|{
name|InputStream
name|is
init|=
name|ResourceUtils
operator|.
name|getResourceStream
argument_list|(
name|keyStoreLoc
argument_list|,
name|bus
argument_list|)
decl_stmt|;
return|return
name|CryptoUtils
operator|.
name|loadKeyStore
argument_list|(
name|is
argument_list|,
name|keyStorePswd
operator|.
name|toCharArray
argument_list|()
argument_list|,
name|keyStoreType
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|encodeX509CertificateChain
parameter_list|(
name|List
argument_list|<
name|X509Certificate
argument_list|>
name|chain
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|encodedChain
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|chain
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|X509Certificate
name|cert
range|:
name|chain
control|)
block|{
try|try
block|{
name|encodedChain
operator|.
name|add
argument_list|(
name|CryptoUtils
operator|.
name|encodeCertificate
argument_list|(
name|cert
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
return|return
name|encodedChain
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|X509Certificate
argument_list|>
name|toX509CertificateChain
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|base64EncodedChain
parameter_list|)
block|{
if|if
condition|(
name|base64EncodedChain
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|X509Certificate
argument_list|>
name|certs
init|=
operator|new
name|ArrayList
argument_list|<
name|X509Certificate
argument_list|>
argument_list|(
name|base64EncodedChain
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|encodedCert
range|:
name|base64EncodedChain
control|)
block|{
try|try
block|{
name|certs
operator|.
name|add
argument_list|(
operator|(
name|X509Certificate
operator|)
name|CryptoUtils
operator|.
name|decodeCertificate
argument_list|(
name|encodedCert
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
comment|//TODO: validate the chain
return|return
name|certs
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|String
name|getKeyAlgorithm
parameter_list|(
name|Message
name|m
parameter_list|,
name|Properties
name|props
parameter_list|,
name|String
name|propName
parameter_list|,
name|String
name|defaultAlg
parameter_list|)
block|{
name|String
name|algo
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|propName
argument_list|)
decl_stmt|;
if|if
condition|(
name|algo
operator|==
literal|null
operator|&&
name|PropertyUtils
operator|.
name|isTrue
argument_list|(
name|m
operator|.
name|getContextualProperty
argument_list|(
name|RSSEC_DEFAULT_ALGORITHMS
argument_list|)
argument_list|)
condition|)
block|{
name|algo
operator|=
name|defaultAlg
expr_stmt|;
block|}
return|return
name|algo
return|;
block|}
block|}
end_class

end_unit

