begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwe
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|basic
operator|.
name|JsonMapObjectReaderWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|common
operator|.
name|JoseUtils
import|;
end_import

begin_class
specifier|public
class|class
name|JweJsonEncryptionEntry
block|{
specifier|private
name|JweHeaders
name|unprotectedHeader
decl_stmt|;
specifier|private
name|String
name|encodedEncryptedKey
decl_stmt|;
specifier|public
name|JweJsonEncryptionEntry
parameter_list|(
name|String
name|encodedEncryptedKey
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|encodedEncryptedKey
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JweJsonEncryptionEntry
parameter_list|(
name|JweHeaders
name|unprotectedHeader
parameter_list|,
name|String
name|encodedEncryptedKey
parameter_list|)
block|{
name|this
operator|.
name|unprotectedHeader
operator|=
name|unprotectedHeader
expr_stmt|;
name|this
operator|.
name|encodedEncryptedKey
operator|=
name|encodedEncryptedKey
expr_stmt|;
block|}
specifier|public
name|JweHeaders
name|getUnprotectedHeader
parameter_list|()
block|{
return|return
name|unprotectedHeader
return|;
block|}
specifier|public
name|String
name|getEncodedEncryptedKey
parameter_list|()
block|{
return|return
name|encodedEncryptedKey
return|;
block|}
specifier|public
name|byte
index|[]
name|getEncryptedKey
parameter_list|()
block|{
return|return
name|encodedEncryptedKey
operator|==
literal|null
condition|?
literal|null
else|:
name|JoseUtils
operator|.
name|decode
argument_list|(
name|encodedEncryptedKey
argument_list|)
return|;
block|}
specifier|public
name|String
name|toJson
parameter_list|()
block|{
name|JsonMapObjectReaderWriter
name|jsonWriter
init|=
operator|new
name|JsonMapObjectReaderWriter
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|recipientsEntry
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|unprotectedHeader
operator|!=
literal|null
condition|)
block|{
name|recipientsEntry
operator|.
name|put
argument_list|(
literal|"header"
argument_list|,
name|this
operator|.
name|unprotectedHeader
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|encodedEncryptedKey
operator|!=
literal|null
condition|)
block|{
name|recipientsEntry
operator|.
name|put
argument_list|(
literal|"encrypted_key"
argument_list|,
name|this
operator|.
name|encodedEncryptedKey
argument_list|)
expr_stmt|;
block|}
return|return
name|jsonWriter
operator|.
name|toJson
argument_list|(
name|recipientsEntry
argument_list|)
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|toJson
argument_list|()
return|;
block|}
block|}
end_class

end_unit

