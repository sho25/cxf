begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jwt
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptorContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jws
operator|.
name|JwsCompactProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jws
operator|.
name|JwsOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jws
operator|.
name|JwsSignature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jws
operator|.
name|JwsSignatureProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jwt
operator|.
name|JwtHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jwt
operator|.
name|JwtHeadersWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|jwt
operator|.
name|JwtTokenReaderWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|Base64UrlOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|Base64UrlUtility
import|;
end_import

begin_class
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|JWS_WRITE_PRIORITY
argument_list|)
specifier|public
class|class
name|JwsWriterInterceptor
extends|extends
name|AbstractJwsWriterProvider
implements|implements
name|WriterInterceptor
block|{
specifier|private
name|boolean
name|contentTypeRequired
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|useJwsOutputStream
decl_stmt|;
specifier|private
name|JwtHeadersWriter
name|writer
init|=
operator|new
name|JwtTokenReaderWriter
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|aroundWriteTo
parameter_list|(
name|WriterInterceptorContext
name|ctx
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
comment|//ctx.setMediaType(JAXRSUtils.toMediaType(JwtConstants.MEDIA_TYPE_JOSE_JSON));
name|JwtHeaders
name|headers
init|=
operator|new
name|JwtHeaders
argument_list|()
decl_stmt|;
name|JwsSignatureProvider
name|sigProvider
init|=
name|getInitializedSigProvider
argument_list|(
name|headers
argument_list|)
decl_stmt|;
name|setContentTypeIfNeeded
argument_list|(
name|headers
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
name|OutputStream
name|actualOs
init|=
name|ctx
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
if|if
condition|(
name|useJwsOutputStream
condition|)
block|{
name|JwsSignature
name|jwsSignature
init|=
name|sigProvider
operator|.
name|createJwsSignature
argument_list|(
name|headers
argument_list|)
decl_stmt|;
name|JwsOutputStream
name|jwsStream
init|=
operator|new
name|JwsOutputStream
argument_list|(
name|actualOs
argument_list|,
name|jwsSignature
argument_list|)
decl_stmt|;
name|byte
index|[]
name|headerBytes
init|=
name|writer
operator|.
name|headersToJson
argument_list|(
name|headers
argument_list|)
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|Base64UrlUtility
operator|.
name|encodeAndStream
argument_list|(
name|headerBytes
argument_list|,
literal|0
argument_list|,
name|headerBytes
operator|.
name|length
argument_list|,
name|jwsStream
argument_list|)
expr_stmt|;
name|jwsStream
operator|.
name|write
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|'.'
block|}
argument_list|)
expr_stmt|;
name|Base64UrlOutputStream
name|base64Stream
init|=
operator|new
name|Base64UrlOutputStream
argument_list|(
name|jwsStream
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setOutputStream
argument_list|(
name|base64Stream
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|proceed
argument_list|()
expr_stmt|;
name|base64Stream
operator|.
name|flush
argument_list|()
expr_stmt|;
name|jwsStream
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|CachedOutputStream
name|cos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|ctx
operator|.
name|setOutputStream
argument_list|(
name|cos
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|proceed
argument_list|()
expr_stmt|;
name|JwsCompactProducer
name|p
init|=
operator|new
name|JwsCompactProducer
argument_list|(
name|headers
argument_list|,
operator|new
name|String
argument_list|(
name|cos
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|writeJws
argument_list|(
name|p
argument_list|,
name|sigProvider
argument_list|,
name|actualOs
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setContentTypeRequired
parameter_list|(
name|boolean
name|contentTypeRequired
parameter_list|)
block|{
name|this
operator|.
name|contentTypeRequired
operator|=
name|contentTypeRequired
expr_stmt|;
block|}
specifier|public
name|void
name|setUseJwsOutputStream
parameter_list|(
name|boolean
name|useJwsOutputStream
parameter_list|)
block|{
name|this
operator|.
name|useJwsOutputStream
operator|=
name|useJwsOutputStream
expr_stmt|;
block|}
specifier|public
name|void
name|setWriter
parameter_list|(
name|JwtHeadersWriter
name|writer
parameter_list|)
block|{
name|this
operator|.
name|writer
operator|=
name|writer
expr_stmt|;
block|}
specifier|private
name|void
name|setContentTypeIfNeeded
parameter_list|(
name|JwtHeaders
name|headers
parameter_list|,
name|WriterInterceptorContext
name|ctx
parameter_list|)
block|{
if|if
condition|(
name|contentTypeRequired
condition|)
block|{
name|MediaType
name|mt
init|=
name|ctx
operator|.
name|getMediaType
argument_list|()
decl_stmt|;
if|if
condition|(
name|mt
operator|!=
literal|null
condition|)
block|{
name|headers
operator|.
name|setContentType
argument_list|(
name|JAXRSUtils
operator|.
name|mediaTypeToString
argument_list|(
name|mt
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

