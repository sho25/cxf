begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|tokens
operator|.
name|hawk
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|Base64Utility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|client
operator|.
name|HttpRequestProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|AccessToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|HmacUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthConstants
import|;
end_import

begin_comment
comment|// https://tools.ietf.org/html/draft-hammer-oauth-v2-mac-token-05
end_comment

begin_comment
comment|// ->
end_comment

begin_comment
comment|// https://github.com/hueniverse/hawk/blob/master/README.md
end_comment

begin_class
specifier|public
class|class
name|HawkAuthorizationScheme
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SEPARATOR
init|=
literal|"\n"
decl_stmt|;
specifier|private
name|HttpRequestProperties
name|props
decl_stmt|;
specifier|private
name|String
name|macKey
decl_stmt|;
specifier|private
name|String
name|timestamp
decl_stmt|;
specifier|private
name|String
name|nonce
decl_stmt|;
specifier|public
name|HawkAuthorizationScheme
parameter_list|(
name|HttpRequestProperties
name|props
parameter_list|,
name|AccessToken
name|token
parameter_list|)
block|{
name|this
operator|.
name|props
operator|=
name|props
expr_stmt|;
name|this
operator|.
name|macKey
operator|=
name|token
operator|.
name|getTokenKey
argument_list|()
expr_stmt|;
name|this
operator|.
name|timestamp
operator|=
name|Long
operator|.
name|toString
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|nonce
operator|=
name|generateNonce
argument_list|()
expr_stmt|;
block|}
specifier|public
name|HawkAuthorizationScheme
parameter_list|(
name|HttpRequestProperties
name|props
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|schemeParams
parameter_list|)
block|{
name|this
operator|.
name|props
operator|=
name|props
expr_stmt|;
name|this
operator|.
name|macKey
operator|=
name|schemeParams
operator|.
name|get
argument_list|(
name|OAuthConstants
operator|.
name|HAWK_TOKEN_ID
argument_list|)
expr_stmt|;
name|this
operator|.
name|timestamp
operator|=
name|schemeParams
operator|.
name|get
argument_list|(
name|OAuthConstants
operator|.
name|HAWK_TOKEN_TIMESTAMP
argument_list|)
expr_stmt|;
name|this
operator|.
name|nonce
operator|=
name|schemeParams
operator|.
name|get
argument_list|(
name|OAuthConstants
operator|.
name|HAWK_TOKEN_NONCE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getMacKey
parameter_list|()
block|{
return|return
name|macKey
return|;
block|}
specifier|public
name|String
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
specifier|public
name|String
name|getNonce
parameter_list|()
block|{
return|return
name|nonce
return|;
block|}
specifier|public
name|String
name|toAuthorizationHeader
parameter_list|(
name|String
name|macAlgo
parameter_list|,
name|String
name|macSecret
parameter_list|)
block|{
name|String
name|data
init|=
name|getNormalizedRequestString
argument_list|()
decl_stmt|;
name|String
name|signature
init|=
name|HmacUtils
operator|.
name|computeSignature
argument_list|(
name|macAlgo
argument_list|,
name|macSecret
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|OAuthConstants
operator|.
name|HAWK_AUTHORIZATION_SCHEME
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|addParameter
argument_list|(
name|sb
argument_list|,
name|OAuthConstants
operator|.
name|HAWK_TOKEN_ID
argument_list|,
name|macKey
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addParameter
argument_list|(
name|sb
argument_list|,
name|OAuthConstants
operator|.
name|HAWK_TOKEN_TIMESTAMP
argument_list|,
name|timestamp
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addParameter
argument_list|(
name|sb
argument_list|,
name|OAuthConstants
operator|.
name|HAWK_TOKEN_NONCE
argument_list|,
name|nonce
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addParameter
argument_list|(
name|sb
argument_list|,
name|OAuthConstants
operator|.
name|HAWK_TOKEN_SIGNATURE
argument_list|,
name|signature
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|void
name|addParameter
parameter_list|(
name|StringBuilder
name|sb
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|boolean
name|last
parameter_list|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|'='
argument_list|)
operator|.
name|append
argument_list|(
literal|'\"'
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
literal|'\"'
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|last
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getNormalizedRequestString
parameter_list|()
block|{
name|String
name|requestURI
init|=
name|props
operator|.
name|getRequestPath
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|props
operator|.
name|getRequestQuery
argument_list|()
argument_list|)
condition|)
block|{
name|requestURI
operator|+=
literal|"?"
operator|+
name|normalizeQuery
argument_list|(
name|props
operator|.
name|getRequestQuery
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|value
init|=
name|timestamp
operator|+
name|SEPARATOR
operator|+
name|nonce
operator|+
name|SEPARATOR
operator|+
name|props
operator|.
name|getHttpMethod
argument_list|()
operator|.
name|toUpperCase
argument_list|()
operator|+
name|SEPARATOR
operator|+
name|requestURI
operator|+
name|SEPARATOR
operator|+
name|props
operator|.
name|getHostName
argument_list|()
operator|+
name|SEPARATOR
operator|+
name|props
operator|.
name|getPort
argument_list|()
operator|+
name|SEPARATOR
operator|+
literal|""
operator|+
name|SEPARATOR
operator|+
literal|""
operator|+
name|SEPARATOR
decl_stmt|;
return|return
name|value
return|;
block|}
specifier|private
specifier|static
name|String
name|normalizeQuery
parameter_list|(
name|String
name|query
parameter_list|)
block|{
return|return
name|query
return|;
block|}
specifier|private
specifier|static
name|String
name|generateNonce
parameter_list|()
block|{
name|byte
index|[]
name|randomBytes
init|=
operator|new
name|byte
index|[
literal|20
index|]
decl_stmt|;
operator|new
name|SecureRandom
argument_list|()
operator|.
name|nextBytes
argument_list|(
name|randomBytes
argument_list|)
expr_stmt|;
name|String
name|random
init|=
name|Base64Utility
operator|.
name|encode
argument_list|(
name|randomBytes
argument_list|)
decl_stmt|;
return|return
name|random
return|;
block|}
block|}
end_class

end_unit

