begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|grants
operator|.
name|code
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|AbstractOAuthDataProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|OAuthServiceException
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractCodeDataProvider
extends|extends
name|AbstractOAuthDataProvider
implements|implements
name|AuthorizationCodeDataProvider
block|{
specifier|private
name|long
name|codeLifetime
init|=
literal|10
operator|*
literal|60
decl_stmt|;
specifier|protected
name|AbstractCodeDataProvider
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|ServerAuthorizationCodeGrant
name|createCodeGrant
parameter_list|(
name|AuthorizationCodeRegistration
name|reg
parameter_list|)
throws|throws
name|OAuthServiceException
block|{
name|ServerAuthorizationCodeGrant
name|grant
init|=
name|doCreateCodeGrant
argument_list|(
name|reg
argument_list|)
decl_stmt|;
name|saveCodeGrant
argument_list|(
name|grant
argument_list|)
expr_stmt|;
return|return
name|grant
return|;
block|}
specifier|protected
name|ServerAuthorizationCodeGrant
name|doCreateCodeGrant
parameter_list|(
name|AuthorizationCodeRegistration
name|reg
parameter_list|)
throws|throws
name|OAuthServiceException
block|{
return|return
name|AbstractCodeDataProvider
operator|.
name|initCodeGrant
argument_list|(
name|reg
argument_list|,
name|codeLifetime
argument_list|)
return|;
block|}
specifier|public
name|void
name|setCodeLifetime
parameter_list|(
name|long
name|codeLifetime
parameter_list|)
block|{
name|this
operator|.
name|codeLifetime
operator|=
name|codeLifetime
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|void
name|saveCodeGrant
parameter_list|(
name|ServerAuthorizationCodeGrant
name|grant
parameter_list|)
function_decl|;
specifier|public
specifier|static
name|ServerAuthorizationCodeGrant
name|initCodeGrant
parameter_list|(
name|AuthorizationCodeRegistration
name|reg
parameter_list|,
name|long
name|lifetime
parameter_list|)
block|{
name|ServerAuthorizationCodeGrant
name|grant
init|=
operator|new
name|ServerAuthorizationCodeGrant
argument_list|(
name|reg
operator|.
name|getClient
argument_list|()
argument_list|,
name|lifetime
argument_list|)
decl_stmt|;
name|grant
operator|.
name|setRedirectUri
argument_list|(
name|reg
operator|.
name|getRedirectUri
argument_list|()
argument_list|)
expr_stmt|;
name|grant
operator|.
name|setSubject
argument_list|(
name|reg
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|grant
operator|.
name|setRequestedScopes
argument_list|(
name|reg
operator|.
name|getRequestedScope
argument_list|()
argument_list|)
expr_stmt|;
name|grant
operator|.
name|setApprovedScopes
argument_list|(
name|reg
operator|.
name|getApprovedScope
argument_list|()
argument_list|)
expr_stmt|;
name|grant
operator|.
name|setAudience
argument_list|(
name|reg
operator|.
name|getAudience
argument_list|()
argument_list|)
expr_stmt|;
name|grant
operator|.
name|setClientCodeChallenge
argument_list|(
name|reg
operator|.
name|getClientCodeChallenge
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|grant
return|;
block|}
block|}
end_class

end_unit

