begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JoseJwtConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JwtClaims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|OAuthPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|ServerAccessToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|UserSubject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|ClientRegistrationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|tokens
operator|.
name|bearer
operator|.
name|BearerAccessToken
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|JwtTokenUtils
block|{
specifier|private
name|JwtTokenUtils
parameter_list|()
block|{      }
specifier|public
specifier|static
name|String
name|getClaimName
parameter_list|(
name|String
name|tokenProperty
parameter_list|,
name|String
name|defaultName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|claimsMap
parameter_list|)
block|{
name|String
name|claimName
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|claimsMap
operator|!=
literal|null
condition|)
block|{
name|claimName
operator|=
name|claimsMap
operator|.
name|get
argument_list|(
name|tokenProperty
argument_list|)
expr_stmt|;
block|}
return|return
name|claimName
operator|==
literal|null
condition|?
name|defaultName
else|:
name|claimName
return|;
block|}
specifier|public
specifier|static
name|ServerAccessToken
name|createAccessTokenFromJwt
parameter_list|(
name|JoseJwtConsumer
name|consumer
parameter_list|,
name|String
name|jose
parameter_list|,
name|ClientRegistrationProvider
name|clientProvider
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|claimsMap
parameter_list|)
block|{
name|JwtClaims
name|claims
init|=
name|consumer
operator|.
name|getJwtToken
argument_list|(
name|jose
argument_list|)
operator|.
name|getClaims
argument_list|()
decl_stmt|;
comment|// 'client_id' or 'cid', default client_id
name|String
name|clientIdClaimName
init|=
name|JwtTokenUtils
operator|.
name|getClaimName
argument_list|(
name|OAuthConstants
operator|.
name|CLIENT_ID
argument_list|,
name|OAuthConstants
operator|.
name|CLIENT_ID
argument_list|,
name|claimsMap
argument_list|)
decl_stmt|;
name|String
name|clientId
init|=
name|claims
operator|.
name|getStringProperty
argument_list|(
name|clientIdClaimName
argument_list|)
decl_stmt|;
name|Client
name|c
init|=
name|clientProvider
operator|.
name|getClient
argument_list|(
name|clientId
argument_list|)
decl_stmt|;
name|long
name|issuedAt
init|=
name|claims
operator|.
name|getIssuedAt
argument_list|()
decl_stmt|;
name|long
name|lifetime
init|=
name|claims
operator|.
name|getExpiryTime
argument_list|()
operator|-
name|issuedAt
decl_stmt|;
name|BearerAccessToken
name|at
init|=
operator|new
name|BearerAccessToken
argument_list|(
name|c
argument_list|,
name|jose
argument_list|,
name|lifetime
argument_list|,
name|issuedAt
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|audiences
init|=
name|claims
operator|.
name|getAudiences
argument_list|()
decl_stmt|;
if|if
condition|(
name|audiences
operator|!=
literal|null
operator|&&
operator|!
name|audiences
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|at
operator|.
name|setAudiences
argument_list|(
name|claims
operator|.
name|getAudiences
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|issuer
init|=
name|claims
operator|.
name|getIssuer
argument_list|()
decl_stmt|;
if|if
condition|(
name|issuer
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|setIssuer
argument_list|(
name|issuer
argument_list|)
expr_stmt|;
block|}
name|Object
name|scope
init|=
name|claims
operator|.
name|getClaim
argument_list|(
name|OAuthConstants
operator|.
name|SCOPE
argument_list|)
decl_stmt|;
if|if
condition|(
name|scope
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|scopes
init|=
name|scope
operator|instanceof
name|String
condition|?
name|scope
operator|.
name|toString
argument_list|()
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
else|:
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|scope
argument_list|)
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OAuthPermission
argument_list|>
name|perms
init|=
operator|new
name|LinkedList
argument_list|<
name|OAuthPermission
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|s
range|:
name|scopes
control|)
block|{
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|s
argument_list|)
condition|)
block|{
name|perms
operator|.
name|add
argument_list|(
operator|new
name|OAuthPermission
argument_list|(
name|s
operator|.
name|trim
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|at
operator|.
name|setScopes
argument_list|(
name|perms
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
name|usernameProp
init|=
literal|"username"
decl_stmt|;
name|String
name|usernameClaimName
init|=
name|JwtTokenUtils
operator|.
name|getClaimName
argument_list|(
name|usernameProp
argument_list|,
name|usernameProp
argument_list|,
name|claimsMap
argument_list|)
decl_stmt|;
name|String
name|username
init|=
name|claims
operator|.
name|getStringProperty
argument_list|(
name|usernameClaimName
argument_list|)
decl_stmt|;
name|String
name|subject
init|=
name|claims
operator|.
name|getSubject
argument_list|()
decl_stmt|;
if|if
condition|(
name|username
operator|!=
literal|null
condition|)
block|{
name|UserSubject
name|userSubject
init|=
operator|new
name|UserSubject
argument_list|(
name|username
argument_list|)
decl_stmt|;
if|if
condition|(
name|subject
operator|!=
literal|null
condition|)
block|{
name|userSubject
operator|.
name|setId
argument_list|(
name|subject
argument_list|)
expr_stmt|;
block|}
name|at
operator|.
name|setSubject
argument_list|(
name|userSubject
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|subject
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|setSubject
argument_list|(
operator|new
name|UserSubject
argument_list|(
name|subject
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|grantType
init|=
name|claims
operator|.
name|getStringProperty
argument_list|(
name|OAuthConstants
operator|.
name|GRANT_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
name|grantType
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|setGrantType
argument_list|(
name|grantType
argument_list|)
expr_stmt|;
block|}
name|String
name|grantCode
init|=
name|claims
operator|.
name|getStringProperty
argument_list|(
name|OAuthConstants
operator|.
name|AUTHORIZATION_CODE_GRANT
argument_list|)
decl_stmt|;
if|if
condition|(
name|grantCode
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|setGrantCode
argument_list|(
name|grantCode
argument_list|)
expr_stmt|;
block|}
name|String
name|codeVerifier
init|=
name|claims
operator|.
name|getStringProperty
argument_list|(
name|OAuthConstants
operator|.
name|AUTHORIZATION_CODE_VERIFIER
argument_list|)
decl_stmt|;
if|if
condition|(
name|codeVerifier
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|setClientCodeVerifier
argument_list|(
name|codeVerifier
argument_list|)
expr_stmt|;
block|}
name|String
name|nonce
init|=
name|claims
operator|.
name|getStringProperty
argument_list|(
name|OAuthConstants
operator|.
name|NONCE
argument_list|)
decl_stmt|;
if|if
condition|(
name|nonce
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|setNonce
argument_list|(
name|nonce
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extraProperties
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|claims
operator|.
name|getClaim
argument_list|(
literal|"extra_propertirs"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|extraProperties
operator|!=
literal|null
condition|)
block|{
name|at
operator|.
name|getExtraProperties
argument_list|()
operator|.
name|putAll
argument_list|(
name|extraProperties
argument_list|)
expr_stmt|;
block|}
return|return
name|at
return|;
block|}
block|}
end_class

end_unit

