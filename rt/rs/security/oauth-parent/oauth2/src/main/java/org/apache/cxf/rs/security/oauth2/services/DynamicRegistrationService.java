begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|services
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|OAuthDataProvider
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"register"
argument_list|)
specifier|public
class|class
name|DynamicRegistrationService
extends|extends
name|AbstractOAuthService
block|{
specifier|private
name|OAuthDataProvider
name|dataProvider
decl_stmt|;
specifier|private
name|String
name|initialAccessToken
decl_stmt|;
annotation|@
name|POST
annotation|@
name|Consumes
argument_list|(
literal|"application/json"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|ClientRegistrationResponse
name|register
parameter_list|(
name|ClientRegistrationRequest
name|request
parameter_list|)
block|{
return|return
operator|new
name|ClientRegistrationResponse
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|ClientRegistrationResponse
name|readClientRegistrationWithQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"client_id"
argument_list|)
name|String
name|clientId
parameter_list|)
block|{
return|return
name|doReadClientRegistration
argument_list|(
name|clientId
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"{clientId}"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|ClientRegistrationResponse
name|readClientRegistrationWithPath
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"clientId"
argument_list|)
name|String
name|clientId
parameter_list|)
block|{
return|return
name|doReadClientRegistration
argument_list|(
name|clientId
argument_list|)
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"{clientId}"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|Response
name|updateClientRegistration
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"clientId"
argument_list|)
name|String
name|clientId
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"{clientId}"
argument_list|)
specifier|public
name|Response
name|deleteClientRegistration
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"clientId"
argument_list|)
name|String
name|clientId
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
specifier|protected
name|ClientRegistrationResponse
name|doReadClientRegistration
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
return|return
operator|new
name|ClientRegistrationResponse
argument_list|()
return|;
block|}
specifier|public
name|OAuthDataProvider
name|getDataProvider
parameter_list|()
block|{
return|return
name|dataProvider
return|;
block|}
specifier|public
name|void
name|setDataProvider
parameter_list|(
name|OAuthDataProvider
name|dataProvider
parameter_list|)
block|{
name|this
operator|.
name|dataProvider
operator|=
name|dataProvider
expr_stmt|;
block|}
specifier|public
name|String
name|getInitialAccessToken
parameter_list|()
block|{
return|return
name|initialAccessToken
return|;
block|}
specifier|public
name|void
name|setRegistrationAccessToken
parameter_list|(
name|String
name|registrationAccessToken
parameter_list|)
block|{
name|this
operator|.
name|initialAccessToken
operator|=
name|registrationAccessToken
expr_stmt|;
block|}
block|}
end_class

end_unit

