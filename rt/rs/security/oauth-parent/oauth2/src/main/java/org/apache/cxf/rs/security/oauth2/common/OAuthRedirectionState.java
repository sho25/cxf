begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_class
specifier|public
class|class
name|OAuthRedirectionState
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|661649302262699347L
decl_stmt|;
specifier|private
name|String
name|redirectUri
decl_stmt|;
specifier|private
name|String
name|state
decl_stmt|;
specifier|private
name|String
name|proposedScope
decl_stmt|;
specifier|private
name|String
name|audience
decl_stmt|;
specifier|private
name|String
name|nonce
decl_stmt|;
specifier|private
name|String
name|clientCodeChallenge
decl_stmt|;
specifier|private
name|String
name|responseType
decl_stmt|;
specifier|public
name|OAuthRedirectionState
parameter_list|()
block|{     }
comment|/**      * Sets the redirect uri which needs to be retained in a hidden form field      * @param redirectUri the redirect uri      */
specifier|public
name|void
name|setRedirectUri
parameter_list|(
name|String
name|redirectUri
parameter_list|)
block|{
name|this
operator|.
name|redirectUri
operator|=
name|redirectUri
expr_stmt|;
block|}
comment|/**      * Gets the redirect uri which needs to be retained in a hidden form field      * @return the redirect uri      */
specifier|public
name|String
name|getRedirectUri
parameter_list|()
block|{
return|return
name|redirectUri
return|;
block|}
comment|/**      * Sets the client state token which needs to be retained in a hidden form field      * @param state the state      */
specifier|public
name|void
name|setState
parameter_list|(
name|String
name|state
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
block|}
comment|/**      * Gets the client state token which needs to be retained in a hidden form field      * @return      */
specifier|public
name|String
name|getState
parameter_list|()
block|{
return|return
name|state
return|;
block|}
comment|/**      * Sets the requested scope which needs to be retained in a hidden form field      * @param proposedScope the scope      */
specifier|public
name|void
name|setProposedScope
parameter_list|(
name|String
name|proposedScope
parameter_list|)
block|{
name|this
operator|.
name|proposedScope
operator|=
name|proposedScope
expr_stmt|;
block|}
comment|/**      * Gets the requested scope which needs to be retained in a hidden form field      * @return the scope      */
specifier|public
name|String
name|getProposedScope
parameter_list|()
block|{
return|return
name|proposedScope
return|;
block|}
specifier|public
name|String
name|getAudience
parameter_list|()
block|{
return|return
name|audience
return|;
block|}
specifier|public
name|void
name|setAudience
parameter_list|(
name|String
name|audience
parameter_list|)
block|{
name|this
operator|.
name|audience
operator|=
name|audience
expr_stmt|;
block|}
specifier|public
name|String
name|getClientCodeChallenge
parameter_list|()
block|{
return|return
name|clientCodeChallenge
return|;
block|}
specifier|public
name|void
name|setClientCodeChallenge
parameter_list|(
name|String
name|clientCodeChallenge
parameter_list|)
block|{
name|this
operator|.
name|clientCodeChallenge
operator|=
name|clientCodeChallenge
expr_stmt|;
block|}
specifier|public
name|String
name|getNonce
parameter_list|()
block|{
return|return
name|nonce
return|;
block|}
specifier|public
name|void
name|setNonce
parameter_list|(
name|String
name|nonce
parameter_list|)
block|{
name|this
operator|.
name|nonce
operator|=
name|nonce
expr_stmt|;
block|}
specifier|public
name|String
name|getResponseType
parameter_list|()
block|{
return|return
name|responseType
return|;
block|}
specifier|public
name|void
name|setResponseType
parameter_list|(
name|String
name|responseType
parameter_list|)
block|{
name|this
operator|.
name|responseType
operator|=
name|responseType
expr_stmt|;
block|}
block|}
end_class

end_unit

