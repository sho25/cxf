begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|ClientAccessToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthConstants
import|;
end_import

begin_class
specifier|public
class|class
name|AccessTokenClientFilter
extends|extends
name|AbstractAuthSupplier
implements|implements
name|ClientRequestFilter
block|{
specifier|public
name|AccessTokenClientFilter
parameter_list|()
block|{
name|super
argument_list|(
name|OAuthConstants
operator|.
name|BEARER_AUTHORIZATION_SCHEME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|requestContext
parameter_list|)
throws|throws
name|IOException
block|{
name|requestContext
operator|.
name|getHeaders
argument_list|()
operator|.
name|putSingle
argument_list|(
name|HttpHeaders
operator|.
name|AUTHORIZATION
argument_list|,
name|createAuthorizationHeader
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ClientAccessToken
name|getClientAccessToken
parameter_list|()
block|{
name|ClientAccessToken
name|at
init|=
name|super
operator|.
name|getClientAccessToken
argument_list|()
decl_stmt|;
if|if
condition|(
name|at
operator|.
name|getTokenKey
argument_list|()
operator|==
literal|null
condition|)
block|{
name|ClientTokenContext
name|ctx
init|=
name|StaticClientTokenContext
operator|.
name|getClientTokenContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|ctx
operator|!=
literal|null
condition|)
block|{
name|at
operator|=
name|ctx
operator|.
name|getToken
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|at
return|;
block|}
block|}
end_class

end_unit

