begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwe
operator|.
name|JweDecryptionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsSignatureVerifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JoseJwtConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JwtToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthUtils
import|;
end_import

begin_class
specifier|public
class|class
name|OAuthJoseJwtConsumer
extends|extends
name|JoseJwtConsumer
block|{
specifier|private
name|boolean
name|decryptWithClientSecret
decl_stmt|;
specifier|private
name|boolean
name|verifyWithClientSecret
decl_stmt|;
specifier|public
name|JwtToken
name|getJwtToken
parameter_list|(
name|String
name|wrappedJwtToken
parameter_list|,
name|String
name|clientSecret
parameter_list|)
block|{
return|return
name|getJwtToken
argument_list|(
name|wrappedJwtToken
argument_list|,
name|getInitializedDecryptionProvider
argument_list|(
name|clientSecret
argument_list|)
argument_list|,
name|getInitializedSignatureVerifier
argument_list|(
name|clientSecret
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|JwsSignatureVerifier
name|getInitializedSignatureVerifier
parameter_list|(
name|String
name|clientSecret
parameter_list|)
block|{
if|if
condition|(
name|verifyWithClientSecret
operator|&&
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|clientSecret
argument_list|)
condition|)
block|{
return|return
name|OAuthUtils
operator|.
name|getClientSecretSignatureVerifier
argument_list|(
name|clientSecret
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|protected
name|JweDecryptionProvider
name|getInitializedDecryptionProvider
parameter_list|(
name|String
name|clientSecret
parameter_list|)
block|{
if|if
condition|(
name|decryptWithClientSecret
operator|&&
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|clientSecret
argument_list|)
condition|)
block|{
return|return
name|OAuthUtils
operator|.
name|getClientSecretDecryptionProvider
argument_list|(
name|clientSecret
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|setDecryptWithClientSecret
parameter_list|(
name|boolean
name|decryptWithClientSecret
parameter_list|)
block|{
name|this
operator|.
name|decryptWithClientSecret
operator|=
name|verifyWithClientSecret
expr_stmt|;
block|}
specifier|public
name|void
name|setVerifyWithClientSecret
parameter_list|(
name|boolean
name|verifyWithClientSecret
parameter_list|)
block|{
name|this
operator|.
name|verifyWithClientSecret
operator|=
name|verifyWithClientSecret
expr_stmt|;
block|}
block|}
end_class

end_unit

