begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|grants
operator|.
name|code
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Ehcache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|DefaultEHCacheOAuthDataProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|OAuthServiceException
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultEHCacheCodeDataProvider
extends|extends
name|DefaultEHCacheOAuthDataProvider
implements|implements
name|AuthorizationCodeDataProvider
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CODE_GRANT_CACHE_KEY
init|=
literal|"cxf.oauth2.codegrant.cache"
decl_stmt|;
specifier|private
name|long
name|codeLifetime
init|=
literal|10
operator|*
literal|60
decl_stmt|;
specifier|private
name|Ehcache
name|codeGrantCache
decl_stmt|;
specifier|protected
name|DefaultEHCacheCodeDataProvider
parameter_list|()
block|{
name|this
argument_list|(
name|DEFAULT_CONFIG_URL
argument_list|,
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|DefaultEHCacheCodeDataProvider
parameter_list|(
name|String
name|configFileURL
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|this
argument_list|(
name|configFileURL
argument_list|,
name|bus
argument_list|,
name|CLIENT_CACHE_KEY
argument_list|,
name|CODE_GRANT_CACHE_KEY
argument_list|,
name|ACCESS_TOKEN_CACHE_KEY
argument_list|,
name|REFRESH_TOKEN_CACHE_KEY
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|DefaultEHCacheCodeDataProvider
parameter_list|(
name|String
name|configFileURL
parameter_list|,
name|Bus
name|bus
parameter_list|,
name|String
name|clientCacheKey
parameter_list|,
name|String
name|codeCacheKey
parameter_list|,
name|String
name|accessTokenKey
parameter_list|,
name|String
name|refreshTokenKey
parameter_list|)
block|{
name|super
argument_list|(
name|configFileURL
argument_list|,
name|bus
argument_list|,
name|clientCacheKey
argument_list|,
name|accessTokenKey
argument_list|,
name|refreshTokenKey
argument_list|)
expr_stmt|;
name|codeGrantCache
operator|=
name|createCache
argument_list|(
name|cacheManager
argument_list|,
name|codeCacheKey
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Client
name|removeClient
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|Client
name|c
init|=
name|super
operator|.
name|removeClient
argument_list|(
name|clientId
argument_list|)
decl_stmt|;
name|removeClientCodeGrants
argument_list|(
name|c
argument_list|)
expr_stmt|;
return|return
name|c
return|;
block|}
specifier|protected
name|void
name|removeClientCodeGrants
parameter_list|(
name|Client
name|c
parameter_list|)
block|{
for|for
control|(
name|ServerAuthorizationCodeGrant
name|grant
range|:
name|getCodeGrants
argument_list|(
name|c
argument_list|)
control|)
block|{
name|removeCodeGrant
argument_list|(
name|grant
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ServerAuthorizationCodeGrant
name|createCodeGrant
parameter_list|(
name|AuthorizationCodeRegistration
name|reg
parameter_list|)
throws|throws
name|OAuthServiceException
block|{
name|ServerAuthorizationCodeGrant
name|grant
init|=
name|doCreateCodeGrant
argument_list|(
name|reg
argument_list|)
decl_stmt|;
name|saveCodeGrant
argument_list|(
name|grant
argument_list|)
expr_stmt|;
return|return
name|grant
return|;
block|}
specifier|protected
name|ServerAuthorizationCodeGrant
name|doCreateCodeGrant
parameter_list|(
name|AuthorizationCodeRegistration
name|reg
parameter_list|)
throws|throws
name|OAuthServiceException
block|{
return|return
name|AbstractCodeDataProvider
operator|.
name|initCodeGrant
argument_list|(
name|reg
argument_list|,
name|codeLifetime
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|ServerAuthorizationCodeGrant
argument_list|>
name|getCodeGrants
parameter_list|(
name|Client
name|c
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|keys
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|codeGrantCache
operator|.
name|getKeys
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ServerAuthorizationCodeGrant
argument_list|>
name|grants
init|=
operator|new
name|ArrayList
argument_list|<
name|ServerAuthorizationCodeGrant
argument_list|>
argument_list|(
name|keys
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|keys
control|)
block|{
name|ServerAuthorizationCodeGrant
name|grant
init|=
name|getCodeGrant
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|==
literal|null
operator|||
name|grant
operator|.
name|getClient
argument_list|()
operator|.
name|getClientId
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getClientId
argument_list|()
argument_list|)
condition|)
block|{
name|grants
operator|.
name|add
argument_list|(
name|grant
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|grants
return|;
block|}
annotation|@
name|Override
specifier|public
name|ServerAuthorizationCodeGrant
name|removeCodeGrant
parameter_list|(
name|String
name|code
parameter_list|)
throws|throws
name|OAuthServiceException
block|{
name|ServerAuthorizationCodeGrant
name|grant
init|=
name|getCodeGrant
argument_list|(
name|code
argument_list|)
decl_stmt|;
if|if
condition|(
name|grant
operator|!=
literal|null
condition|)
block|{
name|codeGrantCache
operator|.
name|remove
argument_list|(
name|code
argument_list|)
expr_stmt|;
block|}
return|return
name|grant
return|;
block|}
specifier|public
name|ServerAuthorizationCodeGrant
name|getCodeGrant
parameter_list|(
name|String
name|code
parameter_list|)
throws|throws
name|OAuthServiceException
block|{
return|return
name|getCacheValue
argument_list|(
name|codeGrantCache
argument_list|,
name|code
argument_list|,
name|ServerAuthorizationCodeGrant
operator|.
name|class
argument_list|)
return|;
block|}
specifier|protected
name|void
name|saveCodeGrant
parameter_list|(
name|ServerAuthorizationCodeGrant
name|grant
parameter_list|)
block|{
name|putCacheValue
argument_list|(
name|codeGrantCache
argument_list|,
name|grant
operator|.
name|getCode
argument_list|()
argument_list|,
name|grant
argument_list|,
name|grant
operator|.
name|getExpiresIn
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCodeLifetime
parameter_list|(
name|long
name|codeLifetime
parameter_list|)
block|{
name|this
operator|.
name|codeLifetime
operator|=
name|codeLifetime
expr_stmt|;
block|}
block|}
end_class

end_unit

