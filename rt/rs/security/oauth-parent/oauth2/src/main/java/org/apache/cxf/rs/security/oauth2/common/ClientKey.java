begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_class
specifier|public
class|class
name|ClientKey
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|6151645789585333184L
decl_stmt|;
specifier|public
enum|enum
name|Type
block|{
name|PASSWORD
block|,
name|X509CERTIFICATE
block|,
name|PUBLIC_KEY
block|}
specifier|private
name|String
name|credential
decl_stmt|;
specifier|private
name|Type
name|type
decl_stmt|;
specifier|public
name|ClientKey
parameter_list|()
block|{              }
specifier|public
name|ClientKey
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
argument_list|(
name|password
argument_list|,
name|Type
operator|.
name|PASSWORD
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClientKey
parameter_list|(
name|Type
name|type
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClientKey
parameter_list|(
name|String
name|cred
parameter_list|,
name|Type
name|type
parameter_list|)
block|{
name|this
operator|.
name|credential
operator|=
name|cred
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getCredential
parameter_list|()
block|{
return|return
name|credential
return|;
block|}
specifier|public
name|void
name|setCredential
parameter_list|(
name|String
name|credential
parameter_list|)
block|{
name|this
operator|.
name|credential
operator|=
name|credential
expr_stmt|;
block|}
specifier|public
name|Type
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|Type
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|(
name|credential
operator|==
literal|null
condition|?
literal|37
else|:
name|credential
operator|.
name|hashCode
argument_list|()
operator|)
operator|*
name|type
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|ClientKey
condition|)
block|{
name|ClientKey
name|other
init|=
operator|(
name|ClientKey
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|credential
operator|==
literal|null
operator|&&
name|other
operator|.
name|credential
operator|!=
literal|null
operator|||
name|this
operator|.
name|credential
operator|!=
literal|null
operator|&&
name|other
operator|.
name|credential
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|this
operator|.
name|credential
operator|.
name|equals
argument_list|(
name|other
operator|.
name|credential
argument_list|)
operator|&&
name|this
operator|.
name|type
operator|.
name|equals
argument_list|(
name|other
operator|.
name|type
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
block|}
end_class

end_unit

