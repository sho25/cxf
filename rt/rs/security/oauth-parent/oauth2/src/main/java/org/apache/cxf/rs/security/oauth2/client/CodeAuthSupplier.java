begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|security
operator|.
name|AuthorizationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|ClientAccessToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|grants
operator|.
name|code
operator|.
name|AuthorizationCodeGrant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|auth
operator|.
name|HttpAuthSupplier
import|;
end_import

begin_class
specifier|public
class|class
name|CodeAuthSupplier
implements|implements
name|HttpAuthSupplier
block|{
specifier|private
specifier|volatile
name|String
name|code
decl_stmt|;
specifier|private
name|BearerAuthSupplier
name|tokenSupplier
init|=
operator|new
name|BearerAuthSupplier
argument_list|()
decl_stmt|;
specifier|public
name|CodeAuthSupplier
parameter_list|()
block|{     }
specifier|public
name|boolean
name|requiresRequestCaching
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|String
name|getAuthorization
parameter_list|(
name|AuthorizationPolicy
name|authPolicy
parameter_list|,
name|URI
name|currentURI
parameter_list|,
name|Message
name|message
parameter_list|,
name|String
name|fullHeader
parameter_list|)
block|{
if|if
condition|(
name|code
operator|!=
literal|null
condition|)
block|{
synchronized|synchronized
init|(
name|tokenSupplier
init|)
block|{
if|if
condition|(
name|tokenSupplier
operator|.
name|getClientAccessToken
argument_list|()
operator|.
name|getTokenKey
argument_list|()
operator|==
literal|null
condition|)
block|{
name|WebClient
name|wc
init|=
name|tokenSupplier
operator|.
name|createAccessTokenServiceClient
argument_list|()
decl_stmt|;
name|ClientAccessToken
name|at
init|=
name|OAuthClientUtils
operator|.
name|getAccessToken
argument_list|(
name|wc
argument_list|,
name|tokenSupplier
operator|.
name|getConsumer
argument_list|()
argument_list|,
operator|new
name|AuthorizationCodeGrant
argument_list|(
name|code
argument_list|)
argument_list|)
decl_stmt|;
name|code
operator|=
literal|null
expr_stmt|;
name|tokenSupplier
operator|.
name|setClientAccessToken
argument_list|(
name|at
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|tokenSupplier
operator|.
name|getAuthorization
argument_list|(
name|authPolicy
argument_list|,
name|currentURI
argument_list|,
name|message
argument_list|,
name|fullHeader
argument_list|)
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|void
name|setRefreshEarly
parameter_list|(
name|boolean
name|refreshEarly
parameter_list|)
block|{
name|tokenSupplier
operator|.
name|setRefreshEarly
argument_list|(
name|refreshEarly
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAccessTokenServiceUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|tokenSupplier
operator|.
name|setAccessTokenServiceUri
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setConsumer
parameter_list|(
name|Consumer
name|consumer
parameter_list|)
block|{
name|tokenSupplier
operator|.
name|setConsumer
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

