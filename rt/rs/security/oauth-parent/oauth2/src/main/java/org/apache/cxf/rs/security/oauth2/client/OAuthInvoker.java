begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|NotAuthorizedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|ClientAccessToken
import|;
end_import

begin_class
specifier|public
class|class
name|OAuthInvoker
extends|extends
name|JAXRSInvoker
block|{
specifier|private
name|WebClient
name|accessTokenServiceClient
decl_stmt|;
specifier|private
name|Consumer
name|consumer
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|Object
name|performInvocation
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
specifier|final
name|Object
name|serviceObject
parameter_list|,
name|Method
name|m
parameter_list|,
name|Object
index|[]
name|paramArray
parameter_list|)
throws|throws
name|Exception
block|{
try|try
block|{
return|return
name|super
operator|.
name|performInvocation
argument_list|(
name|exchange
argument_list|,
name|serviceObject
argument_list|,
name|m
argument_list|,
name|paramArray
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InvocationTargetException
name|ex
parameter_list|)
block|{
if|if
condition|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|NotAuthorizedException
condition|)
block|{
name|Message
name|inMessage
init|=
name|exchange
operator|.
name|getInMessage
argument_list|()
decl_stmt|;
name|ClientTokenContext
name|tokenContext
init|=
name|inMessage
operator|.
name|getContent
argument_list|(
name|ClientTokenContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientAccessToken
name|accessToken
init|=
name|tokenContext
operator|.
name|getToken
argument_list|()
decl_stmt|;
name|String
name|refreshToken
init|=
name|accessToken
operator|.
name|getRefreshToken
argument_list|()
decl_stmt|;
if|if
condition|(
name|refreshToken
operator|!=
literal|null
condition|)
block|{
name|accessToken
operator|=
name|OAuthClientUtils
operator|.
name|refreshAccessToken
argument_list|(
name|accessTokenServiceClient
argument_list|,
name|consumer
argument_list|,
name|accessToken
argument_list|)
expr_stmt|;
name|ClientTokenContextManager
name|contextManager
init|=
name|exchange
operator|.
name|getInMessage
argument_list|()
operator|.
name|getContent
argument_list|(
name|ClientTokenContextManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|MessageContext
name|mc
init|=
operator|new
name|MessageContextImpl
argument_list|(
name|inMessage
argument_list|)
decl_stmt|;
operator|(
operator|(
name|ClientTokenContextImpl
operator|)
name|tokenContext
operator|)
operator|.
name|setToken
argument_list|(
name|accessToken
argument_list|)
expr_stmt|;
name|contextManager
operator|.
name|setClientTokenContext
argument_list|(
name|mc
argument_list|,
name|tokenContext
argument_list|)
expr_stmt|;
comment|//retry
return|return
name|super
operator|.
name|performInvocation
argument_list|(
name|exchange
argument_list|,
name|serviceObject
argument_list|,
name|m
argument_list|,
name|paramArray
argument_list|)
return|;
block|}
block|}
throw|throw
name|ex
throw|;
block|}
block|}
specifier|public
name|void
name|setAccessTokenServiceClient
parameter_list|(
name|WebClient
name|accessTokenServiceClient
parameter_list|)
block|{
name|this
operator|.
name|accessTokenServiceClient
operator|=
name|accessTokenServiceClient
expr_stmt|;
block|}
specifier|public
name|void
name|setConsumer
parameter_list|(
name|Consumer
name|consumer
parameter_list|)
block|{
name|this
operator|.
name|consumer
operator|=
name|consumer
expr_stmt|;
block|}
block|}
end_class

end_unit

