begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ElementCollection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|MapKeyColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|MappedSuperclass
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToOne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|OAuthServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthUtils
import|;
end_import

begin_comment
comment|/**  * Server Access Token representation  */
end_comment

begin_class
annotation|@
name|MappedSuperclass
specifier|public
specifier|abstract
class|class
name|ServerAccessToken
extends|extends
name|AccessToken
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|638776204861456064L
decl_stmt|;
specifier|private
name|String
name|grantType
decl_stmt|;
specifier|private
name|Client
name|client
decl_stmt|;
specifier|private
name|List
argument_list|<
name|OAuthPermission
argument_list|>
name|scopes
init|=
operator|new
name|LinkedList
argument_list|<
name|OAuthPermission
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|UserSubject
name|subject
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|audiences
init|=
operator|new
name|LinkedList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|clientCodeVerifier
decl_stmt|;
specifier|private
name|String
name|nonce
decl_stmt|;
specifier|private
name|String
name|responseType
decl_stmt|;
specifier|private
name|String
name|grantCode
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extraProperties
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|ServerAccessToken
parameter_list|()
block|{              }
specifier|protected
name|ServerAccessToken
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|tokenType
parameter_list|,
name|String
name|tokenKey
parameter_list|,
name|long
name|expiresIn
parameter_list|)
block|{
name|this
argument_list|(
name|client
argument_list|,
name|tokenType
argument_list|,
name|tokenKey
argument_list|,
name|expiresIn
argument_list|,
name|OAuthUtils
operator|.
name|getIssuedAt
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ServerAccessToken
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|tokenType
parameter_list|,
name|String
name|tokenKey
parameter_list|,
name|long
name|expiresIn
parameter_list|,
name|long
name|issuedAt
parameter_list|)
block|{
name|super
argument_list|(
name|tokenType
argument_list|,
name|tokenKey
argument_list|,
name|expiresIn
argument_list|,
name|issuedAt
argument_list|)
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
specifier|protected
name|ServerAccessToken
parameter_list|(
name|ServerAccessToken
name|token
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|super
argument_list|(
name|token
operator|.
name|getTokenType
argument_list|()
argument_list|,
name|key
argument_list|,
name|token
operator|.
name|getExpiresIn
argument_list|()
argument_list|,
name|token
operator|.
name|getIssuedAt
argument_list|()
argument_list|,
name|token
operator|.
name|getRefreshToken
argument_list|()
argument_list|,
name|token
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|token
operator|.
name|getClient
argument_list|()
expr_stmt|;
name|this
operator|.
name|grantType
operator|=
name|token
operator|.
name|getGrantType
argument_list|()
expr_stmt|;
name|this
operator|.
name|scopes
operator|=
name|token
operator|.
name|getScopes
argument_list|()
expr_stmt|;
name|this
operator|.
name|audiences
operator|=
name|token
operator|.
name|getAudiences
argument_list|()
expr_stmt|;
name|this
operator|.
name|subject
operator|=
name|token
operator|.
name|getSubject
argument_list|()
expr_stmt|;
name|this
operator|.
name|responseType
operator|=
name|token
operator|.
name|getResponseType
argument_list|()
expr_stmt|;
name|this
operator|.
name|clientCodeVerifier
operator|=
name|token
operator|.
name|getClientCodeVerifier
argument_list|()
expr_stmt|;
name|this
operator|.
name|nonce
operator|=
name|token
operator|.
name|getNonce
argument_list|()
expr_stmt|;
name|this
operator|.
name|grantCode
operator|=
name|token
operator|.
name|getGrantCode
argument_list|()
expr_stmt|;
block|}
comment|/**      * Returns the Client associated with this token      * @return the client      */
annotation|@
name|OneToOne
specifier|public
name|Client
name|getClient
parameter_list|()
block|{
return|return
name|client
return|;
block|}
specifier|public
name|void
name|setClient
parameter_list|(
name|Client
name|c
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|c
expr_stmt|;
block|}
comment|/**      * Returns a list of opaque permissions/scopes      * @return the scopes      */
annotation|@
name|ManyToMany
specifier|public
name|List
argument_list|<
name|OAuthPermission
argument_list|>
name|getScopes
parameter_list|()
block|{
return|return
name|scopes
return|;
block|}
comment|/**      * Sets a list of opaque permissions/scopes      * @param scopes the scopes      */
specifier|public
name|void
name|setScopes
parameter_list|(
name|List
argument_list|<
name|OAuthPermission
argument_list|>
name|scopes
parameter_list|)
block|{
name|this
operator|.
name|scopes
operator|=
name|scopes
expr_stmt|;
block|}
comment|/**      * Sets a subject capturing the login name       * the end user used to login to the resource server      * when authorizing a given client request      * @param subject      */
specifier|public
name|void
name|setSubject
parameter_list|(
name|UserSubject
name|subject
parameter_list|)
block|{
name|this
operator|.
name|subject
operator|=
name|subject
expr_stmt|;
block|}
comment|/**      * Returns a subject capturing the login name       * the end user used to login to the resource server      * when authorizing a given client request      * @return UserSubject      */
annotation|@
name|OneToOne
specifier|public
name|UserSubject
name|getSubject
parameter_list|()
block|{
return|return
name|subject
return|;
block|}
comment|/**      * Sets the grant type which was used to obtain the access token      * @param grantType the grant type      */
specifier|public
name|void
name|setGrantType
parameter_list|(
name|String
name|grantType
parameter_list|)
block|{
name|this
operator|.
name|grantType
operator|=
name|grantType
expr_stmt|;
block|}
comment|/**      * Returns the grant type which was used to obtain the access token      * @return the grant type      */
specifier|public
name|String
name|getGrantType
parameter_list|()
block|{
return|return
name|grantType
return|;
block|}
comment|/**      * Set the response type      * @param responseType the response type      */
specifier|public
name|void
name|setResponseType
parameter_list|(
name|String
name|responseType
parameter_list|)
block|{
name|this
operator|.
name|responseType
operator|=
name|responseType
expr_stmt|;
block|}
comment|/**      * Get the response type      * @return the response type, null if no redirection flow was used      */
specifier|public
name|String
name|getResponseType
parameter_list|()
block|{
return|return
name|responseType
return|;
block|}
annotation|@
name|ElementCollection
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getAudiences
parameter_list|()
block|{
return|return
name|audiences
return|;
block|}
specifier|public
name|void
name|setAudiences
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|audiences
parameter_list|)
block|{
name|this
operator|.
name|audiences
operator|=
name|audiences
expr_stmt|;
block|}
specifier|protected
specifier|static
name|ServerAccessToken
name|validateTokenType
parameter_list|(
name|ServerAccessToken
name|token
parameter_list|,
name|String
name|expectedType
parameter_list|)
block|{
if|if
condition|(
operator|!
name|token
operator|.
name|getTokenType
argument_list|()
operator|.
name|equals
argument_list|(
name|expectedType
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|OAuthServiceException
argument_list|(
name|OAuthConstants
operator|.
name|SERVER_ERROR
argument_list|)
throw|;
block|}
return|return
name|token
return|;
block|}
specifier|public
name|String
name|getClientCodeVerifier
parameter_list|()
block|{
return|return
name|clientCodeVerifier
return|;
block|}
specifier|public
name|void
name|setClientCodeVerifier
parameter_list|(
name|String
name|clientCodeVerifier
parameter_list|)
block|{
name|this
operator|.
name|clientCodeVerifier
operator|=
name|clientCodeVerifier
expr_stmt|;
block|}
specifier|public
name|String
name|getNonce
parameter_list|()
block|{
return|return
name|nonce
return|;
block|}
specifier|public
name|void
name|setNonce
parameter_list|(
name|String
name|nonce
parameter_list|)
block|{
name|this
operator|.
name|nonce
operator|=
name|nonce
expr_stmt|;
block|}
annotation|@
name|ElementCollection
annotation|@
name|MapKeyColumn
argument_list|(
name|name
operator|=
literal|"extraPropName"
argument_list|)
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getExtraProperties
parameter_list|()
block|{
return|return
name|extraProperties
return|;
block|}
specifier|public
name|void
name|setExtraProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extraProperties
parameter_list|)
block|{
name|this
operator|.
name|extraProperties
operator|=
name|extraProperties
expr_stmt|;
block|}
comment|/**      * Set the grant code which was used to request the token      * @param grantCode the grant code      */
specifier|public
name|void
name|setGrantCode
parameter_list|(
name|String
name|grantCode
parameter_list|)
block|{
name|this
operator|.
name|grantCode
operator|=
name|grantCode
expr_stmt|;
block|}
comment|/**      * Get the grant code      * @return the grant code, null if no authorization code grant was used      */
specifier|public
name|String
name|getGrantCode
parameter_list|()
block|{
return|return
name|grantCode
return|;
block|}
block|}
end_class

end_unit

