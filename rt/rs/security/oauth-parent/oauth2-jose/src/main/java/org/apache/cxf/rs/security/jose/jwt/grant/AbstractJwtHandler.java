begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|grant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|JoseHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsSignatureVerifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JwtClaims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|grants
operator|.
name|AbstractGrantHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|OAuthServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthConstants
import|;
end_import

begin_comment
comment|/**  * The "JWT Bearer" grant handler  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractJwtHandler
extends|extends
name|AbstractGrantHandler
block|{
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|supportedIssuers
decl_stmt|;
specifier|private
name|JwsSignatureVerifier
name|jwsVefifier
decl_stmt|;
specifier|protected
name|AbstractJwtHandler
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|grants
parameter_list|)
block|{
name|super
argument_list|(
name|grants
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|validateSignature
parameter_list|(
name|JoseHeaders
name|headers
parameter_list|,
name|String
name|unsignedText
parameter_list|,
name|byte
index|[]
name|signature
parameter_list|)
block|{
if|if
condition|(
name|jwsVefifier
operator|.
name|verify
argument_list|(
name|headers
argument_list|,
name|unsignedText
argument_list|,
name|signature
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|OAuthServiceException
argument_list|(
name|OAuthConstants
operator|.
name|INVALID_GRANT
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|void
name|validateClaims
parameter_list|(
name|Client
name|client
parameter_list|,
name|JwtClaims
name|claims
parameter_list|)
block|{
name|validateIssuer
argument_list|(
name|claims
operator|.
name|getIssuer
argument_list|()
argument_list|)
expr_stmt|;
name|validateSubject
argument_list|(
name|client
argument_list|,
name|claims
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|validateAudience
argument_list|(
name|client
argument_list|,
name|claims
operator|.
name|getAudience
argument_list|()
argument_list|)
expr_stmt|;
name|validateExpiryTime
argument_list|(
name|claims
operator|.
name|getExpiryTime
argument_list|()
argument_list|)
expr_stmt|;
name|validateNotBeforeTime
argument_list|(
name|claims
operator|.
name|getNotBefore
argument_list|()
argument_list|)
expr_stmt|;
name|validateIssuedAtTime
argument_list|(
name|claims
operator|.
name|getIssuedAt
argument_list|()
argument_list|)
expr_stmt|;
name|validateTokenId
argument_list|(
name|claims
operator|.
name|getTokenId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|validateIssuer
parameter_list|(
name|String
name|issuer
parameter_list|)
block|{
if|if
condition|(
name|issuer
operator|==
literal|null
operator|||
operator|!
name|supportedIssuers
operator|.
name|contains
argument_list|(
name|issuer
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|OAuthServiceException
argument_list|(
name|OAuthConstants
operator|.
name|INVALID_GRANT
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|void
name|validateSubject
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|subject
parameter_list|)
block|{
comment|//TODO
block|}
specifier|protected
name|void
name|validateAudience
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|audience
parameter_list|)
block|{
comment|//TODO
block|}
specifier|protected
name|void
name|validateExpiryTime
parameter_list|(
name|Long
name|timestamp
parameter_list|)
block|{
if|if
condition|(
name|timestamp
operator|!=
literal|null
condition|)
block|{
comment|//TODO
block|}
block|}
specifier|protected
name|void
name|validateNotBeforeTime
parameter_list|(
name|Long
name|timestamp
parameter_list|)
block|{
if|if
condition|(
name|timestamp
operator|!=
literal|null
condition|)
block|{
comment|//TODO
block|}
block|}
specifier|protected
name|void
name|validateIssuedAtTime
parameter_list|(
name|Long
name|timestamp
parameter_list|)
block|{
if|if
condition|(
name|timestamp
operator|!=
literal|null
condition|)
block|{
comment|//TODO
block|}
block|}
specifier|protected
name|void
name|validateTokenId
parameter_list|(
name|String
name|tokenId
parameter_list|)
block|{
if|if
condition|(
name|tokenId
operator|!=
literal|null
condition|)
block|{
comment|//TODO
block|}
block|}
specifier|public
name|void
name|setSupportedIssuers
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|supportedIssuers
parameter_list|)
block|{
name|this
operator|.
name|supportedIssuers
operator|=
name|supportedIssuers
expr_stmt|;
block|}
specifier|public
name|void
name|setJwsVefifier
parameter_list|(
name|JwsSignatureVerifier
name|jwsVefifier
parameter_list|)
block|{
name|this
operator|.
name|jwsVefifier
operator|=
name|jwsVefifier
expr_stmt|;
block|}
block|}
end_class

end_unit

