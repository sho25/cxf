begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwa
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JwtConstants
import|;
end_import

begin_enum
specifier|public
enum|enum
name|Algorithm
block|{
comment|// Signature
name|HmacSHA256
argument_list|(
name|JwtConstants
operator|.
name|HMAC_SHA_256_ALGO
argument_list|,
literal|256
argument_list|)
block|,
name|HmacSHA384
argument_list|(
name|JwtConstants
operator|.
name|HMAC_SHA_384_ALGO
argument_list|,
literal|384
argument_list|)
block|,
name|HmacSHA512
argument_list|(
name|JwtConstants
operator|.
name|HMAC_SHA_512_ALGO
argument_list|,
literal|512
argument_list|)
block|,
name|SHA256withRSA
argument_list|(
name|JwtConstants
operator|.
name|RS_SHA_256_ALGO
argument_list|,
literal|256
argument_list|)
block|,
name|SHA384withRSA
argument_list|(
name|JwtConstants
operator|.
name|RS_SHA_384_ALGO
argument_list|,
literal|384
argument_list|)
block|,
name|SHA512withRSA
argument_list|(
name|JwtConstants
operator|.
name|RS_SHA_512_ALGO
argument_list|,
literal|512
argument_list|)
block|,
name|SHA256withECDSA
argument_list|(
name|JwtConstants
operator|.
name|ES_SHA_256_ALGO
argument_list|,
literal|256
argument_list|)
block|,
name|SHA384withECDSA
argument_list|(
name|JwtConstants
operator|.
name|ES_SHA_384_ALGO
argument_list|,
literal|384
argument_list|)
block|,
name|SHA512withECDSA
argument_list|(
name|JwtConstants
operator|.
name|ES_SHA_512_ALGO
argument_list|,
literal|512
argument_list|)
block|,
comment|// Key Encryption
name|RSA_OAEP
argument_list|(
name|JwtConstants
operator|.
name|RSA_OAEP_ALGO
argument_list|,
literal|"RSA/ECB/OAEPWithSHA-1AndMGF1Padding"
argument_list|,
operator|-
literal|1
argument_list|)
block|,
name|RSA_OAEP_256
argument_list|(
name|JwtConstants
operator|.
name|RSA_OAEP_256_ALGO
argument_list|,
literal|"RSA/ECB/OAEPWithSHA-256AndMGF1Padding"
argument_list|,
operator|-
literal|1
argument_list|)
block|,
name|RSA_1_5
argument_list|(
name|JwtConstants
operator|.
name|RSA_1_5_ALGO
argument_list|,
literal|"RSA/ECB/PKCS1Padding"
argument_list|,
operator|-
literal|1
argument_list|)
block|,
name|A128KW
argument_list|(
name|JwtConstants
operator|.
name|A128KW_ALGO
argument_list|,
literal|"AESWrap"
argument_list|,
literal|128
argument_list|)
block|,
name|A192KW
argument_list|(
name|JwtConstants
operator|.
name|A192KW_ALGO
argument_list|,
literal|"AESWrap"
argument_list|,
literal|192
argument_list|)
block|,
name|A256KW
argument_list|(
name|JwtConstants
operator|.
name|A256KW_ALGO
argument_list|,
literal|"AESWrap"
argument_list|,
literal|256
argument_list|)
block|,
name|A128GCMKW
argument_list|(
name|JwtConstants
operator|.
name|A128GCMKW_ALGO
argument_list|,
literal|"AES/GCM/NoPadding"
argument_list|,
literal|128
argument_list|)
block|,
name|A192GCMKW
argument_list|(
name|JwtConstants
operator|.
name|A192GCMKW_ALGO
argument_list|,
literal|"AES/GCM/NoPadding"
argument_list|,
literal|192
argument_list|)
block|,
name|A256GCMKW
argument_list|(
name|JwtConstants
operator|.
name|A256GCMKW_ALGO
argument_list|,
literal|"AES/GCM/NoPadding"
argument_list|,
literal|256
argument_list|)
block|,
name|PBES2_HS256_A128KW
argument_list|(
name|JwtConstants
operator|.
name|PBES2_HS256_A128KW_ALGO
argument_list|,
literal|"AESWrap"
argument_list|,
literal|128
argument_list|)
block|,
name|PBES2_HS384_A192KW
argument_list|(
name|JwtConstants
operator|.
name|PBES2_HS384_A192KW_ALGO
argument_list|,
literal|"AESWrap"
argument_list|,
literal|192
argument_list|)
block|,
name|PBES2_HS512_A256KW
argument_list|(
name|JwtConstants
operator|.
name|PBES2_HS512_A256KW_ALGO
argument_list|,
literal|"AESWrap"
argument_list|,
literal|256
argument_list|)
block|,
comment|// Content Encryption
name|A128GCM
argument_list|(
name|JwtConstants
operator|.
name|A128GCM_ALGO
argument_list|,
literal|"AES/GCM/NoPadding"
argument_list|,
literal|128
argument_list|)
block|,
name|A192GCM
argument_list|(
name|JwtConstants
operator|.
name|A192GCM_ALGO
argument_list|,
literal|"AES/GCM/NoPadding"
argument_list|,
literal|192
argument_list|)
block|,
name|A256GCM
argument_list|(
name|JwtConstants
operator|.
name|A256GCM_ALGO
argument_list|,
literal|"AES/GCM/NoPadding"
argument_list|,
literal|256
argument_list|)
block|,
name|A128CBC_HS256
argument_list|(
name|JwtConstants
operator|.
name|A128CBC_HS256_ALGO
argument_list|,
literal|"AES/CBC/PKCS7Padding"
argument_list|,
literal|128
argument_list|)
block|,
name|A192CBC_HS384
argument_list|(
name|JwtConstants
operator|.
name|A192CBC_HS384_ALGO
argument_list|,
literal|"AES/CBC/PKCS7Padding"
argument_list|,
literal|192
argument_list|)
block|,
name|A256CBC_HS512
argument_list|(
name|JwtConstants
operator|.
name|A256CBC_HS512_ALGO
argument_list|,
literal|"AES/CBC/PKCS7Padding"
argument_list|,
literal|256
argument_list|)
block|;
specifier|public
specifier|static
specifier|final
name|String
name|HMAC_SHA_256_JAVA
init|=
literal|"HmacSHA256"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|HMAC_SHA_384_JAVA
init|=
literal|"HmacSHA384"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|HMAC_SHA_512_JAVA
init|=
literal|"HmacSHA512"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RS_SHA_256_JAVA
init|=
literal|"SHA256withRSA"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RS_SHA_384_JAVA
init|=
literal|"SHA384withRSA"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RS_SHA_512_JAVA
init|=
literal|"SHA512withRSA"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ES_SHA_256_JAVA
init|=
literal|"SHA256withECDSA"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ES_SHA_384_JAVA
init|=
literal|"SHA384withECDSA"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ES_SHA_512_JAVA
init|=
literal|"SHA512withECDSA"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSA_OAEP_ALGO_JAVA
init|=
literal|"RSA/ECB/OAEPWithSHA-1AndMGF1Padding"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSA_OAEP_256_ALGO_JAVA
init|=
literal|"RSA/ECB/OAEPWithSHA-256AndMGF1Padding"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RSA_1_5_ALGO_JAVA
init|=
literal|"RSA/ECB/PKCS1Padding"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|AES_ALGO_JAVA
init|=
literal|"AES"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|AES_WRAP_ALGO_JAVA
init|=
literal|"AESWrap"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|AES_GCM_ALGO_JAVA
init|=
literal|"AES/GCM/NoPadding"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|AES_CBC_ALGO_JAVA
init|=
literal|"AES/CBC/PKCS7Padding"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|JAVA_TO_JWT_NAMES
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|JWT_TO_JAVA_NAMES
decl_stmt|;
static|static
block|{
name|JAVA_TO_JWT_NAMES
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|HMAC_SHA_256_JAVA
argument_list|,
name|JwtConstants
operator|.
name|HMAC_SHA_256_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|HMAC_SHA_384_JAVA
argument_list|,
name|JwtConstants
operator|.
name|HMAC_SHA_384_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|HMAC_SHA_512_JAVA
argument_list|,
name|JwtConstants
operator|.
name|HMAC_SHA_512_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|RS_SHA_256_JAVA
argument_list|,
name|JwtConstants
operator|.
name|RS_SHA_256_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|RS_SHA_384_JAVA
argument_list|,
name|JwtConstants
operator|.
name|RS_SHA_384_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|RS_SHA_512_JAVA
argument_list|,
name|JwtConstants
operator|.
name|RS_SHA_512_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|ES_SHA_256_JAVA
argument_list|,
name|JwtConstants
operator|.
name|ES_SHA_256_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|ES_SHA_384_JAVA
argument_list|,
name|JwtConstants
operator|.
name|ES_SHA_384_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|ES_SHA_512_JAVA
argument_list|,
name|JwtConstants
operator|.
name|ES_SHA_512_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|RSA_OAEP_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|RSA_OAEP_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|RSA_OAEP_256_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|RSA_OAEP_256_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|RSA_1_5_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|RSA_1_5_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_GCM_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A256GCM_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_GCM_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A192GCM_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_GCM_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A128GCM_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_WRAP_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A128KW_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_WRAP_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A192KW_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_WRAP_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A256KW_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_CBC_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A128CBC_HS256_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_CBC_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A192CBC_HS384_ALGO
argument_list|)
expr_stmt|;
name|JAVA_TO_JWT_NAMES
operator|.
name|put
argument_list|(
name|AES_CBC_ALGO_JAVA
argument_list|,
name|JwtConstants
operator|.
name|A256CBC_HS512_ALGO
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|HMAC_SHA_256_ALGO
argument_list|,
name|HMAC_SHA_256_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|HMAC_SHA_384_ALGO
argument_list|,
name|HMAC_SHA_384_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|HMAC_SHA_512_ALGO
argument_list|,
name|HMAC_SHA_512_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|RS_SHA_256_ALGO
argument_list|,
name|RS_SHA_256_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|RS_SHA_384_ALGO
argument_list|,
name|RS_SHA_384_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|RS_SHA_512_ALGO
argument_list|,
name|RS_SHA_512_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|ES_SHA_256_ALGO
argument_list|,
name|ES_SHA_256_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|ES_SHA_384_ALGO
argument_list|,
name|ES_SHA_384_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|ES_SHA_512_ALGO
argument_list|,
name|ES_SHA_512_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|RSA_OAEP_ALGO
argument_list|,
name|RSA_OAEP_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|RSA_OAEP_256_ALGO
argument_list|,
name|RSA_OAEP_256_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|RSA_1_5_ALGO
argument_list|,
name|RSA_1_5_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A128KW_ALGO
argument_list|,
name|AES_WRAP_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A192KW_ALGO
argument_list|,
name|AES_WRAP_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A256KW_ALGO
argument_list|,
name|AES_WRAP_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A256GCM_ALGO
argument_list|,
name|AES_GCM_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A192GCM_ALGO
argument_list|,
name|AES_GCM_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A128GCM_ALGO
argument_list|,
name|AES_GCM_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A256GCMKW_ALGO
argument_list|,
name|AES_GCM_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A192GCMKW_ALGO
argument_list|,
name|AES_GCM_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A128GCMKW_ALGO
argument_list|,
name|AES_GCM_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A128CBC_HS256_ALGO
argument_list|,
name|AES_CBC_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A192CBC_HS384_ALGO
argument_list|,
name|AES_CBC_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|A256CBC_HS512_ALGO
argument_list|,
name|AES_CBC_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|PBES2_HS256_A128KW_ALGO
argument_list|,
name|AES_WRAP_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|PBES2_HS384_A192KW_ALGO
argument_list|,
name|AES_WRAP_ALGO_JAVA
argument_list|)
expr_stmt|;
name|JWT_TO_JAVA_NAMES
operator|.
name|put
argument_list|(
name|JwtConstants
operator|.
name|PBES2_HS512_A256KW_ALGO
argument_list|,
name|AES_WRAP_ALGO_JAVA
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|final
name|String
name|jwtName
decl_stmt|;
specifier|private
specifier|final
name|String
name|javaName
decl_stmt|;
specifier|private
specifier|final
name|int
name|keySizeBits
decl_stmt|;
specifier|private
name|Algorithm
parameter_list|(
name|String
name|jwtName
parameter_list|,
name|int
name|keySizeBits
parameter_list|)
block|{
name|this
argument_list|(
name|jwtName
argument_list|,
literal|null
argument_list|,
name|keySizeBits
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Algorithm
parameter_list|(
name|String
name|jwtName
parameter_list|,
name|String
name|javaName
parameter_list|,
name|int
name|keySizeBits
parameter_list|)
block|{
name|this
operator|.
name|jwtName
operator|=
name|jwtName
expr_stmt|;
name|this
operator|.
name|javaName
operator|=
name|javaName
expr_stmt|;
name|this
operator|.
name|keySizeBits
operator|=
name|keySizeBits
expr_stmt|;
block|}
specifier|public
name|String
name|getJwtName
parameter_list|()
block|{
return|return
name|jwtName
return|;
block|}
specifier|public
name|String
name|getJavaName
parameter_list|()
block|{
return|return
name|javaName
operator|==
literal|null
condition|?
name|name
argument_list|()
else|:
name|javaName
return|;
block|}
specifier|public
name|String
name|getJavaAlgoName
parameter_list|()
block|{
return|return
name|stripAlgoProperties
argument_list|(
name|getJavaName
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|getKeySizeBits
parameter_list|()
block|{
return|return
name|keySizeBits
return|;
block|}
specifier|public
specifier|static
name|String
name|toJwtName
parameter_list|(
name|String
name|javaName
parameter_list|,
name|int
name|keyBitSize
parameter_list|)
block|{
comment|//TODO: perhaps a key should be a name+keysize pair
name|String
name|name
init|=
name|JAVA_TO_JWT_NAMES
operator|.
name|get
argument_list|(
name|javaName
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|==
literal|null
operator|&&
name|javaName
operator|.
name|startsWith
argument_list|(
name|AES_ALGO_JAVA
argument_list|)
condition|)
block|{
name|name
operator|=
literal|"A"
operator|+
name|keyBitSize
operator|+
literal|"GCM"
expr_stmt|;
block|}
return|return
name|name
return|;
block|}
specifier|public
specifier|static
name|String
name|toJavaName
parameter_list|(
name|String
name|jwtName
parameter_list|)
block|{
return|return
name|JWT_TO_JAVA_NAMES
operator|.
name|get
argument_list|(
name|jwtName
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|toJavaAlgoNameOnly
parameter_list|(
name|String
name|jwtName
parameter_list|)
block|{
return|return
name|stripAlgoProperties
argument_list|(
name|toJavaName
argument_list|(
name|jwtName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|stripAlgoProperties
parameter_list|(
name|String
name|javaName
parameter_list|)
block|{
if|if
condition|(
name|javaName
operator|!=
literal|null
condition|)
block|{
name|int
name|index
init|=
name|javaName
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|!=
operator|-
literal|1
condition|)
block|{
name|javaName
operator|=
name|javaName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|javaName
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isAesKeyWrap
parameter_list|(
name|String
name|algo
parameter_list|)
block|{
return|return
name|JwtConstants
operator|.
name|A128KW_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A192KW_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A256KW_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isAesGcmKeyWrap
parameter_list|(
name|String
name|algo
parameter_list|)
block|{
return|return
name|JwtConstants
operator|.
name|A128GCMKW_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A192GCMKW_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A256GCMKW_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isAesGcm
parameter_list|(
name|String
name|algo
parameter_list|)
block|{
return|return
name|JwtConstants
operator|.
name|A128GCM_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A192GCM_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A256GCM_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isHmacSign
parameter_list|(
name|String
name|algo
parameter_list|)
block|{
return|return
name|JwtConstants
operator|.
name|HMAC_SHA_256_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|HMAC_SHA_384_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|HMAC_SHA_512_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isAesCbcHmac
parameter_list|(
name|String
name|algo
parameter_list|)
block|{
return|return
name|JwtConstants
operator|.
name|A128CBC_HS256_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A192CBC_HS384_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
operator|||
name|JwtConstants
operator|.
name|A256CBC_HS512_ALGO
operator|.
name|equals
argument_list|(
name|algo
argument_list|)
return|;
block|}
block|}
end_enum

end_unit

