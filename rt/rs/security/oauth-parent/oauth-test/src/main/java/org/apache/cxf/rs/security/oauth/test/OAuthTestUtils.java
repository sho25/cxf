begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuth
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthAccessor
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthConsumer
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthMessage
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|ParameterStyle
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|client
operator|.
name|OAuthClient
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|client
operator|.
name|URLConnectionClient
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|OAuthTestUtils
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CALLBACK
init|=
literal|"http://www.example.com/callback"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|APPLICATION_NAME
init|=
literal|"Test Oauth 1.0 application"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CLIENT_ID
init|=
literal|"12345678"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CLIENT_SECRET
init|=
literal|"secret"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|SIGN_METHOD
init|=
block|{
literal|"HMAC-SHA1"
block|,
literal|"PLAINTEXT"
block|}
decl_stmt|;
specifier|private
name|OAuthTestUtils
parameter_list|()
block|{     }
specifier|public
specifier|static
name|OAuthMessage
name|access
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|method
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|,
name|ParameterStyle
name|style
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|OAuthException
block|{
name|OAuthConsumer
name|consumer
init|=
operator|new
name|OAuthConsumer
argument_list|(
literal|null
argument_list|,
name|params
operator|.
name|get
argument_list|(
name|OAuth
operator|.
name|OAUTH_CONSUMER_KEY
argument_list|)
argument_list|,
name|CLIENT_SECRET
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|OAuthAccessor
name|accessor
init|=
operator|new
name|OAuthAccessor
argument_list|(
name|consumer
argument_list|)
decl_stmt|;
name|OAuthMessage
name|msg
init|=
name|accessor
operator|.
name|newRequestMessage
argument_list|(
name|method
argument_list|,
name|url
argument_list|,
name|params
operator|.
name|entrySet
argument_list|()
argument_list|)
decl_stmt|;
name|OAuthClient
name|client
init|=
operator|new
name|OAuthClient
argument_list|(
operator|new
name|URLConnectionClient
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|client
operator|.
name|access
argument_list|(
name|msg
argument_list|,
name|style
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|readBody
parameter_list|(
name|OAuthMessage
name|msg
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuffer
name|body
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|InputStream
name|responseBody
init|=
literal|null
decl_stmt|;
name|BufferedReader
name|br
init|=
literal|null
decl_stmt|;
try|try
block|{
name|responseBody
operator|=
name|msg
operator|.
name|getBodyAsStream
argument_list|()
expr_stmt|;
if|if
condition|(
name|responseBody
operator|!=
literal|null
condition|)
block|{
name|br
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|responseBody
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|buf
decl_stmt|;
while|while
condition|(
operator|(
name|buf
operator|=
name|br
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|body
operator|.
name|append
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|br
operator|!=
literal|null
condition|)
block|{
name|br
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|responseBody
operator|!=
literal|null
condition|)
block|{
name|responseBody
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|body
operator|.
name|toString
argument_list|()
operator|.
name|trim
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|OAuth
operator|.
name|Parameter
name|findOAuthParameter
parameter_list|(
name|List
argument_list|<
name|OAuth
operator|.
name|Parameter
argument_list|>
name|list
parameter_list|,
name|String
name|key
parameter_list|)
block|{
for|for
control|(
name|OAuth
operator|.
name|Parameter
name|parameter
range|:
name|list
control|)
block|{
if|if
condition|(
name|key
operator|.
name|equals
argument_list|(
name|parameter
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|parameter
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|OAuth
operator|.
name|Parameter
argument_list|>
name|getResponseParams
parameter_list|(
name|OAuthMessage
name|message
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|body
init|=
name|OAuthTestUtils
operator|.
name|readBody
argument_list|(
name|message
argument_list|)
decl_stmt|;
return|return
name|OAuth
operator|.
name|decodeForm
argument_list|(
name|body
argument_list|)
return|;
block|}
block|}
end_class

end_unit

