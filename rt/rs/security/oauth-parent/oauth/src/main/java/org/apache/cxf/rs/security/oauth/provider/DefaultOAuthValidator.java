begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuth
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthMessage
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuthProblemException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|SimpleOAuthValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|data
operator|.
name|Token
import|;
end_import

begin_comment
comment|/**  * The utility OAuth validator which is primarily used  * by the runtime to validate that the issued tokens have not expired.  * Note that the runtime does validate OAuth signatures separately.  */
end_comment

begin_class
specifier|public
class|class
name|DefaultOAuthValidator
extends|extends
name|SimpleOAuthValidator
block|{
specifier|public
name|DefaultOAuthValidator
parameter_list|()
block|{     }
specifier|public
name|void
name|checkSingleParameter
parameter_list|(
name|OAuthMessage
name|message
parameter_list|)
throws|throws
name|OAuthException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|super
operator|.
name|checkSingleParameters
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|validateToken
parameter_list|(
name|Token
name|token
parameter_list|,
name|OAuthDataProvider
name|provider
parameter_list|)
throws|throws
name|OAuthProblemException
block|{
if|if
condition|(
name|token
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|OAuthProblemException
argument_list|(
name|OAuth
operator|.
name|Problems
operator|.
name|TOKEN_REJECTED
argument_list|)
throw|;
block|}
name|Long
name|issuedAt
init|=
name|token
operator|.
name|getIssuedAt
argument_list|()
decl_stmt|;
name|Long
name|lifetime
init|=
name|token
operator|.
name|getLifetime
argument_list|()
decl_stmt|;
if|if
condition|(
name|lifetime
operator|!=
operator|-
literal|1
operator|&&
operator|(
name|issuedAt
operator|+
name|lifetime
operator|<
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
operator|)
operator|)
condition|)
block|{
name|provider
operator|.
name|removeToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|OAuthProblemException
argument_list|(
name|OAuth
operator|.
name|Problems
operator|.
name|TOKEN_EXPIRED
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

