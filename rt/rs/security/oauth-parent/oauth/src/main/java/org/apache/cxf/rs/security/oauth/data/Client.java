begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|data
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|Client
block|{
specifier|private
name|String
name|consumerKey
decl_stmt|;
specifier|private
name|String
name|secretKey
decl_stmt|;
specifier|private
name|String
name|applicationURI
decl_stmt|;
specifier|private
name|String
name|applicationName
decl_stmt|;
specifier|private
name|String
name|loginName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|uris
init|=
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|scopes
init|=
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|public
name|Client
parameter_list|(
name|String
name|consumerKey
parameter_list|,
name|String
name|secretKey
parameter_list|,
name|String
name|applicationName
parameter_list|,
name|String
name|applicationURI
parameter_list|)
block|{
name|this
operator|.
name|consumerKey
operator|=
name|consumerKey
expr_stmt|;
name|this
operator|.
name|secretKey
operator|=
name|secretKey
expr_stmt|;
name|this
operator|.
name|applicationURI
operator|=
name|applicationURI
expr_stmt|;
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
specifier|public
name|Client
parameter_list|(
name|String
name|consumerKey
parameter_list|,
name|String
name|secretKey
parameter_list|)
block|{
name|this
argument_list|(
name|consumerKey
argument_list|,
name|secretKey
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getConsumerKey
parameter_list|()
block|{
return|return
name|consumerKey
return|;
block|}
specifier|public
name|String
name|getSecretKey
parameter_list|()
block|{
return|return
name|secretKey
return|;
block|}
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|applicationName
return|;
block|}
specifier|public
name|void
name|setApplicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
specifier|public
name|String
name|getApplicationURI
parameter_list|()
block|{
return|return
name|applicationURI
return|;
block|}
specifier|public
name|void
name|setApplicationURI
parameter_list|(
name|String
name|applicationURI
parameter_list|)
block|{
name|this
operator|.
name|applicationURI
operator|=
name|applicationURI
expr_stmt|;
block|}
specifier|public
name|String
name|getLoginName
parameter_list|()
block|{
return|return
name|loginName
operator|==
literal|null
condition|?
name|consumerKey
else|:
name|loginName
return|;
block|}
specifier|public
name|void
name|setLoginName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|loginName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getUris
parameter_list|()
block|{
return|return
name|uris
return|;
block|}
specifier|public
name|void
name|setUris
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|uris
parameter_list|)
block|{
name|this
operator|.
name|uris
operator|=
name|uris
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getScopes
parameter_list|()
block|{
return|return
name|scopes
return|;
block|}
specifier|public
name|void
name|setScopes
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|scopes
parameter_list|)
block|{
name|this
operator|.
name|scopes
operator|=
name|scopes
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Client
name|that
init|=
operator|(
name|Client
operator|)
name|o
decl_stmt|;
if|if
condition|(
operator|!
name|consumerKey
operator|.
name|equals
argument_list|(
name|that
operator|.
name|consumerKey
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|secretKey
operator|.
name|equals
argument_list|(
name|that
operator|.
name|secretKey
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|consumerKey
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|secretKey
operator|.
name|hashCode
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

