begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|data
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|Token
block|{
specifier|protected
name|String
name|tokenString
decl_stmt|;
specifier|protected
name|String
name|tokenSecret
decl_stmt|;
specifier|protected
name|long
name|issuedAt
init|=
operator|-
literal|1
decl_stmt|;
specifier|protected
name|long
name|lifetime
init|=
operator|-
literal|1
decl_stmt|;
specifier|protected
name|Client
name|client
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|scopes
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|uris
decl_stmt|;
specifier|protected
name|Token
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|tokenString
parameter_list|,
name|String
name|tokenSecret
parameter_list|,
name|long
name|lifetime
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|tokenString
operator|=
name|tokenString
expr_stmt|;
name|this
operator|.
name|tokenSecret
operator|=
name|tokenSecret
expr_stmt|;
name|initTokenLifeTime
argument_list|(
name|lifetime
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|Token
parameter_list|(
name|Client
name|client
parameter_list|,
name|String
name|tokenString
parameter_list|,
name|String
name|tokenSecret
parameter_list|)
block|{
name|this
argument_list|(
name|client
argument_list|,
name|tokenString
argument_list|,
name|tokenSecret
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initTokenLifeTime
parameter_list|(
name|Long
name|lifetm
parameter_list|)
block|{
name|this
operator|.
name|lifetime
operator|=
name|lifetm
expr_stmt|;
name|issuedAt
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
expr_stmt|;
block|}
specifier|public
name|Client
name|getClient
parameter_list|()
block|{
return|return
name|client
return|;
block|}
specifier|public
name|String
name|getTokenString
parameter_list|()
block|{
return|return
name|tokenString
return|;
block|}
specifier|public
name|String
name|getTokenSecret
parameter_list|()
block|{
return|return
name|tokenSecret
return|;
block|}
specifier|public
name|long
name|getIssuedAt
parameter_list|()
block|{
return|return
name|issuedAt
return|;
block|}
specifier|public
name|long
name|getLifetime
parameter_list|()
block|{
return|return
name|lifetime
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getScopes
parameter_list|()
block|{
return|return
name|scopes
operator|==
literal|null
operator|||
name|scopes
operator|.
name|isEmpty
argument_list|()
condition|?
name|client
operator|.
name|getScopes
argument_list|()
else|:
name|scopes
return|;
block|}
specifier|public
name|void
name|setScopes
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|scopes
parameter_list|)
block|{
name|this
operator|.
name|scopes
operator|=
name|scopes
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getUris
parameter_list|()
block|{
return|return
name|uris
operator|==
literal|null
operator|||
name|uris
operator|.
name|isEmpty
argument_list|()
condition|?
name|client
operator|.
name|getUris
argument_list|()
else|:
name|uris
return|;
block|}
specifier|public
name|void
name|setUris
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|uris
parameter_list|)
block|{
name|this
operator|.
name|uris
operator|=
name|uris
expr_stmt|;
block|}
block|}
end_class

end_unit

