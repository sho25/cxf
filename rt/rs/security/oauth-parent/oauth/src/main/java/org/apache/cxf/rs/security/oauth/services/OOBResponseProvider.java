begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Form
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|FormEncodingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|utils
operator|.
name|OAuthConstants
import|;
end_import

begin_class
annotation|@
name|Produces
argument_list|(
block|{
literal|"application/x-www-form-urlencoded"
block|}
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
literal|"application/x-www-form-urlencoded"
block|}
argument_list|)
annotation|@
name|Provider
specifier|public
class|class
name|OOBResponseProvider
implements|implements
name|MessageBodyReader
argument_list|<
name|OOBAuthorizationResponse
argument_list|>
implements|,
name|MessageBodyWriter
argument_list|<
name|OOBAuthorizationResponse
argument_list|>
block|{
specifier|private
name|FormEncodingProvider
argument_list|<
name|Form
argument_list|>
name|formProvider
init|=
operator|new
name|FormEncodingProvider
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
return|return
name|OOBAuthorizationResponse
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|OOBAuthorizationResponse
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|OOBAuthorizationResponse
argument_list|>
name|clazz
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mt
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
block|{
name|Form
name|form
init|=
name|formProvider
operator|.
name|readFrom
argument_list|(
name|Form
operator|.
name|class
argument_list|,
name|Form
operator|.
name|class
argument_list|,
name|annotations
argument_list|,
name|mt
argument_list|,
name|headers
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|data
init|=
name|form
operator|.
name|asMap
argument_list|()
decl_stmt|;
name|OOBAuthorizationResponse
name|resp
init|=
operator|new
name|OOBAuthorizationResponse
argument_list|()
decl_stmt|;
name|resp
operator|.
name|setRequestToken
argument_list|(
name|data
operator|.
name|getFirst
argument_list|(
name|OAuth
operator|.
name|OAUTH_TOKEN
argument_list|)
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setVerifier
argument_list|(
name|data
operator|.
name|getFirst
argument_list|(
name|OAuth
operator|.
name|OAUTH_VERIFIER
argument_list|)
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setState
argument_list|(
name|data
operator|.
name|getFirst
argument_list|(
name|OAuthConstants
operator|.
name|X_OAUTH_STATE
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|resp
return|;
block|}
specifier|public
name|long
name|getSize
parameter_list|(
name|OOBAuthorizationResponse
name|t
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mediaType
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|boolean
name|isWriteable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|Annotation
index|[]
name|annotations
parameter_list|,
name|MediaType
name|mt
parameter_list|)
block|{
return|return
name|OOBAuthorizationResponse
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|OOBAuthorizationResponse
name|obj
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|c
parameter_list|,
name|Type
name|t
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|,
name|OutputStream
name|os
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
name|Form
name|form
init|=
operator|new
name|Form
argument_list|(
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|form
operator|.
name|param
argument_list|(
name|OAuth
operator|.
name|OAUTH_VERIFIER
argument_list|,
name|obj
operator|.
name|getVerifier
argument_list|()
argument_list|)
expr_stmt|;
name|form
operator|.
name|param
argument_list|(
name|OAuth
operator|.
name|OAUTH_TOKEN
argument_list|,
name|obj
operator|.
name|getRequestToken
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|obj
operator|.
name|getState
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|form
operator|.
name|param
argument_list|(
name|OAuthConstants
operator|.
name|X_OAUTH_STATE
argument_list|,
name|obj
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|formProvider
operator|.
name|writeTo
argument_list|(
name|form
argument_list|,
name|Form
operator|.
name|class
argument_list|,
name|Form
operator|.
name|class
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|,
name|headers
argument_list|,
name|os
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

