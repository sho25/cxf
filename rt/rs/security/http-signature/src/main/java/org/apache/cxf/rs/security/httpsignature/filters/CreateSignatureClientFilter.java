begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|filters
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Priorities
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_comment
comment|/**  * RS CXF client Filter which signs outgoing messages. It does not create a digest header  */
end_comment

begin_class
annotation|@
name|Provider
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|HEADER_DECORATOR
argument_list|)
specifier|public
class|class
name|CreateSignatureClientFilter
extends|extends
name|AbstractSignatureOutFilter
implements|implements
name|ClientRequestFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|requestContext
parameter_list|)
block|{
if|if
condition|(
name|shouldSign
argument_list|(
name|requestContext
argument_list|)
condition|)
block|{
name|performSignature
argument_list|(
name|requestContext
operator|.
name|getHeaders
argument_list|()
argument_list|,
name|requestContext
operator|.
name|getUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|requestContext
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|shouldSign
parameter_list|(
name|ClientRequestContext
name|clientRequestContext
parameter_list|)
block|{
return|return
name|clientRequestContext
operator|.
name|getEntity
argument_list|()
operator|==
literal|null
return|;
block|}
block|}
end_class

end_unit

