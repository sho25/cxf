begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|crypto
operator|.
name|spec
operator|.
name|SecretKeySpec
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tomitribe
operator|.
name|auth
operator|.
name|signatures
operator|.
name|Signature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tomitribe
operator|.
name|auth
operator|.
name|signatures
operator|.
name|Signer
import|;
end_import

begin_class
annotation|@
name|Provider
annotation|@
name|PreMatching
specifier|public
class|class
name|HttpSignatureFilter
implements|implements
name|ContainerRequestFilter
implements|,
name|ContainerResponseFilter
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Key
argument_list|>
name|keys
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|Signature
name|signature
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|request
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
name|keys
operator|.
name|get
argument_list|(
name|signature
operator|.
name|getKeyId
argument_list|()
argument_list|)
argument_list|,
name|signature
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|mapHeaders
argument_list|(
name|request
operator|.
name|getHeaders
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Signature
name|signedSignature
init|=
name|signer
operator|.
name|sign
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
name|request
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|request
operator|.
name|getHeaders
argument_list|()
operator|.
name|putSingle
argument_list|(
literal|"Authorization"
argument_list|,
name|signedSignature
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|request
parameter_list|,
name|ContainerResponseContext
name|response
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Get first Authorization header if there are multiple?
specifier|final
name|Signature
name|headerSignature
init|=
name|Signature
operator|.
name|fromString
argument_list|(
operator|(
name|request
operator|.
name|getHeaders
argument_list|()
operator|.
name|get
argument_list|(
literal|"Authorization"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
name|keys
operator|.
name|get
argument_list|(
name|headerSignature
operator|.
name|getKeyId
argument_list|()
argument_list|)
argument_list|,
name|headerSignature
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|mapHeaders
argument_list|(
name|request
operator|.
name|getHeaders
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|expectedSignature
init|=
name|signer
operator|.
name|sign
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
name|request
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|headers
argument_list|)
operator|.
name|getSignature
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|expectedSignature
operator|.
name|equals
argument_list|(
name|headerSignature
operator|.
name|getSignature
argument_list|()
argument_list|)
condition|)
block|{
comment|// Header has been modified, react with abort, throw exception or something
block|}
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mapHeaders
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|multivaluedMap
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mappedStrings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|multivaluedMap
operator|.
name|keySet
argument_list|()
control|)
block|{
name|mappedStrings
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|concatValues
argument_list|(
name|multivaluedMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|mappedStrings
return|;
block|}
specifier|private
name|String
name|concatValues
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|values
operator|.
name|size
argument_list|()
condition|;
name|x
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|values
operator|.
name|get
argument_list|(
name|x
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|x
operator|!=
name|values
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setKeys
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Key
argument_list|>
name|keys
parameter_list|)
block|{
name|this
operator|.
name|keys
operator|=
name|keys
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Key
argument_list|>
name|getKeys
parameter_list|()
block|{
return|return
name|keys
return|;
block|}
specifier|public
name|void
name|setSignature
parameter_list|(
name|String
name|authorization
parameter_list|)
block|{
name|signature
operator|=
name|Signature
operator|.
name|fromString
argument_list|(
name|authorization
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSignature
parameter_list|(
name|Signature
name|signature
parameter_list|)
block|{
name|this
operator|.
name|signature
operator|=
name|signature
expr_stmt|;
block|}
specifier|public
name|Signature
name|getSignature
parameter_list|()
block|{
return|return
name|signature
return|;
block|}
block|}
end_class

end_unit

