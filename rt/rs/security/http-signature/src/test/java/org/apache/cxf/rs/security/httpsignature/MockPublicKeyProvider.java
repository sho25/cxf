begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PublicKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|spec
operator|.
name|InvalidKeySpecException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|spec
operator|.
name|X509EncodedKeySpec
import|;
end_import

begin_class
specifier|public
class|class
name|MockPublicKeyProvider
implements|implements
name|PublicKeyProvider
block|{
annotation|@
name|Override
specifier|public
name|PublicKey
name|getKey
parameter_list|(
name|String
name|keyId
parameter_list|)
block|{
return|return
name|getPublicKey
argument_list|(
name|keyId
argument_list|)
return|;
block|}
specifier|private
name|PublicKey
name|getPublicKey
parameter_list|(
name|String
name|keyId
parameter_list|)
block|{
name|String
name|publicKey
init|=
literal|"-----BEGIN PUBLIC KEY-----\n"
operator|+
literal|"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzqvSq5MPAX11nuh5zQqj\n"
operator|+
literal|"SZBDR9ErERCF+AoXs3uRJCroNIlaAuGZ3sXOYZCVCGkt28TMbH6Pnt8z9YfrH2Fl\n"
operator|+
literal|"SQWn6UDa+Dk7AjCtNLeOHInE7tlWuXZu4xPR2XgiKd90ky1xIbJL5PzAjzYLjTjE\n"
operator|+
literal|"Wi6uqvNexi/a8/BF85DP/LJVa5pbCzD3rSlIFNjLMcohs4qhWby7ZCPSUjGh6PMf\n"
operator|+
literal|"mhcBQtlScrqwhSPJeCIQ2eAMcZVDFRv+MVOzCIGrNan3/X8WGQMWJQQ+CXj1mgH1\n"
operator|+
literal|"t3mZy1a8WGzyBqhWzblsarO/tUEoOpd1DW9iX1JtJtLZmfNmXR6R3NUoiMaZoFeN\n"
operator|+
literal|"qQIDAQAB\n"
operator|+
literal|"-----END PUBLIC KEY-----\n"
decl_stmt|;
try|try
block|{
return|return
name|KeyFactory
operator|.
name|getInstance
argument_list|(
literal|"RSA"
argument_list|)
operator|.
name|generatePublic
argument_list|(
operator|new
name|X509EncodedKeySpec
argument_list|(
name|SignatureHeaderUtils
operator|.
name|loadPEM
argument_list|(
name|publicKey
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
decl||
name|InvalidKeySpecException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

