begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|DifferentAlgorithmsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|DifferentDigestsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|InvalidDataToVerifySignatureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|MissingSignatureHeaderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivateKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|spec
operator|.
name|InvalidKeySpecException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|spec
operator|.
name|PKCS8EncodedKeySpec
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author Fredrik Espedal  */
end_comment

begin_class
specifier|public
class|class
name|MessageVerifierTest
block|{
specifier|private
specifier|final
specifier|static
name|String
name|digestAlgorithm
init|=
literal|"SHA-256"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|keyId
init|=
literal|"testVerifier"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|messageBody
init|=
literal|"Hello"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|method
init|=
literal|"Get"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|signatureAlgorithm
init|=
literal|"rsa-sha256"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|uri
init|=
literal|"/test/signature"
decl_stmt|;
specifier|private
specifier|static
name|PrivateKey
name|privateKey
decl_stmt|;
specifier|private
specifier|static
name|MessageSigner
name|messageSigner
decl_stmt|;
specifier|private
specifier|static
name|MessageVerifier
name|messageVerifier
decl_stmt|;
specifier|private
specifier|static
name|String
name|privateKeyString
init|=
literal|"-----BEGIN PRIVATE KEY-----\n"
operator|+
literal|"MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDOq9Krkw8BfXWe\n"
operator|+
literal|"6HnNCqNJkENH0SsREIX4Cheze5EkKug0iVoC4Znexc5hkJUIaS3bxMxsfo+e3zP1\n"
operator|+
literal|"h+sfYWVJBafpQNr4OTsCMK00t44cicTu2Va5dm7jE9HZeCIp33STLXEhskvk/MCP\n"
operator|+
literal|"NguNOMRaLq6q817GL9rz8EXzkM/8slVrmlsLMPetKUgU2MsxyiGziqFZvLtkI9JS\n"
operator|+
literal|"MaHo8x+aFwFC2VJyurCFI8l4IhDZ4AxxlUMVG/4xU7MIgas1qff9fxYZAxYlBD4J\n"
operator|+
literal|"ePWaAfW3eZnLVrxYbPIGqFbNuWxqs7+1QSg6l3UNb2JfUm0m0tmZ82ZdHpHc1SiI\n"
operator|+
literal|"xpmgV42pAgMBAAECggEADxolMd50KUK2tp78T4xodDazg+r3/646a+6o3re32nG8\n"
operator|+
literal|"OCKVTkKYENxZgW2kRlIRRM7ztTXmXtCmplmBR/DBCv370CKqHZtpAXb3ITQMkW9L\n"
operator|+
literal|"0bxWBwVtgvBu1DpgHLk0dpDKhJDX1OrXU1+6pl4wkvp4TwursEXM9ShopCy/1hI8\n"
operator|+
literal|"Z7pwN7BxZYwozRdsKGbwVZc0ymjY2oZ7n2Gl0aGAUj5zHUoWASKHU1BUmKIMPL4x\n"
operator|+
literal|"ddrczcRB8bgzW7NyxoTBOzTcW6ve1TvWdll/L4iJm5/bYEOWhNBGWbhTF3TbRZJb\n"
operator|+
literal|"pT1OQudC7pj6aEeVJqa4mm0Gw6DWAJJW9YnGAqXGgQKBgQDnQ53LPZlrIn4uHoxW\n"
operator|+
literal|"gGvmRdOESin85JnNiN110HeOp4PThutqEo8+T+P5xPCHgG84KHFFrx/cr4e2M7Jt\n"
operator|+
literal|"WyB/U09/fItQefapRXUs3zLu3VGAl4jZhafVFq8OZkJ8FfdfzUE4dvNiFnJxovEW\n"
operator|+
literal|"arldGG7deVDcZ5+zyvvvxkf58QKBgQDkxs/t0zkWgv6UruxUM3l0i2hn+RZx+6VF\n"
operator|+
literal|"9NPQZ2t6gn2Ch2zL0YVjP7EJHQ4aLCQAmRffpK9v7Y5ZUK1TPN4NRipEGbPiDDMt\n"
operator|+
literal|"Q+Ihu2lYoYWlaRoEzL2RJpHNafrUMLn1H31RM/olkzDYga+umok/uAJOX8n8lfV+\n"
operator|+
literal|"lXJg6mBXOQKBgQDYMypNWuUWd0SnMP/Zzm0Q9a5sOjlOpxfyQkVnYuCiiJCBK9zh\n"
operator|+
literal|"aUBo7J8gXbDPvI49XfGnR7Ttx1uERohEG7Eh12y2rmQ/dAXY8Yo9zNv82wLayM+z\n"
operator|+
literal|"K3RfjblSKN92ycJd2bFjbDDUPk/3VHE2l8d69OCQRF4H7wgqOVWWLzQSwQKBgHhQ\n"
operator|+
literal|"XlWyudku9vf2rm7xyzQRhMz5YGZ9c0PBKAv397wsGBmnYv4lqEKz4kTqtNnq0NxH\n"
operator|+
literal|"pxiEoYb5pd0u4phd8GGGvv+ljMaap+dsReZ7i0GDYKfHCFnx2tgVMqSW0cT6AzH4\n"
operator|+
literal|"Z41nCmzsZcnXGi93MisCeKQDGFTwAHWb3tU9LYFxAoGBAII01I9L8ATVfeDRrGyk\n"
operator|+
literal|"aQTVZil9AkA45NvGc9RSk0gSn+z4gxzfGiF7BqWV7Hap9lHvNuiPtogIXG/on2I3\n"
operator|+
literal|"KmkLyXoj0H20pTkOj2AgpFr7KVQQO920jVV3DMbB9oPojQN/6jLkmgZPL+Xtrpwy\n"
operator|+
literal|"61Msz1IuZBY+VBoJ+pBKEzRe\n"
operator|+
literal|"-----END PRIVATE KEY-----\n"
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
block|{
try|try
block|{
name|privateKey
operator|=
name|KeyFactory
operator|.
name|getInstance
argument_list|(
literal|"RSA"
argument_list|)
operator|.
name|generatePrivate
argument_list|(
operator|new
name|PKCS8EncodedKeySpec
argument_list|(
name|SignatureHeaderUtils
operator|.
name|loadPEM
argument_list|(
name|privateKeyString
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidKeySpecException
decl||
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|messageVerifier
operator|=
operator|new
name|MessageVerifier
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|setPublicKeyProvider
argument_list|(
operator|new
name|MockPublicKeyProvider
argument_list|()
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|setExceptionHandler
argument_list|(
operator|new
name|MockExceptionHandler
argument_list|()
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|setSecurityProvider
argument_list|(
operator|new
name|MockSecurityProvider
argument_list|()
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|setAlgorithmProvider
argument_list|(
operator|new
name|MockAlgorithmProvider
argument_list|()
argument_list|)
expr_stmt|;
name|messageSigner
operator|=
operator|new
name|MessageSigner
argument_list|(
name|signatureAlgorithm
argument_list|,
name|digestAlgorithm
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|validUnalteredRequest
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
init|=
name|createMockHeaders
argument_list|()
decl_stmt|;
try|try
block|{
name|createDigestHeader
argument_list|(
name|messageBody
argument_list|,
name|headers
argument_list|,
name|digestAlgorithm
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|createAndAddSignature
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|verifyMessage
argument_list|(
name|headers
argument_list|,
name|messageBody
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MissingSignatureHeaderException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|missingSignatureHeaderFails
parameter_list|()
block|{
try|try
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
init|=
name|createMockHeaders
argument_list|()
decl_stmt|;
name|createDigestHeader
argument_list|(
name|messageBody
argument_list|,
name|headers
argument_list|,
name|digestAlgorithm
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|verifyMessage
argument_list|(
name|headers
argument_list|,
name|messageBody
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidDataToVerifySignatureException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|alteredSignatureFails
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
init|=
name|createMockHeaders
argument_list|()
decl_stmt|;
name|createAndAddSignature
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|String
name|signature
init|=
name|headers
operator|.
name|get
argument_list|(
literal|"Signature"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|signature
operator|=
name|signature
operator|.
name|replaceFirst
argument_list|(
literal|"signature=\"[\\w][\\w]"
argument_list|,
literal|"signature=\"AA"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|replace
argument_list|(
literal|"Signature"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signature
argument_list|)
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|verifyMessage
argument_list|(
name|headers
argument_list|,
name|messageBody
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|DifferentAlgorithmsException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|alteredAlgorithmFails
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
init|=
name|createMockHeaders
argument_list|()
decl_stmt|;
name|createAndAddSignature
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|String
name|signature
init|=
name|headers
operator|.
name|get
argument_list|(
literal|"Signature"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|signature
operator|=
name|signature
operator|.
name|replaceFirst
argument_list|(
literal|"algorithm=\"rsa-sha256"
argument_list|,
literal|"algorithm=\"hmac-sha256"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|replace
argument_list|(
literal|"Signature"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signature
argument_list|)
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|verifyMessage
argument_list|(
name|headers
argument_list|,
name|messageBody
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|DifferentDigestsException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|alteredDigestFails
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
init|=
name|createMockHeaders
argument_list|()
decl_stmt|;
name|createAndAddSignature
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|String
name|digest
init|=
literal|"SHA-256=HEYHEYHEYHEY"
decl_stmt|;
name|headers
operator|.
name|replace
argument_list|(
literal|"Digest"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digest
argument_list|)
argument_list|)
expr_stmt|;
name|messageVerifier
operator|.
name|verifyMessage
argument_list|(
name|headers
argument_list|,
name|messageBody
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|createAndAddSignature
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
parameter_list|)
block|{
try|try
block|{
name|messageSigner
operator|.
name|sign
argument_list|(
name|headers
argument_list|,
name|messageBody
argument_list|,
name|privateKey
argument_list|,
name|keyId
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|createMockHeaders
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|newHeader
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|newHeader
operator|.
name|put
argument_list|(
literal|"(request-target)"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|method
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|" "
operator|+
name|uri
argument_list|)
argument_list|)
expr_stmt|;
name|newHeader
operator|.
name|put
argument_list|(
literal|"Host"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"example.org"
argument_list|)
argument_list|)
expr_stmt|;
name|newHeader
operator|.
name|put
argument_list|(
literal|"Date"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"Tue, 07 Jun 2014 20:51:35 GMT"
argument_list|)
argument_list|)
expr_stmt|;
name|newHeader
operator|.
name|put
argument_list|(
literal|"Accept"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|newHeader
operator|.
name|put
argument_list|(
literal|"Content-Length"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"18"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|newHeader
return|;
block|}
specifier|private
specifier|static
name|void
name|createDigestHeader
parameter_list|(
name|String
name|messageBody
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headers
parameter_list|,
name|String
name|digestAlgorithm
parameter_list|)
throws|throws
name|NoSuchAlgorithmException
block|{
name|String
name|digest
init|=
name|SignatureHeaderUtils
operator|.
name|createDigestHeader
argument_list|(
name|messageBody
argument_list|,
name|digestAlgorithm
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"Digest"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digest
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

