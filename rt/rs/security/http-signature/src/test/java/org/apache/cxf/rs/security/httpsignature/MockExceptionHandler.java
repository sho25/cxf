begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|DifferentAlgorithmsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|DifferentDigestsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|DigestFailureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|FailedToVerifySignatureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|InvalidDataToVerifySignatureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|InvalidSignatureHeaderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|MissingDigestException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|MissingSignatureHeaderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|exception
operator|.
name|MultipleSignatureHeaderException
import|;
end_import

begin_class
specifier|public
class|class
name|MockExceptionHandler
implements|implements
name|ExceptionHandler
block|{
annotation|@
name|Override
specifier|public
name|RuntimeException
name|handle
parameter_list|(
name|SignatureException
name|exception
parameter_list|,
name|SignatureExceptionType
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|INVALID_SIGNATURE_HEADER
case|:
return|return
operator|new
name|InvalidSignatureHeaderException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|MISSING_SIGNATURE_HEADER
case|:
return|return
operator|new
name|MissingSignatureHeaderException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|FAILED_TO_VERIFY_SIGNATURE
case|:
return|return
operator|new
name|FailedToVerifySignatureException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|INVALID_DATA_TO_VERIFY_SIGNATURE
case|:
return|return
operator|new
name|InvalidDataToVerifySignatureException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|DIGEST_FAILURE
case|:
return|return
operator|new
name|DigestFailureException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|DIFFERENT_DIGESTS
case|:
return|return
operator|new
name|DifferentDigestsException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|MISSING_DIGEST
case|:
return|return
operator|new
name|MissingDigestException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|MULTIPLE_SIGNATURE_HEADERS
case|:
return|return
operator|new
name|MultipleSignatureHeaderException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
case|case
name|DIFFERENT_ALGORITHMS
case|:
return|return
operator|new
name|DifferentAlgorithmsException
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
return|;
default|default:
return|return
operator|new
name|SignatureException
argument_list|(
literal|"Unknown exception type"
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

