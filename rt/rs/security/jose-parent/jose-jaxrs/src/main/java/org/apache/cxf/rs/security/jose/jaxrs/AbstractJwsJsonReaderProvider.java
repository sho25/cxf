begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsJsonConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsJsonSignatureEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsSignatureVerifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsUtils
import|;
end_import

begin_class
specifier|public
class|class
name|AbstractJwsJsonReaderProvider
block|{
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AbstractJwsJsonReaderProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|protectedHttpHeaders
decl_stmt|;
specifier|private
name|boolean
name|validateHttpHeaders
decl_stmt|;
specifier|private
name|JwsSignatureVerifier
name|sigVerifier
decl_stmt|;
specifier|private
name|String
name|defaultMediaType
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entryProps
decl_stmt|;
specifier|private
name|boolean
name|checkEmptyStream
decl_stmt|;
specifier|public
name|void
name|setSignatureVerifier
parameter_list|(
name|JwsSignatureVerifier
name|signatureVerifier
parameter_list|)
block|{
name|this
operator|.
name|sigVerifier
operator|=
name|signatureVerifier
expr_stmt|;
block|}
specifier|protected
name|JwsSignatureVerifier
name|getInitializedSigVerifier
parameter_list|()
block|{
if|if
condition|(
name|sigVerifier
operator|!=
literal|null
condition|)
block|{
return|return
name|sigVerifier
return|;
block|}
return|return
name|JwsUtils
operator|.
name|loadSignatureVerifier
argument_list|(
literal|null
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
name|String
name|getDefaultMediaType
parameter_list|()
block|{
return|return
name|defaultMediaType
return|;
block|}
specifier|public
name|void
name|setDefaultMediaType
parameter_list|(
name|String
name|defaultMediaType
parameter_list|)
block|{
name|this
operator|.
name|defaultMediaType
operator|=
name|defaultMediaType
expr_stmt|;
block|}
specifier|protected
name|void
name|validate
parameter_list|(
name|JwsJsonConsumer
name|c
parameter_list|,
name|JwsSignatureVerifier
name|theSigVerifier
parameter_list|)
throws|throws
name|JwsException
block|{
name|List
argument_list|<
name|JwsJsonSignatureEntry
argument_list|>
name|remaining
init|=
name|c
operator|.
name|verifyAndGetNonValidated
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|theSigVerifier
argument_list|)
argument_list|,
name|entryProps
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|remaining
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|JAXRSUtils
operator|.
name|getCurrentMessage
argument_list|()
operator|.
name|put
argument_list|(
literal|"jws.json.remaining.entries"
argument_list|,
name|remaining
argument_list|)
expr_stmt|;
block|}
name|JAXRSUtils
operator|.
name|getCurrentMessage
argument_list|()
operator|.
name|put
argument_list|(
name|JwsJsonConsumer
operator|.
name|class
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getEntryProps
parameter_list|()
block|{
return|return
name|entryProps
return|;
block|}
specifier|public
name|void
name|setEntryProps
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entryProps
parameter_list|)
block|{
name|this
operator|.
name|entryProps
operator|=
name|entryProps
expr_stmt|;
block|}
specifier|public
name|void
name|setValidateHttpHeaders
parameter_list|(
name|boolean
name|validateHttpHeaders
parameter_list|)
block|{
name|this
operator|.
name|validateHttpHeaders
operator|=
name|validateHttpHeaders
expr_stmt|;
block|}
specifier|public
name|boolean
name|isValidateHttpHeaders
parameter_list|()
block|{
return|return
name|validateHttpHeaders
return|;
block|}
specifier|protected
name|void
name|validateHttpHeadersIfNeeded
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|httpHeaders
parameter_list|,
name|JwsHeaders
name|jwsHeaders
parameter_list|)
block|{
name|JoseJaxrsUtils
operator|.
name|validateHttpHeaders
argument_list|(
name|httpHeaders
argument_list|,
name|jwsHeaders
argument_list|,
name|protectedHttpHeaders
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setProtectedHttpHeaders
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|protectedHttpHeaders
parameter_list|)
block|{
name|this
operator|.
name|protectedHttpHeaders
operator|=
name|protectedHttpHeaders
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCheckEmptyStream
parameter_list|()
block|{
return|return
name|checkEmptyStream
return|;
block|}
specifier|public
name|void
name|setCheckEmptyStream
parameter_list|(
name|boolean
name|checkEmptyStream
parameter_list|)
block|{
name|this
operator|.
name|checkEmptyStream
operator|=
name|checkEmptyStream
expr_stmt|;
block|}
block|}
end_class

end_unit

