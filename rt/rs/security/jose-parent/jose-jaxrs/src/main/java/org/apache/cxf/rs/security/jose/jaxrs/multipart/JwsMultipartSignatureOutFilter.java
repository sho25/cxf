begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
operator|.
name|multipart
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
operator|.
name|ByteDataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|Attachment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|MultipartOutputFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsSignature
import|;
end_import

begin_class
specifier|public
class|class
name|JwsMultipartSignatureOutFilter
implements|implements
name|MultipartOutputFilter
block|{
specifier|private
name|JwsSignature
name|sig
decl_stmt|;
specifier|public
name|JwsMultipartSignatureOutFilter
parameter_list|(
name|JwsSignature
name|sig
parameter_list|)
block|{
name|this
operator|.
name|sig
operator|=
name|sig
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|List
argument_list|<
name|Attachment
argument_list|>
name|parts
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parts
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|Attachment
name|dataPart
init|=
name|parts
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|DataHandler
name|handler
init|=
name|dataPart
operator|.
name|getDataHandler
argument_list|()
decl_stmt|;
name|dataPart
operator|.
name|setDataHandler
argument_list|(
operator|new
name|JwsSignatureDataHandler
argument_list|(
name|handler
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|JwsSignatureDataHandler
extends|extends
name|DataHandler
block|{
specifier|private
name|DataHandler
name|handler
decl_stmt|;
name|JwsSignatureDataHandler
parameter_list|(
name|DataHandler
name|handler
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|ByteDataSource
argument_list|(
literal|"1"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|handler
operator|=
name|handler
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|handler
operator|.
name|getContentType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|OutputStream
name|os
parameter_list|)
block|{
name|JwsOutputStream
name|jwsOutStream
init|=
operator|new
name|JwsOutputStream
argument_list|(
name|os
argument_list|,
name|sig
argument_list|,
literal|false
argument_list|)
decl_stmt|;
try|try
block|{
name|handler
operator|.
name|writeTo
argument_list|(
name|jwsOutStream
argument_list|)
expr_stmt|;
name|jwsOutStream
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|JwsException
argument_list|(
name|JwsException
operator|.
name|Error
operator|.
name|INVALID_SIGNATURE
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

