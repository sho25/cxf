begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|common
operator|.
name|JoseException
import|;
end_import

begin_class
specifier|public
class|class
name|JwtCookieAuthenticationFilter
extends|extends
name|AbstractJwtAuthenticationFilter
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_COOKIE_NAME
init|=
literal|"access_token"
decl_stmt|;
specifier|private
name|String
name|cookieName
init|=
name|DEFAULT_COOKIE_NAME
decl_stmt|;
specifier|protected
name|String
name|getEncodedJwtToken
parameter_list|(
name|ContainerRequestContext
name|requestContext
parameter_list|)
block|{
name|Cookie
name|cookie
init|=
name|requestContext
operator|.
name|getCookies
argument_list|()
operator|.
name|get
argument_list|(
name|cookieName
argument_list|)
decl_stmt|;
if|if
condition|(
name|cookie
operator|==
literal|null
operator|||
name|cookie
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|JoseException
argument_list|(
literal|"JWT cookie is not available"
argument_list|)
throw|;
block|}
return|return
name|cookie
operator|.
name|getValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCookieName
parameter_list|(
name|String
name|cookieName
parameter_list|)
block|{
name|this
operator|.
name|cookieName
operator|=
name|cookieName
expr_stmt|;
block|}
block|}
end_class

end_unit

