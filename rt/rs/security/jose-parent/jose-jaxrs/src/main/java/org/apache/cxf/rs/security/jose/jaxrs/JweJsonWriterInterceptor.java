begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptorContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|common
operator|.
name|JoseConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwe
operator|.
name|JweEncryptionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwe
operator|.
name|JweHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwe
operator|.
name|JweJsonProducer
import|;
end_import

begin_class
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|JWE_WRITE_PRIORITY
argument_list|)
specifier|public
class|class
name|JweJsonWriterInterceptor
extends|extends
name|AbstractJweJsonWriterProvider
implements|implements
name|WriterInterceptor
block|{
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|protectedHttpHeaders
decl_stmt|;
specifier|private
name|boolean
name|protectHttpHeaders
decl_stmt|;
specifier|private
name|boolean
name|contentTypeRequired
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|useJweOutputStream
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|aroundWriteTo
parameter_list|(
name|WriterInterceptorContext
name|ctx
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
if|if
condition|(
name|ctx
operator|.
name|getEntity
argument_list|()
operator|==
literal|null
condition|)
block|{
name|ctx
operator|.
name|proceed
argument_list|()
expr_stmt|;
return|return;
block|}
name|OutputStream
name|actualOs
init|=
name|ctx
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|JweHeaders
name|sharedProtectedHeaders
init|=
operator|new
name|JweHeaders
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|propLocs
init|=
name|getPropertyLocations
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|JweHeaders
argument_list|>
name|perRecipientUnprotectedHeaders
init|=
operator|new
name|ArrayList
argument_list|<
name|JweHeaders
argument_list|>
argument_list|(
name|propLocs
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|propLocs
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|perRecipientUnprotectedHeaders
operator|.
name|add
argument_list|(
operator|new
name|JweHeaders
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|JweEncryptionProvider
argument_list|>
name|providers
init|=
name|getInitializedEncryptionProviders
argument_list|(
name|propLocs
argument_list|,
name|sharedProtectedHeaders
argument_list|,
name|perRecipientUnprotectedHeaders
argument_list|)
decl_stmt|;
name|String
name|ctString
init|=
literal|null
decl_stmt|;
name|MediaType
name|contentMediaType
init|=
name|ctx
operator|.
name|getMediaType
argument_list|()
decl_stmt|;
if|if
condition|(
name|contentTypeRequired
operator|&&
name|contentMediaType
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"application"
operator|.
name|equals
argument_list|(
name|contentMediaType
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|ctString
operator|=
name|contentMediaType
operator|.
name|getSubtype
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|ctString
operator|=
name|JAXRSUtils
operator|.
name|mediaTypeToString
argument_list|(
name|contentMediaType
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|ctString
operator|!=
literal|null
condition|)
block|{
name|sharedProtectedHeaders
operator|.
name|setContentType
argument_list|(
name|ctString
argument_list|)
expr_stmt|;
block|}
name|protectHttpHeadersIfNeeded
argument_list|(
name|ctx
argument_list|,
name|sharedProtectedHeaders
argument_list|)
expr_stmt|;
if|if
condition|(
name|useJweOutputStream
condition|)
block|{
comment|//TODO
block|}
else|else
block|{
name|CachedOutputStream
name|cos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|ctx
operator|.
name|setOutputStream
argument_list|(
name|cos
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|proceed
argument_list|()
expr_stmt|;
name|JweJsonProducer
name|producer
init|=
operator|new
name|JweJsonProducer
argument_list|(
name|sharedProtectedHeaders
argument_list|,
name|cos
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|jweContent
init|=
name|producer
operator|.
name|encryptWith
argument_list|(
name|providers
argument_list|,
name|perRecipientUnprotectedHeaders
argument_list|)
decl_stmt|;
name|setJoseMediaType
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|StringUtils
operator|.
name|toBytesUTF8
argument_list|(
name|jweContent
argument_list|)
argument_list|)
argument_list|,
name|actualOs
argument_list|)
expr_stmt|;
name|actualOs
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|setJoseMediaType
parameter_list|(
name|WriterInterceptorContext
name|ctx
parameter_list|)
block|{
name|MediaType
name|joseMediaType
init|=
name|JAXRSUtils
operator|.
name|toMediaType
argument_list|(
name|JoseConstants
operator|.
name|MEDIA_TYPE_JOSE_JSON
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setMediaType
argument_list|(
name|joseMediaType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setUseJweOutputStream
parameter_list|(
name|boolean
name|useJweOutputStream
parameter_list|)
block|{
name|this
operator|.
name|useJweOutputStream
operator|=
name|useJweOutputStream
expr_stmt|;
block|}
specifier|protected
name|void
name|protectHttpHeadersIfNeeded
parameter_list|(
name|WriterInterceptorContext
name|ctx
parameter_list|,
name|JweHeaders
name|jweHeaders
parameter_list|)
block|{
if|if
condition|(
name|protectHttpHeaders
condition|)
block|{
name|JoseJaxrsUtils
operator|.
name|protectHttpHeaders
argument_list|(
name|ctx
operator|.
name|getHeaders
argument_list|()
argument_list|,
name|jweHeaders
argument_list|,
name|protectedHttpHeaders
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setProtectHttpHeaders
parameter_list|(
name|boolean
name|protectHttpHeaders
parameter_list|)
block|{
name|this
operator|.
name|protectHttpHeaders
operator|=
name|protectHttpHeaders
expr_stmt|;
block|}
specifier|public
name|void
name|setProtectedHttpHeaders
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|protectedHttpHeaders
parameter_list|)
block|{
name|this
operator|.
name|protectedHttpHeaders
operator|=
name|protectedHttpHeaders
expr_stmt|;
block|}
block|}
end_class

end_unit

