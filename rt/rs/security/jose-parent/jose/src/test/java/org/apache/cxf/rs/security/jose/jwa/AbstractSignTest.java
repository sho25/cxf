begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwa
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|support
operator|.
name|Serialization
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractSignTest
extends|extends
name|AbstractJwaTest
block|{
specifier|protected
specifier|final
name|void
name|test
parameter_list|(
name|String
name|keyType
parameter_list|,
name|String
name|signatureAlgorithm
parameter_list|,
name|Serialization
name|serialization
parameter_list|)
block|{
name|test
argument_list|(
name|keyType
argument_list|,
name|signatureAlgorithm
argument_list|,
name|serialization
argument_list|,
literal|"Live long and prosper."
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|final
name|void
name|test
parameter_list|(
name|String
name|keyType
parameter_list|,
name|String
name|signatureAlgorithm
parameter_list|,
name|Serialization
name|serialization
parameter_list|,
name|String
name|plainText
parameter_list|)
block|{
name|test
argument_list|(
name|keyType
argument_list|,
name|signatureAlgorithm
argument_list|,
name|serialization
argument_list|,
name|plainText
argument_list|,
literal|"/jwk/priKeys.jwks"
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|final
name|void
name|test
parameter_list|(
name|String
name|keyType
parameter_list|,
name|String
name|signatureAlgorithm
parameter_list|,
name|Serialization
name|serialization
parameter_list|,
name|String
name|plainText
parameter_list|,
name|String
name|jwksURI
parameter_list|)
block|{
name|sign
argument_list|(
name|keyType
argument_list|,
name|signatureAlgorithm
argument_list|,
name|serialization
argument_list|,
name|plainText
argument_list|,
name|loadResource
argument_list|(
name|jwksURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|void
name|sign
parameter_list|(
name|String
name|keyType
parameter_list|,
name|String
name|signatureAlgorithm
parameter_list|,
name|Serialization
name|serialization
parameter_list|,
name|String
name|plainText
parameter_list|,
name|String
name|jwksJson
parameter_list|)
function_decl|;
block|}
end_class

end_unit

