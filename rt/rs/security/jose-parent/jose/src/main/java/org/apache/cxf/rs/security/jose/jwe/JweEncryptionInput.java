begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwe
package|;
end_package

begin_class
specifier|public
class|class
name|JweEncryptionInput
block|{
specifier|private
name|JweHeaders
name|jweHeaders
decl_stmt|;
specifier|private
name|byte
index|[]
name|cek
decl_stmt|;
specifier|private
name|byte
index|[]
name|iv
decl_stmt|;
specifier|private
name|byte
index|[]
name|aad
decl_stmt|;
specifier|private
name|byte
index|[]
name|content
decl_stmt|;
specifier|private
name|boolean
name|contentEncryptionRequired
init|=
literal|true
decl_stmt|;
specifier|public
name|JweEncryptionInput
parameter_list|()
block|{      }
specifier|public
name|JweEncryptionInput
parameter_list|(
name|JweHeaders
name|jweHeaders
parameter_list|)
block|{
name|this
argument_list|(
name|jweHeaders
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JweEncryptionInput
parameter_list|(
name|JweHeaders
name|jweHeaders
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
block|{
name|this
argument_list|(
name|jweHeaders
argument_list|,
name|content
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JweEncryptionInput
parameter_list|(
name|JweHeaders
name|jweHeaders
parameter_list|,
name|byte
index|[]
name|content
parameter_list|,
name|byte
index|[]
name|aad
parameter_list|)
block|{
name|this
argument_list|(
name|jweHeaders
argument_list|,
name|content
argument_list|,
name|aad
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JweEncryptionInput
parameter_list|(
name|JweHeaders
name|jweHeaders
parameter_list|,
name|byte
index|[]
name|content
parameter_list|,
name|byte
index|[]
name|cek
parameter_list|,
name|byte
index|[]
name|iv
parameter_list|)
block|{
name|this
argument_list|(
name|jweHeaders
argument_list|,
name|content
argument_list|,
literal|null
argument_list|,
name|cek
argument_list|,
name|iv
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JweEncryptionInput
parameter_list|(
name|JweHeaders
name|jweHeaders
parameter_list|,
name|byte
index|[]
name|content
parameter_list|,
name|byte
index|[]
name|aad
parameter_list|,
name|byte
index|[]
name|cek
parameter_list|,
name|byte
index|[]
name|iv
parameter_list|)
block|{
name|this
operator|.
name|jweHeaders
operator|=
name|jweHeaders
expr_stmt|;
name|this
operator|.
name|content
operator|=
name|content
expr_stmt|;
name|this
operator|.
name|cek
operator|=
name|cek
expr_stmt|;
name|this
operator|.
name|iv
operator|=
name|iv
expr_stmt|;
name|this
operator|.
name|aad
operator|=
name|aad
expr_stmt|;
block|}
specifier|public
name|JweHeaders
name|getJweHeaders
parameter_list|()
block|{
return|return
name|jweHeaders
return|;
block|}
specifier|public
name|void
name|setJweHeaders
parameter_list|(
name|JweHeaders
name|jweHeaders
parameter_list|)
block|{
name|this
operator|.
name|jweHeaders
operator|=
name|jweHeaders
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getCek
parameter_list|()
block|{
return|return
name|cek
return|;
block|}
specifier|public
name|void
name|setCek
parameter_list|(
name|byte
index|[]
name|cek
parameter_list|)
block|{
name|this
operator|.
name|cek
operator|=
name|cek
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getIv
parameter_list|()
block|{
return|return
name|iv
return|;
block|}
specifier|public
name|void
name|setIv
parameter_list|(
name|byte
index|[]
name|iv
parameter_list|)
block|{
name|this
operator|.
name|iv
operator|=
name|iv
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getAad
parameter_list|()
block|{
return|return
name|aad
return|;
block|}
specifier|public
name|void
name|setAad
parameter_list|(
name|byte
index|[]
name|aad
parameter_list|)
block|{
name|this
operator|.
name|aad
operator|=
name|aad
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getContent
parameter_list|()
block|{
return|return
name|content
return|;
block|}
specifier|public
name|void
name|setContent
parameter_list|(
name|byte
index|[]
name|content
parameter_list|)
block|{
name|this
operator|.
name|content
operator|=
name|content
expr_stmt|;
block|}
specifier|public
name|boolean
name|isContentEncryptionRequired
parameter_list|()
block|{
return|return
name|contentEncryptionRequired
return|;
block|}
specifier|public
name|void
name|setContentEncryptionRequired
parameter_list|(
name|boolean
name|required
parameter_list|)
block|{
name|this
operator|.
name|contentEncryptionRequired
operator|=
name|required
expr_stmt|;
block|}
block|}
end_class

end_unit

