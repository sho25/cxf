begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|saml
operator|.
name|sso
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|ext
operator|.
name|WSSecurityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|OpenSAMLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|SAMLCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|SAMLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|SamlAssertionWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|bean
operator|.
name|AudienceRestrictionBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|bean
operator|.
name|ConditionsBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|bean
operator|.
name|SubjectConfirmationDataBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|builder
operator|.
name|SAML2Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|saml2
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|saml2
operator|.
name|core
operator|.
name|Status
import|;
end_import

begin_comment
comment|/**  * Some unit tests for the SAMLSSOResponseValidator.  */
end_comment

begin_class
specifier|public
class|class
name|SAMLSSOResponseValidatorTest
extends|extends
name|org
operator|.
name|junit
operator|.
name|Assert
block|{
static|static
block|{
name|OpenSAMLUtil
operator|.
name|initSamlEngine
argument_list|()
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testCreateAndValidateResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|SubjectConfirmationDataBean
name|subjectConfirmationData
init|=
operator|new
name|SubjectConfirmationDataBean
argument_list|()
decl_stmt|;
name|subjectConfirmationData
operator|.
name|setAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setInResponseTo
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|plusMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setRecipient
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|createResponse
argument_list|(
name|subjectConfirmationData
argument_list|)
decl_stmt|;
comment|// Validate the Response
name|SAMLSSOResponseValidator
name|validator
init|=
operator|new
name|SAMLSSOResponseValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|setIssuerIDP
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setAssertionConsumerURL
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setClientAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setRequestId
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setSpIdentifier
argument_list|(
literal|"http://service.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|validateSamlResponse
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testInvalidAddress
parameter_list|()
throws|throws
name|Exception
block|{
name|SubjectConfirmationDataBean
name|subjectConfirmationData
init|=
operator|new
name|SubjectConfirmationDataBean
argument_list|()
decl_stmt|;
name|subjectConfirmationData
operator|.
name|setAddress
argument_list|(
literal|"http://bad.apache.org"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setInResponseTo
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|plusMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setRecipient
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|createResponse
argument_list|(
name|subjectConfirmationData
argument_list|)
decl_stmt|;
comment|// Validate the Response
name|SAMLSSOResponseValidator
name|validator
init|=
operator|new
name|SAMLSSOResponseValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|setIssuerIDP
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setAssertionConsumerURL
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setClientAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setRequestId
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setSpIdentifier
argument_list|(
literal|"http://service.apache.org"
argument_list|)
expr_stmt|;
try|try
block|{
name|validator
operator|.
name|validateSamlResponse
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected failure on bad response"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WSSecurityException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testInvalidRequestId
parameter_list|()
throws|throws
name|Exception
block|{
name|SubjectConfirmationDataBean
name|subjectConfirmationData
init|=
operator|new
name|SubjectConfirmationDataBean
argument_list|()
decl_stmt|;
name|subjectConfirmationData
operator|.
name|setAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setInResponseTo
argument_list|(
literal|"12345-bad"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|plusMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setRecipient
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|createResponse
argument_list|(
name|subjectConfirmationData
argument_list|)
decl_stmt|;
comment|// Validate the Response
name|SAMLSSOResponseValidator
name|validator
init|=
operator|new
name|SAMLSSOResponseValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|setIssuerIDP
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setAssertionConsumerURL
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setClientAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setRequestId
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setSpIdentifier
argument_list|(
literal|"http://service.apache.org"
argument_list|)
expr_stmt|;
try|try
block|{
name|validator
operator|.
name|validateSamlResponse
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected failure on bad response"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WSSecurityException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testInvalidRecipient
parameter_list|()
throws|throws
name|Exception
block|{
name|SubjectConfirmationDataBean
name|subjectConfirmationData
init|=
operator|new
name|SubjectConfirmationDataBean
argument_list|()
decl_stmt|;
name|subjectConfirmationData
operator|.
name|setAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setInResponseTo
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|plusMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setRecipient
argument_list|(
literal|"http://bad.recipient.apache.org"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|createResponse
argument_list|(
name|subjectConfirmationData
argument_list|)
decl_stmt|;
comment|// Validate the Response
name|SAMLSSOResponseValidator
name|validator
init|=
operator|new
name|SAMLSSOResponseValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|setIssuerIDP
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setAssertionConsumerURL
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setClientAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setRequestId
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setSpIdentifier
argument_list|(
literal|"http://service.apache.org"
argument_list|)
expr_stmt|;
try|try
block|{
name|validator
operator|.
name|validateSamlResponse
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected failure on bad response"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WSSecurityException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testInvalidNotOnOrAfter
parameter_list|()
throws|throws
name|Exception
block|{
name|SubjectConfirmationDataBean
name|subjectConfirmationData
init|=
operator|new
name|SubjectConfirmationDataBean
argument_list|()
decl_stmt|;
name|subjectConfirmationData
operator|.
name|setAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setInResponseTo
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|minusSeconds
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setRecipient
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|createResponse
argument_list|(
name|subjectConfirmationData
argument_list|)
decl_stmt|;
comment|// Validate the Response
name|SAMLSSOResponseValidator
name|validator
init|=
operator|new
name|SAMLSSOResponseValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|setIssuerIDP
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setAssertionConsumerURL
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setClientAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setRequestId
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setSpIdentifier
argument_list|(
literal|"http://service.apache.org"
argument_list|)
expr_stmt|;
try|try
block|{
name|validator
operator|.
name|validateSamlResponse
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected failure on bad response"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WSSecurityException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testInvalidNotBefore
parameter_list|()
throws|throws
name|Exception
block|{
name|SubjectConfirmationDataBean
name|subjectConfirmationData
init|=
operator|new
name|SubjectConfirmationDataBean
argument_list|()
decl_stmt|;
name|subjectConfirmationData
operator|.
name|setAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setInResponseTo
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|plusMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setNotBefore
argument_list|(
operator|new
name|DateTime
argument_list|()
argument_list|)
expr_stmt|;
name|subjectConfirmationData
operator|.
name|setRecipient
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|createResponse
argument_list|(
name|subjectConfirmationData
argument_list|)
decl_stmt|;
comment|// Validate the Response
name|SAMLSSOResponseValidator
name|validator
init|=
operator|new
name|SAMLSSOResponseValidator
argument_list|()
decl_stmt|;
name|validator
operator|.
name|setIssuerIDP
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setAssertionConsumerURL
argument_list|(
literal|"http://recipient.apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setClientAddress
argument_list|(
literal|"http://apache.org"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setRequestId
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|validator
operator|.
name|setSpIdentifier
argument_list|(
literal|"http://service.apache.org"
argument_list|)
expr_stmt|;
try|try
block|{
name|validator
operator|.
name|validateSamlResponse
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected failure on bad response"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WSSecurityException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
specifier|private
name|Response
name|createResponse
parameter_list|(
name|SubjectConfirmationDataBean
name|subjectConfirmationData
parameter_list|)
throws|throws
name|Exception
block|{
name|DocumentBuilderFactory
name|docBuilderFactory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|docBuilderFactory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|docBuilder
init|=
name|docBuilderFactory
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|docBuilder
operator|.
name|newDocument
argument_list|()
decl_stmt|;
name|Status
name|status
init|=
name|SAML2PResponseComponentBuilder
operator|.
name|createStatus
argument_list|(
name|SAMLProtocolResponseValidator
operator|.
name|SAML2_STATUSCODE_SUCCESS
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|SAML2PResponseComponentBuilder
operator|.
name|createSAMLResponse
argument_list|(
literal|"http://cxf.apache.org/saml"
argument_list|,
literal|"http://cxf.apache.org/issuer"
argument_list|,
name|status
argument_list|)
decl_stmt|;
comment|// Create an AuthenticationAssertion
name|SAML2CallbackHandler
name|callbackHandler
init|=
operator|new
name|SAML2CallbackHandler
argument_list|()
decl_stmt|;
name|callbackHandler
operator|.
name|setStatement
argument_list|(
name|SAML2CallbackHandler
operator|.
name|Statement
operator|.
name|AUTHN
argument_list|)
expr_stmt|;
name|callbackHandler
operator|.
name|setIssuer
argument_list|(
literal|"http://cxf.apache.org/issuer"
argument_list|)
expr_stmt|;
name|callbackHandler
operator|.
name|setConfirmationMethod
argument_list|(
name|SAML2Constants
operator|.
name|CONF_BEARER
argument_list|)
expr_stmt|;
name|callbackHandler
operator|.
name|setSubjectConfirmationData
argument_list|(
name|subjectConfirmationData
argument_list|)
expr_stmt|;
name|ConditionsBean
name|conditions
init|=
operator|new
name|ConditionsBean
argument_list|()
decl_stmt|;
name|conditions
operator|.
name|setNotBefore
argument_list|(
operator|new
name|DateTime
argument_list|()
argument_list|)
expr_stmt|;
name|conditions
operator|.
name|setNotAfter
argument_list|(
operator|new
name|DateTime
argument_list|()
operator|.
name|plusMinutes
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|AudienceRestrictionBean
name|audienceRestriction
init|=
operator|new
name|AudienceRestrictionBean
argument_list|()
decl_stmt|;
name|audienceRestriction
operator|.
name|setAudienceURIs
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"http://service.apache.org"
argument_list|)
argument_list|)
expr_stmt|;
name|conditions
operator|.
name|setAudienceRestrictions
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|audienceRestriction
argument_list|)
argument_list|)
expr_stmt|;
name|callbackHandler
operator|.
name|setConditions
argument_list|(
name|conditions
argument_list|)
expr_stmt|;
name|SAMLCallback
name|samlCallback
init|=
operator|new
name|SAMLCallback
argument_list|()
decl_stmt|;
name|SAMLUtil
operator|.
name|doSAMLCallback
argument_list|(
name|callbackHandler
argument_list|,
name|samlCallback
argument_list|)
expr_stmt|;
name|SamlAssertionWrapper
name|assertion
init|=
operator|new
name|SamlAssertionWrapper
argument_list|(
name|samlCallback
argument_list|)
decl_stmt|;
name|response
operator|.
name|getAssertions
argument_list|()
operator|.
name|add
argument_list|(
name|assertion
operator|.
name|getSaml2
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|policyElement
init|=
name|OpenSAMLUtil
operator|.
name|toDom
argument_list|(
name|response
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|doc
operator|.
name|appendChild
argument_list|(
name|policyElement
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|policyElement
argument_list|)
expr_stmt|;
return|return
operator|(
name|Response
operator|)
name|OpenSAMLUtil
operator|.
name|fromDom
argument_list|(
name|policyElement
argument_list|)
return|;
block|}
block|}
end_class

end_unit

