begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|saml
operator|.
name|sso
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|FormParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ExceptionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|saml
operator|.
name|sso
operator|.
name|state
operator|.
name|RequestState
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"sso"
argument_list|)
specifier|public
class|class
name|RequestAssertionConsumerService
extends|extends
name|AbstractRequestAssertionConsumerHandler
block|{
annotation|@
name|POST
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
specifier|public
name|Response
name|processSamlResponse
parameter_list|(
annotation|@
name|FormParam
argument_list|(
name|SSOConstants
operator|.
name|SAML_RESPONSE
argument_list|)
name|String
name|encodedSamlResponse
parameter_list|,
annotation|@
name|FormParam
argument_list|(
name|SSOConstants
operator|.
name|RELAY_STATE
argument_list|)
name|String
name|relayState
parameter_list|)
block|{
return|return
name|doProcessSamlResponse
argument_list|(
name|encodedSamlResponse
argument_list|,
name|relayState
argument_list|,
literal|true
argument_list|)
return|;
block|}
annotation|@
name|GET
specifier|public
name|Response
name|getSamlResponse
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
name|SSOConstants
operator|.
name|SAML_RESPONSE
argument_list|)
name|String
name|encodedSamlResponse
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|SSOConstants
operator|.
name|RELAY_STATE
argument_list|)
name|String
name|relayState
parameter_list|)
block|{
return|return
name|doProcessSamlResponse
argument_list|(
name|encodedSamlResponse
argument_list|,
name|relayState
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|protected
name|Response
name|doProcessSamlResponse
parameter_list|(
name|String
name|encodedSamlResponse
parameter_list|,
name|String
name|relayState
parameter_list|,
name|boolean
name|postBinding
parameter_list|)
block|{
name|RequestState
name|requestState
init|=
name|processRelayState
argument_list|(
name|relayState
argument_list|)
decl_stmt|;
name|String
name|contextCookie
init|=
name|createSecurityContext
argument_list|(
name|requestState
argument_list|,
name|encodedSamlResponse
argument_list|,
name|relayState
argument_list|,
name|postBinding
argument_list|)
decl_stmt|;
comment|// Finally, redirect to the service provider endpoint
name|URI
name|targetURI
init|=
name|getTargetURI
argument_list|(
name|requestState
operator|.
name|getTargetAddress
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|seeOther
argument_list|(
name|targetURI
argument_list|)
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
name|contextCookie
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
name|URI
name|getTargetURI
parameter_list|(
name|String
name|targetAddress
parameter_list|)
block|{
if|if
condition|(
name|targetAddress
operator|!=
literal|null
condition|)
block|{
try|try
block|{
return|return
name|URI
operator|.
name|create
argument_list|(
name|targetAddress
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|reportError
argument_list|(
literal|"INVALID_TARGET_URI"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|reportError
argument_list|(
literal|"MISSING_TARGET_URI"
argument_list|)
expr_stmt|;
block|}
throw|throw
name|ExceptionUtils
operator|.
name|toBadRequestException
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

