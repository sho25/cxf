begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|rp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Priorities
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|PreMatching
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|FormUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|utils
operator|.
name|OAuthUtils
import|;
end_import

begin_class
annotation|@
name|PreMatching
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|AUTHENTICATION
argument_list|)
specifier|public
class|class
name|OidcRpAuthenticationFilter
implements|implements
name|ContainerRequestFilter
block|{
specifier|private
name|OidcRpStateManager
name|stateManager
decl_stmt|;
specifier|private
name|String
name|rpServiceAddress
decl_stmt|;
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|rc
parameter_list|)
block|{
if|if
condition|(
name|checkSecurityContext
argument_list|(
name|rc
argument_list|)
condition|)
block|{
return|return;
block|}
else|else
block|{
name|String
name|token
init|=
name|OAuthUtils
operator|.
name|generateRandomTokenKey
argument_list|()
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|state
init|=
name|toRequestState
argument_list|(
name|rc
argument_list|)
decl_stmt|;
name|stateManager
operator|.
name|setRequestState
argument_list|(
name|token
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|UriBuilder
name|ub
init|=
name|rc
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getBaseUriBuilder
argument_list|()
operator|.
name|path
argument_list|(
name|rpServiceAddress
argument_list|)
decl_stmt|;
name|ub
operator|.
name|queryParam
argument_list|(
literal|"state"
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|rc
operator|.
name|abortWith
argument_list|(
name|Response
operator|.
name|seeOther
argument_list|(
name|ub
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
name|HttpHeaders
operator|.
name|CACHE_CONTROL
argument_list|,
literal|"no-cache, no-store"
argument_list|)
operator|.
name|header
argument_list|(
literal|"Pragma"
argument_list|,
literal|"no-cache"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|boolean
name|checkSecurityContext
parameter_list|(
name|ContainerRequestContext
name|rc
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Cookie
argument_list|>
name|cookies
init|=
name|rc
operator|.
name|getCookies
argument_list|()
decl_stmt|;
name|Cookie
name|securityContextCookie
init|=
name|cookies
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.websso.context"
argument_list|)
decl_stmt|;
if|if
condition|(
name|securityContextCookie
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|String
name|contextKey
init|=
name|securityContextCookie
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|OidcClientTokenContext
name|tokenContext
init|=
name|stateManager
operator|.
name|getTokenContext
argument_list|(
name|contextKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|tokenContext
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|rc
operator|.
name|setSecurityContext
argument_list|(
operator|new
name|OidcSecurityContext
argument_list|(
name|tokenContext
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|private
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|toRequestState
parameter_list|(
name|ContainerRequestContext
name|rc
parameter_list|)
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|requestState
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|requestState
operator|.
name|putAll
argument_list|(
name|rc
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getQueryParameters
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED_TYPE
operator|.
name|isCompatible
argument_list|(
name|rc
operator|.
name|getMediaType
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|body
init|=
name|FormUtils
operator|.
name|readBody
argument_list|(
name|rc
operator|.
name|getEntityStream
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|FormUtils
operator|.
name|populateMapFromString
argument_list|(
name|requestState
argument_list|,
name|JAXRSUtils
operator|.
name|getCurrentMessage
argument_list|()
argument_list|,
name|body
argument_list|,
literal|"UTF-8"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|requestState
operator|.
name|putSingle
argument_list|(
literal|"location"
argument_list|,
name|rc
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getRequestUri
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|requestState
return|;
block|}
specifier|public
name|void
name|setRpServiceAddress
parameter_list|(
name|String
name|rpServiceAddress
parameter_list|)
block|{
name|this
operator|.
name|rpServiceAddress
operator|=
name|rpServiceAddress
expr_stmt|;
block|}
specifier|public
name|void
name|setStateManager
parameter_list|(
name|OidcRpStateManager
name|stateManager
parameter_list|)
block|{
name|this
operator|.
name|stateManager
operator|=
name|stateManager
expr_stmt|;
block|}
block|}
end_class

end_unit

