begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|idp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwt
operator|.
name|JwtToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|ClientAccessToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|common
operator|.
name|ServerAccessToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|AbstractOAuthServerJoseJwtProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|provider
operator|.
name|AccessTokenResponseFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|common
operator|.
name|IdToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|utils
operator|.
name|OidcUtils
import|;
end_import

begin_class
specifier|public
class|class
name|IdTokenResponseFilter
extends|extends
name|AbstractOAuthServerJoseJwtProducer
implements|implements
name|AccessTokenResponseFilter
block|{
specifier|private
name|UserInfoProvider
name|userInfoProvider
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|ClientAccessToken
name|ct
parameter_list|,
name|ServerAccessToken
name|st
parameter_list|)
block|{
name|String
name|idToken
init|=
name|getProcessedIdToken
argument_list|(
name|st
argument_list|)
decl_stmt|;
if|if
condition|(
name|idToken
operator|!=
literal|null
condition|)
block|{
name|ct
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
name|OidcUtils
operator|.
name|ID_TOKEN
argument_list|,
name|idToken
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getProcessedIdToken
parameter_list|(
name|ServerAccessToken
name|st
parameter_list|)
block|{
if|if
condition|(
name|userInfoProvider
operator|!=
literal|null
condition|)
block|{
name|IdToken
name|token
init|=
name|userInfoProvider
operator|.
name|getIdToken
argument_list|(
name|st
operator|.
name|getClient
argument_list|()
operator|.
name|getClientId
argument_list|()
argument_list|,
name|st
operator|.
name|getSubject
argument_list|()
argument_list|,
name|st
operator|.
name|getScopes
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|super
operator|.
name|processJwt
argument_list|(
operator|new
name|JwtToken
argument_list|(
name|token
argument_list|)
argument_list|,
name|st
operator|.
name|getClient
argument_list|()
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|st
operator|.
name|getSubject
argument_list|()
operator|.
name|getProperties
argument_list|()
operator|.
name|containsKey
argument_list|(
name|OidcUtils
operator|.
name|ID_TOKEN
argument_list|)
condition|)
block|{
return|return
name|st
operator|.
name|getSubject
argument_list|()
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|OidcUtils
operator|.
name|ID_TOKEN
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|st
operator|.
name|getSubject
argument_list|()
operator|instanceof
name|OidcUserSubject
condition|)
block|{
name|OidcUserSubject
name|sub
init|=
operator|(
name|OidcUserSubject
operator|)
name|st
operator|.
name|getSubject
argument_list|()
decl_stmt|;
return|return
name|super
operator|.
name|processJwt
argument_list|(
operator|new
name|JwtToken
argument_list|(
name|sub
operator|.
name|getIdToken
argument_list|()
argument_list|)
argument_list|,
name|st
operator|.
name|getClient
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|setUserInfoProvider
parameter_list|(
name|UserInfoProvider
name|userInfoProvider
parameter_list|)
block|{
name|this
operator|.
name|userInfoProvider
operator|=
name|userInfoProvider
expr_stmt|;
block|}
block|}
end_class

end_unit

