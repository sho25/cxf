begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|idp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|basic
operator|.
name|JsonMapObjectReaderWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|common
operator|.
name|JoseConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsUtils
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"openid-configuration"
argument_list|)
specifier|public
class|class
name|OidcConfigurationService
block|{
specifier|private
name|String
name|issuer
decl_stmt|;
specifier|private
name|String
name|authorizationEndpointAddress
decl_stmt|;
specifier|private
name|String
name|tokenEndpointAddress
decl_stmt|;
specifier|private
name|String
name|tokenRevocationEndpointAddress
decl_stmt|;
specifier|private
name|String
name|userInfoEndpointAddress
decl_stmt|;
specifier|private
name|String
name|jwkEndpointAddress
decl_stmt|;
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|String
name|getConfiguration
parameter_list|(
annotation|@
name|Context
name|UriInfo
name|ui
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|cfg
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// Issuer
name|String
name|baseUri
init|=
name|getBaseUri
argument_list|(
name|ui
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"issuer"
argument_list|,
name|issuer
operator|==
literal|null
condition|?
name|baseUri
else|:
name|issuer
argument_list|)
expr_stmt|;
comment|// Authorization Endpoint
name|String
name|theAuthorizationEndpointAddress
init|=
name|calculateEndpointAddress
argument_list|(
name|authorizationEndpointAddress
argument_list|,
name|baseUri
argument_list|,
literal|"/idp/authorize"
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"authorization_endpoint"
argument_list|,
name|theAuthorizationEndpointAddress
argument_list|)
expr_stmt|;
comment|// Token Endpoint
name|String
name|theTokenEndpointAddress
init|=
name|calculateEndpointAddress
argument_list|(
name|tokenEndpointAddress
argument_list|,
name|baseUri
argument_list|,
literal|"/oauth2/token"
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"token_endpoint"
argument_list|,
name|theTokenEndpointAddress
argument_list|)
expr_stmt|;
comment|// Token Revocation Endpoint
name|String
name|theTokenRevocationEndpointAddress
init|=
name|calculateEndpointAddress
argument_list|(
name|tokenRevocationEndpointAddress
argument_list|,
name|baseUri
argument_list|,
literal|"/oauth2/revoke"
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"revocation_endpoint"
argument_list|,
name|theTokenRevocationEndpointAddress
argument_list|)
expr_stmt|;
comment|// UriInfo Endpoint
name|String
name|theUserInfoEndpointAddress
init|=
name|calculateEndpointAddress
argument_list|(
name|userInfoEndpointAddress
argument_list|,
name|baseUri
argument_list|,
literal|"/users/userinfo"
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"userinfo_endpoint"
argument_list|,
name|theUserInfoEndpointAddress
argument_list|)
expr_stmt|;
comment|// Jwks Uri Endpoint
name|String
name|theJwkEndpointAddress
init|=
name|calculateEndpointAddress
argument_list|(
name|jwkEndpointAddress
argument_list|,
name|baseUri
argument_list|,
literal|"/jwk/keys"
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"jwks_uri"
argument_list|,
name|theJwkEndpointAddress
argument_list|)
expr_stmt|;
name|Properties
name|sigProps
init|=
name|JwsUtils
operator|.
name|loadSignatureOutProperties
argument_list|(
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|sigProps
operator|!=
literal|null
operator|&&
name|sigProps
operator|.
name|containsKey
argument_list|(
name|JoseConstants
operator|.
name|RSSEC_SIGNATURE_ALGORITHM
argument_list|)
condition|)
block|{
name|cfg
operator|.
name|put
argument_list|(
literal|"id_token_signing_alg_values_supported"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|sigProps
operator|.
name|get
argument_list|(
name|JoseConstants
operator|.
name|RSSEC_SIGNATURE_ALGORITHM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|JsonMapObjectReaderWriter
name|writer
init|=
operator|new
name|JsonMapObjectReaderWriter
argument_list|()
decl_stmt|;
return|return
name|writer
operator|.
name|toJson
argument_list|(
name|cfg
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|String
name|calculateEndpointAddress
parameter_list|(
name|String
name|endpointAddress
parameter_list|,
name|String
name|baseUri
parameter_list|,
name|String
name|defRelAddress
parameter_list|)
block|{
name|endpointAddress
operator|=
name|endpointAddress
operator|==
literal|null
condition|?
name|endpointAddress
else|:
name|defRelAddress
expr_stmt|;
if|if
condition|(
name|endpointAddress
operator|.
name|startsWith
argument_list|(
literal|"https"
argument_list|)
condition|)
block|{
return|return
name|endpointAddress
return|;
block|}
else|else
block|{
return|return
name|baseUri
operator|+
name|endpointAddress
return|;
block|}
block|}
specifier|private
name|String
name|getBaseUri
parameter_list|(
name|UriInfo
name|ui
parameter_list|)
block|{
name|String
name|requestUri
init|=
name|ui
operator|.
name|getRequestUri
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|int
name|ind
init|=
name|requestUri
operator|.
name|lastIndexOf
argument_list|(
literal|".well-known"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ind
operator|!=
operator|-
literal|1
condition|)
block|{
name|requestUri
operator|=
name|requestUri
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|ind
argument_list|)
expr_stmt|;
block|}
return|return
name|requestUri
return|;
block|}
specifier|public
name|void
name|setIssuer
parameter_list|(
name|String
name|issuer
parameter_list|)
block|{
name|this
operator|.
name|issuer
operator|=
name|issuer
expr_stmt|;
block|}
specifier|public
name|void
name|setAuthorizationEndpointAddress
parameter_list|(
name|String
name|authorizationEndpointAddress
parameter_list|)
block|{
name|this
operator|.
name|authorizationEndpointAddress
operator|=
name|authorizationEndpointAddress
expr_stmt|;
block|}
specifier|public
name|void
name|setTokenEndpointAddress
parameter_list|(
name|String
name|tokenEndpointAddress
parameter_list|)
block|{
name|this
operator|.
name|tokenEndpointAddress
operator|=
name|tokenEndpointAddress
expr_stmt|;
block|}
specifier|public
name|void
name|setJwkEndpointAddress
parameter_list|(
name|String
name|jwkEndpointAddress
parameter_list|)
block|{
name|this
operator|.
name|jwkEndpointAddress
operator|=
name|jwkEndpointAddress
expr_stmt|;
block|}
specifier|public
name|void
name|setUserInfoEndpointAddress
parameter_list|(
name|String
name|userInfoEndpointAddress
parameter_list|)
block|{
name|this
operator|.
name|userInfoEndpointAddress
operator|=
name|userInfoEndpointAddress
expr_stmt|;
block|}
specifier|public
name|void
name|setTokenRevocationEndpointAddress
parameter_list|(
name|String
name|tokenRevocationEndpointAddress
parameter_list|)
block|{
name|this
operator|.
name|tokenRevocationEndpointAddress
operator|=
name|tokenRevocationEndpointAddress
expr_stmt|;
block|}
block|}
end_class

end_unit

