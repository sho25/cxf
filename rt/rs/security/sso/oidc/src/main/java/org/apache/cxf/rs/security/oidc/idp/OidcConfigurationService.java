begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|idp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|common
operator|.
name|JoseConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jws
operator|.
name|JwsUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth2
operator|.
name|services
operator|.
name|AuthorizationMetadataService
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"openid-configuration"
argument_list|)
specifier|public
class|class
name|OidcConfigurationService
extends|extends
name|AuthorizationMetadataService
block|{
specifier|private
name|String
name|userInfoEndpointAddress
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|prepareConfigurationData
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|cfg
parameter_list|,
name|String
name|baseUri
parameter_list|)
block|{
name|super
operator|.
name|prepareConfigurationData
argument_list|(
name|cfg
argument_list|,
name|baseUri
argument_list|)
expr_stmt|;
comment|// UriInfo Endpoint
name|String
name|theUserInfoEndpointAddress
init|=
name|calculateEndpointAddress
argument_list|(
name|userInfoEndpointAddress
argument_list|,
name|baseUri
argument_list|,
literal|"/users/userinfo"
argument_list|)
decl_stmt|;
name|cfg
operator|.
name|put
argument_list|(
literal|"userinfo_endpoint"
argument_list|,
name|theUserInfoEndpointAddress
argument_list|)
expr_stmt|;
name|Properties
name|sigProps
init|=
name|JwsUtils
operator|.
name|loadSignatureOutProperties
argument_list|(
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|sigProps
operator|!=
literal|null
operator|&&
name|sigProps
operator|.
name|containsKey
argument_list|(
name|JoseConstants
operator|.
name|RSSEC_SIGNATURE_ALGORITHM
argument_list|)
condition|)
block|{
name|cfg
operator|.
name|put
argument_list|(
literal|"id_token_signing_alg_values_supported"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|sigProps
operator|.
name|get
argument_list|(
name|JoseConstants
operator|.
name|RSSEC_SIGNATURE_ALGORITHM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

