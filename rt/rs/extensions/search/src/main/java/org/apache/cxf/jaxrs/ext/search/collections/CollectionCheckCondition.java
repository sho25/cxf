begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|collections
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|ConditionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|PrimitiveSearchCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|PrimitiveStatement
import|;
end_import

begin_class
specifier|public
class|class
name|CollectionCheckCondition
parameter_list|<
name|T
parameter_list|>
extends|extends
name|PrimitiveSearchCondition
argument_list|<
name|T
argument_list|>
block|{
specifier|private
name|CollectionCheckInfo
name|checkInfo
decl_stmt|;
specifier|public
name|CollectionCheckCondition
parameter_list|(
name|String
name|propertyName
parameter_list|,
name|Object
name|propertyValue
parameter_list|,
name|Type
name|propertyType
parameter_list|,
name|ConditionType
name|ct
parameter_list|,
name|T
name|condition
parameter_list|,
name|CollectionCheckInfo
name|checkInfo
parameter_list|)
block|{
name|super
argument_list|(
name|propertyName
argument_list|,
name|propertyValue
argument_list|,
name|propertyType
argument_list|,
name|ct
argument_list|,
name|condition
argument_list|)
expr_stmt|;
name|this
operator|.
name|checkInfo
operator|=
name|checkInfo
expr_stmt|;
block|}
specifier|public
name|CollectionCheckInfo
name|getCollectionCheckInfo
parameter_list|()
block|{
return|return
name|checkInfo
return|;
block|}
specifier|public
name|PrimitiveStatement
name|getStatement
parameter_list|()
block|{
return|return
operator|new
name|CollectionCheckStatement
argument_list|(
name|getPropertyName
argument_list|()
argument_list|,
name|getPropertyValue
argument_list|()
argument_list|,
name|getPropertyType
argument_list|()
argument_list|,
name|getConditionType
argument_list|()
argument_list|,
name|checkInfo
argument_list|)
return|;
block|}
block|}
end_class

end_unit

