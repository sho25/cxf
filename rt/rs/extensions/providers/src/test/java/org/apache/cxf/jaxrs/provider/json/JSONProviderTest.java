begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|json
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|ParameterizedType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAnyElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlMixed
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlSeeAlso
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|JAXBElementProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|Book
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|CollectionsResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|ManyTags
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|SuperBook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TagVO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|TagVO2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|Tags
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|DelegatingXMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JSONProviderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testReadMalformedJson
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyReader
argument_list|<
name|Tags
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Tags
argument_list|>
argument_list|()
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
literal|"junk"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
try|try
block|{
name|p
operator|.
name|readFrom
argument_list|(
name|Tags
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"404 is expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Response
operator|.
name|Status
operator|.
name|BAD_REQUEST
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|ex
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadListOfProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|input
init|=
literal|"{\"theBook\":"
operator|+
literal|"{"
operator|+
literal|"\"Names\":[{\"Name\":\"1\"}, {\"Name\":\"2\"}]"
operator|+
literal|" }                   "
operator|+
literal|"}                    "
decl_stmt|;
name|JSONProvider
argument_list|<
name|TheBook
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TheBook
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setPrimitiveArrayKeys
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"Names"
argument_list|)
argument_list|)
expr_stmt|;
name|TheBook
name|theBook
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|TheBook
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|input
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|theBook
operator|.
name|getName
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|names
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|names
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|names
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadNullStringAsNull
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|input
init|=
literal|"{\"Book\":{\"id\":123,\"name\":\"null\"}}"
decl_stmt|;
name|JSONProvider
argument_list|<
name|Book
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|Book
name|theBook
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|Book
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|input
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|theBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|theBook
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadEmbeddedArray
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|input
init|=
literal|"{\"store\":"
operator|+
literal|"{\"books\":{"
operator|+
literal|"     \"book\":["
operator|+
literal|"         {           "
operator|+
literal|"           \"name\":\"CXF 1\""
operator|+
literal|"         },          "
operator|+
literal|"         {           "
operator|+
literal|"           \"name\":\"CXF 2\""
operator|+
literal|"         }           "
operator|+
literal|"      ]              "
operator|+
literal|"   }                 "
operator|+
literal|" }                   "
operator|+
literal|"}                    "
decl_stmt|;
name|Object
name|storeObject
init|=
operator|new
name|JSONProvider
argument_list|<
name|Store
argument_list|>
argument_list|()
operator|.
name|readFrom
argument_list|(
name|Store
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|input
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Store
name|store
init|=
operator|(
name|Store
operator|)
name|storeObject
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
name|store
operator|.
name|getBooks
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|books
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF 1"
argument_list|,
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF 2"
argument_list|,
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadEmbeddedArrayWithNamespaces
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|input
init|=
literal|"{\"ns1.store\":"
operator|+
literal|"{\"ns1.books\":{"
operator|+
literal|"     \"ns1.thebook2\":["
operator|+
literal|"         {           "
operator|+
literal|"           \"name\":\"CXF 1\""
operator|+
literal|"         },          "
operator|+
literal|"         {           "
operator|+
literal|"           \"name\":\"CXF 2\""
operator|+
literal|"         }           "
operator|+
literal|"      ]              "
operator|+
literal|"   }                 "
operator|+
literal|" }                   "
operator|+
literal|"}                    "
decl_stmt|;
name|JSONProvider
argument_list|<
name|QualifiedStore
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|QualifiedStore
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://superbooks"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|Object
name|storeObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|QualifiedStore
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|input
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QualifiedStore
name|store
init|=
operator|(
name|QualifiedStore
operator|)
name|storeObject
decl_stmt|;
name|List
argument_list|<
name|Book2
argument_list|>
name|books
init|=
name|store
operator|.
name|getBooks
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|books
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF 1"
argument_list|,
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF 2"
argument_list|,
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionWithoutXmlRootElement
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|SuperBook
argument_list|>
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|SuperBook
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"{http://superbooks}SuperBooks"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setJaxbElementClassMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|SuperBook
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"{http://superbooks}SuperBook"
argument_list|)
argument_list|)
expr_stmt|;
name|SuperBook
name|b
init|=
operator|new
name|SuperBook
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SuperBook
argument_list|>
name|books
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|books
argument_list|,
name|List
operator|.
name|class
argument_list|,
name|SuperBook
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"ns1.SuperBooks\":[{\"id\":123,\"name\":\"CXF in Action\","
operator|+
literal|"\"state\":\"\",\"superId\":124}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionAsPureArray
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ReportDefinition
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ReportDefinition
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropRootElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropElementsInXmlStream
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ReportDefinition
name|r
init|=
operator|new
name|ReportDefinition
argument_list|()
decl_stmt|;
name|r
operator|.
name|setReportName
argument_list|(
literal|"report"
argument_list|)
expr_stmt|;
name|r
operator|.
name|addParameterDefinition
argument_list|(
operator|new
name|ParameterDefinition
argument_list|(
literal|"param"
argument_list|)
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|ReportService
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"findReport"
argument_list|,
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{}
block|)
function|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|r
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"[{\"parameterList\":"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_class

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionAsPureArray2
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ReportDefinition
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ReportDefinition
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutDropElements
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"reportDefinition"
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropElementsInXmlStream
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ReportDefinition
name|r
init|=
operator|new
name|ReportDefinition
argument_list|()
decl_stmt|;
name|r
operator|.
name|setReportName
argument_list|(
literal|"report"
argument_list|)
expr_stmt|;
name|r
operator|.
name|addParameterDefinition
argument_list|(
operator|new
name|ParameterDefinition
argument_list|(
literal|"param"
argument_list|)
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|ReportService
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"findReport"
argument_list|,
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{}
block|)
function|;
end_function

begin_decl_stmt
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|provider
operator|.
name|writeTo
argument_list|(
name|r
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"[{\"parameterList\":"
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}          @
name|Test
specifier|public
name|void
name|testWriteCollectionAsPureArray3
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ReportDefinition
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ReportDefinition
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setIgnoreNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setArrayKeys
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"parameterList"
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropRootElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropElementsInXmlStream
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ReportDefinition
name|r
init|=
operator|new
name|ReportDefinition
argument_list|()
decl_stmt|;
name|r
operator|.
name|setReportName
argument_list|(
literal|"report"
argument_list|)
expr_stmt|;
name|ParameterDefinition
name|paramDef
init|=
operator|new
name|ParameterDefinition
argument_list|(
literal|"param"
argument_list|)
decl_stmt|;
name|r
operator|.
name|addParameterDefinition
argument_list|(
name|paramDef
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|ReportService
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"findReport"
argument_list|,
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{}
block|)
function|;
end_function

begin_decl_stmt
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|provider
operator|.
name|writeTo
argument_list|(
name|r
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"[{\"parameterList\":["
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}          @
name|Test
specifier|public
name|void
name|testWriteBeanNoRootAtJsonLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Book
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setDropRootElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropElementsInXmlStream
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
operator|new
name|Book
argument_list|(
literal|"cxf"
argument_list|,
literal|123
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\"name\":\"cxf\""
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\"id\":123"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"{\"Book\":"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteBeanIgnorePropertyAtJsonLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Book
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setOutDropElements
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setDropElementsInXmlStream
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
operator|new
name|Book
argument_list|(
literal|"cxf"
argument_list|,
literal|123
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\"name\":\"cxf\""
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\"id\":123"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"{\"Book\":"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteNullValueAsString
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteNullValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteNullValueAsNull
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteNullValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|doTestWriteNullValue
parameter_list|(
name|boolean
name|nullAsString
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Book
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
block|{
specifier|protected
name|XMLStreamWriter
name|createWriter
parameter_list|(
name|Object
name|actualObject
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|actualClass
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|String
name|enc
parameter_list|,
name|OutputStream
name|os
parameter_list|,
name|boolean
name|isCollection
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|NullWriter
argument_list|(
name|super
operator|.
name|createWriter
argument_list|(
name|actualObject
argument_list|,
name|actualClass
argument_list|,
name|genericType
argument_list|,
name|enc
argument_list|,
name|os
argument_list|,
name|isCollection
argument_list|)
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|provider
operator|.
name|setWriteNullAsString
argument_list|(
name|nullAsString
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
operator|new
name|Book
argument_list|(
literal|"cxf"
argument_list|,
literal|123
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
if|if
condition|(
name|nullAsString
condition|)
block|{
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\"state\":\"null\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertTrue
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\"state\":null"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionParameterDef
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteCollectionParameterDef
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteCollectionParameterDefAsJaxbElement
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestWriteCollectionParameterDef
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|doTestWriteCollectionParameterDef
parameter_list|(
name|boolean
name|asJaxbElement
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|ReportDefinition
argument_list|>
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|ReportDefinition
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setMarshallAsJaxbElement
argument_list|(
name|asJaxbElement
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setUnmarshallAsJaxbElement
argument_list|(
name|asJaxbElement
argument_list|)
expr_stmt|;
name|ReportDefinition
name|r
init|=
operator|new
name|ReportDefinition
argument_list|()
decl_stmt|;
name|r
operator|.
name|setReportName
argument_list|(
literal|"report"
argument_list|)
expr_stmt|;
name|r
operator|.
name|addParameterDefinition
argument_list|(
operator|new
name|ParameterDefinition
argument_list|(
literal|"param"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ReportDefinition
argument_list|>
name|reports
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|Method
name|m
init|=
name|ReportService
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"findAllReports"
argument_list|,
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{}
block|)
function|;
end_function

begin_decl_stmt
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|provider
operator|.
name|writeTo
argument_list|(
name|reports
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
name|List
argument_list|<
name|ReportDefinition
argument_list|>
name|reports2
init|=
name|provider
operator|.
name|readFrom
argument_list|(
operator|(
name|Class
operator|)
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|reports2
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|reports2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|ReportDefinition
name|rd
init|=
name|reports2
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"report"
argument_list|,
name|rd
operator|.
name|getReportName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|List
argument_list|<
name|ParameterDefinition
argument_list|>
name|params
init|=
name|rd
operator|.
name|getParameterList
argument_list|()
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|assertNotNull
argument_list|(
name|params
argument_list|)
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|ParameterDefinition
name|pd
init|=
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|assertEquals
argument_list|(
literal|"param"
argument_list|,
name|pd
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}                     @
name|Test
specifier|public
name|void
name|testReadFromTags
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyReader
argument_list|<
name|Tags
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Tags
argument_list|>
argument_list|()
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
literal|"{\"Tags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"},{\"group\":\"d\",\"name\":\"c\"}]}}"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|tagsObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|Tags
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|Tags
name|tags
init|=
operator|(
name|Tags
operator|)
name|tagsObject
decl_stmt|;
name|List
argument_list|<
name|TagVO
argument_list|>
name|list
init|=
name|tags
operator|.
name|getTags
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadFromTag
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyReader
argument_list|<
name|TagVO
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
literal|"{\"tagVO\":{\"group\":\"b\",\"name\":\"a\"}}"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|tagsObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|TagVO
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|TagVO
name|tag
init|=
operator|(
name|TagVO
operator|)
name|tagsObject
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|tag
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadFromQualifiedTag
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
literal|"{\"ns1.thetag\":{\"group\":\"b\",\"name\":\"a\"}}"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|tagsObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|TagVO2
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|TagVO2
name|tag
init|=
operator|(
name|TagVO2
operator|)
name|tagsObject
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|tag
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadFromUnwrappedTagWrapperName
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSupportUnwrapped
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setWrapperName
argument_list|(
literal|"tagVO"
argument_list|)
expr_stmt|;
name|readUnwrapped
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadFromUnwrappedTagMap
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSupportUnwrapped
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|TagVO
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"tagVO"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setWrapperMap
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|readUnwrapped
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadFromUnwrappedTagRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSupportUnwrapped
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|readUnwrapped
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadFromUnwrappedQualifiedTagRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSupportUnwrapped
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
literal|"{\"group\":\"b\",\"name\":\"a\"}"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|tagsObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|TagVO2
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|TagVO2
name|tag
init|=
operator|(
name|TagVO2
operator|)
name|tagsObject
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|tag
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|readUnwrapped
parameter_list|(
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|p
parameter_list|)
throws|throws
name|Exception
block|{
name|byte
index|[]
name|bytes
init|=
literal|"{\"group\":\"b\",\"name\":\"a\"}"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|tagsObject
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|TagVO
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|TagVO
name|tag
init|=
operator|(
name|TagVO
operator|)
name|tagsObject
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|tag
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToSingleTag
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|TagVO
name|tag
init|=
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"tagVO\":{\"group\":\"b\",\"name\":\"a\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToSingleTag2NoNs
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setIgnoreNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
name|createTag2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"thetag\":{\"group\":\"b\",\"name\":\"a\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testCopyReaderToDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|s
init|=
literal|"{\"tagVO\":{\"group\":\"b\",\"name\":\"a\"}}"
decl_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|s
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|JSONProvider
argument_list|<
name|Document
argument_list|>
argument_list|()
operator|.
name|readFrom
argument_list|(
name|Document
operator|.
name|class
argument_list|,
name|Document
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|doc
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndDocument
argument_list|()
expr_stmt|;
name|String
name|s2
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|s2
operator|.
name|contains
argument_list|(
literal|"<group>b</group><name>a</name>"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteDocumentToWriter
parameter_list|()
throws|throws
name|Exception
block|{
name|TagVO
name|tag
init|=
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
operator|new
name|JAXBElementProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
operator|new
name|StringReader
argument_list|(
name|os
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os2
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
operator|new
name|JSONProvider
argument_list|<
name|Document
argument_list|>
argument_list|()
operator|.
name|writeTo
argument_list|(
name|doc
argument_list|,
name|Document
operator|.
name|class
argument_list|,
name|Document
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os2
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os2
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"tagVO\":{\"group\":\"b\",\"name\":\"a\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteBookWithStringConverter
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Book
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConvertTypesToStrings
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|125
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|book
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"Book\":{\"id\":\"125\",\"name\":\"CXF\",\"state\":\"\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToSingleTagBadgerFish
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConvention
argument_list|(
literal|"badgerfish"
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"tagVO\":{\"group\":{\"$\":\"b\"},\"name\":{\"$\":\"a\"}}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToSingleQualifiedTag
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
name|createTag2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"ns1.thetag\":{\"group\":\"b\",\"name\":\"a\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToSingleQualifiedTagBadgerFish
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConvention
argument_list|(
literal|"badgerfish"
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
name|createTag2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"ns2:thetag\":{\"@xmlns\":{\"ns2\":\"http:\\/\\/tags\"},"
operator|+
literal|"\"group\":{\"$\":\"b\"},\"name\":{\"$\":\"a\"}}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testDropRootElement
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setDropRootElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setIgnoreNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
name|createTag2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"group\":\"b\",\"name\":\"a\"}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testDropRootElementFromDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Document
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Document
argument_list|>
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
operator|new
name|StringReader
argument_list|(
literal|"<a><b>2</b></a>"
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|.
name|setDropRootElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|doc
argument_list|,
name|Document
operator|.
name|class
argument_list|,
name|Document
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"b\":2}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteQualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"ns1.tag\":[{\"group\":\"b\",\"name\":\"a\"}"
operator|+
literal|",{\"group\":\"d\",\"name\":\"c\"}]}"
decl_stmt|;
name|doWriteQualifiedCollection
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteQualifiedCollectionDropNs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"tag\":[{\"group\":\"b\",\"name\":\"a\"}"
operator|+
literal|",{\"group\":\"d\",\"name\":\"c\"}]}"
decl_stmt|;
name|doWriteQualifiedCollection
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteQualifiedCollection2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{{\"group\":\"b\",\"name\":\"a\"}"
operator|+
literal|",{\"group\":\"d\",\"name\":\"c\"}}"
decl_stmt|;
name|doWriteQualifiedCollection
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteQualifiedCollection3
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"[{\"group\":\"b\",\"name\":\"a\"}"
operator|+
literal|",{\"group\":\"d\",\"name\":\"c\"}]"
decl_stmt|;
name|doWriteQualifiedCollection
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|public
name|void
name|doWriteQualifiedCollection
parameter_list|(
name|boolean
name|drop
parameter_list|,
name|boolean
name|serializeAsArray
parameter_list|,
name|boolean
name|ignoreNamespaces
parameter_list|,
name|String
name|data
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"{http://tags}tag"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setDropCollectionWrapperElement
argument_list|(
name|drop
argument_list|)
expr_stmt|;
name|p
operator|.
name|setSerializeAsArray
argument_list|(
name|serializeAsArray
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|p
operator|.
name|setIgnoreNamespaces
argument_list|(
name|ignoreNamespaces
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TagVO2
argument_list|>
name|tags
init|=
operator|new
name|ArrayList
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|tags
operator|.
name|add
argument_list|(
name|createTag2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
name|createTag2
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getTags"
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tags
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|s
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testIgnoreNamespaces
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TestBean
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TestBean
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setIgnoreNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TestBean
name|bean
init|=
operator|new
name|TestBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setName
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setId
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|bean
argument_list|,
name|TestBean
operator|.
name|class
argument_list|,
name|TestBean
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"testBean\":{\"@id\":\"b\",\"name\":\"a\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteUnqualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|books
operator|.
name|add
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getBooks"
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|books
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|,
name|m
operator|.
name|getGenericReturnType
argument_list|()
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"{\"Book\":[{\"id\":123,\"name\":\"CXF\",\"state\":\"\"}]}"
argument_list|,
name|os
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadUnqualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"Book\":[{\"id\":\"123\",\"name\":\"CXF in Action\"}"
operator|+
literal|",{\"id\":\"124\",\"name\":\"CXF Rocks\"}]}"
decl_stmt|;
name|doReadUnqualifiedCollection
argument_list|(
name|data
argument_list|,
literal|"setBooks"
argument_list|,
name|List
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
parameter_list|<
name|T
parameter_list|>
name|void
name|doReadUnqualifiedCollection
parameter_list|(
name|String
name|data
parameter_list|,
name|String
name|mName
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|T
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|T
argument_list|>
argument_list|()
decl_stmt|;
name|Method
name|m
init|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
name|mName
argument_list|,
operator|new
name|Class
index|[]
block|{
name|type
block|}
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|type
argument_list|,
name|m
operator|.
name|getGenericParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Book
name|b1
init|=
literal|null
decl_stmt|;
name|Book
name|b2
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|isArray
argument_list|()
condition|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|Book
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|b1
operator|=
operator|(
operator|(
name|Book
index|[]
operator|)
name|o
operator|)
index|[
literal|0
index|]
expr_stmt|;
name|b2
operator|=
operator|(
operator|(
name|Book
index|[]
operator|)
name|o
operator|)
index|[
literal|1
index|]
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|==
name|Set
operator|.
name|class
condition|)
block|{
name|Set
argument_list|<
name|Book
argument_list|>
name|set
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Set
argument_list|<
name|?
argument_list|>
operator|)
name|o
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Book
argument_list|>
argument_list|(
name|set
argument_list|)
argument_list|)
decl_stmt|;
name|b1
operator|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|b2
operator|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|(
name|List
argument_list|<
name|Book
argument_list|>
operator|)
name|o
decl_stmt|;
name|b1
operator|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|b2
operator|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b1
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124
argument_list|,
name|b2
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadQualifiedCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"ns1.thetag\":[{\"group\":\"b\",\"name\":\"a\"}"
operator|+
literal|",{\"group\":\"d\",\"name\":\"c\"}]}"
decl_stmt|;
name|doReadQualifiedCollection
argument_list|(
name|data
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadQualifiedArray
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"ns1.thetag\":[{\"group\":\"b\",\"name\":\"a\"}"
operator|+
literal|",{\"group\":\"d\",\"name\":\"c\"}]}"
decl_stmt|;
name|doReadQualifiedCollection
argument_list|(
name|data
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
specifier|public
name|void
name|doReadQualifiedCollection
parameter_list|(
name|String
name|data
parameter_list|,
name|boolean
name|isArray
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
name|provider
init|=
operator|new
name|JSONProvider
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|isArray
condition|)
block|{
name|m
operator|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setTags"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|List
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m
operator|=
name|CollectionsResource
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setTagsArray"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|TagVO2
index|[]
operator|.
expr|class
block|}
argument_list|)
expr_stmt|;
block|}
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|m
operator|.
name|getGenericParameterTypes
argument_list|()
index|[
literal|0
index|]
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|TagVO2
name|t1
init|=
literal|null
decl_stmt|;
name|TagVO2
name|t2
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|isArray
condition|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|o
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|t1
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|o
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|t2
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|o
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|Object
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|t1
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|Object
index|[]
operator|)
name|o
argument_list|)
index|[
literal|0
index|]
expr_stmt|;
name|t2
operator|=
call|(
name|TagVO2
call|)
argument_list|(
operator|(
name|Object
index|[]
operator|)
name|o
argument_list|)
index|[
literal|1
index|]
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|t1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|t1
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|t2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|t2
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToSingleQualifiedTag2
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
name|createTag2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"ns1.thetag\":{\"group\":\"b\",\"name\":\"a\"}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteIgnoreMixedContent
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestMixedContent
argument_list|(
literal|"{\"Book\":{\"name\":\"CXF\",\"id\":125}}"
argument_list|,
literal|true
argument_list|,
literal|"book.xml"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteIgnoreMixedContent2
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestMixedContent
argument_list|(
literal|"{\"Book\":{\"name\":\"CXF\",\"id\":125,\"$\":\"books\"}}"
argument_list|,
literal|true
argument_list|,
literal|"book2.xml"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteMixedContent
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestMixedContent
argument_list|(
literal|"{\"Book\":{\"name\":\"CXF\",\"id\":125}}"
argument_list|,
literal|false
argument_list|,
literal|"book.xml"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|doTestMixedContent
parameter_list|(
name|String
name|data
parameter_list|,
name|boolean
name|ignore
parameter_list|,
name|String
name|fileName
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
operator|new
name|Class
index|[]
block|{
name|Books
operator|.
name|class
block|,
name|Book
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|Unmarshaller
name|um
init|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
name|JAXBElement
argument_list|<
name|?
argument_list|>
name|jaxbEl
init|=
name|um
operator|.
name|unmarshal
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|is
argument_list|)
argument_list|,
name|Books
operator|.
name|class
argument_list|)
decl_stmt|;
name|JSONProvider
argument_list|<
name|JAXBElement
argument_list|<
name|?
argument_list|>
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|JAXBElement
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setIgnoreMixedContent
argument_list|(
name|ignore
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|jaxbEl
argument_list|,
name|JAXBElement
operator|.
name|class
argument_list|,
name|JAXBElement
operator|.
name|class
argument_list|,
name|JAXBElement
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|data
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteListOfDerivedTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Books2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Books2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema-instance"
argument_list|,
literal|"xsins"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|Books2
name|books2
init|=
operator|new
name|Books2
argument_list|()
decl_stmt|;
name|books2
operator|.
name|setBooks
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|SuperBook
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|123L
argument_list|,
literal|124L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|books2
argument_list|,
name|Books2
operator|.
name|class
argument_list|,
name|Books2
operator|.
name|class
argument_list|,
name|Books2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|data
init|=
literal|"{\"books2\":{\"books\":{\"@xsins.type\":\"superBook\",\"id\":123,"
operator|+
literal|"\"name\":\"CXF Rocks\",\"state\":\"\",\"superId\":124}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|data
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadListOfDerivedTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Books2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Books2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema-instance"
argument_list|,
literal|"xsins"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|String
name|data
init|=
literal|"{\"books2\":{\"books\":{\"@xsins.type\":\"superBook\",\"id\":123,"
operator|+
literal|"\"name\":\"CXF Rocks\",\"superId\":124}}}"
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|data
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|books2Object
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|Books2
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|Books2
name|books
init|=
operator|(
name|Books2
operator|)
name|books2Object
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Book
argument_list|>
name|list
init|=
name|books
operator|.
name|getBooks
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SuperBook
name|book
init|=
operator|(
name|SuperBook
operator|)
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getSuperId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testReadListOfDerivedTypesWithNullField
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Books2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Books2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema-instance"
argument_list|,
literal|"xsins"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|String
name|data
init|=
literal|"{\"books2\":{\"books\":{\"@xsins.type\":\"superBook\",\"id\":123,"
operator|+
literal|"\"name\":null,\"superId\":124}}}"
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|data
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Object
name|books2Object
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|Books2
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|Books2
name|books
init|=
operator|(
name|Books2
operator|)
name|books2Object
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Book
argument_list|>
name|list
init|=
name|books
operator|.
name|getBooks
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SuperBook
name|book
init|=
operator|(
name|SuperBook
operator|)
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getSuperId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|book
operator|.
name|getName
argument_list|()
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToListWithManyValues
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Tags
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Tags
argument_list|>
argument_list|()
decl_stmt|;
name|Tags
name|tags
init|=
operator|new
name|Tags
argument_list|()
decl_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
name|createTag
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tags
argument_list|,
name|Tags
operator|.
name|class
argument_list|,
name|Tags
operator|.
name|class
argument_list|,
name|Tags
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"Tags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"},{\"group\":\"d\",\"name\":\"c\"}]}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteToListWithSingleValue
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Tags
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Tags
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setArrayKeys
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"list"
argument_list|)
argument_list|)
expr_stmt|;
name|Tags
name|tags
init|=
operator|new
name|Tags
argument_list|()
decl_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tags
argument_list|,
name|Tags
operator|.
name|class
argument_list|,
name|Tags
operator|.
name|class
argument_list|,
name|Tags
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"Tags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"}]}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteArrayAndNamespaceOnObject
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setIgnoreNamespaces
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"thetag\":[{\"group\":\"b\",\"name\":\"a\"}]}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteUsingNaturalNotation
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Post
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|Post
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setArrayKeys
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"comments"
argument_list|)
argument_list|)
expr_stmt|;
name|Post
name|post
init|=
operator|new
name|Post
argument_list|()
decl_stmt|;
name|post
operator|.
name|setTitle
argument_list|(
literal|"post"
argument_list|)
expr_stmt|;
name|Comment
name|c1
init|=
operator|new
name|Comment
argument_list|()
decl_stmt|;
name|c1
operator|.
name|setTitle
argument_list|(
literal|"comment1"
argument_list|)
expr_stmt|;
name|Comment
name|c2
init|=
operator|new
name|Comment
argument_list|()
decl_stmt|;
name|c2
operator|.
name|setTitle
argument_list|(
literal|"comment2"
argument_list|)
expr_stmt|;
name|post
operator|.
name|getComments
argument_list|()
operator|.
name|add
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|post
operator|.
name|getComments
argument_list|()
operator|.
name|add
argument_list|(
name|c2
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|post
argument_list|,
name|Post
operator|.
name|class
argument_list|,
name|Post
operator|.
name|class
argument_list|,
name|Post
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"post\":{\"title\":\"post\",\"comments\":[{\"title\":\"comment1\"},"
operator|+
literal|"{\"title\":\"comment2\"}]}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testManyTags
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setArrayKeys
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"list"
argument_list|)
argument_list|)
expr_stmt|;
name|Tags
name|tags
init|=
operator|new
name|Tags
argument_list|()
decl_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|ManyTags
name|many
init|=
operator|new
name|ManyTags
argument_list|()
decl_stmt|;
name|many
operator|.
name|setTags
argument_list|(
name|tags
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|many
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"ManyTags\":{\"tags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"}]}}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testManyTagsEmptyArray
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
name|p
init|=
operator|new
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
argument_list|()
block|{
specifier|protected
name|XMLStreamWriter
name|createWriter
parameter_list|(
name|Object
name|actualObject
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|actualClass
parameter_list|,
name|Type
name|genericType
parameter_list|,
name|String
name|enc
parameter_list|,
name|OutputStream
name|os
parameter_list|,
name|boolean
name|isCollection
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|EmptyListWriter
argument_list|(
name|super
operator|.
name|createWriter
argument_list|(
name|actualObject
argument_list|,
name|actualClass
argument_list|,
name|genericType
argument_list|,
name|enc
argument_list|,
name|os
argument_list|,
name|isCollection
argument_list|)
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|p
operator|.
name|setSerializeAsArray
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setArrayKeys
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"list"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setIgnoreEmptyArrayValues
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Tags
name|tags
init|=
operator|new
name|Tags
argument_list|()
decl_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
name|createTag
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|ManyTags
name|many
init|=
operator|new
name|ManyTags
argument_list|()
decl_stmt|;
name|many
operator|.
name|setTags
argument_list|(
name|tags
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|many
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
operator|.
name|getAnnotations
argument_list|()
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{\"ManyTags\":{\"tags\":{\"list\":[]}}}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInDropElement
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"Extra\":{\"ManyTags\":{\"tags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"}]}}}}"
decl_stmt|;
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setInDropElements
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"Extra"
argument_list|)
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|ManyTags
name|holder
init|=
operator|(
name|ManyTags
operator|)
name|o
decl_stmt|;
name|assertNotNull
argument_list|(
name|holder
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
name|holder
operator|.
name|getTags
argument_list|()
operator|.
name|getTags
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|tag
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInAppendElementNoNs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"tags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"}]}}"
decl_stmt|;
name|readAppendElementsNoNs
argument_list|(
name|data
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"tags"
argument_list|,
literal|"ManyTags"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInAppendElementNoNs2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{\"ManyTags\":{\"list\":[{\"group\":\"b\",\"name\":\"a\"}]}}"
decl_stmt|;
name|readAppendElementsNoNs
argument_list|(
name|data
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"list"
argument_list|,
literal|"tags"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|readAppendElementsNoNs
parameter_list|(
name|String
name|data
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|appendMap
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setInAppendElements
argument_list|(
name|appendMap
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|ManyTags
name|holder
init|=
operator|(
name|ManyTags
operator|)
name|o
decl_stmt|;
name|assertNotNull
argument_list|(
name|holder
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
name|holder
operator|.
name|getTags
argument_list|()
operator|.
name|getTags
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|tag
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|tag
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInNsElementFromLocal
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{thetag:{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|readTagVO2AfterTransform
argument_list|(
name|data
argument_list|,
literal|"thetag"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInNsElementFromNsElement
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{t.thetag2:{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|readTagVO2AfterTransform
argument_list|(
name|data
argument_list|,
literal|"{http://bar}thetag2"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInLocalFromLocal
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{thetag:{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|readTagVOAfterTransform
argument_list|(
name|data
argument_list|,
literal|"thetag"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInLocalFromNsElement
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{t.thetag2:{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|readTagVOAfterTransform
argument_list|(
name|data
argument_list|,
literal|"{http://bar}thetag2"
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|readTagVO2AfterTransform
parameter_list|(
name|String
name|data
parameter_list|,
name|String
name|keyValue
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|keyValue
argument_list|,
literal|"{http://tags}thetag"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsmap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|nsmap
operator|.
name|put
argument_list|(
literal|"http://bar"
argument_list|,
literal|"t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setNamespaceMap
argument_list|(
name|nsmap
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setInTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|TagVO2
name|tag2
init|=
operator|(
name|TagVO2
operator|)
name|o
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|tag2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|tag2
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testInNsElementsFromLocals
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"{tagholder:{thetag:{\"group\":\"B\",\"name\":\"A\"}}}"
decl_stmt|;
name|JSONProvider
argument_list|<
name|TagVO2Holder
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2Holder
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"tagholder"
argument_list|,
literal|"{http://tags}tagholder"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"thetag"
argument_list|,
literal|"{http://tags}thetag"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setInTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|TagVO2Holder
operator|.
name|class
argument_list|,
name|TagVO2Holder
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|TagVO2Holder
name|holder
init|=
operator|(
name|TagVO2Holder
operator|)
name|o
decl_stmt|;
name|TagVO2
name|tag2
init|=
name|holder
operator|.
name|getTagValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|tag2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|tag2
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutAttributesAsElements
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2Holder
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2Holder
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}thetag"
argument_list|,
literal|"thetag"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}tagholder"
argument_list|,
literal|"tagholder"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setAttributesToElements
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|TagVO2Holder
name|holder
init|=
operator|new
name|TagVO2Holder
argument_list|()
decl_stmt|;
name|holder
operator|.
name|setTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|holder
argument_list|,
name|TagVO2Holder
operator|.
name|class
argument_list|,
name|TagVO2Holder
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"tagholder\":{\"attr\":\"attribute\",\"thetag\":{\"group\":\"B\",\"name\":\"A\"}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutAttributesAsElementsForList
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Provider
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setCollectionWrapperName
argument_list|(
literal|"tagholders"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}*"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setAttributesToElements
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//data setup
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|TagVO2Holder
name|holder
init|=
operator|new
name|TagVO2Holder
argument_list|()
decl_stmt|;
name|holder
operator|.
name|setTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TagVO2Holder
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|TagVO2Holder
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|holder
argument_list|)
expr_stmt|;
comment|//ParameterizedType required for Lists of Objects
name|ParameterizedType
name|type
init|=
operator|new
name|ParameterizedType
argument_list|()
block|{
specifier|public
name|Type
name|getRawType
parameter_list|()
block|{
return|return
name|List
operator|.
name|class
return|;
block|}
specifier|public
name|Type
name|getOwnerType
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Type
index|[]
name|getActualTypeArguments
parameter_list|()
block|{
return|return
operator|new
name|Type
index|[]
block|{
name|TagVO2Holder
operator|.
name|class
block|}
return|;
block|}
block|}
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|list
argument_list|,
name|ArrayList
operator|.
name|class
argument_list|,
name|type
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"tagholders\":["
operator|+
literal|"{\"attr\":\"attribute\",\"thetag\":{\"group\":\"B\",\"name\":\"A\"}}"
operator|+
literal|"]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|readTagVOAfterTransform
parameter_list|(
name|String
name|data
parameter_list|,
name|String
name|keyValue
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|keyValue
argument_list|,
literal|"tagVO"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setInTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsmap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|nsmap
operator|.
name|put
argument_list|(
literal|"http://bar"
argument_list|,
literal|"t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setNamespaceMap
argument_list|(
name|nsmap
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|TagVO
name|tag2
init|=
operator|(
name|TagVO
operator|)
name|o
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|tag2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"B"
argument_list|,
name|tag2
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testDropElementsIgnored
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
literal|"ManyTags"
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
literal|"list"
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
literal|"tags"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutDropElements
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|ManyTags
name|many
init|=
operator|new
name|ManyTags
argument_list|()
decl_stmt|;
name|Tags
name|tags
init|=
operator|new
name|Tags
argument_list|()
decl_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
operator|new
name|TagVO
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
operator|new
name|TagVO
argument_list|(
literal|"C"
argument_list|,
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|many
operator|.
name|setTags
argument_list|(
name|tags
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|many
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testDropElements
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|ManyTags
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
literal|"ManyTags"
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
literal|"tags"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutDropElements
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|ManyTags
name|many
init|=
operator|new
name|ManyTags
argument_list|()
decl_stmt|;
name|Tags
name|tags
init|=
operator|new
name|Tags
argument_list|()
decl_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
operator|new
name|TagVO
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|addTag
argument_list|(
operator|new
name|TagVO
argument_list|(
literal|"C"
argument_list|,
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|many
operator|.
name|setTags
argument_list|(
name|tags
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|many
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
name|ManyTags
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"list\":[{\"group\":\"B\",\"name\":\"A\"},"
operator|+
literal|"{\"group\":\"D\",\"name\":\"C\"}]}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteWithXmlRootElementAndPackageInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
argument_list|>
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
name|book
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
argument_list|(
literal|333
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|book
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|jaxb
operator|.
name|Book2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"{\"os.thebook2\":{\"id\":333}}"
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testDropQualifiedElements
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
literal|"{http://tags}thetag"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutDropElements
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"group\":\"B\"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutAppendNsElementBeforeLocal
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"tagVO"
argument_list|,
literal|"{http://tagsvo2}t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutAppendElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
operator|new
name|TagVO
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"ps1.t\":{\"tagVO\":{\"group\":\"B\",\"name\":\"A\"}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutAppendLocalBeforeLocal
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"tagVO"
argument_list|,
literal|"supertag"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutAppendElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
operator|new
name|TagVO
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"supertag\":{\"tagVO\":{\"group\":\"B\",\"name\":\"A\"}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutAppendElementsSameNs
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}thetag"
argument_list|,
literal|"{http://tags}t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutAppendElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"ns2.t\":{\"ns2.thetag\":{\"group\":\"B\",\"name\":\"A\"}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutAppendElementsDiffNs
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}thetag"
argument_list|,
literal|"{http://tagsvo2}t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutAppendElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"ps1.t\":{\"ns2.thetag\":{\"group\":\"B\",\"name\":\"A\"}}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutElementsMapLocalNsToLocalNs
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}thetag"
argument_list|,
literal|"{http://tagsvo2}t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"ns2.t\":{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutElementsMapLocalNsToLocal
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO2
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"{http://tags}thetag"
argument_list|,
literal|"t"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO2
name|tag
init|=
operator|new
name|TagVO2
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
name|TagVO2
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"t\":{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutElementsMapLocalToLocalNs
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://tags"
argument_list|,
literal|"ns1"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"tagVO"
argument_list|,
literal|"{http://tags}thetag"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
operator|new
name|TagVO
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"ps1.thetag\":{\"group\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testOutElementsMapLocalToLocal
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|TagVO
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"tagVO"
argument_list|,
literal|"supertag"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"group"
argument_list|,
literal|"group2"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setOutTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|TagVO
name|tag
init|=
operator|new
name|TagVO
argument_list|(
literal|"A"
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|tag
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
name|TagVO
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"{\"supertag\":{\"group2\":\"B\",\"name\":\"A\"}}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|TagVO
name|createTag
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|group
parameter_list|)
block|{
return|return
operator|new
name|TagVO
argument_list|(
name|name
argument_list|,
name|group
argument_list|)
return|;
block|}
end_function

begin_function
specifier|private
name|TagVO2
name|createTag2
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|group
parameter_list|)
block|{
return|return
operator|new
name|TagVO2
argument_list|(
name|name
argument_list|,
name|group
argument_list|)
return|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|testWriteReadDerivedNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Base1
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|Base1
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setMarshallAsJaxbElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://derivedtest"
argument_list|,
literal|"derivedtestnamespace"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|Base1
name|b
init|=
operator|new
name|Derived1
argument_list|(
literal|"base"
argument_list|,
literal|"derived"
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|provider
operator|.
name|writeTo
argument_list|(
name|b
argument_list|,
name|Base1
operator|.
name|class
argument_list|,
name|Base1
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|readBase
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
name|void
name|readBase
parameter_list|(
name|String
name|data
parameter_list|)
throws|throws
name|Exception
block|{
name|JSONProvider
argument_list|<
name|Base1
argument_list|>
name|provider
init|=
operator|new
name|JSONProvider
argument_list|<
name|Base1
argument_list|>
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setUnmarshallAsJaxbElement
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|namespaceMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|namespaceMap
operator|.
name|put
argument_list|(
literal|"http://derivedtest"
argument_list|,
literal|"derivedtestnamespace"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|setNamespaceMap
argument_list|(
name|namespaceMap
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|Base1
name|base
init|=
name|provider
operator|.
name|readFrom
argument_list|(
name|Base1
operator|.
name|class
argument_list|,
name|Base1
operator|.
name|class
argument_list|,
operator|new
name|Annotation
index|[
literal|0
index|]
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"base"
argument_list|,
name|base
operator|.
name|getBase1Field
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|"Base1"
argument_list|,
name|namespace
operator|=
literal|"http://derivedtest"
argument_list|)
annotation|@
name|XmlSeeAlso
argument_list|(
block|{
name|Derived1
operator|.
name|class
block|}
argument_list|)
specifier|public
specifier|static
class|class
name|Base1
block|{
specifier|protected
name|String
name|base1Field
decl_stmt|;
name|Base1
parameter_list|()
block|{ }
name|Base1
parameter_list|(
name|String
name|base
parameter_list|)
block|{
name|base1Field
operator|=
name|base
expr_stmt|;
block|}
specifier|public
name|String
name|getBase1Field
parameter_list|()
block|{
return|return
name|base1Field
return|;
block|}
specifier|public
name|void
name|setBase1Field
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|base1Field
operator|=
name|value
expr_stmt|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|"Derived1"
argument_list|,
name|namespace
operator|=
literal|"http://derivedtest"
argument_list|)
specifier|public
specifier|static
class|class
name|Derived1
extends|extends
name|Base1
block|{
specifier|protected
name|String
name|derived1Field
decl_stmt|;
name|Derived1
parameter_list|()
block|{ }
specifier|public
name|Derived1
parameter_list|(
name|String
name|base
parameter_list|,
name|String
name|derived
parameter_list|)
block|{
name|super
argument_list|(
name|base
argument_list|)
expr_stmt|;
name|derived1Field
operator|=
name|derived
expr_stmt|;
block|}
specifier|public
name|String
name|getDerived1Field
parameter_list|()
block|{
return|return
name|derived1Field
return|;
block|}
specifier|public
name|void
name|setDerived1Field
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|derived1Field
operator|=
name|value
expr_stmt|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlRootElement
argument_list|()
specifier|public
specifier|static
class|class
name|Books
block|{
annotation|@
name|XmlMixed
annotation|@
name|XmlAnyElement
argument_list|(
name|lax
operator|=
literal|true
argument_list|)
specifier|protected
name|List
argument_list|<
name|Object
argument_list|>
name|books
decl_stmt|;
block|}
end_class

begin_class
annotation|@
name|XmlRootElement
argument_list|()
specifier|public
specifier|static
class|class
name|Books2
block|{
specifier|protected
name|List
argument_list|<
name|?
extends|extends
name|Book
argument_list|>
name|books
decl_stmt|;
specifier|public
name|void
name|setBooks
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Book
argument_list|>
name|list
parameter_list|)
block|{
name|books
operator|=
name|list
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|?
extends|extends
name|Book
argument_list|>
name|getBooks
parameter_list|()
block|{
return|return
name|books
return|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlRootElement
argument_list|()
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|""
argument_list|,
name|propOrder
operator|=
block|{
literal|"title"
block|,
literal|"comments"
block|}
argument_list|)
specifier|public
specifier|static
class|class
name|Post
block|{
specifier|private
name|String
name|title
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Comment
argument_list|>
name|comments
init|=
operator|new
name|ArrayList
argument_list|<
name|Comment
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
operator|.
name|title
operator|=
name|title
expr_stmt|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|title
return|;
block|}
specifier|public
name|void
name|setComments
parameter_list|(
name|List
argument_list|<
name|Comment
argument_list|>
name|comments
parameter_list|)
block|{
name|this
operator|.
name|comments
operator|=
name|comments
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Comment
argument_list|>
name|getComments
parameter_list|()
block|{
return|return
name|comments
return|;
block|}
block|}
end_class

begin_class
specifier|public
specifier|static
class|class
name|Comment
block|{
specifier|private
name|String
name|title
decl_stmt|;
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
operator|.
name|title
operator|=
name|title
expr_stmt|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|title
return|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|PUBLIC_MEMBER
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"store"
argument_list|)
specifier|public
specifier|static
class|class
name|Store
block|{
specifier|private
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|LinkedList
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"book"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"books"
argument_list|)
specifier|public
name|List
argument_list|<
name|Book
argument_list|>
name|getBooks
parameter_list|()
block|{
return|return
name|books
return|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|PUBLIC_MEMBER
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"theBook"
argument_list|)
specifier|public
specifier|static
class|class
name|TheBook
block|{
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|name
init|=
operator|new
name|LinkedList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Name"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"Names"
argument_list|)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|PUBLIC_MEMBER
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"store"
argument_list|,
name|namespace
operator|=
literal|"http://superbooks"
argument_list|)
specifier|public
specifier|static
class|class
name|QualifiedStore
block|{
specifier|private
name|List
argument_list|<
name|Book2
argument_list|>
name|books
init|=
operator|new
name|LinkedList
argument_list|<
name|Book2
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"thebook2"
argument_list|,
name|namespace
operator|=
literal|"http://superbooks"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"books"
argument_list|,
name|namespace
operator|=
literal|"http://superbooks"
argument_list|)
specifier|public
name|List
argument_list|<
name|Book2
argument_list|>
name|getBooks
parameter_list|()
block|{
return|return
name|books
return|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"tagholder"
argument_list|,
name|namespace
operator|=
literal|"http://tags"
argument_list|)
specifier|public
specifier|static
class|class
name|TagVO2Holder
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"thetag"
argument_list|,
name|namespace
operator|=
literal|"http://tags"
argument_list|)
specifier|private
name|TagVO2
name|t
decl_stmt|;
annotation|@
name|XmlAttribute
specifier|private
name|String
name|attr
init|=
literal|"attribute"
decl_stmt|;
specifier|public
name|void
name|setTag
parameter_list|(
name|TagVO2
name|tag
parameter_list|)
block|{
name|this
operator|.
name|t
operator|=
name|tag
expr_stmt|;
block|}
specifier|public
name|TagVO2
name|getTagValue
parameter_list|()
block|{
return|return
name|t
return|;
block|}
specifier|public
name|String
name|getAttribute
parameter_list|()
block|{
return|return
name|attr
return|;
block|}
block|}
end_class

begin_interface
interface|interface
name|ReportService
block|{
name|List
argument_list|<
name|ReportDefinition
argument_list|>
name|findAllReports
parameter_list|()
function_decl|;
name|ReportDefinition
name|findReport
parameter_list|()
function_decl|;
block|}
end_interface

begin_class
specifier|public
specifier|static
class|class
name|ParameterDefinition
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|public
name|ParameterDefinition
parameter_list|()
block|{         }
specifier|public
name|ParameterDefinition
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
block|}
end_class

begin_class
annotation|@
name|XmlRootElement
specifier|public
specifier|static
class|class
name|ReportDefinition
block|{
specifier|private
name|String
name|reportName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ParameterDefinition
argument_list|>
name|parameterList
decl_stmt|;
specifier|public
name|ReportDefinition
parameter_list|()
block|{                 }
specifier|public
name|ReportDefinition
parameter_list|(
name|String
name|reportName
parameter_list|)
block|{
name|this
operator|.
name|reportName
operator|=
name|reportName
expr_stmt|;
block|}
specifier|public
name|String
name|getReportName
parameter_list|()
block|{
return|return
name|reportName
return|;
block|}
specifier|public
name|void
name|setReportName
parameter_list|(
name|String
name|reportName
parameter_list|)
block|{
name|this
operator|.
name|reportName
operator|=
name|reportName
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ParameterDefinition
argument_list|>
name|getParameterList
parameter_list|()
block|{
return|return
name|parameterList
return|;
block|}
specifier|public
name|void
name|setParameterList
parameter_list|(
name|List
argument_list|<
name|ParameterDefinition
argument_list|>
name|parameterList
parameter_list|)
block|{
name|this
operator|.
name|parameterList
operator|=
name|parameterList
expr_stmt|;
block|}
specifier|public
name|void
name|addParameterDefinition
parameter_list|(
name|ParameterDefinition
name|parameterDefinition
parameter_list|)
block|{
if|if
condition|(
name|parameterList
operator|==
literal|null
condition|)
block|{
name|parameterList
operator|=
operator|new
name|ArrayList
argument_list|<
name|ParameterDefinition
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|parameterList
operator|.
name|add
argument_list|(
name|parameterDefinition
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_class
specifier|private
specifier|static
class|class
name|EmptyListWriter
extends|extends
name|DelegatingXMLStreamWriter
block|{
specifier|private
name|int
name|count
decl_stmt|;
specifier|public
name|EmptyListWriter
parameter_list|(
name|XMLStreamWriter
name|writer
parameter_list|)
block|{
name|super
argument_list|(
name|writer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeCharacters
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|XMLStreamException
block|{         }
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|p
parameter_list|,
name|String
name|local
parameter_list|,
name|String
name|uri
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
literal|"group"
operator|.
name|equals
argument_list|(
name|local
argument_list|)
operator|||
literal|"name"
operator|.
name|equals
argument_list|(
name|local
argument_list|)
condition|)
block|{
name|count
operator|++
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|writeStartElement
argument_list|(
name|p
argument_list|,
name|local
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|writeEndElement
parameter_list|()
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|count
operator|==
literal|0
condition|)
block|{
name|super
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|count
operator|--
expr_stmt|;
block|}
block|}
block|}
end_class

begin_class
specifier|private
specifier|static
class|class
name|NullWriter
extends|extends
name|DelegatingXMLStreamWriter
block|{
specifier|public
name|NullWriter
parameter_list|(
name|XMLStreamWriter
name|writer
parameter_list|)
block|{
name|super
argument_list|(
name|writer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeCharacters
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|text
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
name|super
operator|.
name|writeCharacters
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|writeCharacters
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|namespace
operator|=
literal|"http://testbean"
argument_list|)
specifier|public
specifier|static
class|class
name|TestBean
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|id
decl_stmt|;
specifier|public
name|TestBean
parameter_list|()
block|{                      }
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
annotation|@
name|XmlAttribute
argument_list|(
name|namespace
operator|=
literal|"http://testbean"
argument_list|)
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
block|}
end_class

unit|}
end_unit

