begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|aegis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|InvalidPropertiesFormatException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|resources
operator|.
name|AegisTestBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|AegisElementProviderTest
extends|extends
name|Assert
block|{
specifier|private
name|Properties
name|properties
decl_stmt|;
specifier|private
name|String
name|simpleBeanXml
decl_stmt|;
specifier|private
name|String
name|noNamespaceXml
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|InvalidPropertiesFormatException
throws|,
name|IOException
block|{
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|properties
operator|.
name|loadFromXML
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"jsonCases.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|simpleBeanXml
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"simpleBeanXml"
argument_list|)
expr_stmt|;
name|noNamespaceXml
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"noNamespaceBeanXml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|clearCache
parameter_list|()
block|{
name|AbstractAegisProvider
operator|.
name|clearContexts
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsWriteable
parameter_list|()
block|{
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|p
operator|.
name|isWriteable
argument_list|(
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsReadable
parameter_list|()
block|{
name|MessageBodyReader
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|p
operator|.
name|isReadable
argument_list|(
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadFrom
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyReader
argument_list|<
name|AegisTestBean
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|byte
index|[]
name|simpleBytes
init|=
name|simpleBeanXml
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
name|AegisTestBean
name|bean
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|simpleBytes
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hovercraft"
argument_list|,
name|bean
operator|.
name|getStrValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|bean
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoNamespaceReadFrom
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyReader
argument_list|<
name|AegisTestBean
argument_list|>
name|p
init|=
operator|new
name|NoNamespaceAegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|noNamespaceXml
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
name|AegisTestBean
name|bean
init|=
name|p
operator|.
name|readFrom
argument_list|(
name|AegisTestBean
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hovercraft"
argument_list|,
name|bean
operator|.
name|getStrValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|bean
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteTo
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|AegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|AegisTestBean
name|bean
init|=
operator|new
name|AegisTestBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setBoolValue
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setStrValue
argument_list|(
literal|"hovercraft"
argument_list|)
expr_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|bean
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|os
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|String
name|xml
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|simpleBeanXml
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoNamespaceWriteTo
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageBodyWriter
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|NoNamespaceAegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|AegisTestBean
name|bean
init|=
operator|new
name|AegisTestBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setBoolValue
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setStrValue
argument_list|(
literal|"hovercraft"
argument_list|)
expr_stmt|;
name|p
operator|.
name|writeTo
argument_list|(
name|bean
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|os
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|String
name|xml
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|noNamespaceXml
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadWriteComplexMap
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|AegisSuperBean
argument_list|>
name|testMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|InterfaceWithMap
argument_list|>
name|iwithMapClass
init|=
name|InterfaceWithMap
operator|.
name|class
decl_stmt|;
name|Method
name|method
init|=
name|iwithMapClass
operator|.
name|getMethod
argument_list|(
literal|"mapFunction"
argument_list|)
decl_stmt|;
name|Type
name|mapType
init|=
name|method
operator|.
name|getGenericReturnType
argument_list|()
decl_stmt|;
name|AegisTestBean
name|bean
init|=
operator|new
name|AegisTestBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setBoolValue
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setStrValue
argument_list|(
literal|"hovercraft"
argument_list|)
expr_stmt|;
name|AegisSuperBean
name|bean2
init|=
operator|new
name|AegisSuperBean
argument_list|()
decl_stmt|;
name|bean2
operator|.
name|setBoolValue
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean2
operator|.
name|setStrValue
argument_list|(
literal|"hovercraft2"
argument_list|)
expr_stmt|;
name|testMap
operator|.
name|put
argument_list|(
name|bean
argument_list|,
name|bean2
argument_list|)
expr_stmt|;
name|MessageBodyWriter
argument_list|<
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|AegisSuperBean
argument_list|>
argument_list|>
name|writer
init|=
operator|new
name|AegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|writer
operator|.
name|writeTo
argument_list|(
name|testMap
argument_list|,
name|testMap
operator|.
name|getClass
argument_list|()
argument_list|,
name|mapType
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|os
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|String
name|xml
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|MessageBodyReader
argument_list|<
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|AegisSuperBean
argument_list|>
argument_list|>
name|reader
init|=
operator|new
name|AegisElementProvider
argument_list|<>
argument_list|()
decl_stmt|;
name|byte
index|[]
name|simpleBytes
init|=
name|xml
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|AegisSuperBean
argument_list|>
name|map2
init|=
name|reader
operator|.
name|readFrom
argument_list|(
literal|null
argument_list|,
name|mapType
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|,
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM_TYPE
argument_list|,
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|simpleBytes
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|map2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|AegisTestBean
argument_list|,
name|AegisSuperBean
argument_list|>
name|entry
init|=
name|map2
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|AegisTestBean
name|bean1
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hovercraft"
argument_list|,
name|bean1
operator|.
name|getStrValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|bean1
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
name|AegisTestBean
name|bean22
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hovercraft2"
argument_list|,
name|bean22
operator|.
name|getStrValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|bean22
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|AegisSuperBean
extends|extends
name|AegisTestBean
block|{     }
specifier|private
interface|interface
name|InterfaceWithMap
block|{
name|Map
argument_list|<
name|AegisTestBean
argument_list|,
name|AegisSuperBean
argument_list|>
name|mapFunction
parameter_list|()
function_decl|;
block|}
block|}
end_class

end_unit

