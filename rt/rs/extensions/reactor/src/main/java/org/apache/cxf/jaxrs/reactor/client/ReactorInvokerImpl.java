begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|reactor
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|ParameterizedType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|reactor
operator|.
name|client
operator|.
name|ReactorUtils
operator|.
name|TRACE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|reactor
operator|.
name|client
operator|.
name|ReactorUtils
operator|.
name|toCompletableFuture
import|;
end_import

begin_import
import|import
name|reactor
operator|.
name|core
operator|.
name|publisher
operator|.
name|Flux
import|;
end_import

begin_import
import|import
name|reactor
operator|.
name|core
operator|.
name|publisher
operator|.
name|Mono
import|;
end_import

begin_class
specifier|public
class|class
name|ReactorInvokerImpl
implements|implements
name|ReactorInvoker
block|{
specifier|private
specifier|final
name|WebClient
name|webClient
decl_stmt|;
specifier|private
specifier|final
name|ExecutorService
name|executorService
decl_stmt|;
name|ReactorInvokerImpl
parameter_list|(
name|WebClient
name|webClient
parameter_list|,
name|ExecutorService
name|executorService
parameter_list|)
block|{
name|this
operator|.
name|webClient
operator|=
name|webClient
expr_stmt|;
name|this
operator|.
name|executorService
operator|=
name|executorService
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|get
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|get
parameter_list|(
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|getFlux
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|flux
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|get
parameter_list|(
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|putFlux
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|flux
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|postFlux
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|flux
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|delete
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|delete
parameter_list|(
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|deleteFlux
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|flux
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|delete
parameter_list|(
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|head
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|HEAD
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|options
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|options
parameter_list|(
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|optionsFlux
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|flux
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|options
parameter_list|(
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|trace
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|TRACE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|trace
parameter_list|(
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|TRACE
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|traceFlux
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|flux
argument_list|(
name|TRACE
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|trace
parameter_list|(
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|TRACE
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|name
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|mono
argument_list|(
name|webClient
operator|.
name|async
argument_list|()
operator|.
name|method
argument_list|(
name|name
argument_list|,
name|responseType
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|mono
argument_list|(
name|webClient
operator|.
name|async
argument_list|()
operator|.
name|method
argument_list|(
name|name
argument_list|,
name|genericType
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Mono
argument_list|<
name|Response
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|name
argument_list|,
name|entity
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|R
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|mono
argument_list|(
name|webClient
operator|.
name|async
argument_list|()
operator|.
name|method
argument_list|(
name|name
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|flux
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
name|Future
argument_list|<
name|Response
argument_list|>
name|futureResponse
init|=
name|webClient
operator|.
name|async
argument_list|()
operator|.
name|method
argument_list|(
name|name
argument_list|,
name|entity
argument_list|)
decl_stmt|;
return|return
name|Flux
operator|.
name|fromIterable
argument_list|(
name|toIterable
argument_list|(
name|futureResponse
argument_list|,
name|responseType
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Flux
argument_list|<
name|T
argument_list|>
name|flux
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
name|Future
argument_list|<
name|Response
argument_list|>
name|futureResponse
init|=
name|webClient
operator|.
name|async
argument_list|()
operator|.
name|method
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|Flux
operator|.
name|fromIterable
argument_list|(
name|toIterable
argument_list|(
name|futureResponse
argument_list|,
name|responseType
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|R
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|mono
argument_list|(
name|webClient
operator|.
name|async
argument_list|()
operator|.
name|method
argument_list|(
name|name
argument_list|,
name|entity
argument_list|,
name|genericType
argument_list|)
argument_list|)
return|;
block|}
specifier|private
parameter_list|<
name|R
parameter_list|>
name|Mono
argument_list|<
name|R
argument_list|>
name|mono
parameter_list|(
name|Future
argument_list|<
name|R
argument_list|>
name|future
parameter_list|)
block|{
return|return
name|Mono
operator|.
name|fromFuture
argument_list|(
name|toCompletableFuture
argument_list|(
name|future
argument_list|,
name|executorService
argument_list|)
argument_list|)
return|;
block|}
specifier|private
parameter_list|<
name|R
parameter_list|>
name|Iterable
argument_list|<
name|R
argument_list|>
name|toIterable
parameter_list|(
name|Future
argument_list|<
name|Response
argument_list|>
name|futureResponse
parameter_list|,
name|Class
argument_list|<
name|R
argument_list|>
name|type
parameter_list|)
block|{
try|try
block|{
name|Response
name|response
init|=
name|futureResponse
operator|.
name|get
argument_list|()
decl_stmt|;
name|GenericType
argument_list|<
name|List
argument_list|<
name|R
argument_list|>
argument_list|>
name|rGenericType
init|=
operator|new
name|GenericType
argument_list|<>
argument_list|(
operator|new
name|WrappedType
argument_list|<
name|R
argument_list|>
argument_list|(
name|type
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|readEntity
argument_list|(
name|rGenericType
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
decl||
name|ExecutionException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CompletionException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
class|class
name|WrappedType
parameter_list|<
name|R
parameter_list|>
implements|implements
name|ParameterizedType
block|{
specifier|private
specifier|final
name|Class
argument_list|<
name|R
argument_list|>
name|rClass
decl_stmt|;
name|WrappedType
parameter_list|(
name|Class
argument_list|<
name|R
argument_list|>
name|rClass
parameter_list|)
block|{
name|this
operator|.
name|rClass
operator|=
name|rClass
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Type
index|[]
name|getActualTypeArguments
parameter_list|()
block|{
return|return
operator|new
name|Type
index|[]
block|{
name|rClass
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|Type
name|getRawType
parameter_list|()
block|{
return|return
name|List
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|public
name|Type
name|getOwnerType
parameter_list|()
block|{
return|return
name|List
operator|.
name|class
return|;
block|}
block|}
block|}
end_class

end_unit

