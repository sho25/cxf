begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|basic
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
specifier|public
class|class
name|JsonMapObjectTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetIntegerProperty
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|json
init|=
literal|"{\"a\":123,\"b\":\"456\"}"
decl_stmt|;
specifier|final
name|JsonMapObject
name|obj
init|=
operator|new
name|JsonMapObject
argument_list|()
decl_stmt|;
operator|new
name|JsonMapObjectReaderWriter
argument_list|()
operator|.
name|fromJson
argument_list|(
name|obj
argument_list|,
name|json
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|123
argument_list|)
argument_list|,
name|obj
operator|.
name|getIntegerProperty
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|456
argument_list|)
argument_list|,
name|obj
operator|.
name|getIntegerProperty
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetUpdateCount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|JsonMapObject
name|obj
init|=
operator|new
name|JsonMapObject
argument_list|()
decl_stmt|;
specifier|final
name|String
name|key
init|=
literal|"key"
decl_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
name|key
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|obj
operator|.
name|getUpdateCount
argument_list|()
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
name|key
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|obj
operator|.
name|getUpdateCount
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|2
argument_list|)
argument_list|,
name|obj
operator|.
name|getIntegerProperty
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
name|key
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|obj
operator|.
name|getUpdateCount
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|3
argument_list|)
argument_list|,
name|obj
operator|.
name|getIntegerProperty
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

