begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_class
specifier|public
class|class
name|Key
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|400974121100289840L
decl_stmt|;
specifier|private
name|int
name|hash
decl_stmt|;
specifier|private
name|URI
name|uri
decl_stmt|;
specifier|private
name|String
name|accept
decl_stmt|;
specifier|public
name|Key
parameter_list|(
specifier|final
name|URI
name|uri
parameter_list|,
specifier|final
name|String
name|accept
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
name|this
operator|.
name|accept
operator|=
name|accept
expr_stmt|;
name|int
name|result
init|=
name|uri
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|accept
operator|!=
literal|null
condition|?
name|accept
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
name|this
operator|.
name|hash
operator|=
name|result
expr_stmt|;
block|}
specifier|public
name|Key
parameter_list|()
block|{
comment|// no-op
block|}
specifier|public
name|URI
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
specifier|public
name|void
name|setUri
parameter_list|(
specifier|final
name|URI
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
specifier|public
name|String
name|getAccept
parameter_list|()
block|{
return|return
name|accept
return|;
block|}
specifier|public
name|void
name|setAccept
parameter_list|(
specifier|final
name|String
name|accept
parameter_list|)
block|{
name|this
operator|.
name|accept
operator|=
name|accept
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|Key
operator|.
name|class
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
specifier|final
name|Key
name|key
init|=
name|Key
operator|.
name|class
operator|.
name|cast
argument_list|(
name|o
argument_list|)
decl_stmt|;
return|return
operator|!
operator|(
name|accept
operator|!=
literal|null
condition|?
operator|!
name|accept
operator|.
name|equals
argument_list|(
name|key
operator|.
name|accept
argument_list|)
else|:
name|key
operator|.
name|accept
operator|!=
literal|null
operator|)
operator|&&
name|uri
operator|.
name|equals
argument_list|(
name|key
operator|.
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|hash
return|;
block|}
block|}
end_class

end_unit

