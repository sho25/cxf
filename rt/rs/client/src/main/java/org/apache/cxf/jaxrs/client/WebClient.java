begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|ParameterizedType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ProcessingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|AsyncInvoker
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|InvocationCallback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|SyncInvoker
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|EntityTag
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Form
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericEntity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|PathSegment
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|ResponseBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ResponseImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|UriBuilderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ParameterType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|URITemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|HttpUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|InjectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ParameterizedCollectionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|AbstractPhaseInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_comment
comment|/**  * Http-centric web client  *  */
end_comment

begin_class
specifier|public
class|class
name|WebClient
extends|extends
name|AbstractClient
block|{
specifier|private
specifier|static
specifier|final
name|String
name|REQUEST_CLASS
init|=
literal|"request.class"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REQUEST_TYPE
init|=
literal|"request.type"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RESPONSE_CLASS
init|=
literal|"response.class"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RESPONSE_TYPE
init|=
literal|"response.type"
decl_stmt|;
specifier|protected
name|WebClient
parameter_list|(
name|String
name|baseAddress
parameter_list|)
block|{
name|this
argument_list|(
name|convertStringToURI
argument_list|(
name|baseAddress
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|WebClient
parameter_list|(
name|URI
name|baseURI
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|LocalClientState
argument_list|(
name|baseURI
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|WebClient
parameter_list|(
name|ClientState
name|state
parameter_list|)
block|{
name|super
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|ClientAsyncResponseInterceptor
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates WebClient      * @param baseAddress baseAddress      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient      * @param baseURI baseURI      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|URI
name|baseURI
parameter_list|)
block|{
return|return
name|create
argument_list|(
name|baseURI
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Creates WebClient      * @param baseURI baseURI      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseURI
parameter_list|,
name|boolean
name|threadSafe
parameter_list|)
block|{
return|return
name|create
argument_list|(
name|baseURI
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|threadSafe
argument_list|)
return|;
block|}
comment|/**      * Creates WebClient      * @param baseURI baseURI      * @param providers list of providers      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|List
argument_list|<
name|?
argument_list|>
name|providers
parameter_list|)
block|{
return|return
name|create
argument_list|(
name|baseAddress
argument_list|,
name|providers
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Creates WebClient      * @param baseURI baseURI      * @param providers list of providers      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|List
argument_list|<
name|?
argument_list|>
name|providers
parameter_list|,
name|boolean
name|threadSafe
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
name|getBean
argument_list|(
name|baseAddress
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
if|if
condition|(
name|threadSafe
condition|)
block|{
name|bean
operator|.
name|setInitialState
argument_list|(
operator|new
name|ThreadLocalClientState
argument_list|(
name|baseAddress
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient      * @param baseAddress baseAddress      * @param providers list of providers      * @param configLocation classpath location of the configuration resource, can be null        * @return WebClient instance      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|List
argument_list|<
name|?
argument_list|>
name|providers
parameter_list|,
name|String
name|configLocation
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
name|getBean
argument_list|(
name|baseAddress
argument_list|,
name|configLocation
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient with a list of custom features      * @param baseAddress baseAddress      * @param providers list of providers      * @param features the features which will be applied to the client      * @param configLocation classpath location of the configuration resource, can be null      * @return WebClient instance      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|List
argument_list|<
name|?
argument_list|>
name|providers
parameter_list|,
name|List
argument_list|<
name|?
extends|extends
name|Feature
argument_list|>
name|features
parameter_list|,
name|String
name|configLocation
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
name|getBean
argument_list|(
name|baseAddress
argument_list|,
name|configLocation
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setFeatures
argument_list|(
name|features
argument_list|)
expr_stmt|;
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient      * @param baseAddress baseAddress      * @param configLocation classpath location of the configuration resource, can be null        * @return WebClient instance      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|String
name|configLocation
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
name|getBean
argument_list|(
name|baseAddress
argument_list|,
name|configLocation
argument_list|)
decl_stmt|;
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient which will do basic authentication      * @param baseAddress baseAddress      * @param username username      * @param password password      * @param configLocation classpath location of the configuration resource, can be null        * @return WebClient instance      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|String
name|configLocation
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
name|getBean
argument_list|(
name|baseAddress
argument_list|,
name|configLocation
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient which will do basic authentication      * @param baseAddress baseAddress      * @param providers list of providers      * @param username username      * @param password password      * @param configLocation classpath location of the configuration resource, can be null        * @return WebClient instance      */
specifier|public
specifier|static
name|WebClient
name|create
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|List
argument_list|<
name|?
argument_list|>
name|providers
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|String
name|configLocation
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
name|getBean
argument_list|(
name|baseAddress
argument_list|,
name|configLocation
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProviders
argument_list|(
name|providers
argument_list|)
expr_stmt|;
return|return
name|bean
operator|.
name|createWebClient
argument_list|()
return|;
block|}
comment|/**      * Creates WebClient, baseURI will be set to Client currentURI      * @param client existing client      */
specifier|public
specifier|static
name|WebClient
name|fromClient
parameter_list|(
name|Client
name|client
parameter_list|)
block|{
return|return
name|fromClient
argument_list|(
name|client
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/**      * Creates WebClient, baseURI will be set to Client currentURI      * @param client existing client      * @param inheritHeaders  if existing Client headers can be inherited by new client       */
specifier|public
specifier|static
name|WebClient
name|fromClient
parameter_list|(
name|Client
name|client
parameter_list|,
name|boolean
name|inheritHeaders
parameter_list|)
block|{
name|WebClient
name|webClient
init|=
literal|null
decl_stmt|;
name|ClientState
name|clientState
init|=
name|getClientState
argument_list|(
name|client
argument_list|)
decl_stmt|;
if|if
condition|(
name|clientState
operator|==
literal|null
condition|)
block|{
name|webClient
operator|=
name|create
argument_list|(
name|client
operator|.
name|getCurrentURI
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|inheritHeaders
condition|)
block|{
name|webClient
operator|.
name|headers
argument_list|(
name|client
operator|.
name|getHeaders
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|inheritHeaders
condition|?
name|client
operator|.
name|getHeaders
argument_list|()
else|:
literal|null
decl_stmt|;
name|webClient
operator|=
operator|new
name|WebClient
argument_list|(
name|clientState
operator|.
name|newState
argument_list|(
name|client
operator|.
name|getCurrentURI
argument_list|()
argument_list|,
name|headers
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|copyProperties
argument_list|(
name|webClient
argument_list|,
name|client
argument_list|)
expr_stmt|;
return|return
name|webClient
return|;
block|}
comment|/**      * Converts object to Client      * @param object the object      * @return Client object converted to Client       */
specifier|public
specifier|static
name|Client
name|client
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|instanceof
name|Client
condition|)
block|{
return|return
operator|(
name|Client
operator|)
name|object
return|;
block|}
return|return
literal|null
return|;
block|}
comment|/**      * Retieves ClientConfiguration      * @param client proxy or http-centric Client      * @return underlying ClientConfiguration instance       */
specifier|public
specifier|static
name|ClientConfiguration
name|getConfig
parameter_list|(
name|Object
name|client
parameter_list|)
block|{
if|if
condition|(
name|client
operator|instanceof
name|Client
condition|)
block|{
if|if
condition|(
name|client
operator|instanceof
name|WebClient
condition|)
block|{
return|return
operator|(
operator|(
name|AbstractClient
operator|)
name|client
operator|)
operator|.
name|getConfiguration
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|client
operator|instanceof
name|InvocationHandlerAware
condition|)
block|{
name|Object
name|handler
init|=
operator|(
operator|(
name|InvocationHandlerAware
operator|)
name|client
operator|)
operator|.
name|getInvocationHandler
argument_list|()
decl_stmt|;
return|return
operator|(
operator|(
name|AbstractClient
operator|)
name|handler
operator|)
operator|.
name|getConfiguration
argument_list|()
return|;
block|}
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Not a valid Client"
argument_list|)
throw|;
block|}
comment|/**      * Does HTTP invocation      * @param httpMethod HTTP method      * @param body request body, can be null      * @return JAXRS Response, entity may hold a string representaion of       *         error message if client or server error occured      */
specifier|public
name|Response
name|invoke
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|)
block|{
return|return
name|doInvoke
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
literal|null
argument_list|,
name|Response
operator|.
name|class
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Does HTTP POST invocation      * @param body request body, can be null      * @return JAXRS Response      */
specifier|public
name|Response
name|post
parameter_list|(
name|Object
name|body
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|body
argument_list|)
return|;
block|}
comment|/**      * Does HTTP PUT invocation      * @param body request body, can be null      * @return JAXRS Response      */
specifier|public
name|Response
name|put
parameter_list|(
name|Object
name|body
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|body
argument_list|)
return|;
block|}
comment|/**      * Does HTTP GET invocation      * @return JAXRS Response      */
specifier|public
name|Response
name|get
parameter_list|()
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Does HTTP HEAD invocation      * @return JAXRS Response      */
specifier|public
name|Response
name|head
parameter_list|()
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|HEAD
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Does HTTP OPTIONS invocation      * @return JAXRS Response      */
specifier|public
name|Response
name|options
parameter_list|()
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Does HTTP DELETE invocation      * @return JAXRS Response      */
specifier|public
name|Response
name|delete
parameter_list|()
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**      * Posts form data      * @param values form values      * @return JAXRS Response      */
specifier|public
name|Response
name|form
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|values
parameter_list|)
block|{
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
return|return
name|doInvoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|values
argument_list|,
literal|null
argument_list|,
name|Response
operator|.
name|class
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Posts form data      * @param form form values      * @return JAXRS Response      */
specifier|public
name|Response
name|form
parameter_list|(
name|Form
name|form
parameter_list|)
block|{
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
expr_stmt|;
return|return
name|doInvoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|form
operator|.
name|asMap
argument_list|()
argument_list|,
literal|null
argument_list|,
name|Response
operator|.
name|class
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Does HTTP invocation and returns types response object       * @param httpMethod HTTP method       * @param body request body, can be null      * @param responseType generic response type      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|invoke
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
init|=
operator|(
name|Class
argument_list|<
name|T
argument_list|>
operator|)
name|responseType
operator|.
name|getRawType
argument_list|()
decl_stmt|;
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
literal|null
argument_list|,
name|responseClass
argument_list|,
name|responseType
operator|.
name|getType
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|responseClass
operator|.
name|cast
argument_list|(
name|responseClass
operator|==
name|Response
operator|.
name|class
condition|?
name|r
else|:
name|r
operator|.
name|getEntity
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Does HTTP invocation and returns types response object       * @param httpMethod HTTP method       * @param body request body, can be null      * @param responseClass expected type of response object      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|invoke
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
parameter_list|)
block|{
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
literal|null
argument_list|,
name|responseClass
argument_list|,
name|responseClass
argument_list|)
decl_stmt|;
return|return
name|responseClass
operator|.
name|cast
argument_list|(
name|responseClass
operator|==
name|Response
operator|.
name|class
condition|?
name|r
else|:
name|r
operator|.
name|getEntity
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Does HTTP invocation and returns types response object       * @param httpMethod HTTP method       * @param body request body, can be null      * @param requestClass request body class      * @param responseClass expected type of response object      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|invoke
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
parameter_list|)
block|{
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
name|requestClass
argument_list|,
literal|null
argument_list|,
name|responseClass
argument_list|,
name|responseClass
argument_list|)
decl_stmt|;
return|return
name|responseClass
operator|.
name|cast
argument_list|(
name|responseClass
operator|==
name|Response
operator|.
name|class
condition|?
name|r
else|:
name|r
operator|.
name|getEntity
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Does HTTP POST invocation and returns typed response object      * @param body request body, can be null      * @param responseClass expected type of response object      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|post
parameter_list|(
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|body
argument_list|,
name|responseClass
argument_list|)
return|;
block|}
comment|/**      * Does HTTP POST invocation and returns typed response object      * @param body request body, can be null      * @param responseType generic response type      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|post
parameter_list|(
name|Object
name|body
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|body
argument_list|,
name|responseType
argument_list|)
return|;
block|}
comment|/**      * Does HTTP Async POST invocation and returns Future.      * Shortcut for async().post(Entity, InvocationCallback)      * @param callback invocation callback       * @return the future      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|post
parameter_list|(
name|Object
name|body
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|doInvokeAsyncCallback
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|body
argument_list|,
name|body
operator|.
name|getClass
argument_list|()
argument_list|,
literal|null
argument_list|,
name|callback
argument_list|)
return|;
block|}
comment|/**      * Does HTTP PUT invocation and returns typed response object      * @param body request body, can be null      * @param responseClass expected type of response object      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|put
parameter_list|(
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|body
argument_list|,
name|responseClass
argument_list|)
return|;
block|}
comment|/**      * Does HTTP PUT invocation and returns typed response object      * @param body request body, can be null      * @param responseType generic response type      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|put
parameter_list|(
name|Object
name|body
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|body
argument_list|,
name|responseType
argument_list|)
return|;
block|}
comment|/**      * Does HTTP Async PUT invocation and returns Future.      * Shortcut for async().put(Entity, InvocationCallback)      * @param callback invocation callback       * @return the future      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|put
parameter_list|(
name|Object
name|body
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|doInvokeAsyncCallback
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|body
argument_list|,
name|body
operator|.
name|getClass
argument_list|()
argument_list|,
literal|null
argument_list|,
name|callback
argument_list|)
return|;
block|}
comment|/**      * Does HTTP invocation and returns a collection of typed objects       * @param httpMethod HTTP method       * @param body request body, can be null      * @param memberClass expected type of collection member class      * @return typed collection      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Collection
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|invokeAndGetCollection
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|memberClass
parameter_list|)
block|{
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
literal|null
argument_list|,
name|Collection
operator|.
name|class
argument_list|,
operator|new
name|ParameterizedCollectionType
argument_list|(
name|memberClass
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Collection
argument_list|<
name|?
argument_list|>
operator|)
name|r
operator|.
name|getEntity
argument_list|()
argument_list|,
name|memberClass
argument_list|)
return|;
block|}
comment|/**      * Posts a collection of typed objects       * @param collection request body      * @param memberClass type of collection member class      * @return JAX-RS Response      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Response
name|postCollection
parameter_list|(
name|Object
name|collection
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|memberClass
parameter_list|)
block|{
return|return
name|doInvoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|collection
argument_list|,
operator|new
name|ParameterizedCollectionType
argument_list|(
name|memberClass
argument_list|)
argument_list|,
name|Response
operator|.
name|class
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Posts a collection of typed objects       * @param collection request body      * @param memberClass type of collection member class      * @param responseClass expected type of response object      * @return JAX-RS Response      */
specifier|public
parameter_list|<
name|T1
parameter_list|,
name|T2
parameter_list|>
name|T2
name|postCollection
parameter_list|(
name|Object
name|collection
parameter_list|,
name|Class
argument_list|<
name|T1
argument_list|>
name|memberClass
parameter_list|,
name|Class
argument_list|<
name|T2
argument_list|>
name|responseClass
parameter_list|)
block|{
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|collection
argument_list|,
operator|new
name|ParameterizedCollectionType
argument_list|(
name|memberClass
argument_list|)
argument_list|,
name|responseClass
argument_list|,
name|responseClass
argument_list|)
decl_stmt|;
return|return
name|responseClass
operator|.
name|cast
argument_list|(
name|responseClass
operator|==
name|Response
operator|.
name|class
condition|?
name|r
else|:
name|r
operator|.
name|getEntity
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Posts collection of typed objects and returns a collection of typed objects      * @param collection request body      * @param memberClass type of collection member class      * @param responseClass expected type of response object      * @return JAX-RS Response      */
specifier|public
parameter_list|<
name|T1
parameter_list|,
name|T2
parameter_list|>
name|Collection
argument_list|<
name|?
extends|extends
name|T2
argument_list|>
name|postAndGetCollection
parameter_list|(
name|Object
name|collection
parameter_list|,
name|Class
argument_list|<
name|T1
argument_list|>
name|memberClass
parameter_list|,
name|Class
argument_list|<
name|T2
argument_list|>
name|responseClass
parameter_list|)
block|{
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|collection
argument_list|,
operator|new
name|ParameterizedCollectionType
argument_list|(
name|memberClass
argument_list|)
argument_list|,
name|Collection
operator|.
name|class
argument_list|,
operator|new
name|ParameterizedCollectionType
argument_list|(
name|responseClass
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Collection
argument_list|<
name|?
argument_list|>
operator|)
name|r
operator|.
name|getEntity
argument_list|()
argument_list|,
name|responseClass
argument_list|)
return|;
block|}
comment|/**      * Posts the object and returns a collection of typed objects      * @param body request body      * @param memberClass type of collection member class      * @param responseClass expected type of response object      * @return JAX-RS Response      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Collection
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|postObjectGetCollection
parameter_list|(
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
parameter_list|)
block|{
name|Response
name|r
init|=
name|doInvoke
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|body
argument_list|,
literal|null
argument_list|,
name|Collection
operator|.
name|class
argument_list|,
operator|new
name|ParameterizedCollectionType
argument_list|(
name|responseClass
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Collection
argument_list|<
name|?
argument_list|>
operator|)
name|r
operator|.
name|getEntity
argument_list|()
argument_list|,
name|responseClass
argument_list|)
return|;
block|}
comment|/**      * Posts request body and returns a collection of typed objects       * @param body request body, can be null      * @param memberClass expected type of collection member class      * @return typed collection      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Collection
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|postAndGetCollection
parameter_list|(
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|memberClass
parameter_list|)
block|{
return|return
name|invokeAndGetCollection
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|body
argument_list|,
name|memberClass
argument_list|)
return|;
block|}
comment|/**      * Does HTTP GET invocation and returns a collection of typed objects       * @param body request body, can be null      * @param memberClass expected type of collection member class      * @return typed collection      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Collection
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|getCollection
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|memberClass
parameter_list|)
block|{
return|return
name|invokeAndGetCollection
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
literal|null
argument_list|,
name|memberClass
argument_list|)
return|;
block|}
comment|/**      * Does HTTP GET invocation and returns typed response object      * @param body request body, can be null      * @param responseClass expected type of response object      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|get
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseClass
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
literal|null
argument_list|,
name|responseClass
argument_list|)
return|;
block|}
comment|/**      * Does HTTP GET invocation and returns typed response object      * @param responseType generic response type      * @return typed object, can be null. Response status code and headers       *         can be obtained too, see Client.getResponse()      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|get
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
literal|null
argument_list|,
name|responseType
argument_list|)
return|;
block|}
comment|/**      * Does HTTP Async GET invocation and returns Future.      * Shortcut for async().get(InvocationCallback)      * @param callback invocation callback       * @return the future      */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|get
parameter_list|(
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|doInvokeAsyncCallback
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|callback
argument_list|)
return|;
block|}
comment|/**      * Updates the current URI path      * @param path new relative path segment      * @return updated WebClient      */
specifier|public
name|WebClient
name|path
parameter_list|(
name|Object
name|path
parameter_list|)
block|{
name|getCurrentBuilder
argument_list|()
operator|.
name|path
argument_list|(
name|convertParamValue
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Updates the current URI path with path segment which may contain template variables      * @param path new relative path segment      * @param values template variable values      * @return updated WebClient      */
specifier|public
name|WebClient
name|path
parameter_list|(
name|String
name|path
parameter_list|,
name|Object
modifier|...
name|values
parameter_list|)
block|{
name|URI
name|u
init|=
name|UriBuilder
operator|.
name|fromUri
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"http://tempuri"
argument_list|)
argument_list|)
operator|.
name|path
argument_list|(
name|path
argument_list|)
operator|.
name|buildFromEncoded
argument_list|(
name|values
argument_list|)
decl_stmt|;
name|getState
argument_list|()
operator|.
name|setTemplates
argument_list|(
name|getTemplateParametersMap
argument_list|(
operator|new
name|URITemplate
argument_list|(
name|path
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|values
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
argument_list|(
name|u
operator|.
name|getRawPath
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Updates the current URI query parameters      * @param name query name      * @param values query values      * @return updated WebClient      */
specifier|public
name|WebClient
name|query
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
modifier|...
name|values
parameter_list|)
block|{
name|addMatrixQueryParamsToBuilder
argument_list|(
name|getCurrentBuilder
argument_list|()
argument_list|,
name|name
argument_list|,
name|ParameterType
operator|.
name|QUERY
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Updates the current URI matrix parameters      * @param name matrix name      * @param values matrix values      * @return updated WebClient      */
specifier|public
name|WebClient
name|matrix
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
modifier|...
name|values
parameter_list|)
block|{
name|addMatrixQueryParamsToBuilder
argument_list|(
name|getCurrentBuilder
argument_list|()
argument_list|,
name|name
argument_list|,
name|ParameterType
operator|.
name|MATRIX
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Updates the current URI fragment      * @param name fragment name      * @return updated WebClient      */
specifier|public
name|WebClient
name|fragment
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|getCurrentBuilder
argument_list|()
operator|.
name|fragment
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Moves WebClient to a new baseURI or forwards to new currentURI        * @param newAddress new URI      * @param forward if true then currentURI will be based on baseURI        * @return updated WebClient      */
specifier|public
name|WebClient
name|to
parameter_list|(
name|String
name|newAddress
parameter_list|,
name|boolean
name|forward
parameter_list|)
block|{
name|getState
argument_list|()
operator|.
name|setTemplates
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|forward
condition|)
block|{
if|if
condition|(
operator|!
name|newAddress
operator|.
name|startsWith
argument_list|(
name|getBaseURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Base address can not be preserved"
argument_list|)
throw|;
block|}
name|resetCurrentBuilder
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|newAddress
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|resetBaseAddress
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|newAddress
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      * Goes back      * @param fast if true then goes back to baseURI otherwise to a previous path segment       * @return updated WebClient      */
specifier|public
name|WebClient
name|back
parameter_list|(
name|boolean
name|fast
parameter_list|)
block|{
name|getState
argument_list|()
operator|.
name|setTemplates
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|fast
condition|)
block|{
name|getCurrentBuilder
argument_list|()
operator|.
name|replacePath
argument_list|(
name|getBaseURI
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|URI
name|uri
init|=
name|getCurrentURI
argument_list|()
decl_stmt|;
if|if
condition|(
name|uri
operator|==
name|getBaseURI
argument_list|()
condition|)
block|{
return|return
name|this
return|;
block|}
name|List
argument_list|<
name|PathSegment
argument_list|>
name|segments
init|=
name|JAXRSUtils
operator|.
name|getPathSegments
argument_list|(
name|uri
operator|.
name|getPath
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|getCurrentBuilder
argument_list|()
operator|.
name|replacePath
argument_list|(
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|segments
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|getCurrentBuilder
argument_list|()
operator|.
name|path
argument_list|(
name|HttpUtils
operator|.
name|fromPathSegment
argument_list|(
name|segments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
comment|/**      * Replaces the current path with the new value.      * @param path new path value. If it starts from "/" then all the current      * path starting from the base URI will be replaced, otherwise only the       * last path segment will be replaced. Providing a null value is equivalent      * to calling back(true)        * @return updated WebClient      */
specifier|public
name|WebClient
name|replacePath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
if|if
condition|(
name|path
operator|==
literal|null
condition|)
block|{
return|return
name|back
argument_list|(
literal|true
argument_list|)
return|;
block|}
name|back
argument_list|(
name|path
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|?
literal|true
else|:
literal|false
argument_list|)
expr_stmt|;
return|return
name|path
argument_list|(
name|path
argument_list|)
return|;
block|}
comment|/**      * Resets the current query      * @return updated WebClient      */
specifier|public
name|WebClient
name|resetQuery
parameter_list|()
block|{
return|return
name|replaceQuery
argument_list|(
literal|null
argument_list|)
return|;
block|}
comment|/**      * Replaces the current query with the new value.      * @param queryString the new value, providing a null is      *        equivalent to calling resetQuery().        * @return updated WebClient      */
specifier|public
name|WebClient
name|replaceQuery
parameter_list|(
name|String
name|queryString
parameter_list|)
block|{
name|getCurrentBuilder
argument_list|()
operator|.
name|replaceQuery
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Replaces the header value with the new values.      * @param headerName headerValues      * @param value new values, null is equivalent to removing the header      * @return updated WebClient      */
specifier|public
name|WebClient
name|replaceHeader
parameter_list|(
name|String
name|headerName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|getState
argument_list|()
operator|.
name|getRequestHeaders
argument_list|()
decl_stmt|;
name|headers
operator|.
name|remove
argument_list|(
name|headerName
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|headers
operator|.
name|add
argument_list|(
name|headerName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      * Replaces the current query with the new value.      * @param queryString the new value, providing a null is      *        equivalent to calling resetQuery().        * @return updated WebClient      */
specifier|public
name|WebClient
name|replaceQueryParam
parameter_list|(
name|String
name|queryParam
parameter_list|,
name|Object
modifier|...
name|value
parameter_list|)
block|{
name|getCurrentBuilder
argument_list|()
operator|.
name|replaceQueryParam
argument_list|(
name|queryParam
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|type
parameter_list|(
name|MediaType
name|ct
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|type
argument_list|(
name|ct
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|type
parameter_list|(
name|String
name|type
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|type
argument_list|(
name|type
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|accept
parameter_list|(
name|MediaType
modifier|...
name|types
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|accept
argument_list|(
name|types
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|accept
parameter_list|(
name|String
modifier|...
name|types
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|accept
argument_list|(
name|types
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|language
parameter_list|(
name|String
name|language
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|language
argument_list|(
name|language
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|acceptLanguage
parameter_list|(
name|String
modifier|...
name|languages
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|acceptLanguage
argument_list|(
name|languages
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|encoding
parameter_list|(
name|String
name|encoding
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|encoding
argument_list|(
name|encoding
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|acceptEncoding
parameter_list|(
name|String
modifier|...
name|encodings
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|acceptEncoding
argument_list|(
name|encodings
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|match
parameter_list|(
name|EntityTag
name|tag
parameter_list|,
name|boolean
name|ifNot
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|match
argument_list|(
name|tag
argument_list|,
name|ifNot
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|modified
parameter_list|(
name|Date
name|date
parameter_list|,
name|boolean
name|ifNot
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|modified
argument_list|(
name|date
argument_list|,
name|ifNot
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|cookie
parameter_list|(
name|Cookie
name|cookie
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|cookie
argument_list|(
name|cookie
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|header
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
modifier|...
name|values
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|header
argument_list|(
name|name
argument_list|,
name|values
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|headers
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|)
block|{
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|headers
argument_list|(
name|map
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|WebClient
name|reset
parameter_list|()
block|{
comment|//clearTemplates();
return|return
operator|(
name|WebClient
operator|)
name|super
operator|.
name|reset
argument_list|()
return|;
block|}
specifier|protected
name|Response
name|doInvoke
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Type
name|inGenericType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|responseClass
parameter_list|,
name|Type
name|outGenericType
parameter_list|)
block|{
return|return
name|doInvoke
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
name|body
operator|==
literal|null
condition|?
literal|null
else|:
name|body
operator|.
name|getClass
argument_list|()
argument_list|,
name|inGenericType
argument_list|,
name|responseClass
argument_list|,
name|outGenericType
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Type
name|getGenericEntityType
parameter_list|(
name|GenericEntity
argument_list|<
name|?
argument_list|>
name|genericEntity
parameter_list|,
name|Type
name|inGenericType
parameter_list|)
block|{
if|if
condition|(
name|inGenericType
operator|!=
literal|null
operator|&&
name|genericEntity
operator|.
name|getType
argument_list|()
operator|!=
name|inGenericType
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal type"
argument_list|)
throw|;
block|}
return|return
name|genericEntity
operator|.
name|getType
argument_list|()
return|;
block|}
specifier|protected
name|Response
name|doInvoke
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
parameter_list|,
name|Type
name|inGenericType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|responseClass
parameter_list|,
name|Type
name|outGenericType
parameter_list|)
block|{
if|if
condition|(
name|body
operator|instanceof
name|GenericEntity
condition|)
block|{
name|GenericEntity
argument_list|<
name|?
argument_list|>
name|genericEntity
init|=
operator|(
name|GenericEntity
argument_list|<
name|?
argument_list|>
operator|)
name|body
decl_stmt|;
name|body
operator|=
name|genericEntity
operator|.
name|getEntity
argument_list|()
expr_stmt|;
name|requestClass
operator|=
name|genericEntity
operator|.
name|getRawType
argument_list|()
expr_stmt|;
name|inGenericType
operator|=
name|getGenericEntityType
argument_list|(
name|genericEntity
argument_list|,
name|inGenericType
argument_list|)
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|prepareHeaders
argument_list|(
name|responseClass
argument_list|,
name|body
argument_list|)
decl_stmt|;
name|resetResponse
argument_list|()
expr_stmt|;
name|Response
name|r
init|=
name|doChainedInvocation
argument_list|(
name|httpMethod
argument_list|,
name|headers
argument_list|,
name|body
argument_list|,
name|requestClass
argument_list|,
name|inGenericType
argument_list|,
name|responseClass
argument_list|,
name|outGenericType
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|.
name|getStatus
argument_list|()
operator|>=
literal|300
operator|&&
name|responseClass
operator|!=
name|Response
operator|.
name|class
condition|)
block|{
throw|throw
name|convertToWebApplicationException
argument_list|(
name|r
argument_list|)
throw|;
block|}
return|return
name|r
return|;
block|}
specifier|private
name|ParameterizedType
name|findCallbackType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
if|if
condition|(
name|cls
operator|==
literal|null
operator|||
name|cls
operator|==
name|Object
operator|.
name|class
condition|)
block|{
return|return
literal|null
return|;
block|}
for|for
control|(
name|Type
name|c2
range|:
name|cls
operator|.
name|getGenericInterfaces
argument_list|()
control|)
block|{
if|if
condition|(
name|c2
operator|instanceof
name|ParameterizedType
condition|)
block|{
name|ParameterizedType
name|pt
init|=
operator|(
name|ParameterizedType
operator|)
name|c2
decl_stmt|;
if|if
condition|(
name|InvocationCallback
operator|.
name|class
operator|.
name|equals
argument_list|(
name|pt
operator|.
name|getRawType
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|pt
return|;
block|}
block|}
block|}
return|return
name|findCallbackType
argument_list|(
name|cls
operator|.
name|getSuperclass
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Type
name|getCallbackType
parameter_list|(
name|InvocationCallback
argument_list|<
name|?
argument_list|>
name|callback
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|cls
init|=
name|callback
operator|.
name|getClass
argument_list|()
decl_stmt|;
name|ParameterizedType
name|pt
init|=
name|findCallbackType
argument_list|(
name|cls
argument_list|)
decl_stmt|;
for|for
control|(
name|Type
name|tp
range|:
name|pt
operator|.
name|getActualTypeArguments
argument_list|()
control|)
block|{
return|return
name|tp
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|protected
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|doInvokeAsyncCallback
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
parameter_list|,
name|Type
name|inType
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
name|Type
name|outType
init|=
name|getCallbackType
argument_list|(
name|callback
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|respClass
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|outType
operator|instanceof
name|Class
condition|)
block|{
name|respClass
operator|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|outType
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|outType
operator|instanceof
name|ParameterizedType
condition|)
block|{
name|ParameterizedType
name|pt
init|=
operator|(
name|ParameterizedType
operator|)
name|outType
decl_stmt|;
if|if
condition|(
name|pt
operator|.
name|getRawType
argument_list|()
operator|instanceof
name|Class
condition|)
block|{
name|respClass
operator|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|pt
operator|.
name|getRawType
argument_list|()
expr_stmt|;
name|outType
operator|=
name|InjectionUtils
operator|.
name|getActualType
argument_list|(
name|pt
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|doInvokeAsync
argument_list|(
name|httpMethod
argument_list|,
name|body
argument_list|,
name|requestClass
argument_list|,
name|inType
argument_list|,
name|respClass
argument_list|,
name|outType
argument_list|,
name|callback
argument_list|)
return|;
block|}
specifier|protected
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|doInvokeAsync
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
parameter_list|,
name|Type
name|inType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|respClass
parameter_list|,
name|Type
name|outType
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|body
operator|instanceof
name|GenericEntity
condition|)
block|{
name|GenericEntity
argument_list|<
name|?
argument_list|>
name|genericEntity
init|=
operator|(
name|GenericEntity
argument_list|<
name|?
argument_list|>
operator|)
name|body
decl_stmt|;
name|body
operator|=
name|genericEntity
operator|.
name|getEntity
argument_list|()
expr_stmt|;
name|requestClass
operator|=
name|genericEntity
operator|.
name|getRawType
argument_list|()
expr_stmt|;
name|inType
operator|=
name|getGenericEntityType
argument_list|(
name|genericEntity
argument_list|,
name|inType
argument_list|)
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|prepareHeaders
argument_list|(
name|respClass
argument_list|,
name|body
argument_list|)
decl_stmt|;
name|resetResponse
argument_list|()
expr_stmt|;
name|Message
name|m
init|=
name|finalizeMessage
argument_list|(
name|httpMethod
argument_list|,
name|headers
argument_list|,
name|body
argument_list|,
name|requestClass
argument_list|,
name|inType
argument_list|,
name|respClass
argument_list|,
name|outType
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|setSynchronous
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|JaxrsClientCallback
argument_list|<
name|T
argument_list|>
name|cb
init|=
operator|new
name|JaxrsClientCallback
argument_list|<
name|T
argument_list|>
argument_list|(
name|callback
argument_list|,
name|respClass
argument_list|,
name|outType
argument_list|)
decl_stmt|;
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|put
argument_list|(
name|JaxrsClientCallback
operator|.
name|class
argument_list|,
name|cb
argument_list|)
expr_stmt|;
name|doRunInterceptorChain
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|Future
argument_list|<
name|T
argument_list|>
name|future
init|=
name|cb
operator|.
name|createFuture
argument_list|()
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|Throwable
name|ex
init|=
name|m
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|ex
operator|instanceof
name|Fault
condition|)
block|{
name|ex
operator|=
name|ex
operator|.
name|getCause
argument_list|()
expr_stmt|;
block|}
name|cb
operator|.
name|handleException
argument_list|(
name|m
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
return|return
name|future
return|;
block|}
specifier|private
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|prepareHeaders
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|responseClass
parameter_list|,
name|Object
name|body
parameter_list|)
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
name|getHeaders
argument_list|()
decl_stmt|;
name|boolean
name|contentTypeNotSet
init|=
name|headers
operator|.
name|getFirst
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
operator|==
literal|null
decl_stmt|;
if|if
condition|(
name|contentTypeNotSet
condition|)
block|{
name|String
name|ct
init|=
literal|"*/*"
decl_stmt|;
if|if
condition|(
name|body
operator|!=
literal|null
condition|)
block|{
name|ct
operator|=
name|body
operator|instanceof
name|Form
condition|?
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
else|:
name|MediaType
operator|.
name|APPLICATION_XML
expr_stmt|;
block|}
name|headers
operator|.
name|putSingle
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|responseClass
operator|!=
literal|null
operator|&&
name|responseClass
operator|!=
name|Response
operator|.
name|class
operator|&&
name|headers
operator|.
name|getFirst
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT
argument_list|)
operator|==
literal|null
condition|)
block|{
name|headers
operator|.
name|putSingle
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT
argument_list|,
name|JAXRSUtils
operator|.
name|mediaTypeToString
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|headers
return|;
block|}
specifier|private
name|void
name|handleAsyncResponse
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|JaxrsClientCallback
argument_list|<
name|?
argument_list|>
name|cb
init|=
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|get
argument_list|(
name|JaxrsClientCallback
operator|.
name|class
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Object
index|[]
name|results
init|=
name|preProcessResult
argument_list|(
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|results
operator|!=
literal|null
operator|&&
name|results
operator|.
name|length
operator|==
literal|1
condition|)
block|{
name|r
operator|=
operator|(
name|Response
operator|)
name|results
index|[
literal|0
index|]
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Throwable
name|t
init|=
name|ex
operator|instanceof
name|WebApplicationException
condition|?
operator|(
name|WebApplicationException
operator|)
name|ex
else|:
name|ex
operator|instanceof
name|ProcessingException
condition|?
operator|(
name|ProcessingException
operator|)
name|ex
else|:
operator|new
name|ProcessingException
argument_list|(
name|ex
argument_list|)
decl_stmt|;
name|cb
operator|.
name|handleException
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|r
operator|=
name|handleResponse
argument_list|(
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|getOutMessage
argument_list|()
argument_list|,
name|cb
operator|.
name|getResponseClass
argument_list|()
argument_list|,
name|cb
operator|.
name|getOutGenericType
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|cb
operator|.
name|handleException
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
if|if
condition|(
name|cb
operator|.
name|getResponseClass
argument_list|()
operator|==
literal|null
operator|||
name|Response
operator|.
name|class
operator|.
name|equals
argument_list|(
name|cb
operator|.
name|getResponseClass
argument_list|()
argument_list|)
condition|)
block|{
name|cb
operator|.
name|handleResponse
argument_list|(
name|message
argument_list|,
operator|new
name|Object
index|[]
block|{
name|r
block|}
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|r
operator|.
name|getStatus
argument_list|()
operator|>=
literal|300
condition|)
block|{
name|cb
operator|.
name|handleException
argument_list|(
name|message
argument_list|,
name|convertToWebApplicationException
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cb
operator|.
name|handleResponse
argument_list|(
name|message
argument_list|,
operator|new
name|Object
index|[]
block|{
name|r
operator|.
name|getEntity
argument_list|()
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|handleAsyncFault
parameter_list|(
name|Message
name|message
parameter_list|)
block|{     }
comment|//TODO: retry invocation will not work in case of async request failures for the moment
annotation|@
name|Override
specifier|protected
name|Object
name|retryInvoke
parameter_list|(
name|URI
name|newRequestURI
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|Object
name|body
parameter_list|,
name|Exchange
name|exchange
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|invContext
parameter_list|)
throws|throws
name|Throwable
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|reqContext
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|invContext
operator|.
name|get
argument_list|(
name|REQUEST_CONTEXT
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|httpMethod
init|=
operator|(
name|String
operator|)
name|reqContext
operator|.
name|get
argument_list|(
name|Message
operator|.
name|HTTP_REQUEST_METHOD
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
init|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|reqContext
operator|.
name|get
argument_list|(
name|REQUEST_CLASS
argument_list|)
decl_stmt|;
name|Type
name|inType
init|=
operator|(
name|Type
operator|)
name|reqContext
operator|.
name|get
argument_list|(
name|REQUEST_TYPE
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|respClass
init|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|reqContext
operator|.
name|get
argument_list|(
name|RESPONSE_CLASS
argument_list|)
decl_stmt|;
name|Type
name|outType
init|=
operator|(
name|Type
operator|)
name|reqContext
operator|.
name|get
argument_list|(
name|RESPONSE_TYPE
argument_list|)
decl_stmt|;
return|return
name|doChainedInvocation
argument_list|(
name|httpMethod
argument_list|,
name|headers
argument_list|,
name|body
argument_list|,
name|requestClass
argument_list|,
name|inType
argument_list|,
name|respClass
argument_list|,
name|outType
argument_list|,
name|exchange
argument_list|,
name|invContext
argument_list|)
return|;
block|}
comment|//CHECKSTYLE:OFF
specifier|protected
name|Response
name|doChainedInvocation
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
parameter_list|,
name|Type
name|inType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|respClass
parameter_list|,
name|Type
name|outType
parameter_list|,
name|Exchange
name|exchange
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|invContext
parameter_list|)
block|{
comment|//CHECKSTYLE:ON
name|Message
name|m
init|=
name|finalizeMessage
argument_list|(
name|httpMethod
argument_list|,
name|headers
argument_list|,
name|body
argument_list|,
name|requestClass
argument_list|,
name|inType
argument_list|,
name|respClass
argument_list|,
name|outType
argument_list|,
name|exchange
argument_list|,
name|invContext
argument_list|)
decl_stmt|;
name|doRunInterceptorChain
argument_list|(
name|m
argument_list|)
expr_stmt|;
return|return
name|doResponse
argument_list|(
name|m
argument_list|,
name|respClass
argument_list|,
name|outType
argument_list|)
return|;
block|}
comment|//CHECKSTYLE:OFF
specifier|private
name|Message
name|finalizeMessage
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
parameter_list|,
name|Type
name|inGenericType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|responseClass
parameter_list|,
name|Type
name|outGenericType
parameter_list|,
name|Exchange
name|exchange
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|invContext
parameter_list|)
block|{
comment|//CHECKSTYLE:ON
name|URI
name|uri
init|=
name|getCurrentURI
argument_list|()
decl_stmt|;
name|Message
name|m
init|=
name|createMessage
argument_list|(
name|body
argument_list|,
name|httpMethod
argument_list|,
name|headers
argument_list|,
name|uri
argument_list|,
name|exchange
argument_list|,
name|invContext
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|reqContext
init|=
name|getRequestContext
argument_list|(
name|m
argument_list|)
decl_stmt|;
name|reqContext
operator|.
name|put
argument_list|(
name|Message
operator|.
name|HTTP_REQUEST_METHOD
argument_list|,
name|httpMethod
argument_list|)
expr_stmt|;
name|reqContext
operator|.
name|put
argument_list|(
name|REQUEST_CLASS
argument_list|,
name|requestClass
argument_list|)
expr_stmt|;
name|reqContext
operator|.
name|put
argument_list|(
name|REQUEST_TYPE
argument_list|,
name|inGenericType
argument_list|)
expr_stmt|;
name|reqContext
operator|.
name|put
argument_list|(
name|RESPONSE_CLASS
argument_list|,
name|responseClass
argument_list|)
expr_stmt|;
name|reqContext
operator|.
name|put
argument_list|(
name|RESPONSE_TYPE
argument_list|,
name|outGenericType
argument_list|)
expr_stmt|;
if|if
condition|(
name|body
operator|!=
literal|null
condition|)
block|{
name|m
operator|.
name|getInterceptorChain
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|BodyWriter
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setPlainOperationNameProperty
argument_list|(
name|m
argument_list|,
name|httpMethod
operator|+
literal|":"
operator|+
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
specifier|protected
name|Response
name|doResponse
parameter_list|(
name|Message
name|m
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|responseClass
parameter_list|,
name|Type
name|outGenericType
parameter_list|)
block|{
try|try
block|{
name|Object
index|[]
name|results
init|=
name|preProcessResult
argument_list|(
name|m
argument_list|)
decl_stmt|;
if|if
condition|(
name|results
operator|!=
literal|null
operator|&&
name|results
operator|.
name|length
operator|==
literal|1
condition|)
block|{
return|return
operator|(
name|Response
operator|)
name|results
index|[
literal|0
index|]
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
name|ex
operator|instanceof
name|WebApplicationException
condition|?
operator|(
name|WebApplicationException
operator|)
name|ex
else|:
name|ex
operator|instanceof
name|ProcessingException
condition|?
operator|(
name|ProcessingException
operator|)
name|ex
else|:
operator|new
name|ProcessingException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
name|Response
name|response
init|=
literal|null
decl_stmt|;
name|Object
name|entity
init|=
literal|null
decl_stmt|;
try|try
block|{
name|response
operator|=
name|handleResponse
argument_list|(
name|m
argument_list|,
name|responseClass
argument_list|,
name|outGenericType
argument_list|)
expr_stmt|;
name|entity
operator|=
name|response
operator|.
name|getEntity
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ex
parameter_list|)
block|{
name|entity
operator|=
name|ex
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
name|completeExchange
argument_list|(
name|entity
argument_list|,
name|m
operator|.
name|getExchange
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Response
name|handleResponse
parameter_list|(
name|Message
name|outMessage
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|responseClass
parameter_list|,
name|Type
name|genericType
parameter_list|)
block|{
try|try
block|{
name|ResponseBuilder
name|rb
init|=
name|setResponseBuilder
argument_list|(
name|outMessage
argument_list|,
name|outMessage
operator|.
name|getExchange
argument_list|()
argument_list|)
decl_stmt|;
name|Response
name|currentResponse
init|=
name|rb
operator|.
name|clone
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|Object
name|entity
init|=
name|readBody
argument_list|(
name|currentResponse
argument_list|,
name|outMessage
argument_list|,
name|responseClass
argument_list|,
name|genericType
argument_list|,
operator|new
name|Annotation
index|[]
block|{}
argument_list|)
decl_stmt|;
if|if
condition|(
name|entity
operator|==
literal|null
condition|)
block|{
name|int
name|status
init|=
name|currentResponse
operator|.
name|getStatus
argument_list|()
decl_stmt|;
if|if
condition|(
name|status
operator|>=
literal|400
condition|)
block|{
name|entity
operator|=
name|currentResponse
operator|.
name|getEntity
argument_list|()
expr_stmt|;
block|}
block|}
name|rb
operator|=
name|JAXRSUtils
operator|.
name|fromResponse
argument_list|(
name|currentResponse
argument_list|)
expr_stmt|;
name|rb
operator|.
name|entity
argument_list|(
name|entity
operator|instanceof
name|Response
condition|?
operator|(
operator|(
name|Response
operator|)
name|entity
operator|)
operator|.
name|getEntity
argument_list|()
else|:
name|entity
argument_list|)
expr_stmt|;
name|Response
name|r
init|=
name|rb
operator|.
name|build
argument_list|()
decl_stmt|;
operator|(
operator|(
name|ResponseImpl
operator|)
name|r
operator|)
operator|.
name|setMessage
argument_list|(
name|outMessage
argument_list|)
expr_stmt|;
name|getState
argument_list|()
operator|.
name|setResponse
argument_list|(
name|r
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|ex
operator|instanceof
name|ProcessingException
operator|)
condition|?
operator|(
name|ProcessingException
operator|)
name|ex
else|:
operator|new
name|ProcessingException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
name|ClientProviderFactory
operator|.
name|getInstance
argument_list|(
name|outMessage
argument_list|)
operator|.
name|clearThreadLocalProxies
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|BodyWriter
extends|extends
name|AbstractBodyWriter
block|{
specifier|protected
name|void
name|doWriteBody
parameter_list|(
name|Message
name|outMessage
parameter_list|,
name|Object
name|body
parameter_list|,
name|Type
name|bodyType
parameter_list|,
name|Annotation
index|[]
name|customAnns
parameter_list|,
name|OutputStream
name|os
parameter_list|)
throws|throws
name|Fault
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|requestContext
init|=
name|WebClient
operator|.
name|this
operator|.
name|getRequestContext
argument_list|(
name|outMessage
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|requestClass
init|=
literal|null
decl_stmt|;
name|Type
name|requestType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|requestContext
operator|!=
literal|null
condition|)
block|{
name|requestClass
operator|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|requestContext
operator|.
name|get
argument_list|(
name|REQUEST_CLASS
argument_list|)
expr_stmt|;
name|requestType
operator|=
operator|(
name|Type
operator|)
name|requestContext
operator|.
name|get
argument_list|(
name|REQUEST_TYPE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|bodyType
operator|!=
literal|null
condition|)
block|{
name|requestType
operator|=
name|bodyType
expr_stmt|;
block|}
name|Annotation
index|[]
name|anns
init|=
name|customAnns
operator|!=
literal|null
condition|?
name|customAnns
else|:
operator|new
name|Annotation
index|[]
block|{}
decl_stmt|;
name|boolean
name|isAssignable
init|=
name|requestClass
operator|!=
literal|null
operator|&&
name|requestClass
operator|.
name|isAssignableFrom
argument_list|(
name|body
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|writeBody
argument_list|(
name|body
argument_list|,
name|outMessage
argument_list|,
name|requestClass
operator|==
literal|null
operator|||
operator|!
name|isAssignable
condition|?
name|body
operator|.
name|getClass
argument_list|()
else|:
name|requestClass
argument_list|,
name|requestType
operator|==
literal|null
operator|||
operator|!
name|isAssignable
condition|?
name|body
operator|.
name|getClass
argument_list|()
else|:
name|requestType
argument_list|,
name|anns
argument_list|,
name|os
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
specifier|static
name|void
name|copyProperties
parameter_list|(
name|Client
name|toClient
parameter_list|,
name|Client
name|fromClient
parameter_list|)
block|{
name|AbstractClient
name|newClient
init|=
name|toAbstractClient
argument_list|(
name|toClient
argument_list|)
decl_stmt|;
name|AbstractClient
name|oldClient
init|=
name|toAbstractClient
argument_list|(
name|fromClient
argument_list|)
decl_stmt|;
name|newClient
operator|.
name|setConfiguration
argument_list|(
name|oldClient
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|AbstractClient
name|toAbstractClient
parameter_list|(
name|Object
name|client
parameter_list|)
block|{
if|if
condition|(
name|client
operator|instanceof
name|AbstractClient
condition|)
block|{
return|return
operator|(
name|AbstractClient
operator|)
name|client
return|;
block|}
else|else
block|{
return|return
call|(
name|AbstractClient
call|)
argument_list|(
operator|(
name|InvocationHandlerAware
operator|)
name|client
argument_list|)
operator|.
name|getInvocationHandler
argument_list|()
return|;
block|}
block|}
specifier|static
name|JAXRSClientFactoryBean
name|getBean
parameter_list|(
name|String
name|baseAddress
parameter_list|,
name|String
name|configLocation
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
if|if
condition|(
name|configLocation
operator|!=
literal|null
condition|)
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|configLocation
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
return|return
name|bean
return|;
block|}
specifier|static
name|ClientState
name|getClientState
parameter_list|(
name|Client
name|client
parameter_list|)
block|{
name|ClientState
name|clientState
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|client
operator|instanceof
name|WebClient
condition|)
block|{
name|clientState
operator|=
operator|(
operator|(
name|AbstractClient
operator|)
name|client
operator|)
operator|.
name|getState
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|client
operator|instanceof
name|InvocationHandlerAware
condition|)
block|{
name|Object
name|handler
init|=
operator|(
operator|(
name|InvocationHandlerAware
operator|)
name|client
operator|)
operator|.
name|getInvocationHandler
argument_list|()
decl_stmt|;
name|clientState
operator|=
operator|(
operator|(
name|AbstractClient
operator|)
name|handler
operator|)
operator|.
name|getState
argument_list|()
expr_stmt|;
block|}
return|return
name|clientState
return|;
block|}
specifier|static
name|URI
name|convertStringToURI
parameter_list|(
name|String
name|baseAddress
parameter_list|)
block|{
try|try
block|{
return|return
name|URI
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ex
parameter_list|)
block|{
comment|// no need to check "https" scheme or indeed ':'
comment|// as the relative address will not work as the base address
if|if
condition|(
name|baseAddress
operator|.
name|startsWith
argument_list|(
name|HTTP_SCHEME
argument_list|)
condition|)
block|{
return|return
operator|new
name|UriBuilderImpl
argument_list|()
operator|.
name|uriAsTemplate
argument_list|(
name|baseAddress
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
else|else
block|{
throw|throw
name|ex
throw|;
block|}
block|}
block|}
comment|// Link to JAX-RS 2.0 AsyncInvoker
specifier|public
name|AsyncInvoker
name|async
parameter_list|()
block|{
return|return
operator|new
name|AsyncInvokerImpl
argument_list|()
return|;
block|}
comment|// Link to JAX-RS 2.0 SyncInvoker
specifier|public
name|SyncInvoker
name|sync
parameter_list|()
block|{
return|return
operator|new
name|SyncInvokerImpl
argument_list|()
return|;
block|}
class|class
name|ClientAsyncResponseInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|public
name|ClientAsyncResponseInterceptor
parameter_list|()
block|{
name|super
argument_list|(
name|Phase
operator|.
name|UNMARSHAL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
if|if
condition|(
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|isSynchronous
argument_list|()
condition|)
block|{
return|return;
block|}
name|handleAsyncResponse
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handleFault
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
if|if
condition|(
name|message
operator|.
name|getExchange
argument_list|()
operator|.
name|isSynchronous
argument_list|()
condition|)
block|{
return|return;
block|}
name|handleAsyncFault
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|setEntityHeaders
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|type
argument_list|(
name|entity
operator|.
name|getMediaType
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getLanguage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|language
argument_list|(
name|entity
operator|.
name|getLanguage
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getEncoding
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|encoding
argument_list|(
name|entity
operator|.
name|getEncoding
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
class|class
name|AsyncInvokerImpl
implements|implements
name|AsyncInvoker
block|{
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|get
parameter_list|()
block|{
return|return
name|get
argument_list|(
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|get
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|get
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|get
parameter_list|(
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|put
argument_list|(
name|entity
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|post
argument_list|(
name|entity
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|delete
parameter_list|()
block|{
return|return
name|delete
argument_list|(
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|delete
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|delete
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|delete
parameter_list|(
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|head
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|HEAD
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|head
parameter_list|(
name|InvocationCallback
argument_list|<
name|Response
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|HEAD
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|options
parameter_list|()
block|{
return|return
name|options
argument_list|(
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|options
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|options
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|options
parameter_list|(
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|trace
parameter_list|()
block|{
return|return
name|trace
argument_list|(
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|trace
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
literal|"TRACE"
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|trace
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|method
argument_list|(
literal|"TRACE"
argument_list|,
name|responseType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|trace
parameter_list|(
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|method
argument_list|(
literal|"TRACE"
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|name
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|doInvokeAsync
argument_list|(
name|name
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseType
argument_list|,
name|responseType
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
return|return
name|doInvokeAsync
argument_list|(
name|name
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseType
operator|.
name|getRawType
argument_list|()
argument_list|,
name|responseType
operator|.
name|getType
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
name|doInvokeAsyncCallback
argument_list|(
name|name
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|callback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Response
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|name
argument_list|,
name|entity
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
name|WebClient
operator|.
name|this
operator|.
name|setEntityHeaders
argument_list|(
name|entity
argument_list|)
expr_stmt|;
return|return
name|doInvokeAsync
argument_list|(
name|name
argument_list|,
name|entity
operator|==
literal|null
condition|?
literal|null
else|:
name|entity
operator|.
name|getEntity
argument_list|()
argument_list|,
name|entity
operator|==
literal|null
condition|?
literal|null
else|:
name|entity
operator|.
name|getEntity
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
literal|null
argument_list|,
name|responseType
argument_list|,
name|responseType
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|responseType
parameter_list|)
block|{
name|WebClient
operator|.
name|this
operator|.
name|setEntityHeaders
argument_list|(
name|entity
argument_list|)
expr_stmt|;
return|return
name|doInvokeAsync
argument_list|(
name|name
argument_list|,
name|entity
operator|==
literal|null
condition|?
literal|null
else|:
name|entity
operator|.
name|getEntity
argument_list|()
argument_list|,
name|entity
operator|==
literal|null
condition|?
literal|null
else|:
name|entity
operator|.
name|getEntity
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
literal|null
argument_list|,
name|responseType
operator|.
name|getRawType
argument_list|()
argument_list|,
name|responseType
operator|.
name|getType
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Future
argument_list|<
name|T
argument_list|>
name|method
parameter_list|(
name|String
name|name
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|InvocationCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
name|WebClient
operator|.
name|this
operator|.
name|setEntityHeaders
argument_list|(
name|entity
argument_list|)
expr_stmt|;
return|return
name|doInvokeAsyncCallback
argument_list|(
name|name
argument_list|,
name|entity
operator|.
name|getEntity
argument_list|()
argument_list|,
name|entity
operator|.
name|getEntity
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
literal|null
argument_list|,
name|callback
argument_list|)
return|;
block|}
block|}
class|class
name|SyncInvokerImpl
implements|implements
name|SyncInvoker
block|{
annotation|@
name|Override
specifier|public
name|Response
name|delete
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|delete
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|delete
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|DELETE
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|get
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|get
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|get
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|head
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|HEAD
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|options
parameter_list|()
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|options
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|options
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|OPTIONS
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|entity
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|post
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|POST
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|put
parameter_list|(
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|HttpMethod
operator|.
name|PUT
argument_list|,
name|entity
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|trace
parameter_list|()
block|{
return|return
name|method
argument_list|(
literal|"TRACE"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|trace
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|method
argument_list|(
literal|"TRACE"
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|trace
parameter_list|(
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|method
argument_list|(
literal|"TRACE"
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|method
parameter_list|(
name|String
name|method
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|method
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|method
parameter_list|(
name|String
name|method
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|method
argument_list|,
literal|null
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|method
parameter_list|(
name|String
name|method
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
return|return
name|invoke
argument_list|(
name|method
argument_list|,
literal|null
argument_list|,
name|genericType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|method
parameter_list|(
name|String
name|method
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|)
block|{
return|return
name|method
argument_list|(
name|method
argument_list|,
name|entity
argument_list|,
name|Response
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|method
parameter_list|(
name|String
name|method
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
name|WebClient
operator|.
name|this
operator|.
name|setEntityHeaders
argument_list|(
name|entity
argument_list|)
expr_stmt|;
return|return
name|invoke
argument_list|(
name|method
argument_list|,
name|entity
operator|==
literal|null
condition|?
literal|null
else|:
name|entity
operator|.
name|getEntity
argument_list|()
argument_list|,
name|cls
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|method
parameter_list|(
name|String
name|method
parameter_list|,
name|Entity
argument_list|<
name|?
argument_list|>
name|entity
parameter_list|,
name|GenericType
argument_list|<
name|T
argument_list|>
name|genericType
parameter_list|)
block|{
name|WebClient
operator|.
name|this
operator|.
name|setEntityHeaders
argument_list|(
name|entity
argument_list|)
expr_stmt|;
return|return
name|invoke
argument_list|(
name|method
argument_list|,
name|entity
operator|==
literal|null
condition|?
literal|null
else|:
name|entity
operator|.
name|getEntity
argument_list|()
argument_list|,
name|genericType
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

