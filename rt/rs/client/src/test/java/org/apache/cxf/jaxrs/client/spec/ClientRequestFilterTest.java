begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|spec
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|ClientRequestFilterTest
block|{
specifier|public
specifier|static
class|class
name|NonStringObject
block|{
specifier|private
name|String
name|theString
decl_stmt|;
name|NonStringObject
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|theString
operator|=
name|s
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"hello "
operator|+
name|theString
return|;
block|}
block|}
annotation|@
name|Priority
argument_list|(
literal|1
argument_list|)
specifier|public
specifier|static
class|class
name|AddNonStringHeaderFilter
implements|implements
name|ClientRequestFilter
block|{
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|add
argument_list|(
literal|"MyHeader"
argument_list|,
operator|new
name|NonStringObject
argument_list|(
literal|"rabbit"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Priority
argument_list|(
literal|2
argument_list|)
specifier|public
specifier|static
class|class
name|TestHeaderFilter
implements|implements
name|ClientRequestFilter
block|{
comment|/** {@inheritDoc}*/
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|Object
name|o
init|=
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"MyHeader"
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
operator|(
name|o
operator|instanceof
name|String
operator|)
condition|?
name|Response
operator|.
name|ok
argument_list|(
name|o
argument_list|)
operator|.
name|build
argument_list|()
else|:
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|context
operator|.
name|abortWith
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderObjectInFilterIsConvertedToString
parameter_list|()
block|{
name|Response
name|response
init|=
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
name|AddNonStringHeaderFilter
operator|.
name|class
argument_list|)
operator|.
name|register
argument_list|(
name|TestHeaderFilter
operator|.
name|class
argument_list|)
operator|.
name|target
argument_list|(
literal|"http://localhost:8080/notReally"
argument_list|)
operator|.
name|request
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello rabbit"
argument_list|,
name|response
operator|.
name|readEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

