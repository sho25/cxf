begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|ApplicationScoped
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|NormalScope
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|spi
operator|.
name|CreationalContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Priorities
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|extension
operator|.
name|ExtensionManagerBus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|mock
operator|.
name|HighPriorityClientReqFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|mock
operator|.
name|InvokedMethodClientRequestFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|mock
operator|.
name|LowPriorityClientReqFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|mock
operator|.
name|MockConfigProviderResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|config
operator|.
name|spi
operator|.
name|ConfigProviderResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|rest
operator|.
name|client
operator|.
name|tck
operator|.
name|interfaces
operator|.
name|InterfaceWithoutProvidersDefined
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|RestClientCdiTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testProvidersRegisteredViaMPConfigProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configValues
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|configValues
operator|.
name|put
argument_list|(
name|InterfaceWithoutProvidersDefined
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"/mp-rest/providers"
argument_list|,
name|HighPriorityClientReqFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|","
operator|+
name|LowPriorityClientReqFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|","
operator|+
name|InvokedMethodClientRequestFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|configValues
operator|.
name|put
argument_list|(
name|InterfaceWithoutProvidersDefined
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"/mp-rest/providers/"
operator|+
name|LowPriorityClientReqFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"/priority"
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
operator|(
operator|(
name|MockConfigProviderResolver
operator|)
name|ConfigProviderResolver
operator|.
name|instance
argument_list|()
operator|)
operator|.
name|setConfigValues
argument_list|(
name|configValues
argument_list|)
expr_stmt|;
name|IMocksControl
name|control
init|=
name|EasyMock
operator|.
name|createNiceControl
argument_list|()
decl_stmt|;
name|BeanManager
name|mockedBeanMgr
init|=
name|control
operator|.
name|createMock
argument_list|(
name|BeanManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|mockedBeanMgr
operator|.
name|isScope
argument_list|(
name|Path
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|mockedBeanMgr
operator|.
name|isScope
argument_list|(
name|Produces
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|mockedBeanMgr
operator|.
name|isScope
argument_list|(
name|Consumes
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|RestClientBean
name|bean
init|=
operator|new
name|RestClientBean
argument_list|(
name|InterfaceWithoutProvidersDefined
operator|.
name|class
argument_list|,
name|mockedBeanMgr
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|registeredProviders
init|=
name|bean
operator|.
name|getConfiguredProviders
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|registeredProviders
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|registeredProviders
operator|.
name|contains
argument_list|(
name|HighPriorityClientReqFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|registeredProviders
operator|.
name|contains
argument_list|(
name|LowPriorityClientReqFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|registeredProviders
operator|.
name|contains
argument_list|(
name|InvokedMethodClientRequestFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|priorities
init|=
name|bean
operator|.
name|getConfiguredProviderPriorities
argument_list|(
name|registeredProviders
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|priorities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
operator|(
name|int
operator|)
name|priorities
operator|.
name|get
argument_list|(
name|LowPriorityClientReqFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
operator|(
name|int
operator|)
name|priorities
operator|.
name|get
argument_list|(
name|HighPriorityClientReqFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Priorities
operator|.
name|USER
argument_list|,
operator|(
name|int
operator|)
name|priorities
operator|.
name|get
argument_list|(
name|InvokedMethodClientRequestFilter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawTypes"
block|}
argument_list|)
specifier|public
name|void
name|testCreationalContextsReleasedOnClientClose
parameter_list|()
throws|throws
name|Exception
block|{
name|IMocksControl
name|control
init|=
name|EasyMock
operator|.
name|createStrictControl
argument_list|()
decl_stmt|;
name|BeanManager
name|mockedBeanMgr
init|=
name|control
operator|.
name|createMock
argument_list|(
name|BeanManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|CreationalContext
argument_list|<
name|?
argument_list|>
name|mockedCreationalCtx
init|=
name|control
operator|.
name|createMock
argument_list|(
name|CreationalContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|Bean
argument_list|<
name|?
argument_list|>
name|mockedBean
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Bean
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|stringList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|getBeans
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|mockedBean
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|createCreationalContext
argument_list|(
name|mockedBean
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|CreationalContext
operator|)
name|mockedCreationalCtx
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|getReference
argument_list|(
name|mockedBean
argument_list|,
name|List
operator|.
name|class
argument_list|,
name|mockedCreationalCtx
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|stringList
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBean
operator|.
name|getScope
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|Class
operator|)
name|ApplicationScoped
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|isNormalScope
argument_list|(
name|ApplicationScoped
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|mockedCreationalCtx
operator|.
name|release
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|once
argument_list|()
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|Bus
name|bus
init|=
operator|new
name|ExtensionManagerBus
argument_list|()
decl_stmt|;
name|bus
operator|.
name|setExtension
argument_list|(
name|mockedBeanMgr
argument_list|,
name|BeanManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|Instance
argument_list|<
name|List
argument_list|>
name|i
init|=
name|CDIUtils
operator|.
name|getInstanceFromCDI
argument_list|(
name|List
operator|.
name|class
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|stringList
argument_list|,
name|i
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|.
name|release
argument_list|()
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawTypes"
block|}
argument_list|)
specifier|public
name|void
name|testCreationalContextsNotReleasedOnClientCloseUsingNormalScope
parameter_list|()
throws|throws
name|Exception
block|{
name|IMocksControl
name|control
init|=
name|EasyMock
operator|.
name|createStrictControl
argument_list|()
decl_stmt|;
name|BeanManager
name|mockedBeanMgr
init|=
name|control
operator|.
name|createMock
argument_list|(
name|BeanManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|CreationalContext
argument_list|<
name|?
argument_list|>
name|mockedCreationalCtx
init|=
name|control
operator|.
name|createMock
argument_list|(
name|CreationalContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|Bean
argument_list|<
name|?
argument_list|>
name|mockedBean
init|=
name|control
operator|.
name|createMock
argument_list|(
name|Bean
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|stringList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|getBeans
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|mockedBean
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|createCreationalContext
argument_list|(
name|mockedBean
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|CreationalContext
operator|)
name|mockedCreationalCtx
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|getReference
argument_list|(
name|mockedBean
argument_list|,
name|List
operator|.
name|class
argument_list|,
name|mockedCreationalCtx
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|stringList
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBean
operator|.
name|getScope
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|Class
operator|)
name|NormalScope
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockedBeanMgr
operator|.
name|isNormalScope
argument_list|(
name|NormalScope
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|Bus
name|bus
init|=
operator|new
name|ExtensionManagerBus
argument_list|()
decl_stmt|;
name|bus
operator|.
name|setExtension
argument_list|(
name|mockedBeanMgr
argument_list|,
name|BeanManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|Instance
argument_list|<
name|List
argument_list|>
name|i
init|=
name|CDIUtils
operator|.
name|getInstanceFromCDI
argument_list|(
name|List
operator|.
name|class
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|i
operator|.
name|release
argument_list|()
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

