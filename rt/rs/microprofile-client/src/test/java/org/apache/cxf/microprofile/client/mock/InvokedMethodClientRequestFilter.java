begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|mock
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_class
specifier|public
class|class
name|InvokedMethodClientRequestFilter
implements|implements
name|ClientRequestFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|Method
name|m
init|=
operator|(
name|Method
operator|)
name|ctx
operator|.
name|getProperty
argument_list|(
literal|"org.eclipse.microprofile.rest.client.invokedMethod"
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
name|m
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|abortWith
argument_list|(
name|Response
operator|.
name|ok
argument_list|(
literal|"OK"
argument_list|)
operator|.
name|header
argument_list|(
literal|"ReturnType"
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"PUT"
argument_list|,
name|m
operator|.
name|getAnnotation
argument_list|(
name|PUT
operator|.
name|class
argument_list|)
operator|==
literal|null
condition|?
literal|"null"
else|:
literal|"PUT"
argument_list|)
operator|.
name|header
argument_list|(
literal|"Path"
argument_list|,
name|path
operator|==
literal|null
condition|?
literal|"null"
else|:
name|path
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"Parm1"
argument_list|,
name|m
operator|.
name|getParameters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"Parm1Annotation"
argument_list|,
name|m
operator|.
name|getParameters
argument_list|()
index|[
literal|0
index|]
operator|.
name|getAnnotations
argument_list|()
index|[
literal|0
index|]
operator|.
name|annotationType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"Parm2"
argument_list|,
name|m
operator|.
name|getParameters
argument_list|()
index|[
literal|1
index|]
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|ctx
operator|.
name|abortWith
argument_list|(
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

