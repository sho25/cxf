begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|mock
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_class
specifier|public
class|class
name|HeaderCaptureClientRequestFilter
implements|implements
name|ClientRequestFilter
block|{
specifier|private
specifier|static
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outboundHeaders
decl_stmt|;
specifier|public
specifier|static
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getOutboundHeaders
parameter_list|()
block|{
return|return
name|outboundHeaders
return|;
block|}
specifier|public
specifier|static
name|void
name|setOutboundHeaders
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|newHeaders
parameter_list|)
block|{
name|outboundHeaders
operator|=
name|newHeaders
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|setOutboundHeaders
argument_list|(
name|ctx
operator|.
name|getStringHeaders
argument_list|()
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|abortWith
argument_list|(
name|Response
operator|.
name|ok
argument_list|(
literal|"SUCCESS"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

