begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|AnnotationUtils
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|MicroProfileClientConfigurableImpl
operator|.
name|CONTRACTS
import|;
end_import

begin_class
specifier|public
class|class
name|MicroProfileClientFactoryBean
extends|extends
name|JAXRSClientFactoryBean
block|{
specifier|private
name|Configuration
name|configuration
decl_stmt|;
specifier|public
name|MicroProfileClientFactoryBean
parameter_list|(
name|Configuration
name|configuration
parameter_list|,
name|String
name|baseUri
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|aClass
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|super
operator|.
name|setAddress
argument_list|(
name|baseUri
argument_list|)
expr_stmt|;
name|super
operator|.
name|setServiceClass
argument_list|(
name|aClass
argument_list|)
expr_stmt|;
name|super
operator|.
name|setProviderComparator
argument_list|(
operator|new
name|ContractComparator
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|ContractComparator
implements|implements
name|Comparator
argument_list|<
name|Object
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|Object
name|o1
parameter_list|,
name|Object
name|o2
parameter_list|)
block|{
name|int
name|left
init|=
name|getPriority
argument_list|(
name|o1
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|right
init|=
name|getPriority
argument_list|(
name|o2
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|right
operator|-
name|left
return|;
block|}
specifier|private
name|int
name|getPriority
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|providerClass
range|:
name|CONTRACTS
control|)
block|{
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|contracts
init|=
name|MicroProfileClientFactoryBean
operator|.
name|this
operator|.
name|configuration
operator|.
name|getContracts
argument_list|(
name|providerClass
argument_list|)
decl_stmt|;
if|if
condition|(
name|contracts
operator|!=
literal|null
condition|)
block|{
name|Integer
name|priority
init|=
name|contracts
operator|.
name|get
argument_list|(
name|clazz
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|!=
literal|null
condition|)
block|{
return|return
name|priority
return|;
block|}
block|}
block|}
return|return
name|AnnotationUtils
operator|.
name|getBindingPriority
argument_list|(
name|clazz
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

