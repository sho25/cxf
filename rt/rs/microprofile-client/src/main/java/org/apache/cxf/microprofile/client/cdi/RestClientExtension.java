begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|microprofile
operator|.
name|client
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|event
operator|.
name|Observes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|AfterBeanDiscovery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|AfterDeploymentValidation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Extension
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|ProcessAnnotatedType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|WithAnnotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|rest
operator|.
name|client
operator|.
name|inject
operator|.
name|RegisterRestClient
import|;
end_import

begin_class
specifier|public
class|class
name|RestClientExtension
implements|implements
name|Extension
block|{
specifier|private
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|restClientClasses
init|=
operator|new
name|LinkedHashSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Throwable
argument_list|>
name|errors
init|=
operator|new
name|LinkedHashSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|findClients
parameter_list|(
annotation|@
name|Observes
annotation|@
name|WithAnnotations
argument_list|(
block|{
name|RegisterRestClient
operator|.
name|class
block|}
argument_list|)
name|ProcessAnnotatedType
argument_list|<
name|?
argument_list|>
name|pat
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|restClient
init|=
name|pat
operator|.
name|getAnnotatedType
argument_list|()
operator|.
name|getJavaClass
argument_list|()
decl_stmt|;
if|if
condition|(
name|restClient
operator|.
name|isInterface
argument_list|()
condition|)
block|{
name|restClientClasses
operator|.
name|add
argument_list|(
name|restClient
argument_list|)
expr_stmt|;
name|pat
operator|.
name|veto
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|errors
operator|.
name|add
argument_list|(
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The class "
operator|+
name|restClient
operator|+
literal|" is not an interface"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|registerClientBeans
parameter_list|(
annotation|@
name|Observes
name|AfterBeanDiscovery
name|afterBeanDiscovery
parameter_list|,
name|BeanManager
name|beanManager
parameter_list|)
block|{
name|restClientClasses
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|c
lambda|->
operator|new
name|RestClientBean
argument_list|(
name|c
argument_list|,
name|beanManager
argument_list|)
argument_list|)
operator|.
name|forEach
argument_list|(
name|afterBeanDiscovery
operator|::
name|addBean
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|registerErrors
parameter_list|(
annotation|@
name|Observes
name|AfterDeploymentValidation
name|afterDeploymentValidation
parameter_list|)
block|{
name|errors
operator|.
name|forEach
argument_list|(
name|afterDeploymentValidation
operator|::
name|addDeploymentProblem
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

