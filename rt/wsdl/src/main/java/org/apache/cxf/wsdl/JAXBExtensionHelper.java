begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingFault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingInput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOperation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOutput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Port
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Types
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|WSDLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensibilityElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionDeserializer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionRegistry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionSerializer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementDecl
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|NamespaceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|util
operator|.
name|StreamReaderDelegate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBContextCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBContextCache
operator|.
name|CachedContextAndSchemas
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|AnnotationVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|ClassWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|FieldVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|MethodVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ASMHelper
operator|.
name|Opcodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ReflectionUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|PrettyPrintXMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|transform
operator|.
name|OutTransformWriter
import|;
end_import

begin_comment
comment|/**  * JAXBExtensionHelper  */
end_comment

begin_class
specifier|public
class|class
name|JAXBExtensionHelper
implements|implements
name|ExtensionSerializer
implements|,
name|ExtensionDeserializer
block|{
specifier|static
specifier|final
name|Map
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|,
name|Integer
argument_list|>
name|WSDL_INDENT_MAP
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|JAXBExtensionHelper
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_INDENT_LEVEL
init|=
literal|2
decl_stmt|;
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|typeClass
decl_stmt|;
specifier|final
name|String
name|namespace
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|extensionClass
decl_stmt|;
name|String
name|jaxbNamespace
decl_stmt|;
specifier|private
name|JAXBContext
name|marshalContext
decl_stmt|;
specifier|private
name|JAXBContext
name|unmarshalContext
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|classes
decl_stmt|;
specifier|public
name|JAXBExtensionHelper
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|String
name|ns
parameter_list|)
block|{
name|typeClass
operator|=
name|cls
expr_stmt|;
name|namespace
operator|=
name|ns
expr_stmt|;
name|extensionClass
operator|=
name|cls
expr_stmt|;
block|}
name|void
name|setJaxbNamespace
parameter_list|(
name|String
name|ns
parameter_list|)
block|{
name|jaxbNamespace
operator|=
name|ns
expr_stmt|;
block|}
name|void
name|setExtensionClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
name|extensionClass
operator|=
name|cls
expr_stmt|;
block|}
specifier|private
name|int
name|getIndentLevel
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|parent
parameter_list|)
block|{
name|Integer
name|result
init|=
name|WSDL_INDENT_MAP
operator|.
name|get
argument_list|(
name|parent
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
return|return
name|DEFAULT_INDENT_LEVEL
return|;
block|}
return|return
name|result
operator|.
name|intValue
argument_list|()
return|;
block|}
static|static
block|{
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Definition
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Binding
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|BindingFault
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|BindingInput
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|BindingOutput
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|BindingOperation
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Message
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Port
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Service
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|WSDL_INDENT_MAP
operator|.
name|put
argument_list|(
name|Types
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|DEFAULT_INDENT_LEVEL
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|addExtensions
parameter_list|(
name|ExtensionRegistry
name|registry
parameter_list|,
name|String
name|parentType
parameter_list|,
name|String
name|elementType
parameter_list|)
throws|throws
name|JAXBException
throws|,
name|ClassNotFoundException
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|parentTypeClass
init|=
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
name|parentType
argument_list|,
name|JAXBExtensionHelper
operator|.
name|class
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|ExtensibilityElement
argument_list|>
name|elementTypeClass
init|=
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
name|elementType
argument_list|,
name|JAXBExtensionHelper
operator|.
name|class
argument_list|)
operator|.
name|asSubclass
argument_list|(
name|ExtensibilityElement
operator|.
name|class
argument_list|)
decl_stmt|;
name|addExtensions
argument_list|(
name|registry
argument_list|,
name|parentTypeClass
argument_list|,
name|elementTypeClass
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|addExtensions
parameter_list|(
name|ExtensionRegistry
name|registry
parameter_list|,
name|String
name|parentType
parameter_list|,
name|String
name|elementType
parameter_list|,
name|String
name|namespace
parameter_list|)
throws|throws
name|JAXBException
throws|,
name|ClassNotFoundException
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|parentTypeClass
init|=
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
name|parentType
argument_list|,
name|JAXBExtensionHelper
operator|.
name|class
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|ExtensibilityElement
argument_list|>
name|elementTypeClass
init|=
name|ClassLoaderUtils
operator|.
name|loadClass
argument_list|(
name|elementType
argument_list|,
name|JAXBExtensionHelper
operator|.
name|class
argument_list|)
operator|.
name|asSubclass
argument_list|(
name|ExtensibilityElement
operator|.
name|class
argument_list|)
decl_stmt|;
name|addExtensions
argument_list|(
name|registry
argument_list|,
name|parentTypeClass
argument_list|,
name|elementTypeClass
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|addExtensions
parameter_list|(
name|ExtensionRegistry
name|registry
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|parentType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
throws|throws
name|JAXBException
block|{
name|addExtensions
argument_list|(
name|registry
argument_list|,
name|parentType
argument_list|,
name|cls
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|addExtensions
parameter_list|(
name|ExtensionRegistry
name|registry
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|parentType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|String
name|namespace
parameter_list|)
throws|throws
name|JAXBException
block|{
name|addExtensions
argument_list|(
name|registry
argument_list|,
name|parentType
argument_list|,
name|cls
argument_list|,
name|namespace
argument_list|,
name|cls
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|addExtensions
parameter_list|(
name|ExtensionRegistry
name|registry
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|parentType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|String
name|namespace
parameter_list|,
name|ClassLoader
name|loader
parameter_list|)
throws|throws
name|JAXBException
block|{
name|JAXBExtensionHelper
name|helper
init|=
operator|new
name|JAXBExtensionHelper
argument_list|(
name|cls
argument_list|,
name|namespace
argument_list|)
decl_stmt|;
name|boolean
name|found
init|=
literal|false
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|extCls
init|=
name|cls
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|objectFactory
init|=
name|Class
operator|.
name|forName
argument_list|(
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|cls
argument_list|)
operator|+
literal|".ObjectFactory"
argument_list|,
literal|true
argument_list|,
name|loader
argument_list|)
decl_stmt|;
name|Method
name|methods
index|[]
init|=
name|ReflectionUtil
operator|.
name|getDeclaredMethods
argument_list|(
name|objectFactory
argument_list|)
decl_stmt|;
for|for
control|(
name|Method
name|method
range|:
name|methods
control|)
block|{
if|if
condition|(
name|method
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
operator|==
literal|1
operator|&&
name|method
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
operator|.
name|equals
argument_list|(
name|cls
argument_list|)
condition|)
block|{
name|XmlElementDecl
name|elementDecl
init|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|XmlElementDecl
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|elementDecl
condition|)
block|{
name|String
name|name
init|=
name|elementDecl
operator|.
name|name
argument_list|()
decl_stmt|;
name|String
name|ns
init|=
name|namespace
operator|!=
literal|null
condition|?
name|namespace
else|:
name|elementDecl
operator|.
name|namespace
argument_list|()
decl_stmt|;
if|if
condition|(
name|namespace
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|setJaxbNamespace
argument_list|(
name|elementDecl
operator|.
name|namespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QName
name|elementType
init|=
operator|new
name|QName
argument_list|(
name|ns
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ExtensibilityElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|extCls
argument_list|)
condition|)
block|{
name|extCls
operator|=
name|createExtensionClass
argument_list|(
name|cls
argument_list|,
name|elementType
argument_list|,
name|loader
argument_list|)
expr_stmt|;
name|helper
operator|.
name|setExtensionClass
argument_list|(
name|extCls
argument_list|)
expr_stmt|;
block|}
name|registry
operator|.
name|registerDeserializer
argument_list|(
name|parentType
argument_list|,
name|elementType
argument_list|,
name|helper
argument_list|)
expr_stmt|;
name|registry
operator|.
name|registerSerializer
argument_list|(
name|parentType
argument_list|,
name|elementType
argument_list|,
name|helper
argument_list|)
expr_stmt|;
name|registry
operator|.
name|mapExtensionTypes
argument_list|(
name|parentType
argument_list|,
name|elementType
argument_list|,
name|extCls
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|ex
parameter_list|)
block|{
comment|//ignore
block|}
if|if
condition|(
operator|!
name|found
condition|)
block|{
comment|//not in object factory or no object factory, try other annotations
name|XmlRootElement
name|elAnnot
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|XmlRootElement
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|elAnnot
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
name|elAnnot
operator|.
name|name
argument_list|()
decl_stmt|;
name|String
name|ns
init|=
name|elAnnot
operator|.
name|namespace
argument_list|()
decl_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|ns
argument_list|)
operator|||
literal|"##default"
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|XmlSchema
name|schema
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|cls
operator|.
name|getPackage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|schema
operator|=
name|cls
operator|.
name|getPackage
argument_list|()
operator|.
name|getAnnotation
argument_list|(
name|XmlSchema
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|schema
operator|!=
literal|null
condition|)
block|{
name|ns
operator|=
name|schema
operator|.
name|namespace
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|ns
argument_list|)
operator|&&
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|name
argument_list|)
condition|)
block|{
if|if
condition|(
name|namespace
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|setJaxbNamespace
argument_list|(
name|ns
argument_list|)
expr_stmt|;
name|ns
operator|=
name|namespace
expr_stmt|;
block|}
name|QName
name|elementType
init|=
operator|new
name|QName
argument_list|(
name|ns
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ExtensibilityElement
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|extCls
argument_list|)
condition|)
block|{
name|extCls
operator|=
name|createExtensionClass
argument_list|(
name|cls
argument_list|,
name|elementType
argument_list|,
name|loader
argument_list|)
expr_stmt|;
name|helper
operator|.
name|setExtensionClass
argument_list|(
name|extCls
argument_list|)
expr_stmt|;
block|}
name|registry
operator|.
name|registerDeserializer
argument_list|(
name|parentType
argument_list|,
name|elementType
argument_list|,
name|helper
argument_list|)
expr_stmt|;
name|registry
operator|.
name|registerSerializer
argument_list|(
name|parentType
argument_list|,
name|elementType
argument_list|,
name|helper
argument_list|)
expr_stmt|;
name|registry
operator|.
name|mapExtensionTypes
argument_list|(
name|parentType
argument_list|,
name|elementType
argument_list|,
name|extCls
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|found
condition|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"EXTENSION_NOT_REGISTERED"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|cls
operator|.
name|getName
argument_list|()
block|,
name|parentType
operator|.
name|getName
argument_list|()
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|synchronized
name|Unmarshaller
name|createUnmarshaller
parameter_list|()
throws|throws
name|JAXBException
block|{
if|if
condition|(
name|unmarshalContext
operator|==
literal|null
operator|||
name|classes
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|CachedContextAndSchemas
name|ccs
init|=
name|JAXBContextCache
operator|.
name|getCachedContextAndSchemas
argument_list|(
name|extensionClass
argument_list|)
decl_stmt|;
name|classes
operator|=
name|ccs
operator|.
name|getClasses
argument_list|()
expr_stmt|;
name|unmarshalContext
operator|=
name|ccs
operator|.
name|getContext
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|unmarshalContext
operator|.
name|createUnmarshaller
argument_list|()
return|;
block|}
specifier|private
specifier|synchronized
name|Marshaller
name|createMarshaller
parameter_list|()
throws|throws
name|JAXBException
block|{
if|if
condition|(
name|marshalContext
operator|==
literal|null
operator|||
name|classes
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|CachedContextAndSchemas
name|ccs
init|=
name|JAXBContextCache
operator|.
name|getCachedContextAndSchemas
argument_list|(
name|typeClass
argument_list|)
decl_stmt|;
name|classes
operator|=
name|ccs
operator|.
name|getClasses
argument_list|()
expr_stmt|;
name|marshalContext
operator|=
name|ccs
operator|.
name|getContext
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|marshalContext
operator|.
name|createMarshaller
argument_list|()
return|;
block|}
comment|/* (non-Javadoc)      * @see javax.wsdl.extensions.ExtensionSerializer#marshall(java.lang.Class,      *  javax.xml.namespace.QName, javax.wsdl.extensions.ExtensibilityElement,      *   java.io.PrintWriter, javax.wsdl.Definition, javax.wsdl.extensions.ExtensionRegistry)      */
specifier|public
name|void
name|marshall
parameter_list|(
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|Class
name|parent
parameter_list|,
name|QName
name|qname
parameter_list|,
name|ExtensibilityElement
name|obj
parameter_list|,
name|PrintWriter
name|pw
parameter_list|,
specifier|final
name|Definition
name|wsdl
parameter_list|,
name|ExtensionRegistry
name|registry
parameter_list|)
throws|throws
name|WSDLException
block|{
comment|// TODO Auto-generated method stub
try|try
block|{
name|Marshaller
name|u
init|=
name|createMarshaller
argument_list|()
decl_stmt|;
name|u
operator|.
name|setProperty
argument_list|(
literal|"jaxb.encoding"
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setProperty
argument_list|(
literal|"jaxb.fragment"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|u
operator|.
name|setProperty
argument_list|(
literal|"jaxb.formatted.output"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|Object
name|mObj
init|=
name|obj
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|objectFactory
init|=
name|Class
operator|.
name|forName
argument_list|(
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|typeClass
argument_list|)
operator|+
literal|".ObjectFactory"
argument_list|,
literal|true
argument_list|,
name|obj
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
decl_stmt|;
name|Method
name|methods
index|[]
init|=
name|objectFactory
operator|.
name|getDeclaredMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|method
range|:
name|methods
control|)
block|{
if|if
condition|(
name|method
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
operator|==
literal|1
operator|&&
name|method
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|0
index|]
operator|.
name|equals
argument_list|(
name|typeClass
argument_list|)
condition|)
block|{
name|mObj
operator|=
name|method
operator|.
name|invoke
argument_list|(
name|objectFactory
operator|.
name|newInstance
argument_list|()
argument_list|,
operator|new
name|Object
index|[]
block|{
name|obj
block|}
argument_list|)
expr_stmt|;
block|}
block|}
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLOutputFactory
name|fact
init|=
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
operator|new
name|PrettyPrintXMLStreamWriter
argument_list|(
name|fact
operator|.
name|createXMLStreamWriter
argument_list|(
name|pw
argument_list|)
argument_list|,
literal|2
argument_list|,
name|getIndentLevel
argument_list|(
name|parent
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|namespace
operator|!=
literal|null
operator|&&
operator|!
name|namespace
operator|.
name|equals
argument_list|(
name|jaxbNamespace
argument_list|)
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|outMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|outMap
operator|.
name|put
argument_list|(
literal|"{"
operator|+
name|jaxbNamespace
operator|+
literal|"}*"
argument_list|,
literal|"{"
operator|+
name|namespace
operator|+
literal|"}*"
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|OutTransformWriter
argument_list|(
name|writer
argument_list|,
name|outMap
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nspref
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|ent
range|:
name|wsdl
operator|.
name|getNamespaces
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|entry
init|=
operator|(
name|Map
operator|.
name|Entry
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|ent
decl_stmt|;
name|nspref
operator|.
name|put
argument_list|(
operator|(
name|String
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
operator|(
name|String
operator|)
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JAXBUtils
operator|.
name|setNamespaceMapper
argument_list|(
name|nspref
argument_list|,
name|u
argument_list|)
expr_stmt|;
name|u
operator|.
name|marshal
argument_list|(
name|mObj
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|WSDLException
argument_list|(
name|WSDLException
operator|.
name|PARSER_ERROR
argument_list|,
literal|""
argument_list|,
name|ex
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)      * @see javax.wsdl.extensions.ExtensionDeserializer#unmarshall(java.lang.Class,      *  javax.xml.namespace.QName, org.w3c.dom.Element,      *   javax.wsdl.Definition,      *   javax.wsdl.extensions.ExtensionRegistry)      */
specifier|public
name|ExtensibilityElement
name|unmarshall
parameter_list|(
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|Class
name|parent
parameter_list|,
name|QName
name|qname
parameter_list|,
name|Element
name|element
parameter_list|,
name|Definition
name|wsdl
parameter_list|,
name|ExtensionRegistry
name|registry
parameter_list|)
throws|throws
name|WSDLException
block|{
name|XMLStreamReader
name|reader
init|=
literal|null
decl_stmt|;
name|Unmarshaller
name|u
init|=
literal|null
decl_stmt|;
try|try
block|{
name|u
operator|=
name|createUnmarshaller
argument_list|()
expr_stmt|;
name|Object
name|o
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|namespace
operator|==
literal|null
condition|)
block|{
name|o
operator|=
name|u
operator|.
name|unmarshal
argument_list|(
name|element
argument_list|,
name|extensionClass
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|reader
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|reader
operator|=
operator|new
name|MappingReaderDelegate
argument_list|(
name|reader
argument_list|)
expr_stmt|;
name|o
operator|=
name|u
operator|.
name|unmarshal
argument_list|(
name|reader
argument_list|,
name|extensionClass
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
name|o
operator|=
operator|(
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|o
operator|)
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
name|ExtensibilityElement
name|el
init|=
name|o
operator|instanceof
name|ExtensibilityElement
condition|?
operator|(
name|ExtensibilityElement
operator|)
name|o
else|:
operator|new
name|JAXBExtensibilityElement
argument_list|(
name|o
argument_list|)
decl_stmt|;
name|el
operator|.
name|setElementType
argument_list|(
name|qname
argument_list|)
expr_stmt|;
return|return
name|el
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|WSDLException
argument_list|(
name|WSDLException
operator|.
name|PARSER_ERROR
argument_list|,
literal|"Error reading element "
operator|+
name|qname
argument_list|,
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
try|try
block|{
name|StaxUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|WSDLException
argument_list|(
name|WSDLException
operator|.
name|PARSER_ERROR
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
throw|;
block|}
name|JAXBUtils
operator|.
name|closeUnmarshaller
argument_list|(
name|u
argument_list|)
expr_stmt|;
block|}
block|}
class|class
name|MappingReaderDelegate
extends|extends
name|StreamReaderDelegate
block|{
name|MappingReaderDelegate
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|)
block|{
name|super
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NamespaceContext
name|getNamespaceContext
parameter_list|()
block|{
specifier|final
name|NamespaceContext
name|ctx
init|=
name|super
operator|.
name|getNamespaceContext
argument_list|()
decl_stmt|;
return|return
operator|new
name|NamespaceContext
argument_list|()
block|{
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|String
name|ns
init|=
name|ctx
operator|.
name|getNamespaceURI
argument_list|(
name|prefix
argument_list|)
decl_stmt|;
if|if
condition|(
name|namespace
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|ns
operator|=
name|jaxbNamespace
expr_stmt|;
block|}
return|return
name|ns
return|;
block|}
specifier|public
name|String
name|getPrefix
parameter_list|(
name|String
name|namespaceURI
parameter_list|)
block|{
if|if
condition|(
name|jaxbNamespace
operator|.
name|equals
argument_list|(
name|namespaceURI
argument_list|)
condition|)
block|{
return|return
name|ctx
operator|.
name|getPrefix
argument_list|(
name|namespace
argument_list|)
return|;
block|}
return|return
name|ctx
operator|.
name|getPrefix
argument_list|(
name|namespaceURI
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|public
name|Iterator
name|getPrefixes
parameter_list|(
name|String
name|namespaceURI
parameter_list|)
block|{
if|if
condition|(
name|jaxbNamespace
operator|.
name|equals
argument_list|(
name|namespaceURI
argument_list|)
condition|)
block|{
return|return
name|ctx
operator|.
name|getPrefixes
argument_list|(
name|namespace
argument_list|)
return|;
block|}
return|return
name|ctx
operator|.
name|getPrefixes
argument_list|(
name|namespaceURI
argument_list|)
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|String
name|ns
init|=
name|super
operator|.
name|getNamespaceURI
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|namespace
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|ns
operator|=
name|jaxbNamespace
expr_stmt|;
block|}
return|return
name|ns
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|String
name|ns
init|=
name|super
operator|.
name|getNamespaceURI
argument_list|(
name|prefix
argument_list|)
decl_stmt|;
if|if
condition|(
name|namespace
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|ns
operator|=
name|jaxbNamespace
expr_stmt|;
block|}
return|return
name|ns
return|;
block|}
annotation|@
name|Override
specifier|public
name|QName
name|getName
parameter_list|()
block|{
name|QName
name|qn
init|=
name|super
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|namespace
operator|.
name|equals
argument_list|(
name|qn
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
name|qn
operator|=
operator|new
name|QName
argument_list|(
name|jaxbNamespace
argument_list|,
name|qn
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|qn
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
name|String
name|ns
init|=
name|super
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
if|if
condition|(
name|namespace
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|ns
operator|=
name|jaxbNamespace
expr_stmt|;
block|}
return|return
name|ns
return|;
block|}
block|}
empty_stmt|;
comment|//CHECKSTYLE:OFF - very complicated ASM code
specifier|private
specifier|static
name|Class
argument_list|<
name|?
argument_list|>
name|createExtensionClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|,
name|QName
name|qname
parameter_list|,
name|ClassLoader
name|loader
parameter_list|)
block|{
name|String
name|className
init|=
name|ASMHelper
operator|.
name|periodToSlashes
argument_list|(
name|cls
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|ASMHelper
name|helper
init|=
operator|new
name|ASMHelper
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|extClass
init|=
name|helper
operator|.
name|findClass
argument_list|(
name|className
operator|+
literal|"Extensibility"
argument_list|,
name|loader
argument_list|)
decl_stmt|;
if|if
condition|(
name|extClass
operator|!=
literal|null
condition|)
block|{
return|return
name|extClass
return|;
block|}
name|ClassWriter
name|cw
init|=
name|helper
operator|.
name|createClassWriter
argument_list|()
decl_stmt|;
name|FieldVisitor
name|fv
decl_stmt|;
name|MethodVisitor
name|mv
decl_stmt|;
name|AnnotationVisitor
name|av0
decl_stmt|;
name|cw
operator|.
name|visit
argument_list|(
name|Opcodes
operator|.
name|V1_6
argument_list|,
name|Opcodes
operator|.
name|ACC_PUBLIC
operator|+
name|Opcodes
operator|.
name|ACC_SUPER
operator|+
name|Opcodes
operator|.
name|ACC_SYNTHETIC
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|null
argument_list|,
name|className
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"javax/wsdl/extensions/ExtensibilityElement"
block|}
argument_list|)
expr_stmt|;
name|cw
operator|.
name|visitSource
argument_list|(
name|cls
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"Extensibility.java"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fv
operator|=
name|cw
operator|.
name|visitField
argument_list|(
name|Opcodes
operator|.
name|ACC_PRIVATE
operator|+
name|Opcodes
operator|.
name|ACC_FINAL
operator|+
name|Opcodes
operator|.
name|ACC_STATIC
argument_list|,
literal|"WSDL_REQUIRED"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|fv
operator|=
name|cw
operator|.
name|visitField
argument_list|(
literal|0
argument_list|,
literal|"qn"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|boolean
name|hasAttributes
init|=
literal|false
decl_stmt|;
try|try
block|{
name|Method
name|m
init|=
name|cls
operator|.
name|getDeclaredMethod
argument_list|(
literal|"getOtherAttributes"
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|!=
literal|null
operator|&&
name|m
operator|.
name|getReturnType
argument_list|()
operator|==
name|Map
operator|.
name|class
condition|)
block|{
name|hasAttributes
operator|=
literal|true
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|//ignore
block|}
if|if
condition|(
name|hasAttributes
condition|)
block|{
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_STATIC
argument_list|,
literal|"<clinit>"
argument_list|,
literal|"()V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|64
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitTypeInsn
argument_list|(
name|Opcodes
operator|.
name|NEW
argument_list|,
literal|"javax/xml/namespace/QName"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|DUP
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLdcInsn
argument_list|(
literal|"http://schemas.xmlsoap.org/wsdl/"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLdcInsn
argument_list|(
literal|"required"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"javax/xml/namespace/QName"
argument_list|,
literal|"<init>"
argument_list|,
literal|"(Ljava/lang/String;Ljava/lang/String;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|PUTSTATIC
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"WSDL_REQUIRED"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fv
operator|=
name|cw
operator|.
name|visitField
argument_list|(
name|Opcodes
operator|.
name|ACC_PRIVATE
argument_list|,
literal|"required"
argument_list|,
literal|"Ljava/lang/Boolean;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"<init>"
argument_list|,
literal|"()V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|Label
name|l0
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|33
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
name|className
argument_list|,
literal|"<init>"
argument_list|,
literal|"()V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|31
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitTypeInsn
argument_list|(
name|Opcodes
operator|.
name|NEW
argument_list|,
literal|"javax/xml/namespace/QName"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|DUP
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLdcInsn
argument_list|(
name|qname
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLdcInsn
argument_list|(
name|qname
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESPECIAL
argument_list|,
literal|"javax/xml/namespace/QName"
argument_list|,
literal|"<init>"
argument_list|,
literal|"(Ljava/lang/String;Ljava/lang/String;)V"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|PUTFIELD
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"qn"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|34
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|Label
name|l3
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"setElementType"
argument_list|,
literal|"(Ljavax/xml/namespace/QName;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|37
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|PUTFIELD
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"qn"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|38
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|l2
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"elementType"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"getElementType"
argument_list|,
literal|"()Ljavax/xml/namespace/QName;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|av0
operator|=
name|mv
operator|.
name|visitAnnotation
argument_list|(
literal|"Ljavax/xml/bind/annotation/XmlTransient;"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|av0
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|40
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"qn"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|ARETURN
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasAttributes
condition|)
block|{
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"getRequired"
argument_list|,
literal|"()Ljava/lang/Boolean;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|66
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEVIRTUAL
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"getOtherAttributes"
argument_list|,
literal|"()Ljava/util/Map;"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETSTATIC
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"WSDL_REQUIRED"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEINTERFACE
argument_list|,
literal|"java/util/Map"
argument_list|,
literal|"get"
argument_list|,
literal|"(Ljava/lang/Object;)Ljava/lang/Object;"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitTypeInsn
argument_list|(
name|Opcodes
operator|.
name|CHECKCAST
argument_list|,
literal|"java/lang/String"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ASTORE
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|67
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|l2
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|IFNONNULL
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|ACONST_NULL
argument_list|)
expr_stmt|;
name|l3
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|GOTO
argument_list|,
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFrame
argument_list|(
name|Opcodes
operator|.
name|F_APPEND
argument_list|,
literal|1
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"java/lang/String"
block|}
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKESTATIC
argument_list|,
literal|"java/lang/Boolean"
argument_list|,
literal|"valueOf"
argument_list|,
literal|"(Ljava/lang/String;)Ljava/lang/Boolean;"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFrame
argument_list|(
name|Opcodes
operator|.
name|F_SAME1
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"java/lang/Boolean"
block|}
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|ARETURN
argument_list|)
expr_stmt|;
name|Label
name|l4
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l4
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"s"
argument_list|,
literal|"Ljava/lang/String;"
argument_list|,
literal|null
argument_list|,
name|l1
argument_list|,
name|l4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"setRequired"
argument_list|,
literal|"(Ljava/lang/Boolean;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|76
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|IFNONNULL
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|l2
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|77
argument_list|,
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEVIRTUAL
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"getOtherAttributes"
argument_list|,
literal|"()Ljava/util/Map;"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETSTATIC
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"WSDL_REQUIRED"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEINTERFACE
argument_list|,
literal|"java/util/Map"
argument_list|,
literal|"remove"
argument_list|,
literal|"(Ljava/lang/Object;)Ljava/lang/Object;"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|POP
argument_list|)
expr_stmt|;
name|l3
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l3
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|78
argument_list|,
name|l3
argument_list|)
expr_stmt|;
name|l4
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitJumpInsn
argument_list|(
name|Opcodes
operator|.
name|GOTO
argument_list|,
name|l4
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|79
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFrame
argument_list|(
name|Opcodes
operator|.
name|F_SAME
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEVIRTUAL
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"getOtherAttributes"
argument_list|,
literal|"()Ljava/util/Map;"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETSTATIC
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"WSDL_REQUIRED"
argument_list|,
literal|"Ljavax/xml/namespace/QName;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEVIRTUAL
argument_list|,
literal|"java/lang/Boolean"
argument_list|,
literal|"toString"
argument_list|,
literal|"()Ljava/lang/String;"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMethodInsn
argument_list|(
name|Opcodes
operator|.
name|INVOKEINTERFACE
argument_list|,
literal|"java/util/Map"
argument_list|,
literal|"put"
argument_list|,
literal|"(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|POP
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l4
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|81
argument_list|,
name|l4
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFrame
argument_list|(
name|Opcodes
operator|.
name|F_SAME
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|Label
name|l5
init|=
name|helper
operator|.
name|createLabel
argument_list|()
decl_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l5
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"b"
argument_list|,
literal|"Ljava/lang/Boolean;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"getRequired"
argument_list|,
literal|"()Ljava/lang/Boolean;"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|68
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|GETFIELD
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"required"
argument_list|,
literal|"Ljava/lang/Boolean;"
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|ARETURN
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|mv
operator|=
name|cw
operator|.
name|visitMethod
argument_list|(
name|Opcodes
operator|.
name|ACC_PUBLIC
argument_list|,
literal|"setRequired"
argument_list|,
literal|"(Ljava/lang/Boolean;)V"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitCode
argument_list|()
expr_stmt|;
name|l0
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|71
argument_list|,
name|l0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitVarInsn
argument_list|(
name|Opcodes
operator|.
name|ALOAD
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitFieldInsn
argument_list|(
name|Opcodes
operator|.
name|PUTFIELD
argument_list|,
name|className
operator|+
literal|"Extensibility"
argument_list|,
literal|"required"
argument_list|,
literal|"Ljava/lang/Boolean;"
argument_list|)
expr_stmt|;
name|l1
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLineNumber
argument_list|(
literal|72
argument_list|,
name|l1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitInsn
argument_list|(
name|Opcodes
operator|.
name|RETURN
argument_list|)
expr_stmt|;
name|l2
operator|=
name|helper
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|mv
operator|.
name|visitLabel
argument_list|(
name|l2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"this"
argument_list|,
literal|"L"
operator|+
name|className
operator|+
literal|"Extensibility;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitLocalVariable
argument_list|(
literal|"b"
argument_list|,
literal|"Ljava/lang/Boolean;"
argument_list|,
literal|null
argument_list|,
name|l0
argument_list|,
name|l2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitMaxs
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mv
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
block|}
name|cw
operator|.
name|visitEnd
argument_list|()
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|cw
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
return|return
name|helper
operator|.
name|loadClass
argument_list|(
name|className
operator|+
literal|"Extensibility"
argument_list|,
name|loader
argument_list|,
name|bytes
argument_list|)
return|;
block|}
block|}
end_class

end_unit

