begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl11
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingFault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingInput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOperation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOutput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Input
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Output
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Port
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|PortType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionRegistry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPAddress
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPBody
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPFault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPOperation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|PartialWSDLProcessor
block|{
specifier|private
specifier|static
name|String
name|bindingName
init|=
literal|"SoapBinding"
decl_stmt|;
specifier|private
specifier|static
name|String
name|style
init|=
literal|"document"
decl_stmt|;
specifier|private
specifier|static
name|String
name|useLiteral
init|=
literal|"literal"
decl_stmt|;
specifier|private
specifier|static
name|String
name|serviceName
init|=
literal|"Service"
decl_stmt|;
specifier|private
specifier|static
name|String
name|portName
init|=
literal|"Port"
decl_stmt|;
specifier|private
name|PartialWSDLProcessor
parameter_list|()
block|{     }
specifier|public
specifier|static
name|boolean
name|isPortTypeExisted
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|QName
name|name
parameter_list|)
block|{
name|Map
argument_list|<
name|QName
argument_list|,
name|PortType
argument_list|>
name|portTypes
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|wsdlDefinition
operator|.
name|getAllPortTypes
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|portTypes
operator|==
literal|null
operator|||
name|portTypes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|String
name|existPortTypeName
init|=
literal|null
decl_stmt|;
name|PortType
name|portType
init|=
literal|null
decl_stmt|;
try|try
block|{
for|for
control|(
name|QName
name|existPortTypeQName
range|:
name|portTypes
operator|.
name|keySet
argument_list|()
control|)
block|{
name|existPortTypeName
operator|=
name|existPortTypeQName
operator|.
name|getLocalPart
argument_list|()
expr_stmt|;
if|if
condition|(
name|name
operator|.
name|getLocalPart
argument_list|()
operator|.
name|contains
argument_list|(
name|existPortTypeName
argument_list|)
condition|)
block|{
name|portType
operator|=
name|portTypes
operator|.
name|get
argument_list|(
name|existPortTypeQName
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|portType
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|portType
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isBindingExisted
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|QName
name|name
parameter_list|)
block|{
name|Map
argument_list|<
name|QName
argument_list|,
name|Binding
argument_list|>
name|bindings
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|wsdlDefinition
operator|.
name|getAllBindings
argument_list|()
argument_list|)
decl_stmt|;
name|Binding
name|binding
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|bindings
operator|==
literal|null
operator|||
name|bindings
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
try|try
block|{
for|for
control|(
name|QName
name|existBindingQName
range|:
name|bindings
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|existBindingQName
operator|.
name|getLocalPart
argument_list|()
operator|.
name|contains
argument_list|(
name|name
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
name|binding
operator|=
name|bindings
operator|.
name|get
argument_list|(
name|existBindingQName
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|binding
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|binding
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isServiceExisted
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|QName
name|name
parameter_list|)
block|{
if|if
condition|(
name|wsdlDefinition
operator|.
name|getService
argument_list|(
name|name
argument_list|)
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
specifier|static
name|Binding
name|doAppendBinding
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|String
name|name
parameter_list|,
name|PortType
name|portType
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|Binding
name|binding
init|=
name|wsdlDefinition
operator|.
name|createBinding
argument_list|()
decl_stmt|;
name|binding
operator|.
name|setQName
argument_list|(
operator|new
name|QName
argument_list|(
name|wsdlDefinition
operator|.
name|getTargetNamespace
argument_list|()
argument_list|,
name|name
operator|+
name|bindingName
argument_list|)
argument_list|)
expr_stmt|;
name|binding
operator|.
name|setUndefined
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|binding
operator|.
name|setPortType
argument_list|(
name|portType
argument_list|)
expr_stmt|;
name|setSoapBindingExtElement
argument_list|(
name|wsdlDefinition
argument_list|,
name|binding
argument_list|,
name|extReg
argument_list|)
expr_stmt|;
name|addBindingOperation
argument_list|(
name|wsdlDefinition
argument_list|,
name|portType
argument_list|,
name|binding
argument_list|,
name|extReg
argument_list|)
expr_stmt|;
return|return
name|binding
return|;
block|}
specifier|private
specifier|static
name|void
name|setSoapBindingExtElement
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|Binding
name|binding
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|SOAPBindingUtil
operator|.
name|addSOAPNamespace
argument_list|(
name|wsdlDefinition
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SOAPBinding
name|soapBinding
init|=
name|SOAPBindingUtil
operator|.
name|createSoapBinding
argument_list|(
name|extReg
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|soapBinding
operator|.
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|binding
operator|.
name|addExtensibilityElement
argument_list|(
name|soapBinding
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
specifier|static
name|void
name|addBindingOperation
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|PortType
name|portType
parameter_list|,
name|Binding
name|binding
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Operation
argument_list|>
name|ops
init|=
name|portType
operator|.
name|getOperations
argument_list|()
decl_stmt|;
for|for
control|(
name|Operation
name|op
range|:
name|ops
control|)
block|{
name|BindingOperation
name|bindingOperation
init|=
name|wsdlDefinition
operator|.
name|createBindingOperation
argument_list|()
decl_stmt|;
name|setSoapOperationExtElement
argument_list|(
name|bindingOperation
argument_list|,
name|extReg
argument_list|)
expr_stmt|;
name|bindingOperation
operator|.
name|setName
argument_list|(
name|op
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|op
operator|.
name|getInput
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|bindingOperation
operator|.
name|setBindingInput
argument_list|(
name|getBindingInput
argument_list|(
name|op
operator|.
name|getInput
argument_list|()
argument_list|,
name|wsdlDefinition
argument_list|,
name|extReg
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|op
operator|.
name|getOutput
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|bindingOperation
operator|.
name|setBindingOutput
argument_list|(
name|getBindingOutput
argument_list|(
name|op
operator|.
name|getOutput
argument_list|()
argument_list|,
name|wsdlDefinition
argument_list|,
name|extReg
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|op
operator|.
name|getFaults
argument_list|()
operator|!=
literal|null
operator|&&
name|op
operator|.
name|getFaults
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|addSoapFaults
argument_list|(
name|op
argument_list|,
name|bindingOperation
argument_list|,
name|wsdlDefinition
argument_list|,
name|extReg
argument_list|)
expr_stmt|;
block|}
name|bindingOperation
operator|.
name|setOperation
argument_list|(
name|op
argument_list|)
expr_stmt|;
name|binding
operator|.
name|addBindingOperation
argument_list|(
name|bindingOperation
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|setSoapOperationExtElement
parameter_list|(
name|BindingOperation
name|bo
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|SOAPOperation
name|soapOperation
init|=
name|SOAPBindingUtil
operator|.
name|createSoapOperation
argument_list|(
name|extReg
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|soapOperation
operator|.
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|soapOperation
operator|.
name|setSoapActionURI
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|bo
operator|.
name|addExtensibilityElement
argument_list|(
name|soapOperation
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|BindingInput
name|getBindingInput
parameter_list|(
name|Input
name|input
parameter_list|,
name|Definition
name|wsdlDefinition
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|BindingInput
name|bi
init|=
name|wsdlDefinition
operator|.
name|createBindingInput
argument_list|()
decl_stmt|;
name|bi
operator|.
name|setName
argument_list|(
name|input
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|bi
operator|.
name|addExtensibilityElement
argument_list|(
name|getSoapBody
argument_list|(
name|BindingInput
operator|.
name|class
argument_list|,
name|extReg
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|bi
return|;
block|}
specifier|private
specifier|static
name|BindingOutput
name|getBindingOutput
parameter_list|(
name|Output
name|output
parameter_list|,
name|Definition
name|wsdlDefinition
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|BindingOutput
name|bo
init|=
name|wsdlDefinition
operator|.
name|createBindingOutput
argument_list|()
decl_stmt|;
name|bo
operator|.
name|setName
argument_list|(
name|output
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|bo
operator|.
name|addExtensibilityElement
argument_list|(
name|getSoapBody
argument_list|(
name|BindingOutput
operator|.
name|class
argument_list|,
name|extReg
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|bo
return|;
block|}
specifier|private
specifier|static
name|SOAPBody
name|getSoapBody
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|parent
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|SOAPBody
name|soapBody
init|=
name|SOAPBindingUtil
operator|.
name|createSoapBody
argument_list|(
name|extReg
argument_list|,
name|parent
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|soapBody
operator|.
name|setUse
argument_list|(
name|useLiteral
argument_list|)
expr_stmt|;
return|return
name|soapBody
return|;
block|}
specifier|private
specifier|static
name|void
name|addSoapFaults
parameter_list|(
name|Operation
name|op
parameter_list|,
name|BindingOperation
name|bindingOperation
parameter_list|,
name|Definition
name|wsdlDefinition
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Fault
argument_list|>
name|faults
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|op
operator|.
name|getFaults
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Fault
name|fault
range|:
name|faults
operator|.
name|values
argument_list|()
control|)
block|{
name|BindingFault
name|bf
init|=
name|wsdlDefinition
operator|.
name|createBindingFault
argument_list|()
decl_stmt|;
name|bf
operator|.
name|setName
argument_list|(
name|fault
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setSoapFaultExtElement
argument_list|(
name|bf
argument_list|,
name|extReg
argument_list|)
expr_stmt|;
name|bindingOperation
operator|.
name|addBindingFault
argument_list|(
name|bf
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|setSoapFaultExtElement
parameter_list|(
name|BindingFault
name|bf
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|SOAPFault
name|soapFault
init|=
name|SOAPBindingUtil
operator|.
name|createSoapFault
argument_list|(
name|extReg
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|soapFault
operator|.
name|setName
argument_list|(
name|bf
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|soapFault
operator|.
name|setUse
argument_list|(
name|useLiteral
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addExtensibilityElement
argument_list|(
name|soapFault
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|SOAPAddress
name|setAddrElement
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|Port
name|port
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|Exception
block|{
name|SOAPAddress
name|address
init|=
name|SOAPBindingUtil
operator|.
name|createSoapAddress
argument_list|(
name|extReg
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|address
operator|.
name|setLocationURI
argument_list|(
literal|"dummy"
argument_list|)
expr_stmt|;
return|return
name|address
return|;
block|}
specifier|public
specifier|static
name|javax
operator|.
name|wsdl
operator|.
name|Service
name|doAppendService
parameter_list|(
name|Definition
name|wsdlDefinition
parameter_list|,
name|String
name|existPortName
parameter_list|,
name|ExtensionRegistry
name|extReg
parameter_list|,
name|Binding
name|binding
parameter_list|)
throws|throws
name|Exception
block|{
name|javax
operator|.
name|wsdl
operator|.
name|Service
name|wsdlService
init|=
name|wsdlDefinition
operator|.
name|createService
argument_list|()
decl_stmt|;
name|wsdlService
operator|.
name|setQName
argument_list|(
operator|new
name|QName
argument_list|(
name|wsdlDefinition
operator|.
name|getTargetNamespace
argument_list|()
argument_list|,
name|existPortName
operator|+
name|serviceName
argument_list|)
argument_list|)
expr_stmt|;
name|Port
name|port
init|=
name|wsdlDefinition
operator|.
name|createPort
argument_list|()
decl_stmt|;
name|port
operator|.
name|setName
argument_list|(
name|existPortName
operator|+
name|portName
argument_list|)
expr_stmt|;
name|port
operator|.
name|setBinding
argument_list|(
name|binding
argument_list|)
expr_stmt|;
name|SOAPAddress
name|address
init|=
name|PartialWSDLProcessor
operator|.
name|setAddrElement
argument_list|(
name|wsdlDefinition
argument_list|,
name|port
argument_list|,
name|extReg
argument_list|)
decl_stmt|;
name|port
operator|.
name|addExtensibilityElement
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|wsdlService
operator|.
name|addPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
return|return
name|wsdlService
return|;
block|}
block|}
end_class

end_unit

