begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|security
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|NameCallback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|PasswordCallback
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|NamePasswordCallbackHandlerTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testHandleCallback
parameter_list|()
throws|throws
name|Exception
block|{
name|NamePasswordCallbackHandler
name|handler
init|=
operator|new
name|NamePasswordCallbackHandler
argument_list|(
literal|"Barry"
argument_list|,
literal|"dog"
argument_list|)
decl_stmt|;
name|Callback
index|[]
name|callbacks
init|=
operator|new
name|Callback
index|[]
block|{
operator|new
name|NameCallback
argument_list|(
literal|"name"
argument_list|)
block|,
operator|new
name|PasswordCallback
argument_list|(
literal|"password"
argument_list|,
literal|false
argument_list|)
block|}
decl_stmt|;
name|handler
operator|.
name|handle
argument_list|(
name|callbacks
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
operator|(
operator|(
name|NameCallback
operator|)
name|callbacks
index|[
literal|0
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dog"
argument_list|,
operator|new
name|String
argument_list|(
operator|(
operator|(
name|PasswordCallback
operator|)
name|callbacks
index|[
literal|1
index|]
operator|)
operator|.
name|getPassword
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHandleCallback2
parameter_list|()
throws|throws
name|Exception
block|{
name|NamePasswordCallbackHandler
name|handler
init|=
operator|new
name|NamePasswordCallbackHandler
argument_list|(
literal|"Barry"
argument_list|,
literal|"dog"
argument_list|)
decl_stmt|;
name|Callback
index|[]
name|callbacks
init|=
operator|new
name|Callback
index|[]
block|{
operator|new
name|NameCallback
argument_list|(
literal|"name"
argument_list|)
block|,
operator|new
name|ObjectCallback
argument_list|()
block|}
decl_stmt|;
name|handler
operator|.
name|handle
argument_list|(
name|callbacks
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
operator|(
operator|(
name|NameCallback
operator|)
name|callbacks
index|[
literal|0
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|pwobj
init|=
operator|(
operator|(
name|ObjectCallback
operator|)
name|callbacks
index|[
literal|1
index|]
operator|)
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|pwobj
operator|instanceof
name|char
index|[]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dog"
argument_list|,
operator|new
name|String
argument_list|(
operator|(
name|char
index|[]
operator|)
name|pwobj
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHandleCallback3
parameter_list|()
throws|throws
name|Exception
block|{
name|NamePasswordCallbackHandler
name|handler
init|=
operator|new
name|NamePasswordCallbackHandler
argument_list|(
literal|"Barry"
argument_list|,
literal|"dog"
argument_list|)
decl_stmt|;
name|Callback
index|[]
name|callbacks
init|=
operator|new
name|Callback
index|[]
block|{
operator|new
name|NameCallback
argument_list|(
literal|"name"
argument_list|)
block|,
operator|new
name|StringObjectCallback
argument_list|()
block|}
decl_stmt|;
name|handler
operator|.
name|handle
argument_list|(
name|callbacks
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
operator|(
operator|(
name|NameCallback
operator|)
name|callbacks
index|[
literal|0
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dog"
argument_list|,
operator|(
operator|(
name|StringObjectCallback
operator|)
name|callbacks
index|[
literal|1
index|]
operator|)
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHandleCallback4
parameter_list|()
throws|throws
name|Exception
block|{
name|NamePasswordCallbackHandler
name|handler
init|=
operator|new
name|NamePasswordCallbackHandler
argument_list|(
literal|"Barry"
argument_list|,
literal|"dog"
argument_list|,
literal|"setValue"
argument_list|)
decl_stmt|;
name|Callback
index|[]
name|callbacks
init|=
operator|new
name|Callback
index|[]
block|{
operator|new
name|NameCallback
argument_list|(
literal|"name"
argument_list|)
block|,
operator|new
name|CharArrayCallback
argument_list|()
block|}
decl_stmt|;
name|handler
operator|.
name|handle
argument_list|(
name|callbacks
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
operator|(
operator|(
name|NameCallback
operator|)
name|callbacks
index|[
literal|0
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dog"
argument_list|,
operator|new
name|String
argument_list|(
operator|(
operator|(
name|CharArrayCallback
operator|)
name|callbacks
index|[
literal|1
index|]
operator|)
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|static
class|class
name|ObjectCallback
implements|implements
name|Callback
block|{
specifier|private
name|Object
name|obj
decl_stmt|;
specifier|public
name|Object
name|getObject
parameter_list|()
block|{
return|return
name|obj
return|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|this
operator|.
name|obj
operator|=
name|o
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|StringObjectCallback
implements|implements
name|Callback
block|{
specifier|private
name|String
name|obj
decl_stmt|;
specifier|public
name|String
name|getObject
parameter_list|()
block|{
return|return
name|obj
return|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|String
name|o
parameter_list|)
block|{
name|this
operator|.
name|obj
operator|=
name|o
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|CharArrayCallback
implements|implements
name|Callback
block|{
specifier|private
name|char
index|[]
name|obj
decl_stmt|;
specifier|public
name|char
index|[]
name|getValue
parameter_list|()
block|{
return|return
name|obj
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|char
index|[]
name|o
parameter_list|)
block|{
name|this
operator|.
name|obj
operator|=
name|o
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

