begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_class
specifier|public
class|class
name|PrettyLoggingOutInterceptorTest
extends|extends
name|Assert
block|{
annotation|@
name|Ignore
comment|//@Test
specifier|public
name|void
name|testFormatting
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|PrettyLoggingOutInterceptor
name|p
init|=
operator|new
name|PrettyLoggingOutInterceptor
argument_list|(
name|pw
argument_list|)
decl_stmt|;
name|PrettyLoggingOutInterceptor
operator|.
name|LoggingCallback
name|l
init|=
name|p
operator|.
expr|new
name|LoggingCallback
argument_list|()
decl_stmt|;
name|CachedOutputStream
name|cos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|String
name|s
init|=
literal|"<today><is><the><twenty><second><of><january><two><thousand><and><nine></nine> "
operator|+
literal|"</and></thousand></two></january></of></second></twenty></the></is></today>"
decl_stmt|;
name|cos
operator|.
name|getOut
argument_list|()
operator|.
name|write
argument_list|(
name|s
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|.
name|onClose
argument_list|(
name|cos
argument_list|)
expr_stmt|;
name|String
name|str
init|=
name|baos
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|//format has changed
name|assertFalse
argument_list|(
name|str
operator|.
name|matches
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|str
operator|.
name|contains
argument_list|(
literal|"<today>"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

