begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|AttachmentDeserializerTest
extends|extends
name|Assert
block|{
specifier|private
name|MessageImpl
name|msg
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|msg
operator|=
operator|new
name|MessageImpl
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setExchange
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeserializerMtom
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"mimedata"
argument_list|)
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"application/xop+xml\"; "
operator|+
literal|"start=\"<soap.xml@xfire.codehaus.org>\"; "
operator|+
literal|"start-info=\"text/xml; charset=utf-8\"; "
operator|+
literal|"boundary=\"----=_Part_4_701508.1145579811786\""
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|InputStream
name|attBody
init|=
name|msg
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|!=
name|is
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|instanceof
name|DelegatingInputStream
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|atts
init|=
name|msg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|atts
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Attachment
argument_list|>
name|itr
init|=
name|atts
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|itr
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|a
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|InputStream
name|attIs
init|=
name|a
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
comment|// We need to cache the InputStream for reusing the AttachmentDataSource
comment|//assertTrue(((DelegatingInputStream) attIs).getInputStream() instanceof MimeBodyPartInputStream);
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attIs
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attBody
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
comment|// check the cached output stream
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|attBody
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"<env:Envelope"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try streaming a character off the wire
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'/'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'9'
argument_list|)
expr_stmt|;
comment|//        Attachment invalid = atts.get("INVALID");
comment|//        assertNull(invalid.getDataHandler().getInputStream());
comment|//
comment|//        assertTrue(attIs instanceof ByteArrayInputStream);
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeserializerMtomWithAxis2StyleBoundaries
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"axis2_mimedata"
argument_list|)
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"application/xop+xml\"; "
operator|+
literal|"start=\"<soap.xml@xfire.codehaus.org>\"; "
operator|+
literal|"start-info=\"text/xml; charset=utf-8\"; "
operator|+
literal|"boundary=MIMEBoundaryurn_uuid_6BC4984D5D38EB283C1177616488109"
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|InputStream
name|attBody
init|=
name|msg
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|!=
name|is
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|instanceof
name|DelegatingInputStream
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|atts
init|=
name|msg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|atts
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Attachment
argument_list|>
name|itr
init|=
name|atts
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|itr
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|a
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|InputStream
name|attIs
init|=
name|a
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
comment|// We need to cache the InputStream for reusing the AttachmentDataSource
comment|//assertTrue(((DelegatingInputStream) attIs).getInputStream() instanceof MimeBodyPartInputStream);
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attIs
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attBody
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
comment|// check the cached output stream
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|attBody
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"<env:Envelope"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try streaming a character off the wire
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'/'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'9'
argument_list|)
expr_stmt|;
comment|//        Attachment invalid = atts.get("INVALID");
comment|//        assertNull(invalid.getDataHandler().getInputStream());
comment|//
comment|//        assertTrue(attIs instanceof ByteArrayInputStream);
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeserializerSwA
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"swadata"
argument_list|)
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"text/xml\"; "
operator|+
literal|"start=\"<86048FF3556694F7DA1918466DDF8143>\";    "
operator|+
literal|"boundary=\"----=_Part_0_14158819.1167275505862\""
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|InputStream
name|attBody
init|=
name|msg
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|!=
name|is
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|instanceof
name|DelegatingInputStream
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|atts
init|=
name|msg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|atts
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Attachment
argument_list|>
name|itr
init|=
name|atts
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|itr
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|a
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|InputStream
name|attIs
init|=
name|a
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
comment|// We need to cache the InputStream for reusing the AttachmentDataSource
comment|//assertTrue(((DelegatingInputStream) attIs).getInputStream() instanceof MimeBodyPartInputStream);
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attIs
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attBody
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
comment|// check the cached output stream
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|attBody
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"<?xml"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try streaming a character off the wire
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'f'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'o'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'o'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'b'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'a'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'r'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeserializerSwAWithoutBoundryInContentType
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"swadata"
argument_list|)
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"text/xml\"; "
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|InputStream
name|attBody
init|=
name|msg
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|!=
name|is
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|instanceof
name|DelegatingInputStream
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|atts
init|=
name|msg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|atts
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Attachment
argument_list|>
name|itr
init|=
name|atts
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|itr
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|a
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|InputStream
name|attIs
init|=
name|a
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
comment|// We need to cache the InputStream for reusing the AttachmentDataSource
comment|//assertTrue(((DelegatingInputStream) attIs).getInputStream() instanceof MimeBodyPartInputStream);
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attIs
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attBody
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
comment|// check the cached output stream
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|attBody
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"<?xml"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try streaming a character off the wire
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'f'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'o'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'o'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'b'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'a'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
literal|'r'
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attIs
operator|.
name|read
argument_list|()
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeserializerWithCachedFile
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"mimedata"
argument_list|)
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"application/xop+xml\"; "
operator|+
literal|"start=\"<soap.xml@xfire.codehaus.org>\"; "
operator|+
literal|"start-info=\"text/xml; charset=utf-8\"; "
operator|+
literal|"boundary=\"----=_Part_4_701508.1145579811786\""
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|AttachmentDeserializer
operator|.
name|ATTACHMENT_MEMORY_THRESHOLD
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|InputStream
name|attBody
init|=
name|msg
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|!=
name|is
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attBody
operator|instanceof
name|DelegatingInputStream
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|atts
init|=
name|msg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|atts
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Attachment
argument_list|>
name|itr
init|=
name|atts
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|itr
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|a
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|InputStream
name|attIs
init|=
name|a
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
comment|// We need to cache the InputStream for reusing the AttachmentDataSource
comment|//assertTrue(((DelegatingInputStream) attIs).getInputStream() instanceof MimeBodyPartInputStream);
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attIs
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|ByteArrayInputStream
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|DelegatingInputStream
operator|)
name|attBody
operator|)
operator|.
name|getInputStream
argument_list|()
operator|instanceof
name|FileInputStream
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

