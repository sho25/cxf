begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|workqueue
operator|.
name|AutomaticWorkQueueImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|workqueue
operator|.
name|WorkQueueManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|workqueue
operator|.
name|WorkQueueManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationException
import|;
end_import

begin_class
annotation|@
name|Deprecated
specifier|public
class|class
name|WorkQueueSingleConfigTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testReadConfig
parameter_list|()
throws|throws
name|IOException
throws|,
name|ConfigurationException
block|{
name|WorkQueueManager
name|wqm
init|=
operator|new
name|WorkQueueManagerImpl
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|wqm
operator|.
name|getNamedWorkQueue
argument_list|(
literal|"default"
argument_list|)
argument_list|)
expr_stmt|;
name|ManagedWorkQueueList
name|workQueueList
init|=
operator|new
name|ManagedWorkQueueList
argument_list|()
decl_stmt|;
name|WorkQueueSingleConfig
name|wqlSingleConfig
init|=
operator|new
name|WorkQueueSingleConfig
argument_list|(
name|workQueueList
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"org.apache.cxf.workqueues.cfg"
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|wqlSingleConfig
operator|.
name|updated
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|workQueueList
operator|.
name|addAllToWorkQueueManager
argument_list|(
name|wqm
argument_list|)
expr_stmt|;
name|checkDefaultQueue
argument_list|(
name|wqm
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkDefaultQueue
parameter_list|(
name|WorkQueueManager
name|wqm
parameter_list|)
block|{
name|AutomaticWorkQueueImpl
name|queue
init|=
operator|(
name|AutomaticWorkQueueImpl
operator|)
name|wqm
operator|.
name|getNamedWorkQueue
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|queue
operator|.
name|getHighWaterMark
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|queue
operator|.
name|getLowWaterMark
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|queue
operator|.
name|getInitialSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

