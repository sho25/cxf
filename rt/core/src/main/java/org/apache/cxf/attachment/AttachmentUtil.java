begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|HttpHeaderHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|AttachmentUtil
block|{
specifier|private
specifier|static
specifier|volatile
name|int
name|counter
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ATT_UUID
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|private
name|AttachmentUtil
parameter_list|()
block|{      }
comment|/**      * @param ns      * @return      */
specifier|public
specifier|static
name|String
name|createContentID
parameter_list|(
name|String
name|ns
parameter_list|)
throws|throws
name|UnsupportedEncodingException
block|{
comment|// tend to change
name|String
name|cid
init|=
literal|"http://cxf.apache.org/"
decl_stmt|;
name|String
name|name
init|=
name|ATT_UUID
operator|+
literal|"-"
operator|+
name|String
operator|.
name|valueOf
argument_list|(
operator|++
name|counter
argument_list|)
decl_stmt|;
if|if
condition|(
name|ns
operator|!=
literal|null
operator|&&
operator|(
name|ns
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|)
condition|)
block|{
try|try
block|{
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
name|ns
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|uri
operator|.
name|toURL
argument_list|()
operator|.
name|getHost
argument_list|()
decl_stmt|;
name|cid
operator|=
name|host
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|cid
operator|=
name|ns
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
name|cid
operator|=
name|ns
expr_stmt|;
block|}
block|}
return|return
name|URLEncoder
operator|.
name|encode
argument_list|(
name|name
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"@"
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|cid
argument_list|,
literal|"UTF-8"
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|getUniqueBoundaryValue
parameter_list|(
name|int
name|part
parameter_list|)
block|{
name|StringBuffer
name|s
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
comment|// Unique string is ----=_Part_<part>_<hashcode>.<currentTime>
name|s
operator|.
name|append
argument_list|(
literal|"----=_Part_"
argument_list|)
operator|.
name|append
argument_list|(
name|part
operator|++
argument_list|)
operator|.
name|append
argument_list|(
literal|"_"
argument_list|)
operator|.
name|append
argument_list|(
name|s
operator|.
name|hashCode
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|'.'
argument_list|)
operator|.
name|append
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|s
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|String
name|getAttchmentPartHeader
parameter_list|(
name|Attachment
name|att
parameter_list|)
block|{
name|StringBuffer
name|buffer
init|=
operator|new
name|StringBuffer
argument_list|(
literal|200
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|HttpHeaderHelper
operator|.
name|getHeaderKey
argument_list|(
name|HttpHeaderHelper
operator|.
name|CONTENT_TYPE
argument_list|)
operator|+
literal|": "
operator|+
name|att
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getContentType
argument_list|()
operator|+
literal|";\r\n"
argument_list|)
expr_stmt|;
if|if
condition|(
name|att
operator|.
name|isXOP
argument_list|()
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"Content-Transfer-Encoding: binary\r\n"
argument_list|)
expr_stmt|;
block|}
name|buffer
operator|.
name|append
argument_list|(
literal|"Content-ID:<"
operator|+
name|att
operator|.
name|getId
argument_list|()
operator|+
literal|">\r\n\r\n"
argument_list|)
expr_stmt|;
return|return
name|buffer
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

