begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|PhaseInterceptorChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|PhaseManager
import|;
end_import

begin_class
specifier|public
class|class
name|InFaultChainInitiatorObserver
extends|extends
name|AbstractFaultChainInitiatorObserver
block|{
specifier|public
name|InFaultChainInitiatorObserver
parameter_list|(
name|Bus
name|bus
parameter_list|)
block|{
name|super
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|initializeInterceptors
parameter_list|(
name|Exchange
name|ex
parameter_list|,
name|PhaseInterceptorChain
name|chain
parameter_list|)
block|{
name|Endpoint
name|e
init|=
name|ex
operator|.
name|get
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|Client
name|c
init|=
name|ex
operator|.
name|get
argument_list|(
name|Client
operator|.
name|class
argument_list|)
decl_stmt|;
name|InterceptorProvider
name|ip
init|=
name|ex
operator|.
name|get
argument_list|(
name|InterceptorProvider
operator|.
name|class
argument_list|)
decl_stmt|;
name|chain
operator|.
name|add
argument_list|(
name|getBus
argument_list|()
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|c
operator|!=
literal|null
condition|)
block|{
name|chain
operator|.
name|add
argument_list|(
name|c
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ip
operator|!=
literal|null
condition|)
block|{
name|chain
operator|.
name|add
argument_list|(
name|ip
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|chain
operator|.
name|add
argument_list|(
name|e
operator|.
name|getService
argument_list|()
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
name|chain
operator|.
name|add
argument_list|(
name|e
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
name|chain
operator|.
name|add
argument_list|(
name|e
operator|.
name|getBinding
argument_list|()
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|e
operator|.
name|getService
argument_list|()
operator|.
name|getDataBinding
argument_list|()
operator|instanceof
name|InterceptorProvider
condition|)
block|{
name|chain
operator|.
name|add
argument_list|(
operator|(
operator|(
name|InterceptorProvider
operator|)
name|e
operator|.
name|getService
argument_list|()
operator|.
name|getDataBinding
argument_list|()
operator|)
operator|.
name|getInFaultInterceptors
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|SortedSet
argument_list|<
name|Phase
argument_list|>
name|getPhases
parameter_list|()
block|{
return|return
name|getBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|PhaseManager
operator|.
name|class
argument_list|)
operator|.
name|getInPhases
argument_list|()
return|;
block|}
specifier|protected
name|boolean
name|isOutboundObserver
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

