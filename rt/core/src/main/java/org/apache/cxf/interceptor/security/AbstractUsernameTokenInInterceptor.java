begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|security
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|security
operator|.
name|SecurityToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|security
operator|.
name|TokenType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|security
operator|.
name|UsernameToken
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractUsernameTokenInInterceptor
extends|extends
name|AbstractSecurityContextInInterceptor
block|{
specifier|protected
name|Subject
name|createSubject
parameter_list|(
name|SecurityToken
name|token
parameter_list|)
block|{
if|if
condition|(
name|token
operator|.
name|getTokenType
argument_list|()
operator|!=
name|TokenType
operator|.
name|UsernameToken
condition|)
block|{
name|reportSecurityException
argument_list|(
literal|"Unsupported token type "
operator|+
name|token
operator|.
name|getTokenType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|UsernameToken
name|ut
init|=
operator|(
name|UsernameToken
operator|)
name|token
decl_stmt|;
return|return
name|createSubject
argument_list|(
name|ut
argument_list|)
return|;
block|}
specifier|protected
specifier|abstract
name|Subject
name|createSubject
parameter_list|(
name|UsernameToken
name|token
parameter_list|)
function_decl|;
block|}
end_class

end_unit

