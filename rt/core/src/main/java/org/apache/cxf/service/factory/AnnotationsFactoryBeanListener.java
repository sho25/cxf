begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|factory
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|SchemaValidation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|WSDLDocumentation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|InterfaceInfo
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|AnnotationsFactoryBeanListener
implements|implements
name|FactoryBeanListener
block|{
comment|/** {@inheritDoc}*/
specifier|public
name|void
name|handleEvent
parameter_list|(
name|Event
name|ev
parameter_list|,
name|AbstractServiceFactoryBean
name|factory
parameter_list|,
name|Object
modifier|...
name|args
parameter_list|)
block|{
switch|switch
condition|(
name|ev
condition|)
block|{
case|case
name|INTERFACE_CREATED
case|:
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|cls
init|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|args
index|[
literal|1
index|]
decl_stmt|;
name|WSDLDocumentation
name|doc
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|WSDLDocumentation
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
block|{
name|InterfaceInfo
name|info
init|=
operator|(
name|InterfaceInfo
operator|)
name|args
index|[
literal|0
index|]
decl_stmt|;
name|info
operator|.
name|setDocumentation
argument_list|(
name|doc
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|ENDPOINT_SELECTED
case|:
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|cls
init|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|args
index|[
literal|2
index|]
decl_stmt|;
name|SchemaValidation
name|val
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|SchemaValidation
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|.
name|enabled
argument_list|()
condition|)
block|{
operator|(
operator|(
name|Endpoint
operator|)
name|args
index|[
literal|1
index|]
operator|)
operator|.
name|put
argument_list|(
name|Message
operator|.
name|SCHEMA_VALIDATION_ENABLED
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|SERVER_CREATED
case|:
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|cls
init|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|args
index|[
literal|2
index|]
decl_stmt|;
name|SchemaValidation
name|val
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|SchemaValidation
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|.
name|enabled
argument_list|()
condition|)
block|{
operator|(
operator|(
name|Server
operator|)
name|args
index|[
literal|0
index|]
operator|)
operator|.
name|getEndpoint
argument_list|()
operator|.
name|put
argument_list|(
name|Message
operator|.
name|SCHEMA_VALIDATION_ENABLED
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
name|WSDLDocumentation
name|doc
init|=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|WSDLDocumentation
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
block|{
operator|(
operator|(
name|Server
operator|)
name|args
index|[
literal|0
index|]
operator|)
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getServiceInfos
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setDocumentation
argument_list|(
name|doc
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
default|default:
comment|//do nothing
block|}
block|}
block|}
end_class

end_unit

