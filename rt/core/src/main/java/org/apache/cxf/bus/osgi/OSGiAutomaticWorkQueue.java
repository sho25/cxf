begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|workqueue
operator|.
name|AutomaticWorkQueueImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedService
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|OSGiAutomaticWorkQueue
extends|extends
name|AutomaticWorkQueueImpl
block|{
specifier|static
class|class
name|WorkQueueList
implements|implements
name|ManagedService
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|OSGiAutomaticWorkQueue
argument_list|>
name|queues
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|OSGiAutomaticWorkQueue
argument_list|>
argument_list|()
decl_stmt|;
name|ServiceRegistration
name|registration
decl_stmt|;
name|Configuration
name|config
decl_stmt|;
name|Properties
name|current
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
specifier|public
specifier|synchronized
name|void
name|register
parameter_list|(
name|BundleContext
name|ctx
parameter_list|,
name|Configuration
name|c
parameter_list|)
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVICE_PID
argument_list|,
literal|"org.apache.cxf.workqueues"
argument_list|)
expr_stmt|;
name|registration
operator|=
name|ctx
operator|.
name|registerService
argument_list|(
name|ManagedService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|this
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|this
operator|.
name|config
operator|=
name|c
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|void
name|updateProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|val
parameter_list|)
block|{
if|if
condition|(
name|val
operator|!=
literal|null
condition|)
block|{
name|current
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|current
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|config
operator|.
name|update
argument_list|(
name|current
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//ignore
block|}
block|}
specifier|public
specifier|synchronized
name|void
name|updated
parameter_list|(
name|Dictionary
name|d
parameter_list|)
throws|throws
name|ConfigurationException
block|{
name|current
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Enumeration
name|e
init|=
name|d
operator|.
name|keys
argument_list|()
decl_stmt|;
while|while
condition|(
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|String
name|k
init|=
operator|(
name|String
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|current
operator|.
name|put
argument_list|(
name|k
argument_list|,
name|d
operator|.
name|get
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|s
init|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue.names"
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|String
name|s2
index|[]
init|=
name|s
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|s2
control|)
block|{
name|name
operator|=
name|name
operator|.
name|trim
argument_list|()
expr_stmt|;
if|if
condition|(
name|queues
operator|.
name|containsKey
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|queues
operator|.
name|get
argument_list|(
name|name
argument_list|)
operator|.
name|updated
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|OSGiAutomaticWorkQueue
name|wq
init|=
operator|new
name|OSGiAutomaticWorkQueue
argument_list|(
name|name
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|wq
operator|.
name|updated
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|wq
operator|.
name|setShared
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|queues
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|wq
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|registration
operator|!=
literal|null
condition|)
block|{
name|registration
operator|.
name|setProperties
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
block|}
block|}
empty_stmt|;
specifier|final
name|WorkQueueList
name|qlist
decl_stmt|;
specifier|public
name|OSGiAutomaticWorkQueue
parameter_list|(
name|String
name|name
parameter_list|,
name|WorkQueueList
name|ql
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|qlist
operator|=
name|ql
expr_stmt|;
block|}
specifier|public
name|void
name|setHighWaterMark
parameter_list|(
name|int
name|hwm
parameter_list|)
block|{
name|super
operator|.
name|setHighWaterMark
argument_list|(
name|hwm
argument_list|)
expr_stmt|;
name|qlist
operator|.
name|updateProperty
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|getName
argument_list|()
operator|+
literal|".highWaterMark"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|getHighWaterMark
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setLowWaterMark
parameter_list|(
name|int
name|lwm
parameter_list|)
block|{
name|super
operator|.
name|setLowWaterMark
argument_list|(
name|lwm
argument_list|)
expr_stmt|;
name|qlist
operator|.
name|updateProperty
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|getName
argument_list|()
operator|+
literal|".lowWaterMark"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|getLowWaterMark
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setInitialSize
parameter_list|(
name|int
name|initialSize
parameter_list|)
block|{
name|super
operator|.
name|setInitialSize
argument_list|(
name|initialSize
argument_list|)
expr_stmt|;
name|qlist
operator|.
name|updateProperty
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|getName
argument_list|()
operator|+
literal|".initialSize"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|initialSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setQueueSize
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|super
operator|.
name|setQueueSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|qlist
operator|.
name|updateProperty
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|getName
argument_list|()
operator|+
literal|".queueSize"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|size
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDequeueTimeout
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|super
operator|.
name|setDequeueTimeout
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|qlist
operator|.
name|updateProperty
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|getName
argument_list|()
operator|+
literal|".dequeueTimeout"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|l
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc}*/
specifier|public
name|void
name|updated
parameter_list|(
name|Dictionary
name|d
parameter_list|)
throws|throws
name|ConfigurationException
block|{
name|String
name|name
init|=
name|getName
argument_list|()
decl_stmt|;
name|String
name|s
init|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".highWaterMark"
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|setHighWaterMark
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".lowWaterMark"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|setLowWaterMark
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".initialSize"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|setInitialSize
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".dequeueTimeout"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|setDequeueTimeout
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".queueSize"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|setQueueSize
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

