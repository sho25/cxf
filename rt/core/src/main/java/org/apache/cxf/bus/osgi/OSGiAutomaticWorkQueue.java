begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|workqueue
operator|.
name|AutomaticWorkQueueImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationException
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|OSGiAutomaticWorkQueue
extends|extends
name|AutomaticWorkQueueImpl
block|{
specifier|public
name|OSGiAutomaticWorkQueue
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc}*/
specifier|public
name|void
name|updated
parameter_list|(
name|Dictionary
name|d
parameter_list|)
throws|throws
name|ConfigurationException
block|{
name|String
name|name
init|=
name|getName
argument_list|()
decl_stmt|;
name|String
name|s
init|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".highWaterMark"
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|setHighWaterMark
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".lowWaterMark"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|setLowWaterMark
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".initialSize"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|setInitialSize
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".dequeueTimeout"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|setDequeueTimeout
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|d
operator|.
name|get
argument_list|(
literal|"org.apache.cxf.workqueue."
operator|+
name|name
operator|+
literal|".queueSize"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|setQueueSize
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

