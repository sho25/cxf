begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|MAPAggregator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|soap
operator|.
name|MAPCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|AbstractPolicyInterceptorProvider
import|;
end_import

begin_comment
comment|/**  * Instead of parametrising an instance of org.apache.cxf.policy.PolicyInterceptorProviderImpl  * we use this class to reduce the impact of changes to the addressing metadata namespace  * (only need to update Metadataconstants, otherwise cfg file fragement also).  */
end_comment

begin_class
specifier|public
class|class
name|AddressingPolicyInterceptorProvider
extends|extends
name|AbstractPolicyInterceptorProvider
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|1018053541795476992L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Collection
argument_list|<
name|QName
argument_list|>
name|ASSERTION_TYPES
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|MAPAggregator
name|MAP_AGGREGATOR
init|=
operator|new
name|MAPAggregator
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|MAPCodec
name|MAP_CODEC
init|=
operator|new
name|MAPCodec
argument_list|()
decl_stmt|;
static|static
block|{
name|Collection
argument_list|<
name|QName
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|QName
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|MetadataConstants
operator|.
name|ADDRESSING_ASSERTION_QNAME
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|MetadataConstants
operator|.
name|ANON_RESPONSES_ASSERTION_QNAME
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|MetadataConstants
operator|.
name|NON_ANON_RESPONSES_ASSERTION_QNAME
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|MetadataConstants
operator|.
name|USING_ADDRESSING_2004_QNAME
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|MetadataConstants
operator|.
name|USING_ADDRESSING_2005_QNAME
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|MetadataConstants
operator|.
name|USING_ADDRESSING_2006_QNAME
argument_list|)
expr_stmt|;
name|ASSERTION_TYPES
operator|=
name|types
expr_stmt|;
block|}
specifier|public
name|AddressingPolicyInterceptorProvider
parameter_list|()
block|{
name|super
argument_list|(
name|ASSERTION_TYPES
argument_list|)
expr_stmt|;
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_AGGREGATOR
argument_list|)
expr_stmt|;
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_CODEC
argument_list|)
expr_stmt|;
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_AGGREGATOR
argument_list|)
expr_stmt|;
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_CODEC
argument_list|)
expr_stmt|;
name|getInFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_AGGREGATOR
argument_list|)
expr_stmt|;
name|getInFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_CODEC
argument_list|)
expr_stmt|;
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_AGGREGATOR
argument_list|)
expr_stmt|;
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|MAP_CODEC
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

