begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
operator|.
name|external
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingFaultInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingMessageInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Policy
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|PolicyAttachment
block|{
specifier|private
name|Collection
argument_list|<
name|DomainExpression
argument_list|>
name|domainExpressions
decl_stmt|;
specifier|private
name|Policy
name|policy
decl_stmt|;
specifier|public
name|Collection
argument_list|<
name|DomainExpression
argument_list|>
name|getDomainExpressions
parameter_list|()
block|{
return|return
name|domainExpressions
return|;
block|}
specifier|public
name|void
name|setDomainExpressions
parameter_list|(
name|Collection
argument_list|<
name|DomainExpression
argument_list|>
name|des
parameter_list|)
block|{
name|domainExpressions
operator|=
name|des
expr_stmt|;
block|}
specifier|public
name|Policy
name|getPolicy
parameter_list|()
block|{
return|return
name|policy
return|;
block|}
specifier|public
name|void
name|setPolicy
parameter_list|(
name|Policy
name|p
parameter_list|)
block|{
name|policy
operator|=
name|p
expr_stmt|;
block|}
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|ServiceInfo
name|si
parameter_list|)
block|{
for|for
control|(
name|DomainExpression
name|de
range|:
name|domainExpressions
control|)
block|{
if|if
condition|(
name|de
operator|.
name|appliesTo
argument_list|(
name|si
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|EndpointInfo
name|ei
parameter_list|)
block|{
for|for
control|(
name|DomainExpression
name|de
range|:
name|domainExpressions
control|)
block|{
if|if
condition|(
name|de
operator|.
name|appliesTo
argument_list|(
name|ei
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingOperationInfo
name|boi
parameter_list|)
block|{
for|for
control|(
name|DomainExpression
name|de
range|:
name|domainExpressions
control|)
block|{
if|if
condition|(
name|de
operator|.
name|appliesTo
argument_list|(
name|boi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingMessageInfo
name|bmi
parameter_list|)
block|{
for|for
control|(
name|DomainExpression
name|de
range|:
name|domainExpressions
control|)
block|{
if|if
condition|(
name|de
operator|.
name|appliesTo
argument_list|(
name|bmi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingFaultInfo
name|bfi
parameter_list|)
block|{
for|for
control|(
name|DomainExpression
name|de
range|:
name|domainExpressions
control|)
block|{
if|if
condition|(
name|de
operator|.
name|appliesTo
argument_list|(
name|bfi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

