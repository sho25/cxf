begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|extension
operator|.
name|BusExtension
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|PolicyEngine
import|;
end_import

begin_comment
comment|/**  * PolicyBuilderImpl is an implementation of the PolicyBuilder interface,  * provides methods to create Policy and PolicyReferenceObjects  * from DOM elements, but also from an input stream etc.  */
end_comment

begin_class
annotation|@
name|NoJSR250Annotations
specifier|public
class|class
name|PolicyBuilderImpl
extends|extends
name|PolicyEngine
implements|implements
name|PolicyBuilder
implements|,
name|BusExtension
block|{
specifier|private
name|Bus
name|bus
decl_stmt|;
specifier|public
name|PolicyBuilderImpl
parameter_list|()
block|{     }
specifier|public
name|PolicyBuilderImpl
parameter_list|(
name|Bus
name|theBus
parameter_list|)
block|{
name|super
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|setBus
argument_list|(
name|theBus
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getRegistrationType
parameter_list|()
block|{
return|return
name|PolicyBuilder
operator|.
name|class
return|;
block|}
specifier|public
name|void
name|setAssertionBuilderRegistry
parameter_list|(
name|AssertionBuilderRegistry
name|reg
parameter_list|)
block|{
name|factory
operator|=
name|reg
expr_stmt|;
block|}
specifier|public
specifier|final
name|void
name|setBus
parameter_list|(
name|Bus
name|theBus
parameter_list|)
block|{
name|bus
operator|=
name|theBus
expr_stmt|;
if|if
condition|(
name|bus
operator|!=
literal|null
condition|)
block|{
name|AssertionBuilderRegistry
name|reg
init|=
name|theBus
operator|.
name|getExtension
argument_list|(
name|AssertionBuilderRegistry
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|reg
operator|!=
literal|null
condition|)
block|{
name|factory
operator|=
name|reg
expr_stmt|;
block|}
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyEngine
name|e
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyEngine
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|e
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|setPolicyRegistry
argument_list|(
name|e
operator|.
name|getRegistry
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
return|return
name|bus
return|;
block|}
block|}
end_class

end_unit

