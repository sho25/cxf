begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|BundleUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyEngineImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
operator|.
name|reference
operator|.
name|ReferenceResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
operator|.
name|reference
operator|.
name|RemoteReferenceResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Policy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|PolicyReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|PolicyRegistry
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractPolicyProvider
implements|implements
name|PolicyProvider
block|{
specifier|private
specifier|static
specifier|final
name|ResourceBundle
name|BUNDLE
init|=
name|BundleUtils
operator|.
name|getBundle
argument_list|(
name|AbstractPolicyProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|PolicyBuilder
name|builder
decl_stmt|;
specifier|protected
name|PolicyRegistry
name|registry
decl_stmt|;
specifier|protected
name|Bus
name|bus
decl_stmt|;
specifier|protected
name|AbstractPolicyProvider
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|AbstractPolicyProvider
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|bus
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|void
name|setBus
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|bus
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|void
name|setBuilder
parameter_list|(
name|PolicyBuilder
name|b
parameter_list|)
block|{
name|builder
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|void
name|setRegistry
parameter_list|(
name|PolicyRegistry
name|r
parameter_list|)
block|{
name|registry
operator|=
name|r
expr_stmt|;
block|}
annotation|@
name|PostConstruct
specifier|public
name|void
name|init
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|!=
name|bus
condition|)
block|{
name|setBuilder
argument_list|(
name|bus
operator|.
name|getExtension
argument_list|(
name|PolicyBuilder
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|PolicyEngine
name|pe
init|=
operator|(
name|PolicyEngine
operator|)
name|bus
operator|.
name|getExtension
argument_list|(
name|PolicyEngine
operator|.
name|class
argument_list|)
decl_stmt|;
name|setRegistry
argument_list|(
name|pe
operator|.
name|getRegistry
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|PolicyEngineImpl
operator|)
name|pe
operator|)
operator|.
name|getPolicyProviders
argument_list|()
operator|.
name|add
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Policy
name|resolveExternal
parameter_list|(
name|PolicyReference
name|ref
parameter_list|,
name|String
name|baseURI
parameter_list|)
block|{
name|Policy
name|resolved
init|=
name|registry
operator|.
name|lookup
argument_list|(
name|ref
operator|.
name|getURI
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|resolved
condition|)
block|{
return|return
name|resolved
return|;
block|}
name|ReferenceResolver
name|resolver
init|=
operator|new
name|RemoteReferenceResolver
argument_list|(
name|baseURI
argument_list|,
name|builder
argument_list|)
decl_stmt|;
return|return
name|resolver
operator|.
name|resolveReference
argument_list|(
name|ref
operator|.
name|getURI
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|isExternal
parameter_list|(
name|PolicyReference
name|ref
parameter_list|)
block|{
return|return
operator|!
name|ref
operator|.
name|getURI
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"#"
argument_list|)
return|;
block|}
specifier|protected
name|void
name|checkResolved
parameter_list|(
name|PolicyReference
name|ref
parameter_list|,
name|Policy
name|p
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|p
condition|)
block|{
throw|throw
operator|new
name|PolicyException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"UNRESOLVED_POLICY_REFERENCE_EXC"
argument_list|,
name|BUNDLE
argument_list|,
name|ref
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

