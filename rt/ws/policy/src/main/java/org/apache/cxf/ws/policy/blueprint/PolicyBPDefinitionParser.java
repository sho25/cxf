begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|blueprint
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableBeanMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutablePassThroughMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|blueprint
operator|.
name|AbstractBPBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|Metadata
import|;
end_import

begin_class
specifier|public
class|class
name|PolicyBPDefinitionParser
extends|extends
name|AbstractBPBeanDefinitionParser
block|{
specifier|public
name|Metadata
name|parse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|context
parameter_list|)
block|{
name|MutablePassThroughMetadata
name|factory
init|=
name|context
operator|.
name|createMetadata
argument_list|(
name|MutablePassThroughMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|factory
operator|.
name|setId
argument_list|(
name|resolveId
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|PolicyBean
name|policyBean
init|=
operator|new
name|PolicyBean
argument_list|()
decl_stmt|;
name|policyBean
operator|.
name|setElement
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setObject
argument_list|(
operator|new
name|PassThroughCallable
argument_list|<
name|Object
argument_list|>
argument_list|(
name|policyBean
argument_list|)
argument_list|)
expr_stmt|;
name|MutableBeanMetadata
name|resourceBean
init|=
name|context
operator|.
name|createMetadata
argument_list|(
name|MutableBeanMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|resourceBean
operator|.
name|setId
argument_list|(
name|resolveId
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
argument_list|)
expr_stmt|;
name|resourceBean
operator|.
name|setFactoryComponent
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|resourceBean
operator|.
name|setFactoryMethod
argument_list|(
literal|"call"
argument_list|)
expr_stmt|;
return|return
name|resourceBean
return|;
block|}
specifier|protected
name|String
name|resolveId
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|ctx
parameter_list|)
block|{
return|return
name|element
operator|.
name|getAttributeNS
argument_list|(
name|PolicyConstants
operator|.
name|WSU_NAMESPACE_URI
argument_list|,
name|PolicyConstants
operator|.
name|WSU_ID_ATTR_NAME
argument_list|)
return|;
block|}
specifier|public
specifier|static
class|class
name|PassThroughCallable
parameter_list|<
name|T
parameter_list|>
implements|implements
name|Callable
argument_list|<
name|T
argument_list|>
block|{
specifier|private
name|T
name|value
decl_stmt|;
specifier|public
name|PassThroughCallable
parameter_list|(
name|T
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|T
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|value
return|;
block|}
block|}
block|}
end_class

end_unit

