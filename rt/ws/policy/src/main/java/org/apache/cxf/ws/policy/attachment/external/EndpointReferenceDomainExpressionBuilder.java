begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
operator|.
name|external
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|BundleUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyException
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|EndpointReferenceDomainExpressionBuilder
implements|implements
name|DomainExpressionBuilder
block|{
specifier|private
specifier|static
specifier|final
name|ResourceBundle
name|BUNDLE
init|=
name|BundleUtils
operator|.
name|getBundle
argument_list|(
name|EndpointReferenceDomainExpressionBuilder
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Collection
argument_list|<
name|QName
argument_list|>
name|SUPPORTED_TYPES
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://www.w3.org/2005/08/addressing"
argument_list|,
literal|"EndpointReference"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|Unmarshaller
name|unmarshaller
decl_stmt|;
name|EndpointReferenceDomainExpressionBuilder
parameter_list|()
block|{      }
specifier|public
name|Collection
argument_list|<
name|QName
argument_list|>
name|getDomainExpressionTypes
parameter_list|()
block|{
return|return
name|SUPPORTED_TYPES
return|;
block|}
specifier|public
name|DomainExpression
name|build
parameter_list|(
name|Element
name|e
parameter_list|)
block|{
name|Object
name|obj
init|=
literal|null
decl_stmt|;
try|try
block|{
name|obj
operator|=
name|getUnmarshaller
argument_list|()
operator|.
name|unmarshal
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|PolicyException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"EPR_DOMAIN_EXPRESSION_BUILD_EXC"
argument_list|,
name|BUNDLE
argument_list|,
operator|(
name|Object
index|[]
operator|)
literal|null
argument_list|)
argument_list|,
name|ex
argument_list|)
throw|;
block|}
if|if
condition|(
name|obj
operator|instanceof
name|JAXBElement
argument_list|<
name|?
argument_list|>
condition|)
block|{
name|JAXBElement
argument_list|<
name|?
argument_list|>
name|el
init|=
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|obj
decl_stmt|;
name|obj
operator|=
name|el
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
name|EndpointReferenceDomainExpression
name|eprde
init|=
operator|new
name|EndpointReferenceDomainExpression
argument_list|()
decl_stmt|;
name|eprde
operator|.
name|setEndpointReference
argument_list|(
operator|(
name|EndpointReferenceType
operator|)
name|obj
argument_list|)
expr_stmt|;
return|return
name|eprde
return|;
block|}
specifier|protected
name|Unmarshaller
name|getUnmarshaller
parameter_list|()
block|{
if|if
condition|(
name|unmarshaller
operator|==
literal|null
condition|)
block|{
name|createUnmarshaller
argument_list|()
expr_stmt|;
block|}
return|return
name|unmarshaller
return|;
block|}
specifier|protected
specifier|synchronized
name|void
name|createUnmarshaller
parameter_list|()
block|{
if|if
condition|(
name|unmarshaller
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
try|try
block|{
name|Class
name|clz
init|=
name|EndpointReferenceType
operator|.
name|class
decl_stmt|;
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|clz
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|clz
operator|.
name|getClassLoader
argument_list|()
argument_list|)
decl_stmt|;
name|unmarshaller
operator|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|PolicyException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"EPR_DOMAIN_EXPRESSION_BUILDER_INIT_EXC"
argument_list|,
name|BUNDLE
argument_list|,
operator|(
name|Object
index|[]
operator|)
literal|null
argument_list|)
argument_list|,
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

