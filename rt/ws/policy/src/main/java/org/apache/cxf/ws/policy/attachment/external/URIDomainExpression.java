begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
operator|.
name|external
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingFaultInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingMessageInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|InterfaceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|MessageInfo
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_class
specifier|public
class|class
name|URIDomainExpression
implements|implements
name|DomainExpression
block|{
specifier|private
specifier|final
name|Wsdl11XPointer
name|wsdl11XPointer
decl_stmt|;
specifier|public
name|URIDomainExpression
parameter_list|(
specifier|final
name|String
name|uriContext
parameter_list|)
block|{
name|wsdl11XPointer
operator|=
operator|new
name|Wsdl11XPointer
argument_list|(
name|uriContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|ServiceInfo
name|si
parameter_list|)
block|{
if|if
condition|(
name|si
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|wsdl11XPointer
operator|.
name|matchesWsdl
argument_list|(
name|si
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|si
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesService
argument_list|(
name|si
operator|.
name|getTargetNamespace
argument_list|()
argument_list|,
name|si
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|si
operator|.
name|getInterface
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|si
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesPortType
argument_list|(
name|si
operator|.
name|getTargetNamespace
argument_list|()
argument_list|,
name|si
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|EndpointInfo
name|ei
parameter_list|)
block|{
if|if
condition|(
name|ei
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|(
name|ei
operator|.
name|getService
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|ei
operator|.
name|getService
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|ei
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesPort
argument_list|(
name|ei
operator|.
name|getService
argument_list|()
operator|.
name|getTargetNamespace
argument_list|()
argument_list|,
name|ei
operator|.
name|getService
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|ei
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingOperationInfo
name|boi
parameter_list|)
block|{
if|if
condition|(
name|boi
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|(
name|boi
operator|.
name|getBinding
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|boi
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesBinding
argument_list|(
name|boi
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|boi
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|boi
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|boi
operator|.
name|getBinding
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|boi
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesBindingOperation
argument_list|(
name|boi
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|boi
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|boi
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getInterface
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesPortTypeOperation
argument_list|(
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getInterface
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|boi
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingMessageInfo
name|bmi
parameter_list|)
block|{
if|if
condition|(
name|bmi
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesMessage
argument_list|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|checkBindingOperationInOut
argument_list|(
name|bmi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|checkPortTypeOperationInOut
argument_list|(
name|bmi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingFaultInfo
name|bfi
parameter_list|)
block|{
if|if
condition|(
operator|(
name|bfi
operator|==
literal|null
operator|)
operator|||
operator|(
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|==
literal|null
operator|)
operator|||
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|==
literal|null
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|checkBindingOperationFault
argument_list|(
name|bfi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|checkPortTypeOperationFault
argument_list|(
name|bfi
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkBindingOperationInOut
parameter_list|(
name|BindingMessageInfo
name|bmi
parameter_list|)
block|{
if|if
condition|(
operator|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
if|if
condition|(
operator|(
name|Type
operator|.
name|INPUT
operator|==
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesBindingOperationInput
argument_list|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|Type
operator|.
name|OUTPUT
operator|==
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesBindingOperationOutput
argument_list|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkPortTypeOperationInOut
parameter_list|(
name|BindingMessageInfo
name|bmi
parameter_list|)
block|{
name|InterfaceInfo
name|ini
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getOperationInfo
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
name|ini
operator|=
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getInterface
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|ini
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|ini
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
if|if
condition|(
operator|(
name|Type
operator|.
name|INPUT
operator|==
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesPortTypeOperationInput
argument_list|(
name|ini
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|ini
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|Type
operator|.
name|OUTPUT
operator|==
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesPortTypeOperationOutput
argument_list|(
name|ini
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|ini
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkPortTypeOperationFault
parameter_list|(
name|BindingFaultInfo
name|bfi
parameter_list|)
block|{
name|InterfaceInfo
name|ini
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getOperationInfo
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
name|ini
operator|=
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getOperationInfo
argument_list|()
operator|.
name|getInterface
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|ini
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|ini
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getFaultName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesPortTypeOperationFault
argument_list|(
name|ini
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|ini
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getFaultName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|checkBindingOperationFault
parameter_list|(
name|BindingFaultInfo
name|bfi
parameter_list|)
block|{
if|if
condition|(
operator|(
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getFaultName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
name|wsdl11XPointer
operator|.
name|matchesBindingOperationFault
argument_list|(
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getFaultName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bfi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|bfi
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getFaultName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
class|class
name|Wsdl11XPointer
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SINGLE_PATH
init|=
literal|"\\(([^\\)]*)\\)$"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DOUBLE_PATH
init|=
literal|"\\(([^/]*)/([^\\)]*)\\)$"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TRIPPLE_PATH
init|=
literal|"\\(([^/]*)/([^/]*)/([^\\)]*)\\)$"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_DEFINITIONS
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.definitions\\(\\)$"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_PORT_TYPE
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.portType"
operator|+
name|SINGLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_PORT_TYPE_OPERATION
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.portTypeOperation"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_PORT_TYPE_OPERATION_INPUT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.portTypeOperation.input"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_PORT_TYPE_OPERATION_OUTPUT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.portTypeOperation.output"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_PORT_TYPE_OPERATION_FAULT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.portTypeOperation.fault"
operator|+
name|TRIPPLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_MESSAGE
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.message"
operator|+
name|SINGLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_MESSAGE_PART
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.messagePart"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_SERVICE
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.service"
operator|+
name|SINGLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_PORT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.port"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_BINDING
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.binding"
operator|+
name|SINGLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_BINDING_OPERATION
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.bindingOperation"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_BINDING_OPERATION_INPUT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.bindingOperation.input"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_BINDING_OPERATION_OUTPUT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.bindingOperation.output"
operator|+
name|DOUBLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|PATTERN_BINDING_OPERATION_FAULT
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^wsdl11.bindingOperation.fault"
operator|+
name|TRIPPLE_PATH
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|targetNamespace
decl_stmt|;
specifier|private
specifier|final
name|String
name|wsdl11Pointer
decl_stmt|;
specifier|public
name|Wsdl11XPointer
parameter_list|(
specifier|final
name|String
name|uriContext
parameter_list|)
block|{
if|if
condition|(
operator|(
name|uriContext
operator|==
literal|null
operator|)
operator|||
name|uriContext
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"External policy attachment URI element cannot be empty"
argument_list|)
throw|;
block|}
name|int
name|pos
init|=
name|uriContext
operator|.
name|indexOf
argument_list|(
literal|'#'
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|!=
operator|-
literal|1
condition|)
block|{
name|targetNamespace
operator|=
name|uriContext
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|wsdl11Pointer
operator|=
name|uriContext
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|targetNamespace
operator|=
literal|""
expr_stmt|;
name|wsdl11Pointer
operator|=
name|uriContext
expr_stmt|;
block|}
block|}
name|boolean
name|matchesWsdl
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_DEFINITIONS
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|)
return|;
block|}
name|boolean
name|matchesPortType
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|portType
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_PORT_TYPE
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|portType
argument_list|)
return|;
block|}
name|boolean
name|matchesPortTypeOperation
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|portType
parameter_list|,
name|String
name|operation
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_PORT_TYPE_OPERATION
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|portType
argument_list|,
name|operation
argument_list|)
return|;
block|}
name|boolean
name|matchesPortTypeOperationInput
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|portType
parameter_list|,
name|String
name|operation
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_PORT_TYPE_OPERATION_INPUT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|portType
argument_list|,
name|operation
argument_list|)
return|;
block|}
name|boolean
name|matchesPortTypeOperationOutput
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|portType
parameter_list|,
name|String
name|operation
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_PORT_TYPE_OPERATION_OUTPUT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|portType
argument_list|,
name|operation
argument_list|)
return|;
block|}
name|boolean
name|matchesPortTypeOperationFault
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|portType
parameter_list|,
name|String
name|operation
parameter_list|,
name|String
name|fault
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_PORT_TYPE_OPERATION_FAULT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|portType
argument_list|,
name|operation
argument_list|,
name|fault
argument_list|)
return|;
block|}
name|boolean
name|matchesMessage
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_MESSAGE
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|message
argument_list|)
return|;
block|}
name|boolean
name|matchesMessagePart
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|message
parameter_list|,
name|String
name|part
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_MESSAGE_PART
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|message
argument_list|,
name|part
argument_list|)
return|;
block|}
name|boolean
name|matchesService
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|service
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_SERVICE
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|service
argument_list|)
return|;
block|}
name|boolean
name|matchesPort
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|service
parameter_list|,
name|String
name|port
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_PORT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|service
argument_list|,
name|port
argument_list|)
return|;
block|}
name|boolean
name|matchesBinding
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|binding
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_BINDING
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|binding
argument_list|)
return|;
block|}
name|boolean
name|matchesBindingOperation
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|binding
parameter_list|,
name|String
name|operation
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_BINDING_OPERATION
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|binding
argument_list|,
name|operation
argument_list|)
return|;
block|}
name|boolean
name|matchesBindingOperationInput
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|binding
parameter_list|,
name|String
name|operation
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_BINDING_OPERATION_INPUT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|binding
argument_list|,
name|operation
argument_list|)
return|;
block|}
name|boolean
name|matchesBindingOperationOutput
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|binding
parameter_list|,
name|String
name|operation
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_BINDING_OPERATION_OUTPUT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|binding
argument_list|,
name|operation
argument_list|)
return|;
block|}
name|boolean
name|matchesBindingOperationFault
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|String
name|binding
parameter_list|,
name|String
name|operation
parameter_list|,
name|String
name|fault
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|PATTERN_BINDING_OPERATION_FAULT
operator|.
name|matcher
argument_list|(
name|wsdl11Pointer
argument_list|)
decl_stmt|;
return|return
name|matches
argument_list|(
name|wsdlTargetNamespace
argument_list|,
name|matcher
argument_list|,
name|binding
argument_list|,
name|operation
argument_list|,
name|fault
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|matches
parameter_list|(
name|String
name|wsdlTargetNamespace
parameter_list|,
name|Matcher
name|matcher
parameter_list|,
name|String
modifier|...
name|args
parameter_list|)
block|{
if|if
condition|(
operator|!
name|targetNamespace
operator|.
name|equals
argument_list|(
name|wsdlTargetNamespace
argument_list|)
operator|||
operator|!
name|matcher
operator|.
name|matches
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|args
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|matcherGroup
init|=
name|matcher
operator|.
name|group
argument_list|(
name|i
operator|+
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|matcherGroup
operator|==
literal|null
operator|)
operator|||
operator|(
operator|!
name|matcherGroup
operator|.
name|equals
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
block|}
block|}
end_class

end_unit

