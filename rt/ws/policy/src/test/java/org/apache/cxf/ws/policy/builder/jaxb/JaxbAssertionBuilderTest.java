begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|builder
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|assertions
operator|.
name|foo
operator|.
name|FooType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Assertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|JaxbAssertionBuilderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testConstructors
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|qn
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/test/assertions/foo"
argument_list|,
literal|"FooType"
argument_list|)
decl_stmt|;
try|try
block|{
operator|new
name|JaxbAssertionBuilder
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|"org.apache.cxf.test.assertions.foo.UnknownType"
argument_list|,
name|qn
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected ClassNotFoundException not thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|assertNotNull
argument_list|(
operator|new
name|JaxbAssertionBuilder
argument_list|<
name|Object
argument_list|>
argument_list|(
name|qn
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|JaxbAssertionBuilder
argument_list|<
name|Object
argument_list|>
argument_list|(
name|FooType
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|qn
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|JaxbAssertionBuilder
argument_list|<
name|FooType
argument_list|>
argument_list|(
name|FooType
operator|.
name|class
argument_list|,
name|qn
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetKnownElements
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|qn
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/test/assertions/foo"
argument_list|,
literal|"FooType"
argument_list|)
decl_stmt|;
name|JaxbAssertionBuilder
argument_list|<
name|FooType
argument_list|>
name|ab
init|=
operator|new
name|JaxbAssertionBuilder
argument_list|<>
argument_list|(
name|FooType
operator|.
name|class
argument_list|,
name|qn
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ab
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ab
operator|.
name|getKnownElements
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|qn
argument_list|,
name|ab
operator|.
name|getKnownElements
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBuild
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|qn
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/test/assertions/foo"
argument_list|,
literal|"FooType"
argument_list|)
decl_stmt|;
name|JaxbAssertionBuilder
argument_list|<
name|FooType
argument_list|>
name|ab
init|=
operator|new
name|JaxbAssertionBuilder
argument_list|<>
argument_list|(
name|FooType
operator|.
name|class
argument_list|,
name|qn
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ab
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|JaxbAssertionBuilderTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"foo.xml"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|Element
name|elem
init|=
name|DOMUtils
operator|.
name|findAllElementsByTagNameNS
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|,
literal|"http://cxf.apache.org/test/assertions/foo"
argument_list|,
literal|"foo"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assertion
name|a
init|=
name|ab
operator|.
name|build
argument_list|(
name|elem
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|JaxbAssertion
argument_list|<
name|FooType
argument_list|>
name|jba
init|=
name|JaxbAssertion
operator|.
name|cast
argument_list|(
name|a
argument_list|,
name|FooType
operator|.
name|class
argument_list|)
decl_stmt|;
name|FooType
name|foo
init|=
name|jba
operator|.
name|getData
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"CXF"
argument_list|,
name|foo
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|foo
operator|.
name|getNumber
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

