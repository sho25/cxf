begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|v200702
operator|.
name|AckRequestedType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|v200702
operator|.
name|CloseSequenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|v200702
operator|.
name|SequenceAcknowledgement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|v200702
operator|.
name|SequenceType
import|;
end_import

begin_class
specifier|public
class|class
name|RMProperties
block|{
specifier|private
name|SourceSequence
name|sourceSequence
decl_stmt|;
specifier|private
name|long
name|messageNumber
decl_stmt|;
specifier|private
name|SequenceType
name|sequence
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|SequenceAcknowledgement
argument_list|>
name|acks
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|AckRequestedType
argument_list|>
name|acksRequested
decl_stmt|;
specifier|private
name|CloseSequenceType
name|closeSequence
decl_stmt|;
specifier|private
name|String
name|namespaceURI
decl_stmt|;
specifier|private
name|boolean
name|lastMessage
decl_stmt|;
specifier|private
name|long
name|createdTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
specifier|public
name|Collection
argument_list|<
name|SequenceAcknowledgement
argument_list|>
name|getAcks
parameter_list|()
block|{
return|return
name|acks
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|AckRequestedType
argument_list|>
name|getAcksRequested
parameter_list|()
block|{
return|return
name|acksRequested
return|;
block|}
specifier|public
name|CloseSequenceType
name|getCloseSequence
parameter_list|()
block|{
return|return
name|closeSequence
return|;
block|}
specifier|public
name|SequenceType
name|getSequence
parameter_list|()
block|{
return|return
name|sequence
return|;
block|}
specifier|public
name|long
name|getMessageNumber
parameter_list|()
block|{
return|return
name|messageNumber
return|;
block|}
specifier|public
name|SourceSequence
name|getSourceSequence
parameter_list|()
block|{
return|return
name|sourceSequence
return|;
block|}
specifier|public
name|boolean
name|isLastMessage
parameter_list|()
block|{
return|return
name|lastMessage
return|;
block|}
specifier|public
name|void
name|setAcks
parameter_list|(
name|Collection
argument_list|<
name|SequenceAcknowledgement
argument_list|>
name|a
parameter_list|)
block|{
comment|// use threadsafe implementation for working copy, to avoid concurrent modifications
name|acks
operator|=
operator|new
name|CopyOnWriteArrayList
argument_list|<
name|SequenceAcknowledgement
argument_list|>
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAcksRequested
parameter_list|(
name|Collection
argument_list|<
name|AckRequestedType
argument_list|>
name|ar
parameter_list|)
block|{
comment|// use threadsafe implementation for working copy, to avoid concurrent modifications
name|acksRequested
operator|=
operator|new
name|CopyOnWriteArrayList
argument_list|<
name|AckRequestedType
argument_list|>
argument_list|(
name|ar
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCloseSequence
parameter_list|(
name|CloseSequenceType
name|cs
parameter_list|)
block|{
name|closeSequence
operator|=
name|cs
expr_stmt|;
block|}
specifier|public
name|void
name|setSequence
parameter_list|(
name|SequenceType
name|s
parameter_list|)
block|{
name|sequence
operator|=
name|s
expr_stmt|;
block|}
specifier|public
name|void
name|setSequence
parameter_list|(
name|SourceSequence
name|seq
parameter_list|)
block|{
name|sourceSequence
operator|=
name|seq
expr_stmt|;
name|messageNumber
operator|=
name|seq
operator|.
name|getCurrentMessageNr
argument_list|()
expr_stmt|;
name|SequenceType
name|s
init|=
operator|new
name|SequenceType
argument_list|()
decl_stmt|;
name|s
operator|.
name|setIdentifier
argument_list|(
name|seq
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|setMessageNumber
argument_list|(
name|messageNumber
argument_list|)
expr_stmt|;
name|setSequence
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|lastMessage
operator|=
name|seq
operator|.
name|isLastMessage
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|addAck
parameter_list|(
name|DestinationSequence
name|seq
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|acks
condition|)
block|{
name|acks
operator|=
operator|new
name|ArrayList
argument_list|<
name|SequenceAcknowledgement
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|SequenceAcknowledgement
name|ack
init|=
name|seq
operator|.
name|getAcknowledgment
argument_list|()
decl_stmt|;
name|acks
operator|.
name|add
argument_list|(
name|ack
argument_list|)
expr_stmt|;
name|seq
operator|.
name|acknowledgmentSent
argument_list|()
expr_stmt|;
block|}
comment|/**      * Get the WS-ReliableMessaging namespace to be used for encoding and decoding messages.      *       * @return      */
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
return|return
name|namespaceURI
return|;
block|}
comment|/**      * Set the WS-ReliableMessaging namespace to be used for encoding and decoding messages.      *       * @return namespace URI      */
specifier|public
name|void
name|exposeAs
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|namespaceURI
operator|=
name|uri
expr_stmt|;
block|}
comment|/**      * Get the initial creation time of this RM properties instance.      * @return Returns the createdTime.      */
specifier|public
name|long
name|getCreatedTime
parameter_list|()
block|{
return|return
name|createdTime
return|;
block|}
comment|/**      * Set the initial creation time of this RM properties instance.      *       * @param createdTime The createdTime to set.      */
specifier|public
name|void
name|setCreatedTime
parameter_list|(
name|long
name|createdTime
parameter_list|)
block|{
name|this
operator|.
name|createdTime
operator|=
name|createdTime
expr_stmt|;
block|}
block|}
end_class

end_unit

