begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|MessageFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|WriteOnCloseOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AddressingConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AddressingConstantsImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|VersionTransformer
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|RMUtils
block|{
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|ObjectFactory
name|WSA_FACTORY
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|ObjectFactory
name|WSRM_FACTORY
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|AddressingConstants
name|WSA_CONSTANTS
decl_stmt|;
static|static
block|{
name|WSA_FACTORY
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|ObjectFactory
argument_list|()
expr_stmt|;
name|WSRM_FACTORY
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|ObjectFactory
argument_list|()
expr_stmt|;
name|WSA_CONSTANTS
operator|=
operator|new
name|AddressingConstantsImpl
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|RMUtils
parameter_list|()
block|{             }
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|ObjectFactory
name|getWSAFactory
parameter_list|()
block|{
return|return
name|WSA_FACTORY
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|ObjectFactory
name|getWSRMFactory
parameter_list|()
block|{
return|return
name|WSRM_FACTORY
return|;
block|}
specifier|public
specifier|static
name|AddressingConstants
name|getAddressingConstants
parameter_list|()
block|{
return|return
name|WSA_CONSTANTS
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
name|createAnonymousReference
parameter_list|()
block|{
return|return
name|createReference
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|Names
operator|.
name|WSA_ANONYMOUS_ADDRESS
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|EndpointReferenceType
name|createAnonymousReference2004
parameter_list|()
block|{
return|return
name|VersionTransformer
operator|.
name|convert
argument_list|(
name|createAnonymousReference
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
name|createNoneReference
parameter_list|()
block|{
return|return
name|createReference
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|Names
operator|.
name|WSA_NONE_ADDRESS
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|EndpointReferenceType
name|createNoneReference2004
parameter_list|()
block|{
return|return
name|VersionTransformer
operator|.
name|convert
argument_list|(
name|createNoneReference
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
name|createReference
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ObjectFactory
name|factory
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ObjectFactory
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
name|epr
init|=
name|factory
operator|.
name|createEndpointReferenceType
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AttributedURIType
name|uri
init|=
name|factory
operator|.
name|createAttributedURIType
argument_list|()
decl_stmt|;
name|uri
operator|.
name|setValue
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|epr
operator|.
name|setAddress
argument_list|(
name|uri
argument_list|)
expr_stmt|;
return|return
name|epr
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|EndpointReferenceType
name|createReference2004
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|ObjectFactory
name|factory
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|ObjectFactory
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|EndpointReferenceType
name|epr
init|=
name|factory
operator|.
name|createEndpointReferenceType
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|v200408
operator|.
name|AttributedURI
name|uri
init|=
name|factory
operator|.
name|createAttributedURI
argument_list|()
decl_stmt|;
name|uri
operator|.
name|setValue
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|epr
operator|.
name|setAddress
argument_list|(
name|uri
argument_list|)
expr_stmt|;
return|return
name|epr
return|;
block|}
specifier|public
specifier|static
name|String
name|getEndpointIdentifier
parameter_list|(
name|Endpoint
name|endpoint
parameter_list|)
block|{
return|return
name|MessageFormat
operator|.
name|format
argument_list|(
literal|"{0}.{1}"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|endpoint
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getName
argument_list|()
block|,
name|endpoint
operator|.
name|getEndpointInfo
argument_list|()
operator|.
name|getName
argument_list|()
block|}
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|WriteOnCloseOutputStream
name|createCachedStream
parameter_list|(
name|Message
name|message
parameter_list|,
name|OutputStream
name|os
parameter_list|)
block|{
comment|// We need to ensure that we have an output stream which won't start writing the
comment|// message until we have a chance to send a createsequence
if|if
condition|(
operator|!
operator|(
name|os
operator|instanceof
name|WriteOnCloseOutputStream
operator|)
condition|)
block|{
name|WriteOnCloseOutputStream
name|cached
init|=
operator|new
name|WriteOnCloseOutputStream
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|,
name|cached
argument_list|)
expr_stmt|;
name|os
operator|=
name|cached
expr_stmt|;
block|}
return|return
operator|(
name|WriteOnCloseOutputStream
operator|)
name|os
return|;
block|}
block|}
end_class

end_unit

