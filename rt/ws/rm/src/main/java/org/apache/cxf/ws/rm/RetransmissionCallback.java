begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStreamCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AddressingProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|persistence
operator|.
name|RMMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|persistence
operator|.
name|RMStore
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|RetransmissionCallback
implements|implements
name|CachedOutputStreamCallback
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|RetransmissionCallback
operator|.
name|class
argument_list|)
decl_stmt|;
name|Message
name|message
decl_stmt|;
name|RMManager
name|manager
decl_stmt|;
name|RetransmissionCallback
parameter_list|(
name|Message
name|m
parameter_list|,
name|RMManager
name|mgr
parameter_list|)
block|{
name|message
operator|=
name|m
expr_stmt|;
name|manager
operator|=
name|mgr
expr_stmt|;
block|}
specifier|public
name|void
name|onClose
parameter_list|(
name|CachedOutputStream
name|cos
parameter_list|)
block|{
comment|//REVISIT - would be nice to keep the cache on disk instead of in-memory
name|byte
name|bytes
index|[]
init|=
literal|null
decl_stmt|;
try|try
block|{
name|bytes
operator|=
name|cos
operator|.
name|getBytes
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
argument_list|(
literal|"NO_CACHED_STREAM"
argument_list|,
name|LOG
argument_list|,
name|cos
operator|.
name|getOut
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
name|message
operator|.
name|put
argument_list|(
name|RMMessageConstants
operator|.
name|SAVED_CONTENT
argument_list|,
name|bytes
argument_list|)
expr_stmt|;
name|manager
operator|.
name|getRetransmissionQueue
argument_list|()
operator|.
name|addUnacknowledged
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|RMStore
name|store
init|=
name|manager
operator|.
name|getStore
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|store
condition|)
block|{
name|Source
name|s
init|=
name|manager
operator|.
name|getSource
argument_list|(
name|message
argument_list|)
decl_stmt|;
name|RMProperties
name|rmps
init|=
name|RMContextUtils
operator|.
name|retrieveRMProperties
argument_list|(
name|message
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Identifier
name|sid
init|=
name|rmps
operator|.
name|getSequence
argument_list|()
operator|.
name|getIdentifier
argument_list|()
decl_stmt|;
name|SourceSequence
name|ss
init|=
name|s
operator|.
name|getSequence
argument_list|(
name|sid
argument_list|)
decl_stmt|;
name|RMMessage
name|msg
init|=
operator|new
name|RMMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setMessageNumber
argument_list|(
name|rmps
operator|.
name|getSequence
argument_list|()
operator|.
name|getMessageNumber
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|MessageUtils
operator|.
name|isRequestor
argument_list|(
name|message
argument_list|)
condition|)
block|{
name|AddressingProperties
name|maps
init|=
name|RMContextUtils
operator|.
name|retrieveMAPs
argument_list|(
name|message
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|maps
operator|&&
literal|null
operator|!=
name|maps
operator|.
name|getTo
argument_list|()
condition|)
block|{
name|msg
operator|.
name|setTo
argument_list|(
name|maps
operator|.
name|getTo
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|msg
operator|.
name|setContent
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
name|store
operator|.
name|persistOutgoing
argument_list|(
name|ss
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onFlush
parameter_list|(
name|CachedOutputStream
name|cos
parameter_list|)
block|{              }
block|}
end_class

end_unit

