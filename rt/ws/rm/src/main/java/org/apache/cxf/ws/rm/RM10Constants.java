begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_comment
comment|/**  * Holder for names for WS-ReliableMessaging 1.0.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|RM10Constants
extends|extends
name|RMConstants
block|{
specifier|public
specifier|static
specifier|final
name|RM10Constants
name|INSTANCE
init|=
operator|new
name|RM10Constants
argument_list|()
decl_stmt|;
comment|// namespaces
specifier|public
specifier|static
specifier|final
name|String
name|NAMESPACE_URI
init|=
literal|"http://schemas.xmlsoap.org/ws/2005/02/rm"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|WSRMP_NAMESPACE_URI
init|=
literal|"http://schemas.xmlsoap.org/ws/2005/02/rm/policy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|WSDL_NAMESPACE_URI
init|=
name|NAMESPACE_URI
operator|+
literal|"/wsdl"
decl_stmt|;
comment|// element and header names
specifier|public
specifier|static
specifier|final
name|QName
name|SEQUENCE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|SEQUENCE_NAME
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SEQUENCE_FAULT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|SEQUENCE_FAULT_NAME
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SEQUENCE_ACK_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|SEQUENCE_ACK_NAME
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ACK_REQUESTED_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|ACK_REQUESTED_NAME
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|WSRMP_RMASSERTION_QNAME
init|=
operator|new
name|QName
argument_list|(
name|WSRMP_NAMESPACE_URI
argument_list|,
name|RMASSERTION_NAME
argument_list|)
decl_stmt|;
comment|// protocol operation names
specifier|public
specifier|static
specifier|final
name|QName
name|PORT_NAME
init|=
operator|new
name|QName
argument_list|(
name|WSDL_NAMESPACE_URI
argument_list|,
literal|"SequenceAbstractSoapPort"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|CREATE_SEQUENCE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"CreateSequence"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|CREATE_SEQUENCE_RESPONSE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"CreateSequenceResponse"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|TERMINATE_SEQUENCE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"TerminateSequence"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|TERMINATE_SEQUENCE_ANONYMOUS_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"TerminateSequenceAnonymous"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SEQUENCE_ACKNOWLEDGEMENT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"SequenceAcknowledgement"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|CLOSE_SEQUENCE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"CloseSequence"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ACK_REQ_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"AckRequested"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|CREATE_SEQUENCE_ONEWAY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"CreateSequenceOneway"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|CREATE_SEQUENCE_RESPONSE_ONEWAY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
literal|"CreateSequenceResponseOneway"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|RMASSERTION_QNAME
init|=
operator|new
name|QName
argument_list|(
name|WSRMP_NAMESPACE_URI
argument_list|,
name|RMASSERTION_NAME
argument_list|)
decl_stmt|;
comment|// actions
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_SEQUENCE_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/CreateSequence"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_SEQUENCE_RESPONSE_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/CreateSequenceResponse"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TERMINATE_SEQUENCE_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/TerminateSequence"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CLOSE_SEQUENCE_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/LastMessage"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ACK_REQUESTED_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/AckRequested"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SEQUENCE_ACKNOWLEDGMENT_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/SequenceAcknowledgement"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SEQUENCE_INFO_ACTION
init|=
name|NAMESPACE_URI
operator|+
literal|"/SequenceInfo"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|ACTIONS
decl_stmt|;
static|static
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|actions
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|CREATE_SEQUENCE_ACTION
argument_list|)
expr_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|CREATE_SEQUENCE_RESPONSE_ACTION
argument_list|)
expr_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|TERMINATE_SEQUENCE_ACTION
argument_list|)
expr_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|CLOSE_SEQUENCE_ACTION
argument_list|)
expr_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|ACK_REQUESTED_ACTION
argument_list|)
expr_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|SEQUENCE_ACKNOWLEDGMENT_ACTION
argument_list|)
expr_stmt|;
name|actions
operator|.
name|add
argument_list|(
name|SEQUENCE_INFO_ACTION
argument_list|)
expr_stmt|;
name|ACTIONS
operator|=
name|actions
expr_stmt|;
block|}
comment|// fault codes
specifier|public
specifier|static
specifier|final
name|QName
name|UNKNOWN_SEQUENCE_FAULT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|UNKNOWN_SEQUENCE_FAULT_CODE
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SEQUENCE_TERMINATED_FAULT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|SEQUENCE_TERMINATED_FAULT_CODE
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|INVALID_ACKNOWLEDGMENT_FAULT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|INVALID_ACKNOWLEDGMENT_FAULT_CODE
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|MESSAGE_NUMBER_ROLLOVER_FAULT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|MESSAGE_NUMBER_ROLLOVER_FAULT_CODE
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|CREATE_SEQUENCE_REFUSED_FAULT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|CREATE_SEQUENCE_REFUSED_FAULT_CODE
argument_list|)
decl_stmt|;
comment|// headers
specifier|public
specifier|static
specifier|final
name|Set
argument_list|<
name|QName
argument_list|>
name|HEADERS
decl_stmt|;
static|static
block|{
name|Set
argument_list|<
name|QName
argument_list|>
name|headers
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|add
argument_list|(
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|SEQUENCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|headers
operator|.
name|add
argument_list|(
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|SEQUENCE_ACK_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|headers
operator|.
name|add
argument_list|(
operator|new
name|QName
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|ACK_REQUESTED_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|HEADERS
operator|=
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|headers
argument_list|)
expr_stmt|;
block|}
specifier|private
name|RM10Constants
parameter_list|()
block|{     }
specifier|public
name|String
name|getWSRMNamespace
parameter_list|()
block|{
return|return
name|NAMESPACE_URI
return|;
block|}
comment|// actions access methods
specifier|public
name|String
name|getCreateSequenceAction
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_ACTION
return|;
block|}
specifier|public
name|String
name|getCreateSequenceResponseAction
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_RESPONSE_ACTION
return|;
block|}
specifier|public
name|String
name|getTerminateSequenceAction
parameter_list|()
block|{
return|return
name|TERMINATE_SEQUENCE_ACTION
return|;
block|}
specifier|public
name|String
name|getCloseSequenceAction
parameter_list|()
block|{
return|return
name|CLOSE_SEQUENCE_ACTION
return|;
block|}
specifier|public
name|String
name|getAckRequestedAction
parameter_list|()
block|{
return|return
name|ACK_REQUESTED_ACTION
return|;
block|}
specifier|public
name|String
name|getSequenceAckAction
parameter_list|()
block|{
return|return
name|SEQUENCE_ACKNOWLEDGMENT_ACTION
return|;
block|}
specifier|public
name|String
name|getSequenceInfoAction
parameter_list|()
block|{
return|return
name|SEQUENCE_INFO_ACTION
return|;
block|}
comment|// service model constants access methods
specifier|public
name|QName
name|getPortName
parameter_list|()
block|{
return|return
name|PORT_NAME
return|;
block|}
specifier|public
name|QName
name|getCreateSequenceOperationName
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_QNAME
return|;
block|}
specifier|public
name|QName
name|getCreateSequenceResponseOperationName
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_RESPONSE_QNAME
return|;
block|}
specifier|public
name|QName
name|getCreateSequenceOnewayOperationName
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_ONEWAY_QNAME
return|;
block|}
specifier|public
name|QName
name|getCreateSequenceResponseOnewayOperationName
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_RESPONSE_ONEWAY_QNAME
return|;
block|}
specifier|public
name|QName
name|getTerminateSequenceOperationName
parameter_list|()
block|{
return|return
name|TERMINATE_SEQUENCE_QNAME
return|;
block|}
specifier|public
name|QName
name|getTerminateSequenceAnonymousOperationName
parameter_list|()
block|{
return|return
name|TERMINATE_SEQUENCE_ANONYMOUS_QNAME
return|;
block|}
specifier|public
name|QName
name|getSequenceAckOperationName
parameter_list|()
block|{
return|return
name|SEQUENCE_ACKNOWLEDGEMENT_QNAME
return|;
block|}
specifier|public
name|QName
name|getCloseSequenceOperationName
parameter_list|()
block|{
return|return
name|CLOSE_SEQUENCE_QNAME
return|;
block|}
specifier|public
name|QName
name|getAckRequestedOperationName
parameter_list|()
block|{
return|return
name|ACK_REQ_QNAME
return|;
block|}
comment|// fault codes access methods
specifier|public
name|QName
name|getUnknownSequenceFaultCode
parameter_list|()
block|{
return|return
name|UNKNOWN_SEQUENCE_FAULT_QNAME
return|;
block|}
specifier|public
name|QName
name|getSequenceTerminatedFaultCode
parameter_list|()
block|{
return|return
name|SEQUENCE_TERMINATED_FAULT_QNAME
return|;
block|}
specifier|public
name|QName
name|getInvalidAcknowledgmentFaultCode
parameter_list|()
block|{
return|return
name|INVALID_ACKNOWLEDGMENT_FAULT_QNAME
return|;
block|}
specifier|public
name|QName
name|getMessageNumberRolloverFaultCode
parameter_list|()
block|{
return|return
name|MESSAGE_NUMBER_ROLLOVER_FAULT_QNAME
return|;
block|}
specifier|public
name|QName
name|getCreateSequenceRefusedFaultCode
parameter_list|()
block|{
return|return
name|CREATE_SEQUENCE_REFUSED_FAULT_QNAME
return|;
block|}
specifier|public
name|QName
name|getSequenceClosedFaultCode
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|QName
name|getWSRMRequiredFaultCode
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

