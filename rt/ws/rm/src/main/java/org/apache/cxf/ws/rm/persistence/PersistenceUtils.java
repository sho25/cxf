begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|persistence
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
operator|.
name|AttachmentDeserializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
operator|.
name|AttachmentSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|LoadingByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|RMMessageConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|v200702
operator|.
name|SequenceAcknowledgement
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|PersistenceUtils
block|{
specifier|private
specifier|static
name|PersistenceUtils
name|instance
decl_stmt|;
specifier|private
name|JAXBContext
name|context
decl_stmt|;
comment|/**      * Prevents instantiation.      */
specifier|private
name|PersistenceUtils
parameter_list|()
block|{     }
specifier|public
specifier|static
name|PersistenceUtils
name|getInstance
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|instance
condition|)
block|{
name|instance
operator|=
operator|new
name|PersistenceUtils
argument_list|()
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
specifier|public
name|SequenceAcknowledgement
name|deserialiseAcknowledgment
parameter_list|(
name|InputStream
name|is
parameter_list|)
block|{
name|Object
name|obj
init|=
literal|null
decl_stmt|;
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|is
argument_list|)
decl_stmt|;
try|try
block|{
name|obj
operator|=
name|getContext
argument_list|()
operator|.
name|createUnmarshaller
argument_list|()
operator|.
name|unmarshal
argument_list|(
name|reader
argument_list|)
expr_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|JAXBElement
argument_list|<
name|?
argument_list|>
condition|)
block|{
name|JAXBElement
argument_list|<
name|?
argument_list|>
name|el
init|=
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|obj
decl_stmt|;
name|obj
operator|=
name|el
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RMStoreException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
try|try
block|{
name|StaxUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|// ignore, just cleaning up
block|}
block|}
return|return
operator|(
name|SequenceAcknowledgement
operator|)
name|obj
return|;
block|}
specifier|public
name|InputStream
name|serialiseAcknowledgment
parameter_list|(
name|SequenceAcknowledgement
name|ack
parameter_list|)
block|{
name|LoadingByteArrayOutputStream
name|bos
init|=
operator|new
name|LoadingByteArrayOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|getContext
argument_list|()
operator|.
name|createMarshaller
argument_list|()
operator|.
name|marshal
argument_list|(
name|ack
argument_list|,
name|bos
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RMStoreException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
return|return
name|bos
operator|.
name|createInputStream
argument_list|()
return|;
block|}
specifier|private
name|JAXBContext
name|getContext
parameter_list|()
throws|throws
name|JAXBException
block|{
if|if
condition|(
literal|null
operator|==
name|context
condition|)
block|{
name|context
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|SequenceAcknowledgement
operator|.
name|class
argument_list|)
argument_list|,
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|context
return|;
block|}
specifier|public
specifier|static
name|void
name|encodeRMContent
parameter_list|(
name|RMMessage
name|rmmsg
parameter_list|,
name|Message
name|msg
parameter_list|,
name|InputStream
name|msgContent
parameter_list|)
throws|throws
name|IOException
block|{
name|CachedOutputStream
name|cos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
if|if
condition|(
name|msg
operator|.
name|getAttachments
argument_list|()
operator|==
literal|null
condition|)
block|{
name|rmmsg
operator|.
name|setContentType
argument_list|(
operator|(
name|String
operator|)
name|msg
operator|.
name|get
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|copyAndCloseInput
argument_list|(
name|msgContent
argument_list|,
name|cos
argument_list|)
expr_stmt|;
name|cos
operator|.
name|flush
argument_list|()
expr_stmt|;
name|rmmsg
operator|.
name|setContent
argument_list|(
name|cos
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|MessageImpl
name|msgImpl1
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|msgImpl1
operator|.
name|setContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|,
name|cos
argument_list|)
expr_stmt|;
name|msgImpl1
operator|.
name|setAttachments
argument_list|(
name|msg
operator|.
name|getAttachments
argument_list|()
argument_list|)
expr_stmt|;
name|msgImpl1
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
operator|(
name|String
operator|)
name|msg
operator|.
name|get
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|msgImpl1
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|msgContent
argument_list|)
expr_stmt|;
name|AttachmentSerializer
name|serializer
init|=
operator|new
name|AttachmentSerializer
argument_list|(
name|msgImpl1
argument_list|)
decl_stmt|;
name|serializer
operator|.
name|setXop
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|writeProlog
argument_list|()
expr_stmt|;
comment|// write soap root message into cached output stream
name|IOUtils
operator|.
name|copyAndCloseInput
argument_list|(
name|msgContent
argument_list|,
name|cos
argument_list|)
expr_stmt|;
name|cos
operator|.
name|flush
argument_list|()
expr_stmt|;
name|serializer
operator|.
name|writeAttachments
argument_list|()
expr_stmt|;
name|rmmsg
operator|.
name|setContentType
argument_list|(
operator|(
name|String
operator|)
name|msgImpl1
operator|.
name|get
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|rmmsg
operator|.
name|setContent
argument_list|(
name|cos
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|decodeRMContent
parameter_list|(
name|RMMessage
name|rmmsg
parameter_list|,
name|Message
name|msg
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|contentType
init|=
name|rmmsg
operator|.
name|getContentType
argument_list|()
decl_stmt|;
specifier|final
name|CachedOutputStream
name|cos
init|=
name|rmmsg
operator|.
name|getContent
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
literal|null
operator|!=
name|contentType
operator|)
operator|&&
name|contentType
operator|.
name|startsWith
argument_list|(
literal|"multipart/related"
argument_list|)
condition|)
block|{
specifier|final
name|InputStream
name|is
init|=
name|cos
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|contentType
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|ad
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|ad
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
comment|// create new cos with soap envelope only
name|CachedOutputStream
name|cosSoap
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|msg
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
argument_list|,
name|cosSoap
argument_list|)
expr_stmt|;
name|cosSoap
operator|.
name|flush
argument_list|()
expr_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|RMMessageConstants
operator|.
name|SAVED_CONTENT
argument_list|,
name|cosSoap
argument_list|)
expr_stmt|;
comment|// REVISIT -- At the moment references must be hold for retransmission
comment|// and the final cleanup of the CachedOutputStream.
name|msg
operator|.
name|put
argument_list|(
name|RMMessageConstants
operator|.
name|ATTACHMENTS_CLOSEABLE
argument_list|,
operator|new
name|Closeable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
try|try
block|{
name|cos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|msg
operator|.
name|put
argument_list|(
name|RMMessageConstants
operator|.
name|SAVED_CONTENT
argument_list|,
name|cos
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

