begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|resource
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|context
operator|.
name|WrappedMessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AddressingProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|JAXWSAConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ReferenceParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|DeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|GetResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|PutResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Representation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|Dialect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|fragment
operator|.
name|FragmentDialect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|fragment
operator|.
name|FragmentDialectConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|manager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|shared
operator|.
name|faults
operator|.
name|UnknownDialect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|validationtransformation
operator|.
name|ResourceTypeIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|validationtransformation
operator|.
name|ValidAndTransformHelper
import|;
end_import

begin_comment
comment|/**  * Implementation of the Resource interface for resources, which are created locally.  * @see org.apache.cxf.ws.transfer.resourcefactory.resolver.ResourceResolver  */
end_comment

begin_class
specifier|public
class|class
name|ResourceLocal
implements|implements
name|Resource
block|{
annotation|@
name|javax
operator|.
name|annotation
operator|.
name|Resource
specifier|protected
name|WebServiceContext
name|context
decl_stmt|;
specifier|protected
name|ResourceManager
name|manager
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|ResourceTypeIdentifier
argument_list|>
name|resourceTypeIdentifiers
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Dialect
argument_list|>
name|dialects
decl_stmt|;
specifier|public
name|ResourceLocal
parameter_list|()
block|{
name|dialects
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|dialects
operator|.
name|put
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|,
operator|new
name|FragmentDialect
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ResourceManager
name|getManager
parameter_list|()
block|{
return|return
name|manager
return|;
block|}
specifier|public
name|void
name|setManager
parameter_list|(
name|ResourceManager
name|manager
parameter_list|)
block|{
name|this
operator|.
name|manager
operator|=
name|manager
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ResourceTypeIdentifier
argument_list|>
name|getResourceTypeIdentifiers
parameter_list|()
block|{
if|if
condition|(
name|resourceTypeIdentifiers
operator|==
literal|null
condition|)
block|{
name|resourceTypeIdentifiers
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|resourceTypeIdentifiers
return|;
block|}
specifier|public
name|void
name|setResourceTypeIdentifiers
parameter_list|(
name|List
argument_list|<
name|ResourceTypeIdentifier
argument_list|>
name|resourceTypeIdentifiers
parameter_list|)
block|{
name|this
operator|.
name|resourceTypeIdentifiers
operator|=
name|resourceTypeIdentifiers
expr_stmt|;
block|}
comment|/**      * Register Dialect object for URI.      * @param iri      * @param dialect      */
specifier|public
name|void
name|registerDialect
parameter_list|(
name|String
name|iri
parameter_list|,
name|Dialect
name|dialect
parameter_list|)
block|{
if|if
condition|(
name|dialects
operator|.
name|containsKey
argument_list|(
name|iri
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"IRI \"%s\" is already registered"
argument_list|,
name|iri
argument_list|)
argument_list|)
throw|;
block|}
name|dialects
operator|.
name|put
argument_list|(
name|iri
argument_list|,
name|dialect
argument_list|)
expr_stmt|;
block|}
comment|/**      * Unregister dialect URI.      * @param iri      */
specifier|public
name|void
name|unregisterDialect
parameter_list|(
name|String
name|iri
parameter_list|)
block|{
if|if
condition|(
operator|!
name|dialects
operator|.
name|containsKey
argument_list|(
name|iri
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"IRI \"%s\" is not registered"
argument_list|,
name|iri
argument_list|)
argument_list|)
throw|;
block|}
name|dialects
operator|.
name|remove
argument_list|(
name|iri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|GetResponse
name|get
parameter_list|(
name|Get
name|body
parameter_list|)
block|{
comment|// Getting reference paramaters
name|AddressingProperties
name|addrProps
init|=
call|(
name|AddressingProperties
call|)
argument_list|(
operator|(
name|WrappedMessageContext
operator|)
name|context
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|getWrappedMessage
argument_list|()
operator|.
name|getContextualProperty
argument_list|(
name|JAXWSAConstants
operator|.
name|ADDRESSING_PROPERTIES_INBOUND
argument_list|)
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|addrProps
operator|.
name|getToEndpointReference
argument_list|()
operator|.
name|getReferenceParameters
argument_list|()
decl_stmt|;
name|GetResponse
name|response
init|=
operator|new
name|GetResponse
argument_list|()
decl_stmt|;
comment|// Getting representation from the ResourceManager
name|Representation
name|representation
init|=
name|manager
operator|.
name|get
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
comment|// Dialect processing
if|if
condition|(
name|body
operator|.
name|getDialect
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|body
operator|.
name|getDialect
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|dialects
operator|.
name|containsKey
argument_list|(
name|body
operator|.
name|getDialect
argument_list|()
argument_list|)
condition|)
block|{
name|Dialect
name|dialect
init|=
name|dialects
operator|.
name|get
argument_list|(
name|body
operator|.
name|getDialect
argument_list|()
argument_list|)
decl_stmt|;
comment|// Send fragment of resource instead it's representation.
name|response
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|dialect
operator|.
name|processGet
argument_list|(
name|body
argument_list|,
name|representation
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnknownDialect
argument_list|()
throw|;
block|}
block|}
else|else
block|{
comment|// Send representation obtained from ResourceManager.
name|response
operator|.
name|setRepresentation
argument_list|(
name|representation
argument_list|)
expr_stmt|;
block|}
return|return
name|response
return|;
block|}
annotation|@
name|Override
specifier|public
name|DeleteResponse
name|delete
parameter_list|(
name|Delete
name|body
parameter_list|)
block|{
comment|// Getting reference paramaters
name|AddressingProperties
name|addrProps
init|=
call|(
name|AddressingProperties
call|)
argument_list|(
operator|(
name|WrappedMessageContext
operator|)
name|context
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|getWrappedMessage
argument_list|()
operator|.
name|getContextualProperty
argument_list|(
name|JAXWSAConstants
operator|.
name|ADDRESSING_PROPERTIES_INBOUND
argument_list|)
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|addrProps
operator|.
name|getToEndpointReference
argument_list|()
operator|.
name|getReferenceParameters
argument_list|()
decl_stmt|;
name|boolean
name|delete
init|=
literal|true
decl_stmt|;
comment|// Dialect processing
if|if
condition|(
name|body
operator|.
name|getDialect
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|body
operator|.
name|getDialect
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|dialects
operator|.
name|containsKey
argument_list|(
name|body
operator|.
name|getDialect
argument_list|()
argument_list|)
condition|)
block|{
name|Dialect
name|dialect
init|=
name|dialects
operator|.
name|get
argument_list|(
name|body
operator|.
name|getDialect
argument_list|()
argument_list|)
decl_stmt|;
name|delete
operator|=
name|dialect
operator|.
name|processDelete
argument_list|(
name|body
argument_list|,
name|manager
operator|.
name|get
argument_list|(
name|refParams
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnknownDialect
argument_list|()
throw|;
block|}
block|}
if|if
condition|(
name|delete
condition|)
block|{
name|manager
operator|.
name|delete
argument_list|(
name|refParams
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|DeleteResponse
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|PutResponse
name|put
parameter_list|(
name|Put
name|body
parameter_list|)
block|{
comment|// Getting reference paramaters
name|AddressingProperties
name|addrProps
init|=
call|(
name|AddressingProperties
call|)
argument_list|(
operator|(
name|WrappedMessageContext
operator|)
name|context
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|getWrappedMessage
argument_list|()
operator|.
name|getContextualProperty
argument_list|(
name|JAXWSAConstants
operator|.
name|ADDRESSING_PROPERTIES_INBOUND
argument_list|)
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|addrProps
operator|.
name|getToEndpointReference
argument_list|()
operator|.
name|getReferenceParameters
argument_list|()
decl_stmt|;
comment|// Getting representation from the ResourceManager
name|Representation
name|storedRepresentation
init|=
name|manager
operator|.
name|get
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
comment|// Getting representation from the incoming SOAP message. This representation will be stored.
name|Representation
name|putRepresentation
init|=
name|body
operator|.
name|getRepresentation
argument_list|()
decl_stmt|;
comment|// Dialect processing
if|if
condition|(
name|body
operator|.
name|getDialect
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|body
operator|.
name|getDialect
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|dialects
operator|.
name|containsKey
argument_list|(
name|body
operator|.
name|getDialect
argument_list|()
argument_list|)
condition|)
block|{
name|Dialect
name|dialect
init|=
name|dialects
operator|.
name|get
argument_list|(
name|body
operator|.
name|getDialect
argument_list|()
argument_list|)
decl_stmt|;
name|putRepresentation
operator|=
name|dialect
operator|.
name|processPut
argument_list|(
name|body
argument_list|,
name|storedRepresentation
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnknownDialect
argument_list|()
throw|;
block|}
block|}
name|ValidAndTransformHelper
operator|.
name|validationAndTransformation
argument_list|(
name|resourceTypeIdentifiers
argument_list|,
name|putRepresentation
argument_list|,
name|storedRepresentation
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
name|refParams
argument_list|,
name|putRepresentation
argument_list|)
expr_stmt|;
name|PutResponse
name|response
init|=
operator|new
name|PutResponse
argument_list|()
decl_stmt|;
name|response
operator|.
name|setRepresentation
argument_list|(
name|putRepresentation
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

