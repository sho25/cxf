begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ReferenceParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|GetResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|fragment
operator|.
name|ExpressionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|fragment
operator|.
name|FragmentDialectConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|fragment
operator|.
name|ObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|dialect
operator|.
name|fragment
operator|.
name|ValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|manager
operator|.
name|MemoryResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|manager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|FragmentGetXPath10Test
extends|extends
name|IntegrationBaseTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|getTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"/root/a/b"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getImpliedLanguageTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"/root/a/b"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getWithNamespaceTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<ns:root xmlns:ns=\"www.example.org\"><ns:a><ns:b>Text</ns:b></ns:a></ns:root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"/ns:root/ns:a/ns:b"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"www.example.org"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|qetEmptyResultTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"//c"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getMoreValuesTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text1</b><b>Text2</b><b>Text3</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"//b"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getMoreValues2Test
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text1</b><b>Text2</b><b><b>Text3</b></b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"//b"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAttrTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b attr1=\"value1\">Text</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"/root/a/b/@attr1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|Element
argument_list|)
expr_stmt|;
name|Element
name|attrEl
init|=
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_ATTR_NODE_NAME
argument_list|,
name|attrEl
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|,
name|attrEl
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"attr1"
argument_list|,
name|attrEl
operator|.
name|getAttribute
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_ATTR_NODE_NAME_ATTR
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|attrEl
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAttrNSTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root xmlns:ns=\"www.example.org\"><a><b ns:attr1=\"value1\">Text</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"/root/a/b/@ns:attr1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|Element
argument_list|)
expr_stmt|;
name|Element
name|attrEl
init|=
operator|(
name|Element
operator|)
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_ATTR_NODE_NAME
argument_list|,
name|attrEl
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|,
name|attrEl
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ns:attr1"
argument_list|,
name|attrEl
operator|.
name|getAttribute
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_ATTR_NODE_NAME_ATTR
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|attrEl
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getNumberTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text</b><b>Text2</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"count(//b)"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getBooleanTrueTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text</b><b>Text2</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"count(//b) = 2"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"true"
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getBooleanFalseTest
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|String
name|content
init|=
literal|"<root><a><b>Text</b><b>Text2</b></a></root>"
decl_stmt|;
name|ResourceManager
name|resourceManager
init|=
operator|new
name|MemoryResourceManager
argument_list|()
decl_stmt|;
name|ReferenceParametersType
name|refParams
init|=
name|resourceManager
operator|.
name|create
argument_list|(
name|getRepresentation
argument_list|(
name|content
argument_list|)
argument_list|)
decl_stmt|;
name|Server
name|resource
init|=
name|createLocalResource
argument_list|(
name|resourceManager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|ObjectFactory
name|objectFactory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|Get
name|request
init|=
operator|new
name|Get
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDialect
argument_list|(
name|FragmentDialectConstants
operator|.
name|FRAGMENT_2011_03_IRI
argument_list|)
expr_stmt|;
name|ExpressionType
name|expression
init|=
operator|new
name|ExpressionType
argument_list|()
decl_stmt|;
name|expression
operator|.
name|setLanguage
argument_list|(
name|FragmentDialectConstants
operator|.
name|XPATH10_LANGUAGE_IRI
argument_list|)
expr_stmt|;
name|expression
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
literal|"count(//b) != 2"
argument_list|)
expr_stmt|;
name|request
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|objectFactory
operator|.
name|createExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
expr_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|ValueType
name|value
init|=
name|getValue
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|value
operator|.
name|getContent
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|resource
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|ValueType
name|getValue
parameter_list|(
name|GetResponse
name|response
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|JAXBElement
argument_list|<
name|ValueType
argument_list|>
name|jaxb
init|=
operator|(
name|JAXBElement
argument_list|<
name|ValueType
argument_list|>
operator|)
name|response
operator|.
name|getAny
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
return|return
name|jaxb
operator|.
name|getValue
argument_list|()
return|;
block|}
block|}
end_class

end_unit

