begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AddressingProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ContextUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|JAXWSAConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ReferenceParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|GetResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|PutResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Representation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|manager
operator|.
name|MemoryResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|manager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ResourceTest
extends|extends
name|IntegrationBaseTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|UUID_VALUE
init|=
literal|"123456"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPRESENTATION_NAME
init|=
literal|"name1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPRESENTATION_NAMESPACE
init|=
literal|"test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPRESENTATION_VALUE
init|=
literal|"value1"
decl_stmt|;
specifier|protected
name|Resource
name|createClient
parameter_list|(
name|ReferenceParametersType
name|refParams
parameter_list|)
block|{
name|JaxWsProxyFactoryBean
name|factory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setServiceClass
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|RESOURCE_LOCAL_ADDRESS
argument_list|)
expr_stmt|;
name|Resource
name|proxy
init|=
operator|(
name|Resource
operator|)
name|factory
operator|.
name|create
argument_list|()
decl_stmt|;
comment|// Add reference parameters
name|AddressingProperties
name|addrProps
init|=
operator|new
name|AddressingProperties
argument_list|()
decl_stmt|;
name|EndpointReferenceType
name|endpoint
init|=
operator|new
name|EndpointReferenceType
argument_list|()
decl_stmt|;
name|endpoint
operator|.
name|setReferenceParameters
argument_list|(
name|refParams
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setAddress
argument_list|(
name|ContextUtils
operator|.
name|getAttributedURI
argument_list|(
name|RESOURCE_ADDRESS
argument_list|)
argument_list|)
expr_stmt|;
name|addrProps
operator|.
name|setTo
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
operator|(
operator|(
name|BindingProvider
operator|)
name|proxy
operator|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|JAXWSAConstants
operator|.
name|CLIENT_ADDRESSING_PROPERTIES
argument_list|,
name|addrProps
argument_list|)
expr_stmt|;
return|return
name|proxy
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getRequestTest
parameter_list|()
block|{
name|Element
name|representationEl
init|=
name|document
operator|.
name|createElementNS
argument_list|(
name|REPRESENTATION_NAMESPACE
argument_list|,
name|REPRESENTATION_NAME
argument_list|)
decl_stmt|;
name|representationEl
operator|.
name|setTextContent
argument_list|(
name|REPRESENTATION_VALUE
argument_list|)
expr_stmt|;
name|Representation
name|representation
init|=
operator|new
name|Representation
argument_list|()
decl_stmt|;
name|representation
operator|.
name|setAny
argument_list|(
name|representationEl
argument_list|)
expr_stmt|;
name|ResourceManager
name|manager
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ResourceManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|manager
operator|.
name|get
argument_list|(
name|EasyMock
operator|.
name|isA
argument_list|(
name|ReferenceParametersType
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|representation
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|once
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|manager
argument_list|)
expr_stmt|;
name|ReferenceParametersType
name|refParams
init|=
operator|new
name|ReferenceParametersType
argument_list|()
decl_stmt|;
name|Element
name|uuid
init|=
name|document
operator|.
name|createElementNS
argument_list|(
name|MemoryResourceManager
operator|.
name|REF_NAMESPACE
argument_list|,
name|MemoryResourceManager
operator|.
name|REF_LOCAL_NAME
argument_list|)
decl_stmt|;
name|uuid
operator|.
name|setTextContent
argument_list|(
name|UUID_VALUE
argument_list|)
expr_stmt|;
name|refParams
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|uuid
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|createLocalResource
argument_list|(
name|manager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|GetResponse
name|response
init|=
name|client
operator|.
name|get
argument_list|(
operator|new
name|Get
argument_list|()
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|manager
argument_list|)
expr_stmt|;
name|representationEl
operator|=
operator|(
name|Element
operator|)
name|response
operator|.
name|getRepresentation
argument_list|()
operator|.
name|getAny
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Namespace is other than expected."
argument_list|,
name|REPRESENTATION_NAMESPACE
argument_list|,
name|representationEl
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Element name is other than expected"
argument_list|,
name|REPRESENTATION_NAME
argument_list|,
name|representationEl
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Value is other than expected."
argument_list|,
name|REPRESENTATION_VALUE
argument_list|,
name|representationEl
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|putRequestTest
parameter_list|()
block|{
name|ResourceManager
name|manager
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ResourceManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|manager
operator|.
name|get
argument_list|(
name|EasyMock
operator|.
name|isA
argument_list|(
name|ReferenceParametersType
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|Representation
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|once
argument_list|()
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
name|EasyMock
operator|.
name|isA
argument_list|(
name|ReferenceParametersType
operator|.
name|class
argument_list|)
argument_list|,
name|EasyMock
operator|.
name|isA
argument_list|(
name|Representation
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|once
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|manager
argument_list|)
expr_stmt|;
name|ReferenceParametersType
name|refParams
init|=
operator|new
name|ReferenceParametersType
argument_list|()
decl_stmt|;
name|Element
name|uuid
init|=
name|document
operator|.
name|createElementNS
argument_list|(
name|MemoryResourceManager
operator|.
name|REF_NAMESPACE
argument_list|,
name|MemoryResourceManager
operator|.
name|REF_LOCAL_NAME
argument_list|)
decl_stmt|;
name|uuid
operator|.
name|setTextContent
argument_list|(
name|UUID_VALUE
argument_list|)
expr_stmt|;
name|refParams
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|uuid
argument_list|)
expr_stmt|;
name|Element
name|representationEl
init|=
name|document
operator|.
name|createElementNS
argument_list|(
name|REPRESENTATION_NAMESPACE
argument_list|,
name|REPRESENTATION_NAME
argument_list|)
decl_stmt|;
name|representationEl
operator|.
name|setTextContent
argument_list|(
name|REPRESENTATION_VALUE
argument_list|)
expr_stmt|;
name|Representation
name|representation
init|=
operator|new
name|Representation
argument_list|()
decl_stmt|;
name|representation
operator|.
name|setAny
argument_list|(
name|representationEl
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|createLocalResource
argument_list|(
name|manager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|Put
name|putRequest
init|=
operator|new
name|Put
argument_list|()
decl_stmt|;
name|putRequest
operator|.
name|setRepresentation
argument_list|(
name|representation
argument_list|)
expr_stmt|;
name|PutResponse
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|putRequest
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|manager
argument_list|)
expr_stmt|;
name|representationEl
operator|=
operator|(
name|Element
operator|)
name|response
operator|.
name|getRepresentation
argument_list|()
operator|.
name|getAny
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Namespace is other than expected."
argument_list|,
name|REPRESENTATION_NAMESPACE
argument_list|,
name|representationEl
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Element name is other than expected"
argument_list|,
name|REPRESENTATION_NAME
argument_list|,
name|representationEl
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Value is other than expected."
argument_list|,
name|REPRESENTATION_VALUE
argument_list|,
name|representationEl
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteRequestTest
parameter_list|()
block|{
name|ResourceManager
name|manager
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|ResourceManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|manager
operator|.
name|delete
argument_list|(
name|EasyMock
operator|.
name|isA
argument_list|(
name|ReferenceParametersType
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|once
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|manager
argument_list|)
expr_stmt|;
name|ReferenceParametersType
name|refParams
init|=
operator|new
name|ReferenceParametersType
argument_list|()
decl_stmt|;
name|Element
name|uuid
init|=
name|document
operator|.
name|createElementNS
argument_list|(
name|MemoryResourceManager
operator|.
name|REF_NAMESPACE
argument_list|,
name|MemoryResourceManager
operator|.
name|REF_LOCAL_NAME
argument_list|)
decl_stmt|;
name|uuid
operator|.
name|setTextContent
argument_list|(
name|UUID_VALUE
argument_list|)
expr_stmt|;
name|refParams
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|uuid
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|createLocalResource
argument_list|(
name|manager
argument_list|)
decl_stmt|;
name|Resource
name|client
init|=
name|createClient
argument_list|(
name|refParams
argument_list|)
decl_stmt|;
name|client
operator|.
name|delete
argument_list|(
operator|new
name|Delete
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|manager
argument_list|)
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

