begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|policy
operator|.
name|custom
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Assertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Policy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|SPConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|AbstractSecurityAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|AlgorithmSuite
import|;
end_import

begin_comment
comment|/**  * This class retrieves the default AlgorithmSuites plus the CXF specific GCM AlgorithmSuites.  */
end_comment

begin_class
specifier|public
class|class
name|DefaultAlgorithmSuiteLoader
implements|implements
name|AlgorithmSuiteLoader
block|{
specifier|public
name|AlgorithmSuite
name|getAlgorithmSuite
parameter_list|(
name|SPConstants
operator|.
name|SPVersion
name|version
parameter_list|,
name|Policy
name|nestedPolicy
parameter_list|)
block|{
return|return
operator|new
name|GCMAlgorithmSuite
argument_list|(
name|version
argument_list|,
name|nestedPolicy
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|GCMAlgorithmSuite
extends|extends
name|AlgorithmSuite
block|{
name|GCMAlgorithmSuite
parameter_list|(
name|SPConstants
operator|.
name|SPVersion
name|version
parameter_list|,
name|Policy
name|nestedPolicy
parameter_list|)
block|{
name|super
argument_list|(
name|version
argument_list|,
name|nestedPolicy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|AbstractSecurityAssertion
name|cloneAssertion
parameter_list|(
name|Policy
name|nestedPolicy
parameter_list|)
block|{
return|return
operator|new
name|GCMAlgorithmSuite
argument_list|(
name|getVersion
argument_list|()
argument_list|,
name|nestedPolicy
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|parseCustomAssertion
parameter_list|(
name|Assertion
name|assertion
parameter_list|)
block|{
name|String
name|assertionName
init|=
name|assertion
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
decl_stmt|;
name|String
name|assertionNamespace
init|=
name|assertion
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
literal|"http://cxf.apache.org/custom/security-policy"
operator|.
name|equals
argument_list|(
name|assertionNamespace
argument_list|)
condition|)
block|{
return|return;
block|}
if|if
condition|(
literal|"Basic128GCM"
operator|.
name|equals
argument_list|(
name|assertionName
argument_list|)
condition|)
block|{
name|setAlgorithmSuiteType
argument_list|(
operator|new
name|AlgorithmSuiteType
argument_list|(
literal|"Basic128GCM"
argument_list|,
name|SPConstants
operator|.
name|SHA1
argument_list|,
literal|"http://www.w3.org/2009/xmlenc11#aes128-gcm"
argument_list|,
name|SPConstants
operator|.
name|KW_AES128
argument_list|,
name|SPConstants
operator|.
name|KW_RSA_OAEP
argument_list|,
name|SPConstants
operator|.
name|P_SHA1_L128
argument_list|,
name|SPConstants
operator|.
name|P_SHA1_L128
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|,
literal|256
argument_list|,
literal|1024
argument_list|,
literal|4096
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"Basic192GCM"
operator|.
name|equals
argument_list|(
name|assertionName
argument_list|)
condition|)
block|{
name|setAlgorithmSuiteType
argument_list|(
operator|new
name|AlgorithmSuiteType
argument_list|(
literal|"Basic192GCM"
argument_list|,
name|SPConstants
operator|.
name|SHA1
argument_list|,
literal|"http://www.w3.org/2009/xmlenc11#aes192-gcm"
argument_list|,
name|SPConstants
operator|.
name|KW_AES192
argument_list|,
name|SPConstants
operator|.
name|KW_RSA_OAEP
argument_list|,
name|SPConstants
operator|.
name|P_SHA1_L192
argument_list|,
name|SPConstants
operator|.
name|P_SHA1_L192
argument_list|,
literal|192
argument_list|,
literal|192
argument_list|,
literal|192
argument_list|,
literal|256
argument_list|,
literal|1024
argument_list|,
literal|4096
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"Basic256GCM"
operator|.
name|equals
argument_list|(
name|assertionName
argument_list|)
condition|)
block|{
name|setAlgorithmSuiteType
argument_list|(
operator|new
name|AlgorithmSuiteType
argument_list|(
literal|"Basic256GCM"
argument_list|,
name|SPConstants
operator|.
name|SHA1
argument_list|,
literal|"http://www.w3.org/2009/xmlenc11#aes256-gcm"
argument_list|,
name|SPConstants
operator|.
name|KW_AES256
argument_list|,
name|SPConstants
operator|.
name|KW_RSA_OAEP
argument_list|,
name|SPConstants
operator|.
name|P_SHA1_L256
argument_list|,
name|SPConstants
operator|.
name|P_SHA1_L192
argument_list|,
literal|256
argument_list|,
literal|192
argument_list|,
literal|256
argument_list|,
literal|256
argument_list|,
literal|1024
argument_list|,
literal|4096
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

