begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|trust
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|BindingFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|BindingFactoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapBindingConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|model
operator|.
name|SoapOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|source
operator|.
name|SourceDataBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|EndpointException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|EndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|ServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|InterfaceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|MessageInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|MessagePartInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|OperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiatorManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|policy
operator|.
name|model
operator|.
name|Trust10
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|policy
operator|.
name|model
operator|.
name|Trust13
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|tokenstore
operator|.
name|SecurityToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Policy
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|STSClient
block|{
name|Bus
name|bus
decl_stmt|;
name|Client
name|client
decl_stmt|;
name|String
name|location
decl_stmt|;
name|Policy
name|policy
decl_stmt|;
name|String
name|soapVersion
init|=
name|SoapBindingConstants
operator|.
name|SOAP11_BINDING_ID
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|ctx
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|STSClient
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|bus
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|void
name|setLocation
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
specifier|public
name|void
name|setPolicy
parameter_list|(
name|Policy
name|policy
parameter_list|)
block|{
name|this
operator|.
name|policy
operator|=
name|policy
expr_stmt|;
block|}
specifier|public
name|void
name|setSoap12
parameter_list|()
block|{
name|soapVersion
operator|=
name|SoapBindingConstants
operator|.
name|SOAP12_BINDING_ID
expr_stmt|;
block|}
specifier|public
name|void
name|setSoap11
parameter_list|()
block|{
name|soapVersion
operator|=
name|SoapBindingConstants
operator|.
name|SOAP11_BINDING_ID
expr_stmt|;
block|}
specifier|public
name|void
name|setTrust
parameter_list|(
name|Trust10
name|trust
parameter_list|)
block|{              }
specifier|public
name|void
name|setTrust
parameter_list|(
name|Trust13
name|trust
parameter_list|)
block|{              }
specifier|private
name|void
name|createClient
parameter_list|()
throws|throws
name|BusException
throws|,
name|EndpointException
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|Service
name|service
init|=
literal|null
decl_stmt|;
name|String
name|ns
init|=
literal|"http://schemas.xmlsoap.org/ws/2005/02/trust/wsdl"
decl_stmt|;
name|String
name|typeNs
init|=
literal|"http://schemas.xmlsoap.org/ws/2005/02/trust"
decl_stmt|;
name|ServiceInfo
name|si
init|=
operator|new
name|ServiceInfo
argument_list|()
decl_stmt|;
name|QName
name|iName
init|=
operator|new
name|QName
argument_list|(
name|ns
argument_list|,
literal|"SecurityTokenService"
argument_list|)
decl_stmt|;
name|si
operator|.
name|setName
argument_list|(
name|iName
argument_list|)
expr_stmt|;
name|InterfaceInfo
name|ii
init|=
operator|new
name|InterfaceInfo
argument_list|(
name|si
argument_list|,
name|iName
argument_list|)
decl_stmt|;
name|OperationInfo
name|oi
init|=
name|ii
operator|.
name|addOperation
argument_list|(
operator|new
name|QName
argument_list|(
name|ns
argument_list|,
literal|"RequestSecurityToken"
argument_list|)
argument_list|)
decl_stmt|;
name|MessageInfo
name|mii
init|=
name|oi
operator|.
name|createMessage
argument_list|(
operator|new
name|QName
argument_list|(
name|ns
argument_list|,
literal|"RequestSecurityTokenMsg"
argument_list|)
argument_list|,
name|MessageInfo
operator|.
name|Type
operator|.
name|INPUT
argument_list|)
decl_stmt|;
name|oi
operator|.
name|setInput
argument_list|(
literal|"RequestSecurityTokenMsg"
argument_list|,
name|mii
argument_list|)
expr_stmt|;
name|MessagePartInfo
name|mpi
init|=
name|mii
operator|.
name|addMessagePart
argument_list|(
literal|"request"
argument_list|)
decl_stmt|;
name|mpi
operator|.
name|setElementQName
argument_list|(
operator|new
name|QName
argument_list|(
name|typeNs
argument_list|,
literal|"RequestSecurityToken"
argument_list|)
argument_list|)
expr_stmt|;
name|MessageInfo
name|mio
init|=
name|oi
operator|.
name|createMessage
argument_list|(
operator|new
name|QName
argument_list|(
name|ns
argument_list|,
literal|"RequestSecurityTokenResponseMsg"
argument_list|)
argument_list|,
name|MessageInfo
operator|.
name|Type
operator|.
name|OUTPUT
argument_list|)
decl_stmt|;
name|oi
operator|.
name|setOutput
argument_list|(
literal|"RequestSecurityTokenResponseMsg"
argument_list|,
name|mio
argument_list|)
expr_stmt|;
name|mpi
operator|=
name|mio
operator|.
name|addMessagePart
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|mpi
operator|.
name|setElementQName
argument_list|(
operator|new
name|QName
argument_list|(
name|typeNs
argument_list|,
literal|"RequestSecurityTokenResponse"
argument_list|)
argument_list|)
expr_stmt|;
name|si
operator|.
name|setInterface
argument_list|(
name|ii
argument_list|)
expr_stmt|;
name|service
operator|=
operator|new
name|ServiceImpl
argument_list|(
name|si
argument_list|)
expr_stmt|;
name|BindingFactoryManager
name|bfm
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|BindingFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|BindingFactory
name|bindingFactory
init|=
name|bfm
operator|.
name|getBindingFactory
argument_list|(
name|soapVersion
argument_list|)
decl_stmt|;
name|BindingInfo
name|bi
init|=
name|bindingFactory
operator|.
name|createBindingInfo
argument_list|(
name|service
argument_list|,
name|soapVersion
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|si
operator|.
name|addBinding
argument_list|(
name|bi
argument_list|)
expr_stmt|;
name|ConduitInitiatorManager
name|cim
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|ConduitInitiatorManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ConduitInitiator
name|ci
init|=
name|cim
operator|.
name|getConduitInitiatorForUri
argument_list|(
name|location
argument_list|)
decl_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|(
name|si
argument_list|,
name|ci
operator|.
name|getTransportIds
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|ei
operator|.
name|setBinding
argument_list|(
name|bi
argument_list|)
expr_stmt|;
name|ei
operator|.
name|setName
argument_list|(
name|iName
argument_list|)
expr_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|si
operator|.
name|addEndpoint
argument_list|(
name|ei
argument_list|)
expr_stmt|;
name|ei
operator|.
name|addExtensor
argument_list|(
name|policy
argument_list|)
expr_stmt|;
name|BindingOperationInfo
name|boi
init|=
name|bi
operator|.
name|getOperation
argument_list|(
name|oi
argument_list|)
decl_stmt|;
name|SoapOperationInfo
name|soi
init|=
name|boi
operator|.
name|getExtensor
argument_list|(
name|SoapOperationInfo
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|soi
operator|==
literal|null
condition|)
block|{
name|soi
operator|=
operator|new
name|SoapOperationInfo
argument_list|()
expr_stmt|;
name|boi
operator|.
name|addExtensor
argument_list|(
name|soi
argument_list|)
expr_stmt|;
block|}
name|soi
operator|.
name|setAction
argument_list|(
literal|"http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue"
argument_list|)
expr_stmt|;
name|service
operator|.
name|setDataBinding
argument_list|(
operator|new
name|SourceDataBinding
argument_list|()
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
operator|new
name|EndpointImpl
argument_list|(
name|bus
argument_list|,
name|service
argument_list|,
name|ei
argument_list|)
decl_stmt|;
name|client
operator|=
operator|new
name|ClientImpl
argument_list|(
name|bus
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getRequestContext
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|ctx
return|;
block|}
specifier|public
name|SecurityToken
name|requestSecurityToken
parameter_list|()
throws|throws
name|Exception
block|{
name|createClient
argument_list|()
expr_stmt|;
name|client
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
comment|//TODO: create the DOM based on the Trust10/Trust13 tokens
name|String
name|rqst
init|=
literal|"<t:RequestSecurityToken "
operator|+
literal|"xmlns:u='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd' "
operator|+
literal|"xmlns:t='http://schemas.xmlsoap.org/ws/2005/02/trust'>\n"
operator|+
literal|"<t:RequestType>"
operator|+
literal|"http://schemas.xmlsoap.org/ws/2005/02/trust/Issue"
operator|+
literal|"</t:RequestType>\n"
operator|+
literal|"<t:Entropy>\n"
operator|+
literal|"<t:BinarySecret u:Id='uuid-4acf589c-0076-4a83-8b66-5f29341514b7-3'"
operator|+
literal|" Type='http://schemas.xmlsoap.org/ws/2005/02/trust/Nonce'>"
operator|+
literal|"Uv38QLxDQM9gLoDZ6OwYDiFk094nmwu3Wmay7EdKmhw=</t:BinarySecret>\n"
operator|+
literal|"</t:Entropy>\n"
operator|+
literal|"<t:KeyType>http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey</t:KeyType>\n"
operator|+
literal|"<t:KeySize>256</t:KeySize>\n"
operator|+
literal|"<t:ComputedKeyAlgorithm>\n"
operator|+
literal|"http://schemas.xmlsoap.org/ws/2005/02/trust/CK/PSHA1"
operator|+
literal|"</t:ComputedKeyAlgorithm>\n"
operator|+
literal|"</t:RequestSecurityToken>\n"
decl_stmt|;
name|client
operator|.
name|invoke
argument_list|(
literal|"RequestSecurityToken"
argument_list|,
operator|new
name|DOMSource
argument_list|(
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|StringReader
argument_list|(
name|rqst
argument_list|)
argument_list|)
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

