begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPFault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|SOAPFaultException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|saaj
operator|.
name|SAAJFactoryResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|model
operator|.
name|RequestSecurityTokenCollectionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|model
operator|.
name|RequestSecurityTokenResponseCollectionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|model
operator|.
name|RequestSecurityTokenResponseType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|model
operator|.
name|RequestSecurityTokenType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|operation
operator|.
name|CancelOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|operation
operator|.
name|IssueOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|operation
operator|.
name|KeyExchangeTokenOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|operation
operator|.
name|RenewOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|operation
operator|.
name|RequestCollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|operation
operator|.
name|ValidateOperation
import|;
end_import

begin_class
specifier|public
class|class
name|SecurityTokenServiceImpl
implements|implements
name|SecurityTokenService
block|{
specifier|private
name|CancelOperation
name|cancelOperation
decl_stmt|;
specifier|private
name|IssueOperation
name|issueOperation
decl_stmt|;
specifier|private
name|KeyExchangeTokenOperation
name|keyExchangeTokenOperation
decl_stmt|;
specifier|private
name|RenewOperation
name|renewOperation
decl_stmt|;
specifier|private
name|RequestCollectionOperation
name|requestCollectionOperation
decl_stmt|;
specifier|private
name|ValidateOperation
name|validateOperation
decl_stmt|;
annotation|@
name|Resource
specifier|private
name|WebServiceContext
name|context
decl_stmt|;
specifier|public
name|void
name|setCancelOperation
parameter_list|(
name|CancelOperation
name|cancelOperation
parameter_list|)
block|{
name|this
operator|.
name|cancelOperation
operator|=
name|cancelOperation
expr_stmt|;
block|}
specifier|public
name|void
name|setIssueOperation
parameter_list|(
name|IssueOperation
name|issueOperation
parameter_list|)
block|{
name|this
operator|.
name|issueOperation
operator|=
name|issueOperation
expr_stmt|;
block|}
specifier|public
name|void
name|setKeyExchangeTokenOperation
parameter_list|(
name|KeyExchangeTokenOperation
name|keyExchangeTokenOperation
parameter_list|)
block|{
name|this
operator|.
name|keyExchangeTokenOperation
operator|=
name|keyExchangeTokenOperation
expr_stmt|;
block|}
specifier|public
name|void
name|setRenewOperation
parameter_list|(
name|RenewOperation
name|renewOperation
parameter_list|)
block|{
name|this
operator|.
name|renewOperation
operator|=
name|renewOperation
expr_stmt|;
block|}
specifier|public
name|void
name|setRequestCollectionOperation
parameter_list|(
name|RequestCollectionOperation
name|requestCollectionOperation
parameter_list|)
block|{
name|this
operator|.
name|requestCollectionOperation
operator|=
name|requestCollectionOperation
expr_stmt|;
block|}
specifier|public
name|void
name|setValidateOperation
parameter_list|(
name|ValidateOperation
name|validateOperation
parameter_list|)
block|{
name|this
operator|.
name|validateOperation
operator|=
name|validateOperation
expr_stmt|;
block|}
specifier|public
name|RequestSecurityTokenResponseType
name|validate
parameter_list|(
name|RequestSecurityTokenType
name|request
parameter_list|)
block|{
if|if
condition|(
name|validateOperation
operator|==
literal|null
condition|)
block|{
name|throwUnsupportedOperation
argument_list|(
literal|"Validate"
argument_list|)
expr_stmt|;
block|}
return|return
name|validateOperation
operator|.
name|validate
argument_list|(
name|request
argument_list|,
name|context
argument_list|)
return|;
block|}
specifier|public
name|RequestSecurityTokenResponseCollectionType
name|requestCollection
parameter_list|(
name|RequestSecurityTokenCollectionType
name|requestCollection
parameter_list|)
block|{
if|if
condition|(
name|requestCollectionOperation
operator|==
literal|null
condition|)
block|{
name|throwUnsupportedOperation
argument_list|(
literal|"RequestCollection"
argument_list|)
expr_stmt|;
block|}
return|return
name|requestCollectionOperation
operator|.
name|requestCollection
argument_list|(
name|requestCollection
argument_list|,
name|context
argument_list|)
return|;
block|}
specifier|public
name|RequestSecurityTokenResponseType
name|keyExchangeToken
parameter_list|(
name|RequestSecurityTokenType
name|request
parameter_list|)
block|{
if|if
condition|(
name|keyExchangeTokenOperation
operator|==
literal|null
condition|)
block|{
name|throwUnsupportedOperation
argument_list|(
literal|"KeyExchangeToken"
argument_list|)
expr_stmt|;
block|}
return|return
name|keyExchangeTokenOperation
operator|.
name|keyExchangeToken
argument_list|(
name|request
argument_list|,
name|context
argument_list|)
return|;
block|}
specifier|public
name|RequestSecurityTokenResponseCollectionType
name|issue
parameter_list|(
name|RequestSecurityTokenType
name|request
parameter_list|)
block|{
if|if
condition|(
name|issueOperation
operator|==
literal|null
condition|)
block|{
name|throwUnsupportedOperation
argument_list|(
literal|"Issue"
argument_list|)
expr_stmt|;
block|}
return|return
name|issueOperation
operator|.
name|issue
argument_list|(
name|request
argument_list|,
name|context
argument_list|)
return|;
block|}
specifier|public
name|RequestSecurityTokenResponseType
name|cancel
parameter_list|(
name|RequestSecurityTokenType
name|request
parameter_list|)
block|{
if|if
condition|(
name|cancelOperation
operator|==
literal|null
condition|)
block|{
name|throwUnsupportedOperation
argument_list|(
literal|"Cancel"
argument_list|)
expr_stmt|;
block|}
return|return
name|cancelOperation
operator|.
name|cancel
argument_list|(
name|request
argument_list|,
name|context
argument_list|)
return|;
block|}
specifier|public
name|RequestSecurityTokenResponseType
name|renew
parameter_list|(
name|RequestSecurityTokenType
name|request
parameter_list|)
block|{
if|if
condition|(
name|renewOperation
operator|==
literal|null
condition|)
block|{
name|throwUnsupportedOperation
argument_list|(
literal|"Renew"
argument_list|)
expr_stmt|;
block|}
return|return
name|renewOperation
operator|.
name|renew
argument_list|(
name|request
argument_list|,
name|context
argument_list|)
return|;
block|}
specifier|private
name|void
name|throwUnsupportedOperation
parameter_list|(
name|String
name|string
parameter_list|)
block|{
try|try
block|{
name|SOAPFault
name|fault
init|=
name|SAAJFactoryResolver
operator|.
name|createSOAPFactory
argument_list|(
literal|null
argument_list|)
operator|.
name|createFault
argument_list|()
decl_stmt|;
name|fault
operator|.
name|setFaultString
argument_list|(
literal|"Unsupported operation "
operator|+
name|string
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SOAPFaultException
argument_list|(
name|fault
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SOAPException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

