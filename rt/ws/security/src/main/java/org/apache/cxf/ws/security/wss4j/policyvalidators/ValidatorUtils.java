begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|wss4j
operator|.
name|policyvalidators
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|SecurityConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|wss4j
operator|.
name|CryptoCoverageUtil
operator|.
name|CoverageScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|wss4j
operator|.
name|CryptoCoverageUtil
operator|.
name|CoverageType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|SP11Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|SP12Constants
import|;
end_import

begin_comment
comment|/**  * Configure the Validators  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|ValidatorUtils
block|{
comment|// The default security policy validators
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|QName
argument_list|,
name|SecurityPolicyValidator
argument_list|>
name|DEFAULT_SECURITY_POLICY_VALIDATORS
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
static|static
block|{
name|configureTokenValidators
argument_list|()
expr_stmt|;
name|configureBindingValidators
argument_list|()
expr_stmt|;
name|configureSupportingTokenValidators
argument_list|()
expr_stmt|;
name|configurePartsValidators
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ValidatorUtils
parameter_list|()
block|{
comment|// complete
block|}
specifier|private
specifier|static
name|void
name|configureTokenValidators
parameter_list|()
block|{
name|SecurityPolicyValidator
name|validator
init|=
operator|new
name|X509TokenPolicyValidator
argument_list|()
decl_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|X509_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|X509_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|UsernameTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|USERNAME_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|USERNAME_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SamlTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SAML_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SAML_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SecurityContextTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SECURITY_CONTEXT_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SECURITY_CONTEXT_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|WSS11PolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|WSS11
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|WSS11
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|IssuedTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ISSUED_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|ISSUED_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|KerberosTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|KERBEROS_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|KERBEROS_TOKEN
argument_list|,
name|validator
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|configureBindingValidators
parameter_list|()
block|{
name|SecurityPolicyValidator
name|validator
init|=
operator|new
name|TransportBindingPolicyValidator
argument_list|()
decl_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|TRANSPORT_BINDING
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|TRANSPORT_BINDING
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SymmetricBindingPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SYMMETRIC_BINDING
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SYMMETRIC_BINDING
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|AsymmetricBindingPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ASYMMETRIC_BINDING
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|ASYMMETRIC_BINDING
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|AlgorithmSuitePolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ALGORITHM_SUITE
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|ALGORITHM_SUITE
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|LayoutPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|LAYOUT
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|LAYOUT
argument_list|,
name|validator
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|configureSupportingTokenValidators
parameter_list|()
block|{
name|SecurityPolicyValidator
name|validator
init|=
operator|new
name|ConcreteSupportingTokenPolicyValidator
argument_list|()
decl_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SignedTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SIGNED_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SIGNED_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|EndorsingTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ENDORSING_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|ENDORSING_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SignedEndorsingTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SIGNED_ENDORSING_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SIGNED_ENDORSING_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|EncryptedTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ENCRYPTED_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SignedEncryptedTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SIGNED_ENCRYPTED_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|EndorsingEncryptedTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ENDORSING_ENCRYPTED_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SignedEndorsingEncryptedTokenPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SIGNED_ENDORSING_ENCRYPTED_SUPPORTING_TOKENS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|configurePartsValidators
parameter_list|()
block|{
name|SecurityPolicyValidator
name|validator
init|=
operator|new
name|SecuredPartsPolicyValidator
argument_list|()
decl_stmt|;
operator|(
operator|(
name|SecuredPartsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageType
argument_list|(
name|CoverageType
operator|.
name|SIGNED
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SIGNED_PARTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SIGNED_PARTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SecuredPartsPolicyValidator
argument_list|()
expr_stmt|;
operator|(
operator|(
name|SecuredPartsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageType
argument_list|(
name|CoverageType
operator|.
name|ENCRYPTED
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ENCRYPTED_PARTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|ENCRYPTED_PARTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SecuredElementsPolicyValidator
argument_list|()
expr_stmt|;
operator|(
operator|(
name|SecuredElementsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageType
argument_list|(
name|CoverageType
operator|.
name|SIGNED
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|SIGNED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|SIGNED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SecuredElementsPolicyValidator
argument_list|()
expr_stmt|;
operator|(
operator|(
name|SecuredElementsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageType
argument_list|(
name|CoverageType
operator|.
name|ENCRYPTED
argument_list|)
expr_stmt|;
operator|(
operator|(
name|SecuredElementsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageScope
argument_list|(
name|CoverageScope
operator|.
name|ELEMENT
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|ENCRYPTED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|ENCRYPTED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|SecuredElementsPolicyValidator
argument_list|()
expr_stmt|;
operator|(
operator|(
name|SecuredElementsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageType
argument_list|(
name|CoverageType
operator|.
name|ENCRYPTED
argument_list|)
expr_stmt|;
operator|(
operator|(
name|SecuredElementsPolicyValidator
operator|)
name|validator
operator|)
operator|.
name|setCoverageScope
argument_list|(
name|CoverageScope
operator|.
name|CONTENT
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|CONTENT_ENCRYPTED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|CONTENT_ENCRYPTED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|RequiredPartsPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|REQUIRED_PARTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|REQUIRED_PARTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|RequiredElementsPolicyValidator
argument_list|()
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP12Constants
operator|.
name|REQUIRED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
name|DEFAULT_SECURITY_POLICY_VALIDATORS
operator|.
name|put
argument_list|(
name|SP11Constants
operator|.
name|REQUIRED_ELEMENTS
argument_list|,
name|validator
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Map
argument_list|<
name|QName
argument_list|,
name|SecurityPolicyValidator
argument_list|>
name|getSecurityPolicyValidators
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|Map
argument_list|<
name|QName
argument_list|,
name|SecurityPolicyValidator
argument_list|>
name|mapToReturn
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|DEFAULT_SECURITY_POLICY_VALIDATORS
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|QName
argument_list|,
name|SecurityPolicyValidator
argument_list|>
name|policyMap
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|message
operator|.
name|getContextualProperty
argument_list|(
name|SecurityConstants
operator|.
name|POLICY_VALIDATOR_MAP
argument_list|)
argument_list|)
decl_stmt|;
comment|// Allow overriding the default policies
if|if
condition|(
name|policyMap
operator|!=
literal|null
operator|&&
operator|!
name|policyMap
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|mapToReturn
operator|.
name|putAll
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
block|}
return|return
name|mapToReturn
return|;
block|}
block|}
end_class

end_unit

