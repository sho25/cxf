begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|policy
operator|.
name|model
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|policy
operator|.
name|SP12Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|policy
operator|.
name|SPConstants
import|;
end_import

begin_class
specifier|public
class|class
name|Wss11
extends|extends
name|Wss10
block|{
specifier|private
name|boolean
name|mustSupportRefThumbprint
decl_stmt|;
specifier|private
name|boolean
name|mustSupportRefEncryptedKey
decl_stmt|;
specifier|private
name|boolean
name|requireSignatureConfirmation
decl_stmt|;
specifier|public
name|Wss11
parameter_list|(
name|SPConstants
name|version
parameter_list|)
block|{
name|super
argument_list|(
name|version
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return Returns the mustSupportRefEncryptedKey.      */
specifier|public
name|boolean
name|isMustSupportRefEncryptedKey
parameter_list|()
block|{
return|return
name|mustSupportRefEncryptedKey
return|;
block|}
comment|/**      * @param mustSupportRefEncryptedKey The mustSupportRefEncryptedKey to set.      */
specifier|public
name|void
name|setMustSupportRefEncryptedKey
parameter_list|(
name|boolean
name|mustSupportRefEncryptedKey
parameter_list|)
block|{
name|this
operator|.
name|mustSupportRefEncryptedKey
operator|=
name|mustSupportRefEncryptedKey
expr_stmt|;
block|}
comment|/**      * @return Returns the mustSupportRefThumbprint.      */
specifier|public
name|boolean
name|isMustSupportRefThumbprint
parameter_list|()
block|{
return|return
name|mustSupportRefThumbprint
return|;
block|}
comment|/**      * @param mustSupportRefThumbprint The mustSupportRefThumbprint to set.      */
specifier|public
name|void
name|setMustSupportRefThumbprint
parameter_list|(
name|boolean
name|mustSupportRefThumbprint
parameter_list|)
block|{
name|this
operator|.
name|mustSupportRefThumbprint
operator|=
name|mustSupportRefThumbprint
expr_stmt|;
block|}
comment|/**      * @return Returns the requireSignatureConfirmation.      */
specifier|public
name|boolean
name|isRequireSignatureConfirmation
parameter_list|()
block|{
return|return
name|requireSignatureConfirmation
return|;
block|}
comment|/**      * @param requireSignatureConfirmation The requireSignatureConfirmation to set.      */
specifier|public
name|void
name|setRequireSignatureConfirmation
parameter_list|(
name|boolean
name|requireSignatureConfirmation
parameter_list|)
block|{
name|this
operator|.
name|requireSignatureConfirmation
operator|=
name|requireSignatureConfirmation
expr_stmt|;
block|}
specifier|public
name|QName
name|getRealName
parameter_list|()
block|{
return|return
name|constants
operator|.
name|getWSS11
argument_list|()
return|;
block|}
specifier|public
name|QName
name|getName
parameter_list|()
block|{
return|return
name|SP12Constants
operator|.
name|INSTANCE
operator|.
name|getWSS11
argument_list|()
return|;
block|}
specifier|public
name|void
name|serialize
parameter_list|(
name|XMLStreamWriter
name|writer
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|localname
init|=
name|getRealName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
decl_stmt|;
name|String
name|namespaceURI
init|=
name|getRealName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
name|String
name|prefix
init|=
name|writer
operator|.
name|getPrefix
argument_list|(
name|namespaceURI
argument_list|)
decl_stmt|;
if|if
condition|(
name|prefix
operator|==
literal|null
condition|)
block|{
name|prefix
operator|=
name|getRealName
argument_list|()
operator|.
name|getPrefix
argument_list|()
expr_stmt|;
name|writer
operator|.
name|setPrefix
argument_list|(
name|prefix
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
block|}
comment|//<sp:Wss11>
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|localname
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
comment|// xmlns:sp=".."
name|writer
operator|.
name|writeNamespace
argument_list|(
name|prefix
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|String
name|pPrefix
init|=
name|writer
operator|.
name|getPrefix
argument_list|(
name|SPConstants
operator|.
name|POLICY
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pPrefix
operator|==
literal|null
condition|)
block|{
name|writer
operator|.
name|setPrefix
argument_list|(
name|SPConstants
operator|.
name|POLICY
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|SPConstants
operator|.
name|POLICY
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//<wsp:Policy>
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|POLICY
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|SPConstants
operator|.
name|POLICY
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
comment|//<sp:MustSupportRefKeyIndentifier />
if|if
condition|(
name|isMustSupportRefKeyIdentifier
argument_list|()
condition|)
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|MUST_SUPPORT_REF_KEY_IDENTIFIER
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isMustSupportRefIssuerSerial
argument_list|()
condition|)
block|{
comment|//<sp:MustSupportRefIssuerSerial />
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|MUST_SUPPORT_REF_ISSUER_SERIAL
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isMustSupportRefExternalURI
argument_list|()
condition|)
block|{
comment|//<sp:MustSupportRefExternalURI />
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|MUST_SUPPORT_REF_EXTERNAL_URI
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isMustSupportRefEmbeddedToken
argument_list|()
condition|)
block|{
comment|//<sp:MustSupportRefEmbeddedToken />
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|MUST_SUPPORT_REF_EMBEDDED_TOKEN
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isMustSupportRefThumbprint
argument_list|()
condition|)
block|{
comment|//<sp:MustSupportRefThumbprint />
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|MUST_SUPPORT_REF_THUMBPRINT
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isMustSupportRefEncryptedKey
argument_list|()
condition|)
block|{
comment|//<sp:MustSupportRefEncryptedKey />
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|MUST_SUPPORT_REF_ENCRYPTED_KEY
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isRequireSignatureConfirmation
argument_list|()
condition|)
block|{
comment|//<sp:RequireSignatureConfirmation />
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|SPConstants
operator|.
name|REQUIRE_SIGNATURE_CONFIRMATION
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
comment|//</wsp:Policy>
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
comment|//</sp:Wss11>
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

