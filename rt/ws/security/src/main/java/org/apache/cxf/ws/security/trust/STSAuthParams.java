begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|trust
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_comment
comment|/**  * Authentication parameters to obtain SAML token from STS.  */
end_comment

begin_class
specifier|public
class|class
name|STSAuthParams
block|{
specifier|private
specifier|static
specifier|final
name|String
name|WS_TRUST_NS
init|=
literal|"http://docs.oasis-open.org/ws-sx/ws-trust/200512/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|KEY_TYPE_X509
init|=
name|WS_TRUST_NS
operator|+
literal|"PublicKey"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|X509_ENDPOINT
init|=
operator|new
name|QName
argument_list|(
name|WS_TRUST_NS
argument_list|,
literal|"X509_Port"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|TRANSPORT_ENDPOINT
init|=
operator|new
name|QName
argument_list|(
name|WS_TRUST_NS
argument_list|,
literal|"Transport_Port"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|UT_ENDPOINT
init|=
operator|new
name|QName
argument_list|(
name|WS_TRUST_NS
argument_list|,
literal|"UT_Port"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|AuthMode
name|authMode
decl_stmt|;
specifier|private
specifier|final
name|String
name|userName
decl_stmt|;
specifier|private
specifier|final
name|String
name|callbackHandler
decl_stmt|;
specifier|private
specifier|final
name|String
name|alias
decl_stmt|;
specifier|private
specifier|final
name|String
name|keystoreProperties
decl_stmt|;
specifier|public
name|STSAuthParams
parameter_list|(
name|AuthMode
name|authMode
parameter_list|,
name|String
name|userName
parameter_list|,
name|String
name|callbackHandler
parameter_list|)
block|{
name|this
argument_list|(
name|authMode
argument_list|,
name|userName
argument_list|,
name|callbackHandler
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|STSAuthParams
parameter_list|(
name|AuthMode
name|authMode
parameter_list|,
name|String
name|userName
parameter_list|,
name|String
name|callbackHandler
parameter_list|,
name|String
name|alias
parameter_list|,
name|String
name|keystoreProperties
parameter_list|)
block|{
name|this
operator|.
name|authMode
operator|=
name|authMode
expr_stmt|;
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
name|this
operator|.
name|callbackHandler
operator|=
name|callbackHandler
expr_stmt|;
name|this
operator|.
name|alias
operator|=
name|alias
expr_stmt|;
name|this
operator|.
name|keystoreProperties
operator|=
name|keystoreProperties
expr_stmt|;
block|}
specifier|public
name|AuthMode
name|getAuthMode
parameter_list|()
block|{
return|return
name|authMode
return|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
specifier|public
name|String
name|getCallbackHandler
parameter_list|()
block|{
return|return
name|callbackHandler
return|;
block|}
specifier|public
name|String
name|getAlias
parameter_list|()
block|{
return|return
name|alias
return|;
block|}
specifier|public
name|String
name|getKeystoreProperties
parameter_list|()
block|{
return|return
name|keystoreProperties
return|;
block|}
specifier|public
enum|enum
name|AuthMode
block|{
name|X509_ASSYMETRIC
parameter_list|(
name|X509_ENDPOINT
parameter_list|,
name|KEY_TYPE_X509
parameter_list|)
operator|,
constructor|UT_TRANSPORT(TRANSPORT_ENDPOINT
operator|,
constructor|null
block|)
enum|,
name|UT_SYMMETRIC
argument_list|(
name|UT_ENDPOINT
argument_list|,
literal|null
argument_list|)
enum|;
specifier|private
specifier|final
name|QName
name|endpointName
decl_stmt|;
specifier|private
specifier|final
name|String
name|keyType
decl_stmt|;
name|AuthMode
parameter_list|(
name|QName
name|endpointName
parameter_list|,
name|String
name|keyType
parameter_list|)
block|{
name|this
operator|.
name|endpointName
operator|=
name|endpointName
expr_stmt|;
name|this
operator|.
name|keyType
operator|=
name|keyType
expr_stmt|;
block|}
specifier|public
name|QName
name|getEndpointName
parameter_list|()
block|{
return|return
name|endpointName
return|;
block|}
specifier|public
name|String
name|getKeyType
parameter_list|()
block|{
return|return
name|keyType
return|;
block|}
block|}
end_class

unit|}
end_unit

