begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|trust
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Policy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|SPConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|AlgorithmSuite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|EncryptionToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|ProtectionToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|SignatureToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|policy
operator|.
name|model
operator|.
name|SymmetricBinding
import|;
end_import

begin_comment
comment|/**  * @author $Author$  * @version $Revision$ $Date$  */
end_comment

begin_class
specifier|public
class|class
name|DefaultSymmetricBinding
extends|extends
name|SymmetricBinding
block|{
specifier|public
name|DefaultSymmetricBinding
parameter_list|(
name|SPConstants
operator|.
name|SPVersion
name|version
parameter_list|,
name|Policy
name|nestedPolicy
parameter_list|)
block|{
name|super
argument_list|(
name|version
argument_list|,
name|nestedPolicy
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEncryptionToken
parameter_list|(
name|EncryptionToken
name|encryptionToken
parameter_list|)
block|{
name|super
operator|.
name|setEncryptionToken
argument_list|(
name|encryptionToken
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSignatureToken
parameter_list|(
name|SignatureToken
name|signatureToken
parameter_list|)
block|{
name|super
operator|.
name|setSignatureToken
argument_list|(
name|signatureToken
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setProtectionToken
parameter_list|(
name|ProtectionToken
name|protectionToken
parameter_list|)
block|{
name|super
operator|.
name|setProtectionToken
argument_list|(
name|protectionToken
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setOnlySignEntireHeadersAndBody
parameter_list|(
name|boolean
name|onlySignEntireHeadersAndBody
parameter_list|)
block|{
name|super
operator|.
name|setOnlySignEntireHeadersAndBody
argument_list|(
name|onlySignEntireHeadersAndBody
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setProtectTokens
parameter_list|(
name|boolean
name|protectTokens
parameter_list|)
block|{
name|super
operator|.
name|setProtectTokens
argument_list|(
name|protectTokens
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setIncludeTimestamp
parameter_list|(
name|boolean
name|includeTimestamp
parameter_list|)
block|{
name|super
operator|.
name|setIncludeTimestamp
argument_list|(
name|includeTimestamp
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAlgorithmSuite
parameter_list|(
name|AlgorithmSuite
name|algorithmSuite
parameter_list|)
block|{
name|super
operator|.
name|setAlgorithmSuite
argument_list|(
name|algorithmSuite
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

