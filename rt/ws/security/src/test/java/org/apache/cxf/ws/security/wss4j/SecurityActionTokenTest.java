begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|wss4j
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|ConfigurationConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|EncryptionActionToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|SignatureActionToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|WSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|WSDataRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|engine
operator|.
name|WSSecurityEngineResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|handler
operator|.
name|HandlerAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|handler
operator|.
name|WSHandlerConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|handler
operator|.
name|WSHandlerResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_comment
comment|/**  * Some tests for configuring outbound security using SecurityActionTokens.  */
end_comment

begin_class
specifier|public
class|class
name|SecurityActionTokenTest
extends|extends
name|AbstractSecurityTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testSignature
parameter_list|()
throws|throws
name|Exception
block|{
name|SignatureActionToken
name|actionToken
init|=
operator|new
name|SignatureActionToken
argument_list|()
decl_stmt|;
name|actionToken
operator|.
name|setCryptoProperties
argument_list|(
literal|"outsecurity.properties"
argument_list|)
expr_stmt|;
name|actionToken
operator|.
name|setUser
argument_list|(
literal|"myalias"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|HandlerAction
argument_list|>
name|actions
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|HandlerAction
argument_list|(
name|WSConstants
operator|.
name|SIGN
argument_list|,
name|actionToken
argument_list|)
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|outProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|outProperties
operator|.
name|put
argument_list|(
name|WSHandlerConstants
operator|.
name|HANDLER_ACTIONS
argument_list|,
name|actions
argument_list|)
expr_stmt|;
name|outProperties
operator|.
name|put
argument_list|(
name|ConfigurationConstants
operator|.
name|PW_CALLBACK_REF
argument_list|,
operator|new
name|TestPwdCallback
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|inProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|inProperties
operator|.
name|put
argument_list|(
name|ConfigurationConstants
operator|.
name|ACTION
argument_list|,
name|ConfigurationConstants
operator|.
name|SIGNATURE
argument_list|)
expr_stmt|;
name|inProperties
operator|.
name|put
argument_list|(
name|ConfigurationConstants
operator|.
name|SIG_VER_PROP_FILE
argument_list|,
literal|"insecurity.properties"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|xpaths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|xpaths
operator|.
name|add
argument_list|(
literal|"//wsse:Security"
argument_list|)
expr_stmt|;
name|xpaths
operator|.
name|add
argument_list|(
literal|"//wsse:Security/ds:Signature"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|WSHandlerResult
argument_list|>
name|handlerResults
init|=
name|getResults
argument_list|(
name|makeInvocation
argument_list|(
name|outProperties
argument_list|,
name|xpaths
argument_list|,
name|inProperties
argument_list|)
argument_list|)
decl_stmt|;
name|WSSecurityEngineResult
name|actionResult
init|=
name|handlerResults
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getActionResults
argument_list|()
operator|.
name|get
argument_list|(
name|WSConstants
operator|.
name|SIGN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|X509Certificate
name|certificate
init|=
operator|(
name|X509Certificate
operator|)
name|actionResult
operator|.
name|get
argument_list|(
name|WSSecurityEngineResult
operator|.
name|TAG_X509_CERTIFICATE
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|certificate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEncryption
parameter_list|()
throws|throws
name|Exception
block|{
name|EncryptionActionToken
name|actionToken
init|=
operator|new
name|EncryptionActionToken
argument_list|()
decl_stmt|;
name|actionToken
operator|.
name|setCryptoProperties
argument_list|(
literal|"outsecurity.properties"
argument_list|)
expr_stmt|;
name|actionToken
operator|.
name|setUser
argument_list|(
literal|"myalias"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|HandlerAction
argument_list|>
name|actions
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|HandlerAction
argument_list|(
name|WSConstants
operator|.
name|ENCR
argument_list|,
name|actionToken
argument_list|)
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|outProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|outProperties
operator|.
name|put
argument_list|(
name|WSHandlerConstants
operator|.
name|HANDLER_ACTIONS
argument_list|,
name|actions
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|inProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|inProperties
operator|.
name|put
argument_list|(
name|ConfigurationConstants
operator|.
name|ACTION
argument_list|,
name|ConfigurationConstants
operator|.
name|ENCRYPT
argument_list|)
expr_stmt|;
name|inProperties
operator|.
name|put
argument_list|(
name|ConfigurationConstants
operator|.
name|DEC_PROP_FILE
argument_list|,
literal|"insecurity.properties"
argument_list|)
expr_stmt|;
name|inProperties
operator|.
name|put
argument_list|(
name|ConfigurationConstants
operator|.
name|PW_CALLBACK_REF
argument_list|,
operator|new
name|TestPwdCallback
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|xpaths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|xpaths
operator|.
name|add
argument_list|(
literal|"//wsse:Security"
argument_list|)
expr_stmt|;
name|xpaths
operator|.
name|add
argument_list|(
literal|"//s:Body/xenc:EncryptedData"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|WSHandlerResult
argument_list|>
name|handlerResults
init|=
name|getResults
argument_list|(
name|makeInvocation
argument_list|(
name|outProperties
argument_list|,
name|xpaths
argument_list|,
name|inProperties
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|handlerResults
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|handlerResults
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//
comment|// This should contain exactly 1 protection result
comment|//
specifier|final
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|WSSecurityEngineResult
argument_list|>
name|protectionResults
init|=
name|handlerResults
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getResults
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|protectionResults
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|protectionResults
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//
comment|// This result should contain a reference to the decrypted element,
comment|// which should contain the soap:Body Qname
comment|//
specifier|final
name|java
operator|.
name|util
operator|.
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|result
init|=
name|protectionResults
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|final
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|WSDataRef
argument_list|>
name|protectedElements
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|result
operator|.
name|get
argument_list|(
name|WSSecurityEngineResult
operator|.
name|TAG_DATA_REF_URIS
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|protectedElements
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|protectedElements
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|protectedElements
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
argument_list|(
literal|"http://schemas.xmlsoap.org/soap/envelope/"
argument_list|,
literal|"Body"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|WSHandlerResult
argument_list|>
name|getResults
parameter_list|(
name|SoapMessage
name|inmsg
parameter_list|)
block|{
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|inmsg
operator|.
name|get
argument_list|(
name|WSHandlerConstants
operator|.
name|RECV_RESULTS
argument_list|)
argument_list|)
return|;
block|}
comment|// FOR DEBUGGING ONLY
comment|/*private*/
specifier|static
name|String
name|serialize
parameter_list|(
name|Document
name|doc
parameter_list|)
block|{
return|return
name|StaxUtils
operator|.
name|toString
argument_list|(
name|doc
argument_list|)
return|;
block|}
block|}
end_class

end_unit

