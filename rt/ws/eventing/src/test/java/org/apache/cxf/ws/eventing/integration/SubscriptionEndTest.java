begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|AttributedURIType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|ReferenceParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|DeliveryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|ObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|Subscribe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|SubscribeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|notification
operator|.
name|NotificatorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|notification
operator|.
name|SubscriptionEndStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|base
operator|.
name|SimpleEventingIntegrationTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|base
operator|.
name|SingletonSubscriptionManagerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|base
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|eventsink
operator|.
name|TestingEndToEndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|SubscriptionEndTest
extends|extends
name|SimpleEventingIntegrationTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|doTest
parameter_list|()
throws|throws
name|IOException
block|{
name|NotificatorService
name|service
init|=
name|createNotificatorService
argument_list|()
decl_stmt|;
name|service
operator|.
name|start
argument_list|()
expr_stmt|;
name|Subscribe
name|subscribe
init|=
operator|new
name|Subscribe
argument_list|()
decl_stmt|;
name|EndpointReferenceType
name|eventSinkERT
init|=
operator|new
name|EndpointReferenceType
argument_list|()
decl_stmt|;
name|AttributedURIType
name|eventSinkAddr
init|=
operator|new
name|AttributedURIType
argument_list|()
decl_stmt|;
name|String
name|eventSinkURL
init|=
name|TestUtil
operator|.
name|generateRandomURLWithLocalTransport
argument_list|()
decl_stmt|;
name|eventSinkAddr
operator|.
name|setValue
argument_list|(
name|eventSinkURL
argument_list|)
expr_stmt|;
name|eventSinkERT
operator|.
name|setAddress
argument_list|(
name|eventSinkAddr
argument_list|)
expr_stmt|;
name|subscribe
operator|.
name|setDelivery
argument_list|(
operator|new
name|DeliveryType
argument_list|()
argument_list|)
expr_stmt|;
name|subscribe
operator|.
name|getDelivery
argument_list|()
operator|.
name|getContent
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|ObjectFactory
argument_list|()
operator|.
name|createNotifyTo
argument_list|(
name|eventSinkERT
argument_list|)
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|String
argument_list|>
name|idqn
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://www.example.org"
argument_list|,
literal|"MyReferenceParameter"
argument_list|)
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|"380"
argument_list|)
decl_stmt|;
name|ReferenceParametersType
name|myParams
init|=
operator|new
name|ReferenceParametersType
argument_list|()
decl_stmt|;
name|myParams
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
name|idqn
argument_list|)
expr_stmt|;
name|eventSinkERT
operator|.
name|setReferenceParameters
argument_list|(
name|myParams
argument_list|)
expr_stmt|;
name|EndpointReferenceType
name|endToERT
init|=
operator|new
name|EndpointReferenceType
argument_list|()
decl_stmt|;
name|AttributedURIType
name|endToAddr
init|=
operator|new
name|AttributedURIType
argument_list|()
decl_stmt|;
name|String
name|endToURL
init|=
name|TestUtil
operator|.
name|generateRandomURLWithLocalTransport
argument_list|()
decl_stmt|;
name|endToAddr
operator|.
name|setValue
argument_list|(
name|endToURL
argument_list|)
expr_stmt|;
name|endToERT
operator|.
name|setAddress
argument_list|(
name|endToAddr
argument_list|)
expr_stmt|;
name|subscribe
operator|.
name|setEndTo
argument_list|(
name|endToERT
argument_list|)
expr_stmt|;
name|SubscribeResponse
name|response
init|=
name|eventSourceClient
operator|.
name|subscribeOp
argument_list|(
name|subscribe
argument_list|)
decl_stmt|;
name|Element
name|referenceParams
init|=
operator|(
name|Element
operator|)
name|response
operator|.
name|getSubscriptionManager
argument_list|()
operator|.
name|getReferenceParameters
argument_list|()
operator|.
name|getAny
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Server
name|endToEndpoint
init|=
name|createEndToEndpointWithReferenceParametersAssertion
argument_list|(
name|endToURL
argument_list|,
name|myParams
argument_list|)
decl_stmt|;
name|TestingEndToEndpointImpl
operator|.
name|RECEIVED_ENDS
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|SingletonSubscriptionManagerContainer
operator|.
name|getInstance
argument_list|()
operator|.
name|subscriptionEnd
argument_list|(
name|UUID
operator|.
name|fromString
argument_list|(
name|referenceParams
operator|.
name|getTextContent
argument_list|()
argument_list|)
argument_list|,
literal|"Sorry, "
operator|+
literal|"but we don't like you anymore"
argument_list|,
name|SubscriptionEndStatus
operator|.
name|SOURCE_CANCELLING
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|TestingEndToEndpointImpl
operator|.
name|RECEIVED_ENDS
operator|.
name|get
argument_list|()
operator|==
literal|1
condition|)
block|{
break|break;
block|}
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|endToEndpoint
operator|.
name|stop
argument_list|()
expr_stmt|;
if|if
condition|(
name|TestingEndToEndpointImpl
operator|.
name|RECEIVED_ENDS
operator|.
name|get
argument_list|()
operator|!=
literal|1
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"TestingEndToEndpointImpl should have received 1 subscription end notification but received "
operator|+
name|TestingEndToEndpointImpl
operator|.
name|RECEIVED_ENDS
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

