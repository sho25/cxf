begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|base
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|local
operator|.
name|LocalTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|AttributedURIType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|EndpointReferenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|NotifyTo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|ReferenceParametersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|database
operator|.
name|SubscriptionTicket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|manager
operator|.
name|SubscriptionManagerInterfaceForNotificators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|notification
operator|.
name|EventSinkInterfaceNotificatorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|notification
operator|.
name|NotificatorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|base
operator|.
name|services
operator|.
name|TestingEventSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|base
operator|.
name|services
operator|.
name|TestingSubscriptionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|eventsource
operator|.
name|EventSourceEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|eventsink
operator|.
name|TestingEndToEndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|eventsink
operator|.
name|TestingEventSinkImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|eventsink
operator|.
name|TestingWrappedEventSinkImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|notificationapi
operator|.
name|CatastrophicEventSink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|notificationapi
operator|.
name|assertions
operator|.
name|ReferenceParametersAssertingHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|integration
operator|.
name|notificationapi
operator|.
name|assertions
operator|.
name|WSAActionAssertingHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|manager
operator|.
name|SubscriptionManagerEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|shared
operator|.
name|EventingConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|shared
operator|.
name|handlers
operator|.
name|ReferenceParametersAddingHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_comment
comment|/**  * Prepared class for simple development of integration tests for WS-Eventing. Extend it and you will get:  * - Event Source web service available at local://SimpleEventSource  * - Subscription Manager web service available at local://SimpleSubscriptionManager  * - These two services are connected together, using an IN-VM backend/database instance  * - JAX-WS client for the Event Source [the eventSourceClient property]  * - ability to create a JAX-WS client for the Subscription Manager (the createSubscriptionManagerClient method)  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|SimpleEventingIntegrationTest
block|{
specifier|public
specifier|static
specifier|final
name|String
name|URL_EVENT_SOURCE
init|=
literal|"local://SimpleEventSource"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|URL_SUBSCRIPTION_MANAGER
init|=
literal|"local://SimpleSubscriptionManager"
decl_stmt|;
specifier|static
name|Server
name|eventSource
decl_stmt|;
specifier|static
name|Server
name|subscriptionManager
decl_stmt|;
specifier|protected
name|EventSourceEndpoint
name|eventSourceClient
decl_stmt|;
specifier|protected
name|NotificatorService
name|createNotificatorService
parameter_list|()
block|{
return|return
operator|new
name|EventSinkInterfaceNotificatorService
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|SubscriptionManagerInterfaceForNotificators
name|obtainManager
parameter_list|()
block|{
return|return
name|SingletonSubscriptionManagerContainer
operator|.
name|getInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|getEventSinkInterface
parameter_list|()
block|{
return|return
name|CatastrophicEventSink
operator|.
name|class
return|;
block|}
block|}
return|;
block|}
specifier|protected
name|Server
name|createEndToEndpoint
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingEndToEndpointImpl
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|WSAActionAssertingHandler
argument_list|(
name|EventingConstants
operator|.
name|ACTION_SUBSCRIPTION_END
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|Server
name|createEndToEndpointWithReferenceParametersAssertion
parameter_list|(
name|String
name|address
parameter_list|,
name|ReferenceParametersType
name|params
parameter_list|)
block|{
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingEndToEndpointImpl
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|ReferenceParametersAssertingHandler
argument_list|(
name|params
argument_list|)
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|WSAActionAssertingHandler
argument_list|(
name|EventingConstants
operator|.
name|ACTION_SUBSCRIPTION_END
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|Server
name|createEventSink
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingEventSinkImpl
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|Server
name|createWrappedEventSink
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingWrappedEventSinkImpl
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|Server
name|createEventSinkWithWSAActionAssertion
parameter_list|(
name|String
name|address
parameter_list|,
name|String
name|action
parameter_list|)
block|{
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingEventSinkImpl
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|WSAActionAssertingHandler
argument_list|(
name|action
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|Server
name|createEventSinkWithReferenceParametersAssertion
parameter_list|(
name|String
name|address
parameter_list|,
name|ReferenceParametersType
name|params
parameter_list|)
block|{
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingEventSinkImpl
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|ReferenceParametersAssertingHandler
argument_list|(
name|params
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
comment|/**      * Prepares the Event Source and Subscription Manager services      */
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create and publish event source
name|JaxWsServerFactoryBean
name|factory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingEventSource
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|URL_EVENT_SOURCE
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setTransportId
argument_list|(
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|)
expr_stmt|;
name|eventSource
operator|=
name|factory
operator|.
name|create
argument_list|()
expr_stmt|;
comment|// create and publish subscription manager
name|factory
operator|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
expr_stmt|;
name|factory
operator|.
name|setServiceBean
argument_list|(
operator|new
name|TestingSubscriptionManager
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|URL_SUBSCRIPTION_MANAGER
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setTransportId
argument_list|(
name|LocalTransportFactory
operator|.
name|TRANSPORT_ID
argument_list|)
expr_stmt|;
name|subscriptionManager
operator|=
name|factory
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownAfterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|eventSource
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|subscriptionManager
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|createClient
parameter_list|()
block|{
name|JaxWsProxyFactoryBean
name|factory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setServiceClass
argument_list|(
name|EventSourceEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|URL_EVENT_SOURCE
argument_list|)
expr_stmt|;
name|eventSourceClient
operator|=
operator|(
name|EventSourceEndpoint
operator|)
name|factory
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
block|{
comment|// remove all subscriptions from the database
for|for
control|(
name|SubscriptionTicket
name|ticket
range|:
name|SingletonSubscriptionManagerContainer
operator|.
name|getInstance
argument_list|()
operator|.
name|getTickets
argument_list|()
control|)
block|{
name|SingletonSubscriptionManagerContainer
operator|.
name|getInstance
argument_list|()
operator|.
name|unsubscribeTicket
argument_list|(
name|ticket
operator|.
name|getUuid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Convenience method to create a client for the testing Subscription Manager      * which is located at local://SimpleSubscriptionManager.      * You have to specify the reference parameters you obtained from the Event Source      * when your subscription was created.      *      * @return a JAX-WS client set up for managing the subscription you had created using the Event Source      */
specifier|public
name|SubscriptionManagerEndpoint
name|createSubscriptionManagerClient
parameter_list|(
name|ReferenceParametersType
name|refs
parameter_list|)
block|{
name|JaxWsProxyFactoryBean
name|factory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setServiceClass
argument_list|(
name|SubscriptionManagerEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
name|URL_SUBSCRIPTION_MANAGER
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|ReferenceParametersAddingHandler
name|handler
init|=
operator|new
name|ReferenceParametersAddingHandler
argument_list|(
name|refs
argument_list|)
decl_stmt|;
name|factory
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
name|handler
argument_list|)
expr_stmt|;
return|return
operator|(
name|SubscriptionManagerEndpoint
operator|)
name|factory
operator|.
name|create
argument_list|()
return|;
block|}
specifier|protected
name|NotifyTo
name|createDummyNotifyTo
parameter_list|()
block|{
name|NotifyTo
name|ret
init|=
operator|new
name|NotifyTo
argument_list|()
decl_stmt|;
name|EndpointReferenceType
name|eventSinkERT
init|=
operator|new
name|EndpointReferenceType
argument_list|()
decl_stmt|;
name|AttributedURIType
name|eventSinkAddr
init|=
operator|new
name|AttributedURIType
argument_list|()
decl_stmt|;
name|eventSinkAddr
operator|.
name|setValue
argument_list|(
literal|"local://dummy-sink"
argument_list|)
expr_stmt|;
name|eventSinkERT
operator|.
name|setAddress
argument_list|(
name|eventSinkAddr
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setValue
argument_list|(
name|eventSinkERT
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|protected
specifier|static
name|String
name|allocatePort
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|cls
argument_list|)
return|;
block|}
block|}
end_class

end_unit

