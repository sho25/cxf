begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|eventsource
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|Subscribe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|SubscribeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|manager
operator|.
name|SubscriptionManagerInterfaceForEventSources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|manager
operator|.
name|SubscriptionTicketGrantingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|shared
operator|.
name|utils
operator|.
name|DurationAndDateUtil
import|;
end_import

begin_comment
comment|/**  * Default implementation of Event Source web service.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractEventSource
implements|implements
name|EventSourceEndpoint
block|{
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|AbstractEventSource
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Resource
specifier|protected
name|WebServiceContext
name|context
decl_stmt|;
specifier|public
name|AbstractEventSource
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|SubscribeResponse
name|subscribeOp
parameter_list|(
name|Subscribe
name|body
parameter_list|)
block|{
name|SubscriptionTicketGrantingResponse
name|databaseResponse
init|=
name|getSubscriptionManagerBackend
argument_list|()
operator|.
name|subscribe
argument_list|(
name|body
operator|.
name|getDelivery
argument_list|()
argument_list|,
name|body
operator|.
name|getEndTo
argument_list|()
argument_list|,
name|body
operator|.
name|getExpires
argument_list|()
argument_list|,
name|body
operator|.
name|getFilter
argument_list|()
argument_list|,
name|body
operator|.
name|getFormat
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|shouldConvertToDuration
decl_stmt|;
if|if
condition|(
name|body
operator|.
name|getExpires
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|shouldConvertToDuration
operator|=
name|DurationAndDateUtil
operator|.
name|isDuration
argument_list|(
name|body
operator|.
name|getExpires
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|shouldConvertToDuration
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|generateResponseMessageFor
argument_list|(
name|databaseResponse
argument_list|,
name|shouldConvertToDuration
argument_list|)
return|;
block|}
specifier|protected
specifier|abstract
name|SubscriptionManagerInterfaceForEventSources
name|getSubscriptionManagerBackend
parameter_list|()
function_decl|;
specifier|protected
name|SubscribeResponse
name|generateResponseMessageFor
parameter_list|(
name|SubscriptionTicketGrantingResponse
name|dbResponse
parameter_list|,
name|boolean
name|shouldConvertToDuration
parameter_list|)
block|{
name|SubscribeResponse
name|ret
init|=
operator|new
name|SubscribeResponse
argument_list|()
decl_stmt|;
comment|// SubscriptionManager part
name|ret
operator|.
name|setSubscriptionManager
argument_list|(
name|dbResponse
operator|.
name|getSubscriptionManagerReference
argument_list|()
argument_list|)
expr_stmt|;
comment|// Expires part
if|if
condition|(
name|shouldConvertToDuration
condition|)
block|{
name|ret
operator|.
name|setGrantedExpires
argument_list|(
name|DurationAndDateUtil
operator|.
name|toExpirationTypeContainingDuration
argument_list|(
name|dbResponse
operator|.
name|getExpires
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|.
name|setGrantedExpires
argument_list|(
name|DurationAndDateUtil
operator|.
name|toExpirationTypeContainingGregorianCalendar
argument_list|(
name|dbResponse
operator|.
name|getExpires
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

