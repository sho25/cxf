begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|notification
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|LanguageSpecificStringType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|SubscriptionEnd
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|backend
operator|.
name|database
operator|.
name|SubscriptionTicket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|client
operator|.
name|EndToEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|eventing
operator|.
name|shared
operator|.
name|handlers
operator|.
name|ReferenceParametersAddingHandler
import|;
end_import

begin_class
specifier|public
class|class
name|SubscriptionEndNotificationTask
implements|implements
name|Runnable
block|{
specifier|private
name|SubscriptionTicket
name|target
decl_stmt|;
specifier|private
name|String
name|reason
decl_stmt|;
specifier|private
name|SubscriptionEndStatus
name|status
decl_stmt|;
specifier|public
name|SubscriptionEndNotificationTask
parameter_list|(
name|SubscriptionTicket
name|ticket
parameter_list|,
name|String
name|reason
parameter_list|,
name|SubscriptionEndStatus
name|status
parameter_list|)
block|{
name|this
operator|.
name|target
operator|=
name|ticket
expr_stmt|;
name|this
operator|.
name|reason
operator|=
name|reason
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
comment|// needed SOAP handlers
name|ReferenceParametersAddingHandler
name|handler
init|=
operator|new
name|ReferenceParametersAddingHandler
argument_list|(
name|target
operator|.
name|getNotificationReferenceParams
argument_list|()
argument_list|)
decl_stmt|;
name|JaxWsProxyFactoryBean
name|service
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|service
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|service
operator|.
name|setServiceClass
argument_list|(
name|EndToEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
name|service
operator|.
name|setAddress
argument_list|(
name|target
operator|.
name|getEndToURL
argument_list|()
argument_list|)
expr_stmt|;
name|service
operator|.
name|getHandlers
argument_list|()
operator|.
name|add
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|EndToEndpoint
name|endpoint
init|=
operator|(
name|EndToEndpoint
operator|)
name|service
operator|.
name|create
argument_list|()
decl_stmt|;
name|SubscriptionEnd
name|message
init|=
operator|new
name|SubscriptionEnd
argument_list|()
decl_stmt|;
name|message
operator|.
name|setStatus
argument_list|(
name|status
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|reason
operator|!=
literal|null
condition|)
block|{
name|LanguageSpecificStringType
name|reasonElement
init|=
operator|new
name|LanguageSpecificStringType
argument_list|()
decl_stmt|;
name|reasonElement
operator|.
name|setLang
argument_list|(
literal|"en-US"
argument_list|)
expr_stmt|;
name|reasonElement
operator|.
name|setValue
argument_list|(
name|reason
argument_list|)
expr_stmt|;
name|message
operator|.
name|getReason
argument_list|()
operator|.
name|add
argument_list|(
name|reasonElement
argument_list|)
expr_stmt|;
block|}
name|endpoint
operator|.
name|subscriptionEnd
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

