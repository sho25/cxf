begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rt
operator|.
name|security
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CXFMessageParserTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testSOAPResource
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|operation
init|=
literal|"{http://www.example.org/contract/DoubleIt}DoubleIt"
decl_stmt|;
name|MessageImpl
name|msg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|WSDL_OPERATION
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|CXFMessageParser
name|messageParser
init|=
operator|new
name|CXFMessageParser
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|assertSingleElement
argument_list|(
name|operation
argument_list|,
name|messageParser
operator|.
name|getResources
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSOAPResourceWithRequestURI
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|operation
init|=
literal|"{http://www.example.org/contract/DoubleIt}DoubleIt"
decl_stmt|;
name|MessageImpl
name|msg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|WSDL_OPERATION
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
literal|"/doubleIt"
argument_list|)
expr_stmt|;
name|CXFMessageParser
name|messageParser
init|=
operator|new
name|CXFMessageParser
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|messageParser
operator|.
name|getResources
argument_list|(
literal|false
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRelativeRestResource
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|operation
init|=
literal|"user/list.json"
decl_stmt|;
name|MessageImpl
name|msg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URI
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|CXFMessageParser
name|messageParser
init|=
operator|new
name|CXFMessageParser
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|assertSingleElement
argument_list|(
name|operation
argument_list|,
name|messageParser
operator|.
name|getResources
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAbsoluteRestResource
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|operation
init|=
literal|"https://localhost:8080/user/list.json"
decl_stmt|;
name|MessageImpl
name|msg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|msg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|REQUEST_URL
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|CXFMessageParser
name|messageParser
init|=
operator|new
name|CXFMessageParser
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|assertSingleElement
argument_list|(
name|operation
argument_list|,
name|messageParser
operator|.
name|getResources
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertSingleElement
parameter_list|(
name|String
name|content
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|strings
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|strings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|content
argument_list|,
name|strings
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

