begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rt
operator|.
name|security
operator|.
name|claims
package|;
end_package

begin_comment
comment|/**  * This represents a Claim that is coupled to a SAML Assertion  */
end_comment

begin_class
specifier|public
class|class
name|SAMLClaim
extends|extends
name|Claim
block|{
comment|/**      * This configuration tag specifies the default attribute name where the roles are present      * The default is "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/role".      */
specifier|public
specifier|static
specifier|final
name|String
name|SAML_ROLE_ATTRIBUTENAME_DEFAULT
init|=
literal|"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/role"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5530712294179589442L
decl_stmt|;
specifier|private
name|String
name|nameFormat
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|friendlyName
decl_stmt|;
specifier|public
name|String
name|getNameFormat
parameter_list|()
block|{
return|return
name|nameFormat
return|;
block|}
specifier|public
name|void
name|setNameFormat
parameter_list|(
name|String
name|nameFormat
parameter_list|)
block|{
name|this
operator|.
name|nameFormat
operator|=
name|nameFormat
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getFriendlyName
parameter_list|()
block|{
return|return
name|friendlyName
return|;
block|}
specifier|public
name|void
name|setFriendlyName
parameter_list|(
name|String
name|friendlyName
parameter_list|)
block|{
name|this
operator|.
name|friendlyName
operator|=
name|friendlyName
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|hashCode
init|=
name|super
operator|.
name|hashCode
argument_list|()
decl_stmt|;
if|if
condition|(
name|nameFormat
operator|!=
literal|null
condition|)
block|{
name|hashCode
operator|=
literal|31
operator|*
name|hashCode
operator|+
name|nameFormat
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|hashCode
operator|=
literal|31
operator|*
name|hashCode
operator|+
name|name
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|friendlyName
operator|!=
literal|null
condition|)
block|{
name|hashCode
operator|=
literal|31
operator|*
name|hashCode
operator|+
name|friendlyName
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
return|return
name|hashCode
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|SAMLClaim
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|nameFormat
operator|==
literal|null
operator|&&
operator|(
operator|(
name|SAMLClaim
operator|)
name|obj
operator|)
operator|.
name|getNameFormat
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
name|nameFormat
operator|!=
literal|null
operator|&&
operator|!
name|nameFormat
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|SAMLClaim
operator|)
name|obj
operator|)
operator|.
name|getNameFormat
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|name
operator|==
literal|null
operator|&&
operator|(
operator|(
name|SAMLClaim
operator|)
name|obj
operator|)
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|!=
literal|null
operator|&&
operator|!
name|name
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|SAMLClaim
operator|)
name|obj
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|friendlyName
operator|==
literal|null
operator|&&
operator|(
operator|(
name|SAMLClaim
operator|)
name|obj
operator|)
operator|.
name|getFriendlyName
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
name|friendlyName
operator|!=
literal|null
operator|&&
operator|!
name|friendlyName
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|SAMLClaim
operator|)
name|obj
operator|)
operator|.
name|getFriendlyName
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

