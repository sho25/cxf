begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|commands
package|;
end_package

begin_class
specifier|public
class|class
name|TestCommand
block|{
specifier|private
name|int
name|result
decl_stmt|;
specifier|private
name|int
name|duration
decl_stmt|;
specifier|private
name|String
name|err
decl_stmt|;
specifier|private
name|String
name|out
decl_stmt|;
specifier|public
name|TestCommand
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|args
operator|.
name|length
condition|)
block|{
if|if
condition|(
literal|"-duration"
operator|.
name|equals
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
operator|&&
name|i
operator|<
operator|(
name|args
operator|.
name|length
operator|-
literal|1
operator|)
condition|)
block|{
name|i
operator|++
expr_stmt|;
try|try
block|{
name|duration
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|ex
parameter_list|)
block|{
comment|// leave at default
block|}
block|}
elseif|else
if|if
condition|(
literal|"-result"
operator|.
name|equals
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
operator|&&
name|i
operator|<
operator|(
name|args
operator|.
name|length
operator|-
literal|1
operator|)
condition|)
block|{
name|i
operator|++
expr_stmt|;
try|try
block|{
name|result
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|ex
parameter_list|)
block|{
comment|// leave at default
block|}
block|}
elseif|else
if|if
condition|(
literal|"-err"
operator|.
name|equals
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
operator|&&
name|i
operator|<
operator|(
name|args
operator|.
name|length
operator|-
literal|1
operator|)
condition|)
block|{
name|i
operator|++
expr_stmt|;
name|err
operator|=
name|args
index|[
name|i
index|]
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"-out"
operator|.
name|equals
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
operator|&&
name|i
operator|<
operator|(
name|args
operator|.
name|length
operator|-
literal|1
operator|)
condition|)
block|{
name|i
operator|++
expr_stmt|;
name|out
operator|=
name|args
index|[
name|i
index|]
expr_stmt|;
block|}
else|else
block|{
name|result
operator|=
operator|-
literal|1
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Usage: TestCommand [-duration<duration>] [-result<result>]"
operator|+
literal|"                   [-out<out>] [-err<err>]"
argument_list|)
expr_stmt|;
break|break;
block|}
name|i
operator|++
expr_stmt|;
block|}
block|}
name|void
name|execute
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|!=
name|out
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|err
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|duration
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ex
parameter_list|)
block|{
comment|// ignore
block|}
name|System
operator|.
name|exit
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|TestCommand
name|tc
init|=
operator|new
name|TestCommand
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|tc
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

