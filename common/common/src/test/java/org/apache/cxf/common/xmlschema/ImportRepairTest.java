begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|xmlschema
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|XMLConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|DOMError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|DOMErrorHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|bootstrap
operator|.
name|DOMImplementationRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|ls
operator|.
name|LSInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|ls
operator|.
name|LSResourceResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaComplexContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaComplexContentExtension
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaComplexContentRestriction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaComplexType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSerializer
operator|.
name|XmlSchemaSerializerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSimpleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSimpleTypeRestriction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|utils
operator|.
name|NamespaceMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xs
operator|.
name|LSInputList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xs
operator|.
name|XSImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xs
operator|.
name|XSLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|ImportRepairTest
extends|extends
name|Assert
block|{
specifier|private
specifier|static
specifier|final
class|class
name|ListLSInput
implements|implements
name|LSInputList
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|DOMLSInput
argument_list|>
name|inputs
decl_stmt|;
specifier|private
name|ListLSInput
parameter_list|(
name|List
argument_list|<
name|DOMLSInput
argument_list|>
name|inputs
parameter_list|)
block|{
name|this
operator|.
name|inputs
operator|=
name|inputs
expr_stmt|;
block|}
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|inputs
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|LSInput
name|item
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|inputs
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|ImportRepairTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IMPORTING_SCHEMA
init|=
literal|"urn:importing"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BASE_TYPE_SCHEMA1
init|=
literal|"urn:baseType1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BASE_TYPE_SCHEMA2
init|=
literal|"urn:baseType2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ELEMENT_TYPE_SCHEMA
init|=
literal|"urn:elementType"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ELEMENT_SCHEMA
init|=
literal|"urn:element"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ATTRIBUTE_SCHEMA
init|=
literal|"urn:attribute"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ATTRIBUTE_TYPE_SCHEMA
init|=
literal|"urn:attributeType"
decl_stmt|;
specifier|private
name|SchemaCollection
name|collection
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testImportRepairs
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.vendor"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"IBM"
argument_list|)
condition|)
block|{
comment|//the version of xerces built into IBM jdk won't work
comment|//and we cannot get a good version unless we endorse it
return|return;
block|}
name|collection
operator|=
operator|new
name|SchemaCollection
argument_list|()
expr_stmt|;
name|XmlSchema
name|importingSchema
init|=
name|newSchema
argument_list|(
name|IMPORTING_SCHEMA
argument_list|)
decl_stmt|;
name|XmlSchema
name|baseTypeSchema1
init|=
name|newSchema
argument_list|(
name|BASE_TYPE_SCHEMA1
argument_list|)
decl_stmt|;
name|XmlSchema
name|baseTypeSchema2
init|=
name|newSchema
argument_list|(
name|BASE_TYPE_SCHEMA2
argument_list|)
decl_stmt|;
name|XmlSchema
name|elementTypeSchema
init|=
name|newSchema
argument_list|(
name|ELEMENT_TYPE_SCHEMA
argument_list|)
decl_stmt|;
name|XmlSchema
name|elementSchema
init|=
name|newSchema
argument_list|(
name|ELEMENT_SCHEMA
argument_list|)
decl_stmt|;
name|XmlSchema
name|attributeSchema
init|=
name|newSchema
argument_list|(
name|ATTRIBUTE_SCHEMA
argument_list|)
decl_stmt|;
name|XmlSchema
name|attributeTypeSchema
init|=
name|newSchema
argument_list|(
name|ATTRIBUTE_TYPE_SCHEMA
argument_list|)
decl_stmt|;
name|createBaseType1
argument_list|(
name|baseTypeSchema1
argument_list|)
expr_stmt|;
name|createBaseType2
argument_list|(
name|baseTypeSchema2
argument_list|)
expr_stmt|;
name|XmlSchemaComplexContentExtension
name|derivedType1Extension
init|=
name|createDerivedType1
argument_list|(
name|importingSchema
argument_list|)
decl_stmt|;
name|createDerivedType2
argument_list|(
name|importingSchema
argument_list|)
expr_stmt|;
name|createImportedElement
argument_list|(
name|elementSchema
argument_list|)
expr_stmt|;
name|createTypeImportingElement
argument_list|(
name|importingSchema
argument_list|)
expr_stmt|;
name|createTypeImportedByElement
argument_list|(
name|elementTypeSchema
argument_list|)
expr_stmt|;
name|createElementWithImportedType
argument_list|(
name|importingSchema
argument_list|)
expr_stmt|;
name|createImportedAttribute
argument_list|(
name|attributeSchema
argument_list|)
expr_stmt|;
name|XmlSchemaAttribute
name|importingAttribute
init|=
operator|new
name|XmlSchemaAttribute
argument_list|(
name|importingSchema
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|importingAttribute
operator|.
name|getRef
argument_list|()
operator|.
name|setTargetQName
argument_list|(
operator|new
name|QName
argument_list|(
name|ATTRIBUTE_SCHEMA
argument_list|,
literal|"imported"
argument_list|)
argument_list|)
expr_stmt|;
comment|// borrow derivedType1 to make the reference.
name|derivedType1Extension
operator|.
name|getAttributes
argument_list|()
operator|.
name|add
argument_list|(
name|importingAttribute
argument_list|)
expr_stmt|;
name|createImportedAttributeType
argument_list|(
name|attributeTypeSchema
argument_list|)
expr_stmt|;
name|createAttributeImportingType
argument_list|(
name|importingSchema
argument_list|)
expr_stmt|;
comment|/*          * Notice that no imports have been added. In an ideal world, XmlSchema would do this for us.          */
try|try
block|{
name|tryToParseSchemas
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expected an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DOMErrorException
name|e
parameter_list|)
block|{
comment|//ignore, expected
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"adding imports"
argument_list|)
expr_stmt|;
name|collection
operator|.
name|addCrossImports
argument_list|()
expr_stmt|;
name|tryToParseSchemas
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|tryToParseSchemas
parameter_list|()
throws|throws
name|ClassNotFoundException
throws|,
name|InstantiationException
throws|,
name|IllegalAccessException
throws|,
name|XmlSchemaSerializerException
throws|,
name|TransformerException
block|{
comment|// Get DOM Implementation using DOM Registry
specifier|final
name|List
argument_list|<
name|DOMLSInput
argument_list|>
name|inputs
init|=
operator|new
name|ArrayList
argument_list|<
name|DOMLSInput
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|LSInput
argument_list|>
name|resolverMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|LSInput
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|XmlSchema
name|schema
range|:
name|collection
operator|.
name|getXmlSchemas
argument_list|()
control|)
block|{
if|if
condition|(
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
operator|.
name|equals
argument_list|(
name|schema
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|Document
name|document
init|=
operator|new
name|XmlSchemaSerializer
argument_list|()
operator|.
name|serializeSchema
argument_list|(
name|schema
argument_list|,
literal|false
argument_list|)
index|[
literal|0
index|]
decl_stmt|;
name|DOMLSInput
name|input
init|=
operator|new
name|DOMLSInput
argument_list|(
name|document
argument_list|,
name|schema
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
decl_stmt|;
name|resolverMap
operator|.
name|put
argument_list|(
name|schema
operator|.
name|getTargetNamespace
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|inputs
operator|.
name|add
argument_list|(
name|input
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|setProperty
argument_list|(
name|DOMImplementationRegistry
operator|.
name|PROPERTY
argument_list|,
literal|"org.apache.xerces.dom.DOMXSImplementationSourceImpl"
argument_list|)
expr_stmt|;
name|DOMImplementationRegistry
name|registry
init|=
name|DOMImplementationRegistry
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|XSImplementation
name|impl
init|=
operator|(
name|XSImplementation
operator|)
name|registry
operator|.
name|getDOMImplementation
argument_list|(
literal|"XS-Loader"
argument_list|)
decl_stmt|;
name|XSLoader
name|schemaLoader
init|=
name|impl
operator|.
name|createXSLoader
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|schemaLoader
operator|.
name|getConfig
argument_list|()
operator|.
name|setParameter
argument_list|(
literal|"validate"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|schemaLoader
operator|.
name|getConfig
argument_list|()
operator|.
name|setParameter
argument_list|(
literal|"error-handler"
argument_list|,
operator|new
name|DOMErrorHandler
argument_list|()
block|{
specifier|public
name|boolean
name|handleError
parameter_list|(
name|DOMError
name|error
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Schema parsing error: "
operator|+
name|error
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|DOMErrorException
argument_list|(
name|error
argument_list|)
throw|;
block|}
block|}
argument_list|)
expr_stmt|;
name|schemaLoader
operator|.
name|getConfig
argument_list|()
operator|.
name|setParameter
argument_list|(
literal|"resource-resolver"
argument_list|,
operator|new
name|LSResourceResolver
argument_list|()
block|{
specifier|public
name|LSInput
name|resolveResource
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|namespaceURI
parameter_list|,
name|String
name|publicId
parameter_list|,
name|String
name|systemId
parameter_list|,
name|String
name|baseURI
parameter_list|)
block|{
return|return
name|resolverMap
operator|.
name|get
argument_list|(
name|namespaceURI
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|schemaLoader
operator|.
name|loadInputList
argument_list|(
operator|new
name|ListLSInput
argument_list|(
name|inputs
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createTypeImportedByElement
parameter_list|(
name|XmlSchema
name|elementTypeSchema
parameter_list|)
block|{
name|XmlSchemaComplexType
name|elementImportedType
init|=
operator|new
name|XmlSchemaComplexType
argument_list|(
name|elementTypeSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|elementImportedType
operator|.
name|setName
argument_list|(
literal|"importedElementType"
argument_list|)
expr_stmt|;
name|elementImportedType
operator|.
name|setParticle
argument_list|(
operator|new
name|XmlSchemaSequence
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|XmlSchema
name|newSchema
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|XmlSchema
name|schema
init|=
name|collection
operator|.
name|newXmlSchemaInCollection
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|NamespaceMap
name|map
init|=
operator|new
name|NamespaceMap
argument_list|()
decl_stmt|;
name|map
operator|.
name|add
argument_list|(
literal|""
argument_list|,
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
argument_list|)
expr_stmt|;
name|schema
operator|.
name|setNamespaceContext
argument_list|(
name|map
argument_list|)
expr_stmt|;
return|return
name|schema
return|;
block|}
specifier|private
name|void
name|createAttributeImportingType
parameter_list|(
name|XmlSchema
name|importingSchema
parameter_list|)
block|{
name|XmlSchemaAttribute
name|attributeImportingType
init|=
operator|new
name|XmlSchemaAttribute
argument_list|(
name|importingSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|attributeImportingType
operator|.
name|setName
argument_list|(
literal|"importingType"
argument_list|)
expr_stmt|;
name|attributeImportingType
operator|.
name|setSchemaTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|ATTRIBUTE_TYPE_SCHEMA
argument_list|,
literal|"importedAttributeType"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createImportedAttributeType
parameter_list|(
name|XmlSchema
name|attributeTypeSchema
parameter_list|)
block|{
name|XmlSchemaSimpleType
name|attributeImportedType
init|=
operator|new
name|XmlSchemaSimpleType
argument_list|(
name|attributeTypeSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|attributeImportedType
operator|.
name|setName
argument_list|(
literal|"importedAttributeType"
argument_list|)
expr_stmt|;
name|XmlSchemaSimpleTypeRestriction
name|simpleContent
init|=
operator|new
name|XmlSchemaSimpleTypeRestriction
argument_list|()
decl_stmt|;
name|attributeImportedType
operator|.
name|setContent
argument_list|(
name|simpleContent
argument_list|)
expr_stmt|;
name|simpleContent
operator|.
name|setBaseTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
argument_list|,
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createImportedAttribute
parameter_list|(
name|XmlSchema
name|attributeSchema
parameter_list|)
block|{
name|XmlSchemaAttribute
name|importedAttribute
init|=
operator|new
name|XmlSchemaAttribute
argument_list|(
name|attributeSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|importedAttribute
operator|.
name|setName
argument_list|(
literal|"imported"
argument_list|)
expr_stmt|;
name|importedAttribute
operator|.
name|setSchemaTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
argument_list|,
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createElementWithImportedType
parameter_list|(
name|XmlSchema
name|importingSchema
parameter_list|)
block|{
name|XmlSchemaElement
name|elementWithImportedType
init|=
operator|new
name|XmlSchemaElement
argument_list|(
name|importingSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|elementWithImportedType
operator|.
name|setName
argument_list|(
literal|"elementWithImportedType"
argument_list|)
expr_stmt|;
name|elementWithImportedType
operator|.
name|setSchemaTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|ELEMENT_TYPE_SCHEMA
argument_list|,
literal|"importedElementType"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createTypeImportingElement
parameter_list|(
name|XmlSchema
name|importingSchema
parameter_list|)
block|{
name|XmlSchemaComplexType
name|typeWithElementRef
init|=
operator|new
name|XmlSchemaComplexType
argument_list|(
name|importingSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|typeWithElementRef
operator|.
name|setName
argument_list|(
literal|"typeWithRef"
argument_list|)
expr_stmt|;
name|XmlSchemaSequence
name|sequence
init|=
operator|new
name|XmlSchemaSequence
argument_list|()
decl_stmt|;
name|typeWithElementRef
operator|.
name|setParticle
argument_list|(
name|sequence
argument_list|)
expr_stmt|;
name|XmlSchemaElement
name|refElement
init|=
operator|new
name|XmlSchemaElement
argument_list|(
name|importingSchema
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|refElement
operator|.
name|getRef
argument_list|()
operator|.
name|setTargetQName
argument_list|(
operator|new
name|QName
argument_list|(
name|ELEMENT_SCHEMA
argument_list|,
literal|"importedElement"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createImportedElement
parameter_list|(
name|XmlSchema
name|elementSchema
parameter_list|)
block|{
name|XmlSchemaElement
name|importedElement
init|=
operator|new
name|XmlSchemaElement
argument_list|(
name|elementSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|importedElement
operator|.
name|setName
argument_list|(
literal|"importedElement"
argument_list|)
expr_stmt|;
name|importedElement
operator|.
name|setSchemaTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
argument_list|,
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createDerivedType2
parameter_list|(
name|XmlSchema
name|importingSchema
parameter_list|)
block|{
name|XmlSchemaComplexContent
name|complexContent
decl_stmt|;
name|XmlSchemaComplexType
name|derivedType2
init|=
operator|new
name|XmlSchemaComplexType
argument_list|(
name|importingSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|derivedType2
operator|.
name|setName
argument_list|(
literal|"derivedRestriction"
argument_list|)
expr_stmt|;
name|XmlSchemaComplexContentRestriction
name|restriction
init|=
operator|new
name|XmlSchemaComplexContentRestriction
argument_list|()
decl_stmt|;
name|restriction
operator|.
name|setBaseTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|BASE_TYPE_SCHEMA2
argument_list|,
literal|"baseType2"
argument_list|)
argument_list|)
expr_stmt|;
name|complexContent
operator|=
operator|new
name|XmlSchemaComplexContent
argument_list|()
expr_stmt|;
name|complexContent
operator|.
name|setContent
argument_list|(
name|restriction
argument_list|)
expr_stmt|;
name|derivedType2
operator|.
name|setContentModel
argument_list|(
name|complexContent
argument_list|)
expr_stmt|;
block|}
specifier|private
name|XmlSchemaComplexContentExtension
name|createDerivedType1
parameter_list|(
name|XmlSchema
name|importingSchema
parameter_list|)
block|{
name|XmlSchemaComplexType
name|derivedType1
init|=
operator|new
name|XmlSchemaComplexType
argument_list|(
name|importingSchema
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|derivedType1
operator|.
name|setName
argument_list|(
literal|"derivedExtension"
argument_list|)
expr_stmt|;
name|XmlSchemaComplexContentExtension
name|extension
init|=
operator|new
name|XmlSchemaComplexContentExtension
argument_list|()
decl_stmt|;
name|extension
operator|.
name|setBaseTypeName
argument_list|(
operator|new
name|QName
argument_list|(
name|BASE_TYPE_SCHEMA1
argument_list|,
literal|"baseType1"
argument_list|)
argument_list|)
expr_stmt|;
name|XmlSchemaComplexContent
name|complexContent
init|=
operator|new
name|XmlSchemaComplexContent
argument_list|()
decl_stmt|;
name|complexContent
operator|.
name|setContent
argument_list|(
name|extension
argument_list|)
expr_stmt|;
name|derivedType1
operator|.
name|setContentModel
argument_list|(
name|complexContent
argument_list|)
expr_stmt|;
return|return
name|extension
return|;
block|}
specifier|private
name|XmlSchemaComplexType
name|createBaseType2
parameter_list|(
name|XmlSchema
name|baseTypeSchema2
parameter_list|)
block|{
name|XmlSchemaComplexType
name|baseType2
init|=
operator|new
name|XmlSchemaComplexType
argument_list|(
name|baseTypeSchema2
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|baseType2
operator|.
name|setName
argument_list|(
literal|"baseType2"
argument_list|)
expr_stmt|;
name|baseType2
operator|.
name|setParticle
argument_list|(
operator|new
name|XmlSchemaSequence
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|baseType2
return|;
block|}
specifier|private
name|void
name|createBaseType1
parameter_list|(
name|XmlSchema
name|baseTypeSchema1
parameter_list|)
block|{
name|XmlSchemaComplexType
name|baseType1
init|=
operator|new
name|XmlSchemaComplexType
argument_list|(
name|baseTypeSchema1
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|baseType1
operator|.
name|setName
argument_list|(
literal|"baseType1"
argument_list|)
expr_stmt|;
name|baseType1
operator|.
name|setParticle
argument_list|(
operator|new
name|XmlSchemaSequence
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

