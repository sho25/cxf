begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|xmlschema
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_comment
comment|/**  * This class holds constants related to XML Schema. Over time, some of the contents  * of WSDLConstants should move here.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|XmlSchemaConstants
block|{
specifier|public
specifier|static
specifier|final
name|String
name|XSD_NAMESPACE_URI
init|=
literal|"http://www.w3.org/2001/XMLSchema"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ANY_TYPE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"anyType"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ANY_URI_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"anyURI"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|BASE64BINARY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"base64Binary"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|BOOLEAN_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"boolean"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|BYTE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"byte"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|DATE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"date"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|DATETIME_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"dateTime"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|DOUBLE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"double"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|DURATION_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"duration"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ENTITIES_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"ENTITIES"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ENTITY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"ENTITY"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|FLOAT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"float"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|GDAY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"gDay"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|GMONTH_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"gMonth"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|GMONTHDAY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"gMonthDay"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|GYEAR_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"gYear"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|GYEARMONTH_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"gYearMonth"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|HEX_BINARY_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"hexBinary"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|ID_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"ID"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|IDREF_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"IDREF"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|IDREFS_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"IDREFS"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|INT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"int"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|INTEGER_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"integer"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|LANGUAGE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"language"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|LONG_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"long"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NAME_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"Name"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NCNAME_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"NCName"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NEGATIVEINTEGER_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"negativeInteger"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NMTOKEN_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"NMTOKEN"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NMTOKENS_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"NMTOKENS"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NONNEGATIVEINTEGER_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"nonNegativeInteger"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NONPOSITIVEINTEGER_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"nonPositiveInteger"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NORMALIZEDSTRING_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"normalizedStringInteger"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|NOTATION_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"NOTATION"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|POSITIVEINTEGER_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"positiveInteger"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|QNAME_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"QName"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SHORT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"short"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|STRING_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"string"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|TIME_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"time"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|TOKEN_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"token"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|UNSIGNEDBYTE_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"unsignedByte"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|UNSIGNEDINT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"unsignedInt"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|UNSIGNEDLONG_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"unsignedLong"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|UNSIGNEDSHORT_QNAME
init|=
operator|new
name|QName
argument_list|(
name|XSD_NAMESPACE_URI
argument_list|,
literal|"unsignedShort"
argument_list|)
decl_stmt|;
specifier|private
name|XmlSchemaConstants
parameter_list|()
block|{
comment|//utility class
block|}
block|}
end_class

end_unit

