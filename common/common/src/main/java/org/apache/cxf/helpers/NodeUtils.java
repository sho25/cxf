begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|NodeUtils
block|{
specifier|private
name|NodeUtils
parameter_list|()
block|{
comment|//Complete
block|}
comment|/**      * Returns a first child DOM Node of type ELEMENT_NODE      * for the specified Node.      */
specifier|public
specifier|static
name|Node
name|getChildElementNode
parameter_list|(
name|Node
name|xmlNode
parameter_list|)
block|{
if|if
condition|(
name|xmlNode
operator|==
literal|null
operator|||
operator|!
name|xmlNode
operator|.
name|hasChildNodes
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|xmlNode
operator|=
name|xmlNode
operator|.
name|getFirstChild
argument_list|()
expr_stmt|;
while|while
condition|(
name|xmlNode
operator|!=
literal|null
operator|&&
name|xmlNode
operator|.
name|getNodeType
argument_list|()
operator|!=
name|Node
operator|.
name|ELEMENT_NODE
condition|)
block|{
name|xmlNode
operator|=
name|xmlNode
operator|.
name|getNextSibling
argument_list|()
expr_stmt|;
block|}
return|return
name|xmlNode
return|;
block|}
block|}
end_class

end_unit

