begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_class
specifier|public
class|class
name|StreamPrinter
extends|extends
name|Thread
block|{
name|InputStream
name|is
decl_stmt|;
name|String
name|msg
decl_stmt|;
name|OutputStream
name|os
decl_stmt|;
name|StreamPrinter
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|this
argument_list|(
name|stream
argument_list|,
name|type
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|StreamPrinter
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|String
name|type
parameter_list|,
name|OutputStream
name|redirect
parameter_list|)
block|{
name|is
operator|=
name|stream
expr_stmt|;
name|msg
operator|=
name|type
expr_stmt|;
name|os
operator|=
name|redirect
expr_stmt|;
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|PrintWriter
name|pw
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|os
operator|!=
literal|null
condition|)
block|{
name|pw
operator|=
operator|new
name|PrintWriter
argument_list|(
name|os
argument_list|)
expr_stmt|;
block|}
name|InputStreamReader
name|isr
init|=
operator|new
name|InputStreamReader
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|BufferedReader
name|br
init|=
operator|new
name|BufferedReader
argument_list|(
name|isr
argument_list|)
decl_stmt|;
name|String
name|line
init|=
name|br
operator|.
name|readLine
argument_list|()
decl_stmt|;
while|while
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|pw
operator|!=
literal|null
condition|)
block|{
name|pw
operator|.
name|println
argument_list|(
name|msg
operator|+
literal|" "
operator|+
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|=
name|br
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|pw
operator|!=
literal|null
condition|)
block|{
name|pw
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ioe
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

