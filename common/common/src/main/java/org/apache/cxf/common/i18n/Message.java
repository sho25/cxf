begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|MessageFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|MissingResourceException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_class
specifier|public
class|class
name|Message
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|42L
decl_stmt|;
specifier|transient
name|String
name|code
decl_stmt|;
specifier|transient
name|Object
index|[]
name|parameters
decl_stmt|;
specifier|transient
name|ResourceBundle
name|bundle
decl_stmt|;
comment|/**      * Constructor.      *      * @param key the message catalog (resource bundle) key      * @param logger a logger with an associated resource bundle      * @param params the message substitution parameters      */
specifier|public
name|Message
parameter_list|(
name|String
name|key
parameter_list|,
name|Logger
name|logger
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|this
argument_list|(
name|key
argument_list|,
name|logger
operator|.
name|getResourceBundle
argument_list|()
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor.      *      * @param key the message catalog (resource bundle) key      * @param catalog the resource bundle      * @param params the message substitution parameters      */
specifier|public
name|Message
parameter_list|(
name|String
name|key
parameter_list|,
name|ResourceBundle
name|catalog
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
name|code
operator|=
name|key
expr_stmt|;
name|bundle
operator|=
name|catalog
expr_stmt|;
name|parameters
operator|=
name|params
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|fmt
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
literal|null
operator|==
name|bundle
condition|)
block|{
return|return
name|code
return|;
block|}
name|fmt
operator|=
name|bundle
operator|.
name|getString
argument_list|(
name|code
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MissingResourceException
name|ex
parameter_list|)
block|{
return|return
name|code
return|;
block|}
return|return
name|MessageFormat
operator|.
name|format
argument_list|(
name|fmt
argument_list|,
name|parameters
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|code
return|;
block|}
specifier|public
name|Object
index|[]
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
specifier|private
name|void
name|writeObject
parameter_list|(
name|java
operator|.
name|io
operator|.
name|ObjectOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|readObject
parameter_list|(
name|java
operator|.
name|io
operator|.
name|ObjectInputStream
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|code
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
name|bundle
operator|=
literal|null
expr_stmt|;
name|parameters
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

