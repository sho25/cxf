begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|event
package|;
end_package

begin_class
specifier|public
class|class
name|ComponentEventFilter
implements|implements
name|EventFilter
block|{
specifier|public
specifier|static
specifier|final
name|String
name|COMPONENT_CREATED_EVENT
init|=
literal|"cxf.component.created.event"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMPONENT_REMOVED_EVENT
init|=
literal|"cxf.component.removed.event"
decl_stmt|;
specifier|public
name|boolean
name|isEventEnabled
parameter_list|(
name|Event
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getID
argument_list|()
operator|.
name|getLocalPart
argument_list|()
operator|.
name|compareTo
argument_list|(
name|COMPONENT_CREATED_EVENT
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|true
return|;
block|}
elseif|else
if|if
condition|(
name|e
operator|.
name|getID
argument_list|()
operator|.
name|getLocalPart
argument_list|()
operator|.
name|compareTo
argument_list|(
name|COMPONENT_REMOVED_EVENT
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

