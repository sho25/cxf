begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xjc
operator|.
name|wsdlextension
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensibilityElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ErrorHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JAnnotationUse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JDefinedClass
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JExpr
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JFieldVar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JMethod
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JMod
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|codemodel
operator|.
name|JPrimitiveType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|tools
operator|.
name|xjc
operator|.
name|BadCommandLineException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|tools
operator|.
name|xjc
operator|.
name|Options
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|tools
operator|.
name|xjc
operator|.
name|outline
operator|.
name|ClassOutline
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|tools
operator|.
name|xjc
operator|.
name|outline
operator|.
name|Outline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_class
specifier|public
class|class
name|WSDLExtension
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|WSDLExtension
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|String
name|getOptionName
parameter_list|()
block|{
return|return
literal|"Xwsdlextension"
return|;
block|}
specifier|public
name|String
name|getUsage
parameter_list|()
block|{
return|return
literal|"  -Xwsdlextension               "
operator|+
literal|":Activate plugin to add wsdl extension methods to generated root classes\n"
return|;
block|}
specifier|public
name|int
name|parseArgument
parameter_list|(
name|Options
name|opt
parameter_list|,
name|String
index|[]
name|args
parameter_list|,
name|int
name|index
parameter_list|)
throws|throws
name|BadCommandLineException
throws|,
name|IOException
block|{
name|int
name|ret
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|args
index|[
name|index
index|]
operator|.
name|equals
argument_list|(
literal|"-Xwsdlextension"
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|1
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|boolean
name|run
parameter_list|(
name|Outline
name|outline
parameter_list|,
name|Options
name|opt
parameter_list|,
name|ErrorHandler
name|errorHandler
parameter_list|)
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"Running WSDLExtension plugin."
argument_list|)
expr_stmt|;
for|for
control|(
name|ClassOutline
name|co
range|:
name|outline
operator|.
name|getClasses
argument_list|()
control|)
block|{
name|addWSDLExtension
argument_list|(
name|co
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|private
name|void
name|addWSDLExtension
parameter_list|(
name|ClassOutline
name|co
parameter_list|)
block|{
specifier|final
name|JDefinedClass
name|implementation
init|=
name|co
operator|.
name|implClass
decl_stmt|;
name|implementation
operator|.
name|_implements
argument_list|(
name|ExtensibilityElement
operator|.
name|class
argument_list|)
expr_stmt|;
name|JFieldVar
name|elementTypeVar
init|=
name|implementation
operator|.
name|field
argument_list|(
name|JMod
operator|.
name|PROTECTED
argument_list|,
name|QName
operator|.
name|class
argument_list|,
literal|"elementType"
argument_list|)
decl_stmt|;
name|elementTypeVar
operator|.
name|annotate
argument_list|(
name|XmlTransient
operator|.
name|class
argument_list|)
expr_stmt|;
name|JFieldVar
name|requiredVar
init|=
name|implementation
operator|.
name|field
argument_list|(
name|JMod
operator|.
name|PROTECTED
argument_list|,
name|Boolean
operator|.
name|class
argument_list|,
literal|"required"
argument_list|)
decl_stmt|;
name|JAnnotationUse
name|requiredAnnotation
init|=
name|requiredVar
operator|.
name|annotate
argument_list|(
name|XmlAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|requiredAnnotation
operator|.
name|param
argument_list|(
literal|"namespace"
argument_list|,
literal|"http://schemas.xmlsoap.org/wsdl/"
argument_list|)
expr_stmt|;
name|JMethod
name|getElementTypeMethod
init|=
name|implementation
operator|.
name|method
argument_list|(
name|JMod
operator|.
name|PUBLIC
argument_list|,
name|QName
operator|.
name|class
argument_list|,
literal|"getElementType"
argument_list|)
decl_stmt|;
name|getElementTypeMethod
operator|.
name|body
argument_list|()
operator|.
name|_return
argument_list|(
name|JExpr
operator|.
name|direct
argument_list|(
literal|"elementType"
argument_list|)
argument_list|)
expr_stmt|;
name|JMethod
name|setElementTypeMethod
init|=
name|implementation
operator|.
name|method
argument_list|(
name|JMod
operator|.
name|PUBLIC
argument_list|,
name|JPrimitiveType
operator|.
name|parse
argument_list|(
name|co
operator|.
name|parent
argument_list|()
operator|.
name|getCodeModel
argument_list|()
argument_list|,
literal|"void"
argument_list|)
argument_list|,
literal|"setElementType"
argument_list|)
decl_stmt|;
name|setElementTypeMethod
operator|.
name|param
argument_list|(
name|QName
operator|.
name|class
argument_list|,
literal|"type"
argument_list|)
expr_stmt|;
name|setElementTypeMethod
operator|.
name|body
argument_list|()
operator|.
name|directStatement
argument_list|(
literal|"this.elementType = type;"
argument_list|)
expr_stmt|;
name|JMethod
name|getRequiredMethod
init|=
name|implementation
operator|.
name|method
argument_list|(
name|JMod
operator|.
name|PUBLIC
argument_list|,
name|Boolean
operator|.
name|class
argument_list|,
literal|"getRequired"
argument_list|)
decl_stmt|;
name|getRequiredMethod
operator|.
name|body
argument_list|()
operator|.
name|_return
argument_list|(
name|JExpr
operator|.
name|direct
argument_list|(
literal|"required == null ? false : required"
argument_list|)
argument_list|)
expr_stmt|;
name|JMethod
name|setRequiredMethod
init|=
name|implementation
operator|.
name|method
argument_list|(
name|JMod
operator|.
name|PUBLIC
argument_list|,
name|JPrimitiveType
operator|.
name|parse
argument_list|(
name|co
operator|.
name|parent
argument_list|()
operator|.
name|getCodeModel
argument_list|()
argument_list|,
literal|"void"
argument_list|)
argument_list|,
literal|"setRequired"
argument_list|)
decl_stmt|;
name|setRequiredMethod
operator|.
name|param
argument_list|(
name|Boolean
operator|.
name|class
argument_list|,
literal|"required"
argument_list|)
expr_stmt|;
name|setRequiredMethod
operator|.
name|body
argument_list|()
operator|.
name|directStatement
argument_list|(
literal|"this.required = required;"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

