begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wstx_msv_validation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaSerializer
operator|.
name|XmlSchemaSerializerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|stax2
operator|.
name|XMLStreamReader2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|stax2
operator|.
name|validation
operator|.
name|XMLValidationSchema
import|;
end_import

begin_comment
comment|/**  * This class touches stax2 API, so it is kept separate to allow graceful  * fallback.  */
end_comment

begin_class
class|class
name|Stax2ValidationUtils
block|{
comment|/** {@inheritDoc}      * @throws XMLStreamException */
specifier|public
name|void
name|setupValidation
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|,
name|XmlSchemaCollection
name|schemas
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|XMLStreamReader2
name|reader2
init|=
operator|(
name|XMLStreamReader2
operator|)
name|reader
decl_stmt|;
name|XMLValidationSchema
name|vs
init|=
name|getValidator
argument_list|(
name|schemas
argument_list|)
decl_stmt|;
name|reader2
operator|.
name|validateAgainst
argument_list|(
name|vs
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Reader
name|getSchemaAsStream
parameter_list|(
name|DOMSource
name|source
parameter_list|)
block|{
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|StreamResult
name|result
init|=
operator|new
name|StreamResult
argument_list|(
name|writer
argument_list|)
decl_stmt|;
try|try
block|{
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newTransformer
argument_list|()
operator|.
name|transform
argument_list|(
name|source
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
operator|new
name|StringReader
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Create woodstox validator for a schema set.      * @param schemas      * @return      * @throws XMLStreamException      */
specifier|private
name|XMLValidationSchema
name|getValidator
parameter_list|(
name|XmlSchemaCollection
name|schemas
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|List
argument_list|<
name|InputSource
argument_list|>
name|sources
init|=
operator|new
name|ArrayList
argument_list|<
name|InputSource
argument_list|>
argument_list|()
decl_stmt|;
name|XmlSchemaSerializer
name|serializer
init|=
operator|new
name|XmlSchemaSerializer
argument_list|()
decl_stmt|;
for|for
control|(
name|XmlSchema
name|sch
range|:
name|schemas
operator|.
name|getXmlSchemas
argument_list|()
control|)
block|{
name|Document
index|[]
name|serialized
decl_stmt|;
try|try
block|{
name|serialized
operator|=
name|serializer
operator|.
name|serializeSchema
argument_list|(
name|sch
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlSchemaSerializerException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|DOMSource
name|domSource
init|=
operator|new
name|DOMSource
argument_list|(
name|serialized
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|Reader
name|schemaReader
init|=
name|getSchemaAsStream
argument_list|(
name|domSource
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource
init|=
operator|new
name|InputSource
argument_list|(
name|schemaReader
argument_list|)
decl_stmt|;
name|inputSource
operator|.
name|setSystemId
argument_list|(
name|sch
operator|.
name|getSourceURI
argument_list|()
argument_list|)
expr_stmt|;
name|sources
operator|.
name|add
argument_list|(
name|inputSource
argument_list|)
expr_stmt|;
block|}
name|W3CMultiSchemaFactory
name|factory
init|=
operator|new
name|W3CMultiSchemaFactory
argument_list|()
decl_stmt|;
name|XMLValidationSchema
name|vs
decl_stmt|;
name|vs
operator|=
name|factory
operator|.
name|loadSchemas
argument_list|(
name|sources
operator|.
name|toArray
argument_list|(
operator|new
name|InputSource
index|[
name|sources
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|vs
return|;
block|}
block|}
end_class

end_unit

