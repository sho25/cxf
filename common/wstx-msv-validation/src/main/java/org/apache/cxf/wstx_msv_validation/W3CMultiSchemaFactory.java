begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/*  * Code in this file derives from source code in Woodstox which   * carries a ASL 2.0 license.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wstx_msv_validation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParserFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|ctc
operator|.
name|wstx
operator|.
name|msv
operator|.
name|BaseSchemaFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|ctc
operator|.
name|wstx
operator|.
name|msv
operator|.
name|W3CSchema
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|msv
operator|.
name|grammar
operator|.
name|xmlschema
operator|.
name|XMLSchemaGrammar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|msv
operator|.
name|reader
operator|.
name|xmlschema
operator|.
name|MultiSchemaReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|msv
operator|.
name|reader
operator|.
name|xmlschema
operator|.
name|XMLSchemaReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|stax2
operator|.
name|validation
operator|.
name|XMLValidationSchema
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|W3CMultiSchemaFactory
extends|extends
name|BaseSchemaFactory
block|{
specifier|private
name|MultiSchemaReader
name|multiSchemaReader
decl_stmt|;
specifier|private
name|SAXParserFactory
name|parserFactory
decl_stmt|;
specifier|private
name|XMLSchemaReader
name|xmlSchemaReader
decl_stmt|;
specifier|public
name|W3CMultiSchemaFactory
parameter_list|()
block|{
name|super
argument_list|(
name|XMLValidationSchema
operator|.
name|SCHEMA_ID_W3C_SCHEMA
argument_list|)
expr_stmt|;
block|}
specifier|public
name|XMLValidationSchema
name|loadSchemas
parameter_list|(
name|String
name|baseURI
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|EmbeddedSchema
argument_list|>
name|sources
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|parserFactory
operator|=
name|getSaxFactory
argument_list|()
expr_stmt|;
name|ResolvingGrammarReaderController
name|ctrl
init|=
operator|new
name|ResolvingGrammarReaderController
argument_list|(
name|baseURI
argument_list|,
name|sources
argument_list|)
decl_stmt|;
name|xmlSchemaReader
operator|=
operator|new
name|XMLSchemaReader
argument_list|(
name|ctrl
argument_list|,
name|parserFactory
argument_list|)
expr_stmt|;
name|multiSchemaReader
operator|=
operator|new
name|MultiSchemaReader
argument_list|(
name|xmlSchemaReader
argument_list|)
expr_stmt|;
for|for
control|(
name|EmbeddedSchema
name|source
range|:
name|sources
operator|.
name|values
argument_list|()
control|)
block|{
name|DOMSource
name|domSource
init|=
operator|new
name|DOMSource
argument_list|(
name|source
operator|.
name|getSchemaElement
argument_list|()
argument_list|)
decl_stmt|;
name|domSource
operator|.
name|setSystemId
argument_list|(
name|source
operator|.
name|getSystemId
argument_list|()
argument_list|)
expr_stmt|;
name|multiSchemaReader
operator|.
name|parse
argument_list|(
name|domSource
argument_list|)
expr_stmt|;
block|}
name|XMLSchemaGrammar
name|grammar
init|=
name|multiSchemaReader
operator|.
name|getResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|grammar
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XMLStreamException
argument_list|(
literal|"Failed to load schemas"
argument_list|)
throw|;
block|}
return|return
operator|new
name|W3CSchema
argument_list|(
name|grammar
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|XMLValidationSchema
name|loadSchema
parameter_list|(
name|InputSource
name|src
parameter_list|,
name|Object
name|sysRef
parameter_list|)
throws|throws
name|XMLStreamException
block|{
throw|throw
operator|new
name|XMLStreamException
argument_list|(
literal|"W3CMultiSchemaFactory does not support the provider API."
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

