begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|HandlerChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RequestWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|ResponseWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_class
annotation|@
name|javax
operator|.
name|jws
operator|.
name|WebService
argument_list|(
name|name
operator|=
literal|"Greeter"
argument_list|,
name|serviceName
operator|=
literal|"SOAPService"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|)
annotation|@
name|HandlerChain
argument_list|(
name|name
operator|=
literal|"TestHandlerChain"
argument_list|,
name|file
operator|=
literal|"handlers.xml"
argument_list|)
specifier|public
class|class
name|AnnotatedGreeterImpl
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|AnnotatedGreeterImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Resource
specifier|private
name|int
name|foo
decl_stmt|;
specifier|private
name|WebServiceContext
name|context
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|invocationCount
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|AnnotatedGreeterImpl
parameter_list|()
block|{
name|invocationCount
operator|.
name|put
argument_list|(
literal|"sayHi"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|invocationCount
operator|.
name|put
argument_list|(
literal|"greetMe"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|invocationCount
operator|.
name|put
argument_list|(
literal|"overloadedSayHi"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getInvocationCount
parameter_list|(
name|String
name|method
parameter_list|)
block|{
if|if
condition|(
name|invocationCount
operator|.
name|containsKey
argument_list|(
name|method
argument_list|)
condition|)
block|{
return|return
name|invocationCount
operator|.
name|get
argument_list|(
name|method
argument_list|)
operator|.
name|intValue
argument_list|()
return|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"No invocation count for method: "
operator|+
name|method
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
comment|/**      * overloaded method - present for test purposes      */
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"sayHiOverloaded"
argument_list|)
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"responseType2"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
annotation|@
name|RequestWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.SayHi2"
argument_list|,
name|localName
operator|=
literal|"sayHi2"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
annotation|@
name|ResponseWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.SayHiResponse2"
argument_list|,
name|localName
operator|=
literal|"sayHiResponse2"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
specifier|public
name|String
name|sayHi
parameter_list|(
name|String
name|me
parameter_list|)
block|{
name|incrementInvocationCount
argument_list|(
literal|"overloadedSayHi"
argument_list|)
expr_stmt|;
return|return
literal|"Hi "
operator|+
name|me
operator|+
literal|"!"
return|;
block|}
annotation|@
name|WebMethod
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"responseType"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
annotation|@
name|RequestWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.SayHi"
argument_list|,
name|localName
operator|=
literal|"sayHi"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
annotation|@
name|ResponseWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.SayHiResponse"
argument_list|,
name|localName
operator|=
literal|"sayHiResponse"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
specifier|public
name|String
name|sayHi
parameter_list|()
block|{
name|incrementInvocationCount
argument_list|(
literal|"sayHi"
argument_list|)
expr_stmt|;
return|return
literal|"Hi"
return|;
block|}
annotation|@
name|WebMethod
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"responseType"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
annotation|@
name|RequestWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.GreetMe"
argument_list|,
name|localName
operator|=
literal|"greetMe"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
annotation|@
name|ResponseWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.GreetMeResponse"
argument_list|,
name|localName
operator|=
literal|"greetMeResponse"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
specifier|public
name|String
name|greetMe
parameter_list|(
name|String
name|me
parameter_list|)
block|{
name|incrementInvocationCount
argument_list|(
literal|"greetMe"
argument_list|)
expr_stmt|;
return|return
literal|"Bonjour "
operator|+
name|me
operator|+
literal|"!"
return|;
block|}
annotation|@
name|WebMethod
annotation|@
name|RequestWrapper
argument_list|(
name|className
operator|=
literal|"org.apache.hello_world_soap_http.types.GreetMeOneWay"
argument_list|,
name|localName
operator|=
literal|"greetMeOneWay"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http/types"
argument_list|)
specifier|public
name|void
name|greetMeOneWay
parameter_list|(
name|String
name|me
parameter_list|)
block|{
name|incrementInvocationCount
argument_list|(
literal|"greetMeOneWay"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Hello there "
operator|+
name|me
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"That was OneWay to say hello"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDocLitFault
parameter_list|(
name|String
name|faultType
parameter_list|)
throws|throws
name|BadRecordLitFault
throws|,
name|NoSuchCodeLitFault
block|{     }
annotation|@
name|Resource
specifier|public
name|void
name|setContext
parameter_list|(
name|WebServiceContext
name|ctx
parameter_list|)
block|{
name|context
operator|=
name|ctx
expr_stmt|;
block|}
specifier|public
name|WebServiceContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"PutLastTradedPrice"
argument_list|)
specifier|public
name|void
name|putLastTradedPriceAsync
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"body"
argument_list|,
name|partName
operator|=
literal|"body"
argument_list|)
name|String
name|body
parameter_list|)
block|{
comment|//Complete
block|}
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"PutLastTradedPrice"
argument_list|)
specifier|public
name|void
name|putLastTradedPrice
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"body"
argument_list|,
name|partName
operator|=
literal|"body"
argument_list|)
name|String
name|body
parameter_list|)
block|{
comment|//Complete
block|}
comment|/**      * stop eclipse from whinging      */
specifier|public
name|int
name|getFoo
parameter_list|()
block|{
return|return
name|foo
return|;
block|}
specifier|private
name|void
name|incrementInvocationCount
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing "
operator|+
name|method
argument_list|)
expr_stmt|;
name|int
name|n
init|=
name|invocationCount
operator|.
name|get
argument_list|(
name|method
argument_list|)
decl_stmt|;
name|invocationCount
operator|.
name|put
argument_list|(
name|method
argument_list|,
name|n
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

