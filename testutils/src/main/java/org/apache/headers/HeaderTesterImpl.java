begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|headers
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|InHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|InHeaderResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|InoutHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|InoutHeaderResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|OutHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|OutHeaderResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|headers
operator|.
name|types
operator|.
name|SOAPHeaderData
import|;
end_import

begin_class
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"XMLHeaderService"
argument_list|,
name|portName
operator|=
literal|"XMLPort9000"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.headers.HeaderTester"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/headers"
argument_list|,
name|wsdlLocation
operator|=
literal|"testutils/soapheader2.wsdl"
argument_list|)
specifier|public
class|class
name|HeaderTesterImpl
implements|implements
name|HeaderTester
block|{
specifier|public
name|InHeaderResponse
name|inHeader
parameter_list|(
name|InHeader
name|me
parameter_list|,
name|SOAPHeaderData
name|headerInfo
parameter_list|)
block|{
name|InHeaderResponse
name|resp
init|=
operator|new
name|InHeaderResponse
argument_list|()
decl_stmt|;
name|resp
operator|.
name|setResponseType
argument_list|(
literal|"requestType="
operator|+
name|me
operator|.
name|getRequestType
argument_list|()
operator|+
literal|"\nheaderData.message="
operator|+
name|headerInfo
operator|.
name|getMessage
argument_list|()
operator|+
literal|"\nheaderData.getOriginator="
operator|+
name|headerInfo
operator|.
name|getOriginator
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
return|;
block|}
specifier|public
name|InoutHeaderResponse
name|inoutHeader
parameter_list|(
name|InoutHeader
name|me
parameter_list|,
name|Holder
argument_list|<
name|SOAPHeaderData
argument_list|>
name|headerInfo
parameter_list|)
block|{
name|InoutHeaderResponse
name|resp
init|=
operator|new
name|InoutHeaderResponse
argument_list|()
decl_stmt|;
name|resp
operator|.
name|setResponseType
argument_list|(
literal|"requestType="
operator|+
name|me
operator|.
name|getRequestType
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|headerInfo
operator|.
name|value
operator|!=
literal|null
condition|)
block|{
name|headerInfo
operator|.
name|value
operator|.
name|setMessage
argument_list|(
literal|"message="
operator|+
name|headerInfo
operator|.
name|value
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|headerInfo
operator|.
name|value
operator|.
name|setOriginator
argument_list|(
literal|"orginator="
operator|+
name|headerInfo
operator|.
name|value
operator|.
name|getOriginator
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resp
return|;
block|}
specifier|public
name|void
name|outHeader
parameter_list|(
name|OutHeader
name|me
parameter_list|,
name|Holder
argument_list|<
name|OutHeaderResponse
argument_list|>
name|theResponse
parameter_list|,
name|Holder
argument_list|<
name|SOAPHeaderData
argument_list|>
name|headerInfo
parameter_list|)
block|{
name|theResponse
operator|.
name|value
operator|=
operator|new
name|OutHeaderResponse
argument_list|()
expr_stmt|;
name|theResponse
operator|.
name|value
operator|.
name|setResponseType
argument_list|(
literal|"requestType="
operator|+
name|me
operator|.
name|getRequestType
argument_list|()
argument_list|)
expr_stmt|;
name|headerInfo
operator|.
name|value
operator|=
operator|new
name|SOAPHeaderData
argument_list|()
expr_stmt|;
name|headerInfo
operator|.
name|value
operator|.
name|setMessage
argument_list|(
literal|"message=outMessage"
argument_list|)
expr_stmt|;
name|headerInfo
operator|.
name|value
operator|.
name|setOriginator
argument_list|(
literal|"orginator=outOriginator"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

