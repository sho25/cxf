begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutils
operator|.
name|header_test
operator|.
name|rpc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|header_test
operator|.
name|rpc
operator|.
name|TestRPCHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestRPCHeaderTest
extends|extends
name|Assert
block|{
name|Class
argument_list|<
name|TestRPCHeader
argument_list|>
name|cls
init|=
name|TestRPCHeader
operator|.
name|class
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testHeader1
parameter_list|()
block|{
name|Method
index|[]
name|meths
init|=
name|cls
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"testHeader1"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
index|[]
index|[]
name|annotations
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|annotations
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
literal|0
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/header_test/rpc/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"inHeader"
argument_list|,
name|parm
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"headerMessage"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInOutHeader
parameter_list|()
block|{
name|Method
index|[]
name|meths
init|=
name|cls
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"testInOutHeader"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
index|[]
index|[]
name|annotations
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
index|[
literal|1
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|annotations
index|[
literal|1
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
literal|1
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/header_test/rpc/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"inOutHeader"
argument_list|,
name|parm
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"headerMessage"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

