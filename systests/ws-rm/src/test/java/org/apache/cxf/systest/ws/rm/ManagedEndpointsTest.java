begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|rm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|Greeter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|GreeterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|management
operator|.
name|InstrumentationManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|RMManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|RMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|ManagedEndpointsTest
extends|extends
name|AbstractClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|ManagedEndpointsTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SERVER_CFG
init|=
literal|"/org/apache/cxf/systest/ws/rm/managed-server.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CLIENT_CFG
init|=
literal|"/org/apache/cxf/systest/ws/rm/managed-client.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|ManagedEndpointsTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Bus
name|clientBus
decl_stmt|;
specifier|private
specifier|static
name|InProcessServer
name|server
decl_stmt|;
specifier|private
specifier|static
name|Bus
name|serverBus
decl_stmt|;
specifier|static
class|class
name|InProcessServer
block|{
specifier|private
name|boolean
name|ready
decl_stmt|;
specifier|private
name|Endpoint
name|ep
decl_stmt|;
specifier|public
name|void
name|run
parameter_list|()
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|serverBus
operator|=
name|bf
operator|.
name|createBus
argument_list|(
name|SERVER_CFG
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|serverBus
argument_list|)
expr_stmt|;
name|GreeterImpl
name|implementor
init|=
operator|new
name|GreeterImpl
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/GreeterPort"
decl_stmt|;
name|ep
operator|=
name|Endpoint
operator|.
name|create
argument_list|(
name|implementor
argument_list|)
expr_stmt|;
name|ep
operator|.
name|publish
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Published greeter endpoint."
argument_list|)
expr_stmt|;
name|ready
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|ep
operator|.
name|stop
argument_list|()
expr_stmt|;
name|serverBus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isReady
parameter_list|()
block|{
return|return
name|ready
return|;
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServer
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|=
operator|new
name|InProcessServer
argument_list|()
expr_stmt|;
name|server
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|stopServer
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|stopBus
parameter_list|()
throws|throws
name|Exception
block|{
name|clientBus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|runTests
parameter_list|()
throws|throws
name|Exception
block|{
comment|//There is a problem if testSuspendAndResumeSourceSequence is run first
comment|//Need to get Aki to look at it.  For now, just force them into
comment|//an order that works
name|testManagedEndpointsOneway
argument_list|()
expr_stmt|;
name|stopBus
argument_list|()
expr_stmt|;
name|testSuspendAndResumeSourceSequence
argument_list|()
expr_stmt|;
block|}
comment|//@Test
specifier|public
name|void
name|testManagedEndpointsOneway
parameter_list|()
throws|throws
name|Exception
block|{
name|checkServerReady
argument_list|(
literal|30000
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|clientBus
operator|=
name|bf
operator|.
name|createBus
argument_list|(
name|CLIENT_CFG
argument_list|)
expr_stmt|;
name|MessageLossSimulator
name|mls
init|=
operator|new
name|MessageLossSimulator
argument_list|()
decl_stmt|;
name|clientBus
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|mls
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|clientBus
argument_list|)
expr_stmt|;
name|RMManager
name|clientManager
init|=
name|clientBus
operator|.
name|getExtension
argument_list|(
name|RMManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|RMManager
name|serverManager
init|=
name|serverBus
operator|.
name|getExtension
argument_list|(
name|RMManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|InstrumentationManager
name|serverIM
init|=
name|serverBus
operator|.
name|getExtension
argument_list|(
name|InstrumentationManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|MBeanServer
name|mbs
init|=
name|serverIM
operator|.
name|getMBeanServer
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"MBeanServer must be available."
argument_list|,
name|mbs
argument_list|)
expr_stmt|;
name|ObjectName
name|clientManagerName
init|=
name|RMUtils
operator|.
name|getManagedObjectName
argument_list|(
name|clientManager
argument_list|)
decl_stmt|;
name|ObjectName
name|serverManagerName
init|=
name|RMUtils
operator|.
name|getManagedObjectName
argument_list|(
name|serverManager
argument_list|)
decl_stmt|;
name|Object
name|o
decl_stmt|;
name|GreeterService
name|gs
init|=
operator|new
name|GreeterService
argument_list|()
decl_stmt|;
specifier|final
name|Greeter
name|greeter
init|=
name|gs
operator|.
name|getGreeterPort
argument_list|()
decl_stmt|;
name|updateAddressPort
argument_list|(
name|greeter
argument_list|,
name|ManagedEndpointsTest
operator|.
name|PORT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|fine
argument_list|(
literal|"Created greeter client."
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
name|ep
init|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|greeter
argument_list|)
operator|.
name|getEndpoint
argument_list|()
decl_stmt|;
name|String
name|epId
init|=
name|RMUtils
operator|.
name|getEndpointIdentifier
argument_list|(
name|ep
argument_list|,
name|clientBus
argument_list|)
decl_stmt|;
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"one"
argument_list|)
expr_stmt|;
comment|// sent
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientManagerName
argument_list|,
literal|"getEndpointIdentifiers"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected endpoint identifier"
argument_list|,
name|o
argument_list|,
operator|new
name|String
index|[]
block|{
name|epId
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|serverManagerName
argument_list|,
literal|"getEndpointIdentifiers"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected endpoint identifier"
argument_list|,
name|o
argument_list|,
operator|new
name|String
index|[]
block|{
name|epId
block|}
argument_list|)
expr_stmt|;
name|ObjectName
name|clientEndpointName
init|=
name|RMUtils
operator|.
name|getManagedObjectName
argument_list|(
name|clientManager
argument_list|,
name|ep
argument_list|)
decl_stmt|;
name|ObjectName
name|serverEndpointName
init|=
name|RMUtils
operator|.
name|getManagedObjectName
argument_list|(
name|serverManager
argument_list|,
name|ep
argument_list|)
decl_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getSourceSequenceIds"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One sequence expected"
argument_list|,
name|o
operator|instanceof
name|String
index|[]
operator|&&
literal|1
operator|==
operator|(
operator|(
name|String
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|String
name|sseqId
init|=
operator|(
operator|(
name|String
index|[]
operator|)
name|o
operator|)
index|[
literal|0
index|]
decl_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getCurrentSourceSequenceId"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected sequence identifier"
argument_list|,
name|o
operator|instanceof
name|String
operator|&&
name|sseqId
operator|.
name|equals
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|serverEndpointName
argument_list|,
literal|"getDestinationSequenceIds"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected sequence identifier"
argument_list|,
name|o
argument_list|,
operator|new
name|String
index|[]
block|{
name|sseqId
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getDestinationSequenceIds"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One sequence expected"
argument_list|,
name|o
operator|instanceof
name|String
index|[]
operator|&&
literal|1
operator|==
operator|(
operator|(
name|String
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|String
name|dseqId
init|=
operator|(
operator|(
name|String
index|[]
operator|)
name|o
operator|)
index|[
literal|0
index|]
decl_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|serverEndpointName
argument_list|,
literal|"getSourceSequenceIds"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected sequence identifier"
argument_list|,
name|o
argument_list|,
operator|new
name|String
index|[]
block|{
name|dseqId
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageTotalCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No queued message"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|,
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|,
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No queued message"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getCurrentSourceSequence"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|verifySourceSequence
argument_list|(
name|o
argument_list|,
name|sseqId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getSourceSequences"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One sequence message"
argument_list|,
name|o
operator|instanceof
name|CompositeData
index|[]
operator|&&
literal|1
operator|==
operator|(
operator|(
name|CompositeData
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|verifySourceSequence
argument_list|(
operator|(
operator|(
name|CompositeData
index|[]
operator|)
name|o
operator|)
index|[
literal|0
index|]
argument_list|,
name|sseqId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getSourceSequenceAcknowledgedRange"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected range"
argument_list|,
name|o
argument_list|,
operator|new
name|Long
index|[]
block|{
literal|1L
block|,
literal|1L
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getUnAcknowledgedMessageIdentifiers"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No unacknowledged message"
argument_list|,
name|o
operator|instanceof
name|Long
index|[]
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Long
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"two"
argument_list|)
expr_stmt|;
comment|// getting lost
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"three"
argument_list|)
expr_stmt|;
comment|// sent
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageTotalCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One queued message"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|1
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getSourceSequenceAcknowledgedRange"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected range"
argument_list|,
name|o
argument_list|,
operator|new
name|Long
index|[]
block|{
literal|1L
block|,
literal|1L
block|,
literal|3L
block|,
literal|3L
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getUnAcknowledgedMessageIdentifiers"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One unacknowledged message"
argument_list|,
name|o
operator|instanceof
name|Long
index|[]
operator|&&
literal|1
operator|==
operator|(
operator|(
name|Long
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getRetransmissionStatus"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|,
literal|2
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|,
literal|"long"
block|}
argument_list|)
expr_stmt|;
name|verifyRetransmissionStatus
argument_list|(
name|o
argument_list|,
literal|2L
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|serverEndpointName
argument_list|,
literal|"getDestinationSequenceAcknowledgedRange"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected range"
argument_list|,
name|o
argument_list|,
operator|new
name|Long
index|[]
block|{
literal|1L
block|,
literal|1L
block|,
literal|3L
block|,
literal|3L
block|}
argument_list|)
expr_stmt|;
comment|// 7 sec retry interval + 5 sec
name|LOG
operator|.
name|info
argument_list|(
literal|"waiting for 12 secs for the retry to complete ..."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|12000
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageTotalCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No queued message"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getSourceSequenceAcknowledgedRange"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected range"
argument_list|,
name|o
argument_list|,
operator|new
name|Long
index|[]
block|{
literal|1L
block|,
literal|3L
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|serverEndpointName
argument_list|,
literal|"getDestinationSequenceAcknowledgedRange"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|verifyArray
argument_list|(
literal|"Expected range"
argument_list|,
name|o
argument_list|,
operator|new
name|Long
index|[]
block|{
literal|1L
block|,
literal|3L
block|}
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getUnAcknowledgedMessageIdentifiers"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No unacknowledged message"
argument_list|,
name|o
operator|instanceof
name|Long
index|[]
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Long
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
comment|//@Test
specifier|public
name|void
name|testSuspendAndResumeSourceSequence
parameter_list|()
throws|throws
name|Exception
block|{
name|checkServerReady
argument_list|(
literal|30000
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|clientBus
operator|=
name|bf
operator|.
name|createBus
argument_list|(
name|CLIENT_CFG
argument_list|)
expr_stmt|;
name|MessageLossSimulator
name|mls
init|=
operator|new
name|MessageLossSimulator
argument_list|()
decl_stmt|;
name|clientBus
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|mls
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|clientBus
argument_list|)
expr_stmt|;
name|RMManager
name|clientManager
init|=
name|clientBus
operator|.
name|getExtension
argument_list|(
name|RMManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|InstrumentationManager
name|serverIM
init|=
name|serverBus
operator|.
name|getExtension
argument_list|(
name|InstrumentationManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|MBeanServer
name|mbs
init|=
name|serverIM
operator|.
name|getMBeanServer
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"MBeanServer must be available."
argument_list|,
name|mbs
argument_list|)
expr_stmt|;
name|Object
name|o
decl_stmt|;
name|GreeterService
name|gs
init|=
operator|new
name|GreeterService
argument_list|()
decl_stmt|;
specifier|final
name|Greeter
name|greeter
init|=
name|gs
operator|.
name|getGreeterPort
argument_list|()
decl_stmt|;
name|updateAddressPort
argument_list|(
name|greeter
argument_list|,
name|ManagedEndpointsTest
operator|.
name|PORT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|fine
argument_list|(
literal|"Created greeter client."
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Endpoint
name|ep
init|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|greeter
argument_list|)
operator|.
name|getEndpoint
argument_list|()
decl_stmt|;
name|ObjectName
name|clientEndpointName
init|=
name|RMUtils
operator|.
name|getManagedObjectName
argument_list|(
name|clientManager
argument_list|,
name|ep
argument_list|)
decl_stmt|;
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"one"
argument_list|)
expr_stmt|;
comment|// sent
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getCurrentSourceSequenceId"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|o
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|String
name|sseqId
init|=
operator|(
name|String
operator|)
name|o
decl_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getUnAcknowledgedMessageIdentifiers"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No unacknowledged message"
argument_list|,
name|o
operator|instanceof
name|Long
index|[]
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Long
index|[]
operator|)
name|o
operator|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"two"
argument_list|)
expr_stmt|;
comment|// sent but suspended
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"three"
argument_list|)
expr_stmt|;
comment|// sent but suspended
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageTotalCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One queued message"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|1
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"suspendSourceQueue"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"suspended the source queue: "
operator|+
name|sseqId
argument_list|)
expr_stmt|;
comment|// 7 sec retry interval + 3 sec
name|LOG
operator|.
name|info
argument_list|(
literal|"waiting for 10 secs for the retry (suspended)..."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageTotalCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"One queued message"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|1
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"resumeSourceQueue"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|sseqId
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"resumed the source queue: "
operator|+
name|sseqId
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"waiting for 15 secs for the retry (resumed)..."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|o
operator|=
name|mbs
operator|.
name|invoke
argument_list|(
name|clientEndpointName
argument_list|,
literal|"getQueuedMessageTotalCount"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|true
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"boolean"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No queued messages"
argument_list|,
name|o
operator|instanceof
name|Integer
operator|&&
literal|0
operator|==
operator|(
operator|(
name|Integer
operator|)
name|o
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkServerReady
parameter_list|(
name|long
name|max
parameter_list|)
block|{
name|long
name|waited
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|waited
operator|<
name|max
condition|)
block|{
if|if
condition|(
name|server
operator|.
name|isReady
argument_list|()
condition|)
block|{
return|return;
block|}
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|waited
operator|+=
literal|1000
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
name|fail
argument_list|(
literal|"server not ready"
argument_list|)
expr_stmt|;
block|}
specifier|private
parameter_list|<
name|T
parameter_list|>
name|void
name|verifyArray
parameter_list|(
name|String
name|desc
parameter_list|,
name|Object
name|value
parameter_list|,
name|T
index|[]
name|target
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|desc
argument_list|,
name|target
operator|.
name|getClass
argument_list|()
operator|.
name|isInstance
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|T
index|[]
name|values
init|=
operator|(
name|T
index|[]
operator|)
name|value
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|target
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|desc
argument_list|,
name|target
index|[
name|i
index|]
argument_list|,
name|values
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|verifySourceSequence
parameter_list|(
name|Object
name|value
parameter_list|,
name|String
name|sid
parameter_list|,
name|long
name|num
parameter_list|,
name|int
name|qsize
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|value
operator|instanceof
name|CompositeData
argument_list|)
expr_stmt|;
name|CompositeData
name|cd
init|=
operator|(
name|CompositeData
operator|)
name|value
decl_stmt|;
name|verifyValue
argument_list|(
name|cd
argument_list|,
literal|"sequenceId"
argument_list|,
name|sid
argument_list|)
expr_stmt|;
name|verifyValue
argument_list|(
name|cd
argument_list|,
literal|"currentMessageNumber"
argument_list|,
name|num
argument_list|)
expr_stmt|;
name|verifyValue
argument_list|(
name|cd
argument_list|,
literal|"queuedMessageCount"
argument_list|,
name|qsize
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyRetransmissionStatus
parameter_list|(
name|Object
name|value
parameter_list|,
name|long
name|num
parameter_list|,
name|int
name|count
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|value
operator|instanceof
name|CompositeData
argument_list|)
expr_stmt|;
name|CompositeData
name|cd
init|=
operator|(
name|CompositeData
operator|)
name|value
decl_stmt|;
name|verifyValue
argument_list|(
name|cd
argument_list|,
literal|"messageNumber"
argument_list|,
name|num
argument_list|)
expr_stmt|;
name|verifyValue
argument_list|(
name|cd
argument_list|,
literal|"retries"
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
if|if
condition|(
name|count
operator|>
literal|0
condition|)
block|{
name|assertTrue
argument_list|(
name|now
operator|.
name|after
argument_list|(
operator|(
name|Date
operator|)
name|getValue
argument_list|(
name|cd
argument_list|,
literal|"previous"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|now
operator|.
name|before
argument_list|(
operator|(
name|Date
operator|)
name|getValue
argument_list|(
name|cd
argument_list|,
literal|"next"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyValue
parameter_list|(
name|CompositeData
name|cd
parameter_list|,
name|String
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|Object
name|o
init|=
name|getValue
argument_list|(
name|cd
argument_list|,
name|key
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Expected value"
argument_list|,
name|value
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Object
name|getValue
parameter_list|(
name|CompositeData
name|cd
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|Object
name|o
init|=
literal|null
decl_stmt|;
try|try
block|{
name|o
operator|=
name|cd
operator|.
name|get
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Unable to retrieve the value for "
operator|+
name|key
argument_list|)
expr_stmt|;
block|}
return|return
name|o
return|;
block|}
block|}
end_class

end_unit

