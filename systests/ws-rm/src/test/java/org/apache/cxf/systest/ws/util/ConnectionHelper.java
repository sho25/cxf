begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|HTTPConduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http
operator|.
name|configuration
operator|.
name|ConnectionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http
operator|.
name|configuration
operator|.
name|HTTPClientPolicy
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|ConnectionHelper
block|{
specifier|private
name|ConnectionHelper
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|setKeepAliveConnection
parameter_list|(
name|Object
name|proxy
parameter_list|,
name|boolean
name|keepAlive
parameter_list|)
block|{
name|setKeepAliveConnection
argument_list|(
name|proxy
argument_list|,
name|keepAlive
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|setKeepAliveConnection
parameter_list|(
name|Object
name|proxy
parameter_list|,
name|boolean
name|keepAlive
parameter_list|,
name|boolean
name|force
parameter_list|)
block|{
if|if
condition|(
name|force
operator|||
literal|"HP-UX"
operator|.
name|equals
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
argument_list|)
operator|||
literal|"Windows XP"
operator|.
name|equals
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
argument_list|)
condition|)
block|{
name|Client
name|client
init|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|proxy
argument_list|)
decl_stmt|;
name|HTTPConduit
name|hc
init|=
operator|(
name|HTTPConduit
operator|)
name|client
operator|.
name|getConduit
argument_list|()
decl_stmt|;
name|HTTPClientPolicy
name|cp
init|=
name|hc
operator|.
name|getClient
argument_list|()
decl_stmt|;
name|cp
operator|.
name|setConnection
argument_list|(
name|keepAlive
condition|?
name|ConnectionType
operator|.
name|KEEP_ALIVE
else|:
name|ConnectionType
operator|.
name|CLOSE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

