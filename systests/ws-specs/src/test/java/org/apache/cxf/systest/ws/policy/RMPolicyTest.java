begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|BasicGreeterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|Greeter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|PingMeFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|util
operator|.
name|ConnectionHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|util
operator|.
name|MessageFlow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|recorders
operator|.
name|InMessageRecorder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|recorders
operator|.
name|MessageRecorder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|recorders
operator|.
name|OutMessageRecorder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|VersionTransformer
operator|.
name|Names200408
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|rm
operator|.
name|RM10Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests the use of the WS-Policy Framework to automatically engage WS-RM  * in response to Policies defined for the endpoint via an external policy attachment.  */
end_comment

begin_class
specifier|public
class|class
name|RMPolicyTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TEMPDIR
init|=
name|FileUtils
operator|.
name|getDefaultTempDir
argument_list|()
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|RMPolicyTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GREETMEONEWAY_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/greetMeOneWayRequest"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GREETME_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/greetMeRequest"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GREETME_RESPONSE_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/greetMeResponse"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PINGME_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/pingMeRequest"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PINGME_RESPONSE_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/pingMeResponse"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GREETER_FAULT_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/pingMe/Fault/faultDetail"
decl_stmt|;
specifier|public
specifier|static
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
name|String
name|tmpDir
init|=
name|TEMPDIR
decl_stmt|;
specifier|public
name|Server
parameter_list|()
block|{         }
specifier|public
name|Server
parameter_list|(
name|String
name|dir
parameter_list|)
block|{
name|tmpDir
operator|=
name|dir
expr_stmt|;
block|}
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"temp.location"
argument_list|,
name|tmpDir
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
literal|"org/apache/cxf/systest/ws/policy/rm.xml"
argument_list|)
decl_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|LoggingInInterceptor
name|in
init|=
operator|new
name|LoggingInInterceptor
argument_list|()
decl_stmt|;
name|bus
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|LoggingOutInterceptor
name|out
init|=
operator|new
name|LoggingOutInterceptor
argument_list|()
decl_stmt|;
name|bus
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|bus
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|GreeterImpl
name|implementor
init|=
operator|new
name|GreeterImpl
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/GreeterPort"
decl_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Published greeter endpoint."
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|args
operator|=
operator|new
name|String
index|[]
block|{
name|TEMPDIR
block|}
expr_stmt|;
block|}
name|Server
name|s
init|=
operator|new
name|Server
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|TestUtil
operator|.
name|getNewPortNumber
argument_list|(
literal|"decoupled"
argument_list|)
expr_stmt|;
name|PolicyTestHelper
operator|.
name|updatePolicyRef
argument_list|(
literal|"rm-external.xml"
argument_list|,
literal|":9020"
argument_list|,
literal|":"
operator|+
name|PORT
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"temp.location"
argument_list|,
name|TEMPDIR
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
name|TEMPDIR
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUsingRM
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|bus
operator|=
name|bf
operator|.
name|createBus
argument_list|(
literal|"org/apache/cxf/systest/ws/policy/rm.xml"
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|OutMessageRecorder
name|outRecorder
init|=
operator|new
name|OutMessageRecorder
argument_list|()
decl_stmt|;
name|bus
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|outRecorder
argument_list|)
expr_stmt|;
name|InMessageRecorder
name|inRecorder
init|=
operator|new
name|InMessageRecorder
argument_list|()
decl_stmt|;
name|bus
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|inRecorder
argument_list|)
expr_stmt|;
name|BasicGreeterService
name|gs
init|=
operator|new
name|BasicGreeterService
argument_list|()
decl_stmt|;
specifier|final
name|Greeter
name|greeter
init|=
name|gs
operator|.
name|getGreeterPort
argument_list|()
decl_stmt|;
name|updateAddressPort
argument_list|(
name|greeter
argument_list|,
name|PORT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|fine
argument_list|(
literal|"Created greeter client."
argument_list|)
expr_stmt|;
name|ConnectionHelper
operator|.
name|setKeepAliveConnection
argument_list|(
name|greeter
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// oneway
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"CXF"
argument_list|)
expr_stmt|;
comment|// two-way
name|assertEquals
argument_list|(
literal|"CXF"
argument_list|,
name|greeter
operator|.
name|greetMe
argument_list|(
literal|"cxf"
argument_list|)
argument_list|)
expr_stmt|;
comment|// exception
try|try
block|{
name|greeter
operator|.
name|pingMe
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PingMeFault
name|ex
parameter_list|)
block|{
name|fail
argument_list|(
literal|"First invocation should have succeeded."
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|greeter
operator|.
name|pingMe
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expected PingMeFault not thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PingMeFault
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ex
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getMajor
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ex
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getMinor
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|MessageRecorder
name|mr
init|=
operator|new
name|MessageRecorder
argument_list|(
name|outRecorder
argument_list|,
name|inRecorder
argument_list|)
decl_stmt|;
name|mr
operator|.
name|awaitMessages
argument_list|(
literal|5
argument_list|,
literal|4
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|MessageFlow
name|mf
init|=
operator|new
name|MessageFlow
argument_list|(
name|outRecorder
operator|.
name|getOutboundMessages
argument_list|()
argument_list|,
name|inRecorder
operator|.
name|getInboundMessages
argument_list|()
argument_list|,
name|Names200408
operator|.
name|WSA_NAMESPACE_NAME
argument_list|,
name|RM10Constants
operator|.
name|NAMESPACE_URI
argument_list|)
decl_stmt|;
name|mf
operator|.
name|verifyMessages
argument_list|(
literal|5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|String
index|[]
name|expectedActions
init|=
operator|new
name|String
index|[]
block|{
name|RM10Constants
operator|.
name|INSTANCE
operator|.
name|getCreateSequenceAction
argument_list|()
block|,
name|GREETMEONEWAY_ACTION
block|,
name|GREETME_ACTION
block|,
name|PINGME_ACTION
block|,
name|PINGME_ACTION
block|}
decl_stmt|;
name|mf
operator|.
name|verifyActions
argument_list|(
name|expectedActions
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyMessageNumbers
argument_list|(
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|"1"
block|,
literal|"2"
block|,
literal|"3"
block|,
literal|"4"
block|}
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyLastMessage
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyAcknowledgements
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|}
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyMessages
argument_list|(
literal|4
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//        mf.verifyMessages(9, false);
comment|//        mf.verifyPartialResponses(5);
comment|//        mf.purgePartialResponses();
name|expectedActions
operator|=
operator|new
name|String
index|[]
block|{
name|RM10Constants
operator|.
name|INSTANCE
operator|.
name|getCreateSequenceResponseAction
argument_list|()
block|,
name|GREETME_RESPONSE_ACTION
block|,
name|PINGME_RESPONSE_ACTION
block|,
name|GREETER_FAULT_ACTION
block|}
expr_stmt|;
name|mf
operator|.
name|verifyActions
argument_list|(
name|expectedActions
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyMessageNumbers
argument_list|(
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|"1"
block|,
literal|"2"
block|,
literal|"3"
block|}
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyLastMessage
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|mf
operator|.
name|verifyAcknowledgements
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|,
literal|false
argument_list|)
expr_stmt|;
operator|(
operator|(
name|Closeable
operator|)
name|greeter
operator|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

