begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ServerRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|recorders
operator|.
name|InMessageRecorder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|recorders
operator|.
name|OutMessageRecorder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyAssertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|PolicyEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|All
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|ExactlyOne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|neethi
operator|.
name|Policy
import|;
end_import

begin_comment
comment|/**  * Base class for testing WS-Policy Framework using engage WS-RM Policy to engage WS-RM.  */
end_comment

begin_class
specifier|public
class|class
name|RMPolicyWsdlTestBase
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|GREETMEONEWAY_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/greetMeOneWayRequest"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|GREETME_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/greetMeRequest"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|GREETME_RESPONSE_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/greetMeResponse"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|PINGME_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/pingMeRequest"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|PINGME_RESPONSE_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/pingMeResponse"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|GREETER_FAULT_ACTION
init|=
literal|"http://cxf.apache.org/greeter_control/Greeter/pingMe/Fault/faultDetail"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|RMPolicyWsdlTestBase
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|OutMessageRecorder
name|outRecorder
decl_stmt|;
specifier|protected
name|InMessageRecorder
name|inRecorder
decl_stmt|;
specifier|public
specifier|abstract
specifier|static
class|class
name|ServerBase
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|protected
specifier|abstract
name|String
name|getConfigPath
parameter_list|()
function_decl|;
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|getConfigPath
argument_list|()
argument_list|)
decl_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|setBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|ServerRegistry
name|sr
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|ServerRegistry
operator|.
name|class
argument_list|)
decl_stmt|;
name|PolicyEngine
name|pe
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|PolicyEngine
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PolicyAssertion
argument_list|>
name|assertions1
init|=
name|getAssertions
argument_list|(
name|pe
argument_list|,
name|sr
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"2 assertions should be available"
argument_list|,
literal|2
argument_list|,
name|assertions1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PolicyAssertion
argument_list|>
name|assertions2
init|=
name|getAssertions
argument_list|(
name|pe
argument_list|,
name|sr
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1 assertion should be available"
argument_list|,
literal|1
argument_list|,
name|assertions2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Published greeter endpoints."
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|List
argument_list|<
name|PolicyAssertion
argument_list|>
name|getAssertions
parameter_list|(
name|PolicyEngine
name|pe
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
name|s
parameter_list|)
block|{
name|Policy
name|p1
init|=
name|pe
operator|.
name|getServerEndpointPolicy
argument_list|(
name|s
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getEndpointInfo
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|.
name|getPolicy
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ExactlyOne
argument_list|>
name|pops
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|p1
operator|.
name|getPolicyComponents
argument_list|()
argument_list|,
name|ExactlyOne
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"New policy must have 1 top level policy operator"
argument_list|,
literal|1
argument_list|,
name|pops
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|All
argument_list|>
name|alts
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|pops
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPolicyComponents
argument_list|()
argument_list|,
name|All
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1 alternatives should be available"
argument_list|,
literal|1
argument_list|,
name|alts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
name|alts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAssertions
argument_list|()
argument_list|,
name|PolicyAssertion
operator|.
name|class
argument_list|)
return|;
block|}
block|}
specifier|public
name|void
name|setUpBus
parameter_list|(
name|String
name|port
parameter_list|)
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|bus
operator|=
name|bf
operator|.
name|createBus
argument_list|(
literal|"org/apache/cxf/systest/ws/policy/rmwsdl.xml"
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|outRecorder
operator|=
operator|new
name|OutMessageRecorder
argument_list|()
expr_stmt|;
name|bus
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|outRecorder
argument_list|)
expr_stmt|;
name|inRecorder
operator|=
operator|new
name|InMessageRecorder
argument_list|()
expr_stmt|;
name|bus
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|inRecorder
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

