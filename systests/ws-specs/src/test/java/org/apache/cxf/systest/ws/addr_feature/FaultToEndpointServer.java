begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|addr_feature
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|AsyncHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|Addressing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|EndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|WSAddressingFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|soap
operator|.
name|DecoupledFaultHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|BadRecordLitFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|Greeter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|NoSuchCodeLitFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|BareDocumentResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|GreetMeLaterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|GreetMeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|GreetMeSometimeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|SayHiResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|TestDocLitFaultResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|TestNillableResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|handler
operator|.
name|AbstractHandler
import|;
end_import

begin_class
specifier|public
class|class
name|FaultToEndpointServer
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|static
specifier|final
name|String
name|FAULT_PORT
init|=
name|allocatePort
argument_list|(
name|FaultToEndpointServer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|FaultToEndpointServer
operator|.
name|class
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|EndpointImpl
name|ep
decl_stmt|;
specifier|private
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
name|faultToserver
decl_stmt|;
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|faultToserver
operator|=
operator|new
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|FAULT_PORT
argument_list|)
argument_list|)
expr_stmt|;
name|faultToserver
operator|.
name|setHandler
argument_list|(
operator|new
name|HelloHandler
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|faultToserver
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|setBus
argument_list|(
name|BusFactory
operator|.
name|getDefaultBus
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|implementor
init|=
operator|new
name|AddNumberImpl
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jaxws/add"
decl_stmt|;
name|ep
operator|=
operator|(
name|EndpointImpl
operator|)
name|Endpoint
operator|.
name|create
argument_list|(
name|implementor
argument_list|)
expr_stmt|;
name|ep
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|DecoupledFaultHandler
argument_list|()
argument_list|)
expr_stmt|;
name|ep
operator|.
name|getFeatures
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|WSAddressingFeature
argument_list|()
argument_list|)
expr_stmt|;
name|ep
operator|.
name|publish
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|Object
name|implementor2
init|=
operator|new
name|GreeterImpl
argument_list|()
decl_stmt|;
name|String
name|address2
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jaxws/greeter"
decl_stmt|;
name|ep
operator|=
operator|(
name|EndpointImpl
operator|)
name|Endpoint
operator|.
name|create
argument_list|(
name|implementor2
argument_list|)
expr_stmt|;
name|ep
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|DecoupledFaultHandler
argument_list|()
argument_list|)
expr_stmt|;
name|ep
operator|.
name|getFeatures
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|WSAddressingFeature
argument_list|()
argument_list|)
expr_stmt|;
name|ep
operator|.
name|publish
argument_list|(
name|address2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|faultToserver
operator|!=
literal|null
condition|)
block|{
name|faultToserver
operator|.
name|stop
argument_list|()
expr_stmt|;
name|faultToserver
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|faultToserver
operator|=
literal|null
expr_stmt|;
block|}
name|ep
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ep
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|FaultToEndpointServer
name|server
init|=
operator|new
name|FaultToEndpointServer
argument_list|()
decl_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|HelloHandler
extends|extends
name|AbstractHandler
block|{
specifier|private
specifier|static
name|String
name|faultRequestPath
decl_stmt|;
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|Request
name|baseRequest
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|response
operator|.
name|setContentType
argument_list|(
literal|"text/html;charset=utf-8"
argument_list|)
expr_stmt|;
name|faultRequestPath
operator|=
name|request
operator|.
name|getPathInfo
argument_list|()
expr_stmt|;
if|if
condition|(
literal|"/faultTo"
operator|.
name|equals
argument_list|(
name|faultRequestPath
argument_list|)
condition|)
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
block|}
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|.
name|getWriter
argument_list|()
operator|.
name|println
argument_list|(
literal|"Received"
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|String
name|getFaultRequestPath
parameter_list|()
block|{
return|return
name|faultRequestPath
return|;
block|}
block|}
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SOAPServiceAddressing"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.hello_world_soap_http.Greeter"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
name|wsdlLocation
operator|=
literal|"testutils/hello_world.wsdl"
argument_list|)
annotation|@
name|Addressing
specifier|public
class|class
name|GreeterImpl
implements|implements
name|Greeter
block|{
specifier|public
name|String
name|greetMe
parameter_list|(
name|String
name|me
parameter_list|)
block|{
return|return
literal|"Hello "
operator|+
name|me
return|;
block|}
specifier|public
name|String
name|greetMeLater
parameter_list|(
name|long
name|delay
parameter_list|)
block|{
if|if
condition|(
name|delay
operator|>
literal|0
condition|)
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|delay
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ex
parameter_list|)
block|{
comment|// ignore
block|}
block|}
return|return
literal|"Hello, finally"
return|;
block|}
specifier|public
name|void
name|greetMeOneWay
parameter_list|(
name|String
name|requestType
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"intended error"
argument_list|)
throw|;
block|}
specifier|public
name|String
name|sayHi
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|testDocLitFault
parameter_list|(
name|String
name|faultType
parameter_list|)
throws|throws
name|BadRecordLitFault
throws|,
name|NoSuchCodeLitFault
block|{         }
specifier|public
name|BareDocumentResponse
name|testDocLitBare
parameter_list|(
name|String
name|in
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|greetMeSometime
parameter_list|(
name|String
name|me
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Future
argument_list|<
name|?
argument_list|>
name|greetMeSometimeAsync
parameter_list|(
name|String
name|requestType
parameter_list|,
name|AsyncHandler
argument_list|<
name|GreetMeSometimeResponse
argument_list|>
name|asyncHandler
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|GreetMeSometimeResponse
argument_list|>
name|greetMeSometimeAsync
parameter_list|(
name|String
name|requestType
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|TestDocLitFaultResponse
argument_list|>
name|testDocLitFaultAsync
parameter_list|(
name|String
name|faultType
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|BareDocumentResponse
argument_list|>
name|testDocLitBareAsync
parameter_list|(
name|String
name|bare
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Future
argument_list|<
name|?
argument_list|>
name|greetMeAsync
parameter_list|(
name|String
name|requestType
parameter_list|,
name|AsyncHandler
argument_list|<
name|GreetMeResponse
argument_list|>
name|asyncHandler
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|GreetMeResponse
argument_list|>
name|greetMeAsync
parameter_list|(
name|String
name|requestType
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Future
argument_list|<
name|?
argument_list|>
name|greetMeLaterAsync
parameter_list|(
name|long
name|requestType
parameter_list|,
name|AsyncHandler
argument_list|<
name|GreetMeLaterResponse
argument_list|>
name|asyncHandler
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|GreetMeLaterResponse
argument_list|>
name|greetMeLaterAsync
parameter_list|(
name|long
name|requestType
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Future
argument_list|<
name|?
argument_list|>
name|sayHiAsync
parameter_list|(
name|AsyncHandler
argument_list|<
name|SayHiResponse
argument_list|>
name|asyncHandler
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|SayHiResponse
argument_list|>
name|sayHiAsync
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|testNillable
parameter_list|(
name|String
name|nillElem
parameter_list|,
name|int
name|intElem
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Response
argument_list|<
name|TestNillableResponse
argument_list|>
name|testNillableAsync
parameter_list|(
name|String
name|nillElem
parameter_list|,
name|int
name|intElem
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Future
argument_list|<
name|?
argument_list|>
name|testNillableAsync
parameter_list|(
name|String
name|nillElem
parameter_list|,
name|int
name|intElem
parameter_list|,
name|AsyncHandler
argument_list|<
name|TestNillableResponse
argument_list|>
name|asyncHandler
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Future
argument_list|<
name|?
argument_list|>
name|testDocLitFaultAsync
parameter_list|(
name|String
name|faultType
parameter_list|,
name|AsyncHandler
argument_list|<
name|TestDocLitFaultResponse
argument_list|>
name|asyncHandler
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

