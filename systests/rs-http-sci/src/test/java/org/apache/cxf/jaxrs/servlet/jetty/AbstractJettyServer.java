begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|servlet
operator|.
name|jetty
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|annotations
operator|.
name|AnnotationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|webapp
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|webapp
operator|.
name|WebAppContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|webapp
operator|.
name|WebXmlConfiguration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractJettyServer
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|private
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
name|server
decl_stmt|;
specifier|private
specifier|final
name|Resource
index|[]
name|resources
decl_stmt|;
specifier|private
specifier|final
name|String
name|contextPath
decl_stmt|;
specifier|private
specifier|final
name|int
name|port
decl_stmt|;
specifier|protected
name|AbstractJettyServer
parameter_list|(
specifier|final
name|String
name|contextPath
parameter_list|,
specifier|final
name|Resource
index|[]
name|resources
parameter_list|,
name|int
name|portNumber
parameter_list|)
block|{
name|this
operator|.
name|contextPath
operator|=
name|contextPath
expr_stmt|;
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|portNumber
expr_stmt|;
block|}
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|server
operator|=
operator|new
name|Server
argument_list|(
name|port
argument_list|)
expr_stmt|;
try|try
block|{
specifier|final
name|WebAppContext
name|context
init|=
operator|new
name|WebAppContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setContextPath
argument_list|(
name|contextPath
argument_list|)
expr_stmt|;
name|context
operator|.
name|setConfigurations
argument_list|(
operator|new
name|Configuration
index|[]
block|{
operator|new
name|WebXmlConfiguration
argument_list|()
block|,
operator|new
name|AnnotationConfiguration
argument_list|()
block|}
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|Resource
name|resource
range|:
name|resources
control|)
block|{
name|context
operator|.
name|getMetaData
argument_list|()
operator|.
name|addContainerResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
name|configureContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|configureServer
argument_list|(
name|server
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|configureServer
parameter_list|(
specifier|final
name|Server
name|theserver
parameter_list|)
throws|throws
name|Exception
block|{     }
specifier|protected
name|void
name|configureContext
parameter_list|(
specifier|final
name|WebAppContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{     }
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

