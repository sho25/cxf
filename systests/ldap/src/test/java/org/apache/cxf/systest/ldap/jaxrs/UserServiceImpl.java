begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ldap
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingEnumeration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|SearchControls
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|SearchCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|ldap
operator|.
name|LdapQueryVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|core
operator|.
name|AttributesMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|core
operator|.
name|LdapTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|filter
operator|.
name|AndFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|filter
operator|.
name|EqualsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|filter
operator|.
name|HardcodedFilter
import|;
end_import

begin_comment
comment|/**  * Search for a user's attributes in an LDAP backend. Note this is a test implementation only - care needs to be  * taken to avoid LDAP injection attacks in real-world scenarios!  */
end_comment

begin_class
specifier|public
class|class
name|UserServiceImpl
implements|implements
name|UserService
block|{
annotation|@
name|Override
specifier|public
name|User
name|searchUser
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"query"
argument_list|)
name|String
name|query
parameter_list|,
annotation|@
name|Context
name|SearchContext
name|searchContext
parameter_list|)
throws|throws
name|UserNotFoundFault
block|{
name|SearchCondition
argument_list|<
name|User
argument_list|>
name|sc
init|=
name|searchContext
operator|.
name|getCondition
argument_list|(
name|query
argument_list|,
name|User
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|sc
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|UserNotFoundFault
argument_list|(
literal|"Search exception"
argument_list|)
throw|;
block|}
name|LdapQueryVisitor
argument_list|<
name|User
argument_list|>
name|visitor
init|=
operator|new
name|LdapQueryVisitor
argument_list|<
name|User
argument_list|>
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"name"
argument_list|,
literal|"cn"
argument_list|)
argument_list|)
decl_stmt|;
name|sc
operator|.
name|accept
argument_list|(
name|visitor
operator|.
name|visitor
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|parsedQuery
init|=
name|visitor
operator|.
name|getQuery
argument_list|()
decl_stmt|;
name|ClassPathXmlApplicationContext
name|appContext
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"ldap-jaxrsport.xml"
argument_list|)
decl_stmt|;
name|LdapTemplate
name|template
init|=
operator|(
name|LdapTemplate
operator|)
name|appContext
operator|.
name|getBean
argument_list|(
literal|"ldapTemplate"
argument_list|)
decl_stmt|;
name|String
name|userBaseDn
init|=
literal|"OU=users,DC=example,DC=com"
decl_stmt|;
name|String
index|[]
name|attributes
init|=
operator|new
name|String
index|[]
block|{
literal|"sn"
block|,
literal|"cn"
block|}
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
name|attrs
init|=
name|getAttributesOfEntry
argument_list|(
name|template
argument_list|,
name|userBaseDn
argument_list|,
literal|"person"
argument_list|,
name|parsedQuery
argument_list|,
name|attributes
argument_list|)
decl_stmt|;
name|appContext
operator|.
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
name|attrs
operator|==
literal|null
operator|||
name|attrs
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|UserNotFoundFault
argument_list|(
literal|"Search exception"
argument_list|)
throw|;
block|}
name|User
name|user
init|=
operator|new
name|User
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
name|result
range|:
name|attrs
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
literal|"sn"
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|user
operator|.
name|setSurname
argument_list|(
operator|(
name|String
operator|)
name|result
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"cn"
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|user
operator|.
name|setName
argument_list|(
operator|(
name|String
operator|)
name|result
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|UserNotFoundFault
argument_list|(
literal|"Search exception"
argument_list|)
throw|;
block|}
return|return
name|user
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
name|getAttributesOfEntry
parameter_list|(
name|LdapTemplate
name|ldapTemplate
parameter_list|,
name|String
name|baseDN
parameter_list|,
name|String
name|objectClass
parameter_list|,
name|String
name|searchFilter
parameter_list|,
name|String
index|[]
name|searchAttributes
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
name|ldapAttributes
init|=
literal|null
decl_stmt|;
name|AttributesMapper
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
argument_list|>
name|mapper
init|=
operator|new
name|AttributesMapper
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
argument_list|>
argument_list|()
block|{
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
name|mapFromAttributes
parameter_list|(
name|Attributes
name|attrs
parameter_list|)
throws|throws
name|NamingException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attribute
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|NamingEnumeration
argument_list|<
name|?
extends|extends
name|Attribute
argument_list|>
name|attrEnum
init|=
name|attrs
operator|.
name|getAll
argument_list|()
decl_stmt|;
while|while
condition|(
name|attrEnum
operator|.
name|hasMore
argument_list|()
condition|)
block|{
name|Attribute
name|att
init|=
name|attrEnum
operator|.
name|next
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|att
operator|.
name|getID
argument_list|()
argument_list|,
name|att
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
block|}
decl_stmt|;
name|AndFilter
name|filter
init|=
operator|new
name|AndFilter
argument_list|()
decl_stmt|;
name|filter
operator|.
name|and
argument_list|(
operator|new
name|EqualsFilter
argument_list|(
literal|"objectclass"
argument_list|,
name|objectClass
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
operator|new
name|HardcodedFilter
argument_list|(
name|searchFilter
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|result
init|=
name|ldapTemplate
operator|.
name|search
argument_list|(
operator|(
name|baseDN
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|baseDN
argument_list|,
name|filter
operator|.
name|toString
argument_list|()
argument_list|,
name|SearchControls
operator|.
name|SUBTREE_SCOPE
argument_list|,
name|searchAttributes
argument_list|,
name|mapper
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
operator|&&
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|ldapAttributes
operator|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ldapAttributes
return|;
block|}
block|}
end_class

end_unit

