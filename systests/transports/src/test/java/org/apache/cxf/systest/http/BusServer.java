begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|http
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_comment
comment|/**  * This server just instantiates a Bus, full stop.  * Everything else is designed to be spring-loaded.  */
end_comment

begin_class
specifier|public
class|class
name|BusServer
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|public
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|PORTMAP
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|void
name|resetPortMap
parameter_list|()
block|{
name|PORTMAP
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|9
condition|;
name|x
operator|++
control|)
block|{
name|PORTMAP
operator|.
name|put
argument_list|(
literal|"PORT"
operator|+
name|x
argument_list|,
name|TestUtil
operator|.
name|getNewPortNumber
argument_list|(
name|BusServer
operator|.
name|class
argument_list|,
name|x
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|String
name|getPort
parameter_list|(
name|int
name|x
parameter_list|)
block|{
if|if
condition|(
name|PORTMAP
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|9
condition|;
name|y
operator|++
control|)
block|{
name|PORTMAP
operator|.
name|put
argument_list|(
literal|"PORT"
operator|+
name|y
argument_list|,
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|BusServer
operator|.
name|class
argument_list|,
name|y
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|PORTMAP
operator|.
name|get
argument_list|(
literal|"PORT"
operator|+
name|x
argument_list|)
return|;
block|}
specifier|protected
name|void
name|run
parameter_list|()
block|{
comment|//
comment|// Just instantiate the Bus; services will be instantiated
comment|// and published automatically through Spring
comment|//
specifier|final
name|BusFactory
name|factory
init|=
name|BusFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|Bus
name|bus
init|=
name|factory
operator|.
name|createBus
argument_list|()
decl_stmt|;
name|setBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|BusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|BusServer
name|s
init|=
operator|new
name|BusServer
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

