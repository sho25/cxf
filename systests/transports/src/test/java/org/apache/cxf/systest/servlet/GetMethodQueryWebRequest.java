begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|GetMethodWebRequest
import|;
end_import

begin_comment
comment|//Customer WebRequest for sending the "http://localhost/xxx?wsdl" request
end_comment

begin_class
specifier|public
class|class
name|GetMethodQueryWebRequest
extends|extends
name|GetMethodWebRequest
block|{
specifier|private
name|String
name|urlString
decl_stmt|;
specifier|public
name|GetMethodQueryWebRequest
parameter_list|(
name|String
name|urlStr
parameter_list|)
block|{
name|super
argument_list|(
name|urlStr
argument_list|)
expr_stmt|;
name|urlString
operator|=
name|urlStr
expr_stmt|;
block|}
specifier|public
name|String
name|getQueryString
parameter_list|()
block|{
name|int
name|pos
init|=
name|urlString
operator|.
name|indexOf
argument_list|(
literal|'?'
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|>
literal|0
condition|)
block|{
return|return
name|urlString
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|""
return|;
block|}
block|}
block|}
end_class

end_unit

