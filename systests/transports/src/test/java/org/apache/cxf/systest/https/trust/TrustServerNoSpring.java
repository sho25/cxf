begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|https
operator|.
name|trust
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|KeyManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|jsse
operator|.
name|TLSServerParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|security
operator|.
name|ClientAuthentication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|http
operator|.
name|GreeterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPServerEngineFactory
import|;
end_import

begin_class
specifier|public
class|class
name|TrustServerNoSpring
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|public
name|TrustServerNoSpring
parameter_list|()
block|{      }
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|Bus
name|busLocal
init|=
name|BusFactory
operator|.
name|getDefaultBus
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|setBus
argument_list|(
name|busLocal
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|TrustManagerTest
operator|.
name|PORT3
operator|+
literal|"/SoapContext/HttpsPort"
decl_stmt|;
try|try
block|{
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/Bethal.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|KeyManagerFactory
name|kmf
init|=
name|KeyManagerFactory
operator|.
name|getInstance
argument_list|(
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|kmf
operator|.
name|init
argument_list|(
name|keyStore
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|TLSServerParameters
name|tlsParams
init|=
operator|new
name|TLSServerParameters
argument_list|()
decl_stmt|;
name|tlsParams
operator|.
name|setKeyManagers
argument_list|(
name|kmf
operator|.
name|getKeyManagers
argument_list|()
argument_list|)
expr_stmt|;
name|ClientAuthentication
name|clientAuthentication
init|=
operator|new
name|ClientAuthentication
argument_list|()
decl_stmt|;
name|clientAuthentication
operator|.
name|setRequired
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|clientAuthentication
operator|.
name|setWant
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tlsParams
operator|.
name|setClientAuthentication
argument_list|(
name|clientAuthentication
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|TLSServerParameters
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"tlsId"
argument_list|,
name|tlsParams
argument_list|)
expr_stmt|;
name|JettyHTTPServerEngineFactory
name|factory
init|=
name|busLocal
operator|.
name|getExtension
argument_list|(
name|JettyHTTPServerEngineFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|factory
operator|.
name|setTlsServerParametersMap
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|factory
operator|.
name|createJettyHTTPServerEngine
argument_list|(
literal|"localhost"
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|TrustManagerTest
operator|.
name|PORT3
argument_list|)
argument_list|,
literal|"https"
argument_list|,
literal|"tlsId"
argument_list|)
expr_stmt|;
name|factory
operator|.
name|initComplete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
operator|new
name|GreeterImpl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

