begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|corba
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_corba
operator|.
name|Greeter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_corba
operator|.
name|PingMeFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_corba
operator|.
name|types
operator|.
name|FaultDetail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_class
annotation|@
name|javax
operator|.
name|jws
operator|.
name|WebService
argument_list|(
name|portName
operator|=
literal|"GreeterCORBAPort"
argument_list|,
name|serviceName
operator|=
literal|"GreeterCORBAService"
argument_list|,
name|targetNamespace
operator|=
literal|"http://cxf.apache.org/hello_world_corba"
argument_list|,
name|wsdlLocation
operator|=
literal|"classpath:/wsdl_systest/hello_world_corba.wsdl"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.cxf.hello_world_corba.Greeter"
argument_list|)
specifier|public
class|class
name|BaseGreeterImpl
implements|implements
name|Greeter
block|{
specifier|public
specifier|static
specifier|final
name|String
name|GREETME_IN
init|=
literal|"test in"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|GREETME_OUT
init|=
literal|"test out"
decl_stmt|;
specifier|static
specifier|final
name|String
name|EX_STRING
init|=
literal|"CXF RUNTIME EXCEPTION"
decl_stmt|;
specifier|public
name|String
name|greetMe
parameter_list|(
name|String
name|me
parameter_list|)
block|{
return|return
literal|"Hello "
operator|+
name|me
return|;
block|}
specifier|public
name|void
name|greetMeOneWay
parameter_list|(
name|String
name|me
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"William"
argument_list|,
name|me
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|sayHi
parameter_list|()
block|{
return|return
name|GREETME_OUT
return|;
block|}
specifier|public
name|void
name|pingMe
parameter_list|(
name|String
name|faultType
parameter_list|)
throws|throws
name|PingMeFault
block|{
if|if
condition|(
literal|"USER"
operator|.
name|equals
argument_list|(
name|faultType
argument_list|)
condition|)
block|{
name|FaultDetail
name|detail
init|=
operator|new
name|FaultDetail
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setMajor
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setMinor
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|PingMeFault
argument_list|(
literal|"USER FAULT TEST"
argument_list|,
name|detail
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
literal|"SYSTEM"
operator|.
name|equals
argument_list|(
name|faultType
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
operator|new
name|Message
argument_list|(
name|EX_STRING
argument_list|,
operator|(
name|ResourceBundle
operator|)
literal|null
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"FAULT TEST"
block|}
argument_list|)
argument_list|)
throw|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|EX_STRING
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

