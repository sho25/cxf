begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|schemaimport
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|SchemaImportTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|Server
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startservers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testImportSchema
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|schemaURL
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/schemaimport/sayHi"
operator|+
literal|"?xsd=sayhi/sayhi/sayhi-schema1.xsd"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|schemaURL
argument_list|)
decl_stmt|;
name|InputStream
name|ins
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ins
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
name|String
name|output
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ins
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|output
operator|.
name|indexOf
argument_list|(
literal|"sayHiArray"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Can not access the import schema"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|ins
operator|!=
literal|null
condition|)
block|{
name|ins
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testImportWsdl
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|schemaURL
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/schemaimport/sayHi"
operator|+
literal|"?wsdl=sayhi/sayhi/a.wsdl"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|schemaURL
argument_list|)
decl_stmt|;
name|InputStream
name|ins
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ins
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
name|String
name|output
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ins
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|output
operator|.
name|indexOf
argument_list|(
literal|"sayHiArray"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Can not access the import wsdl"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|ins
operator|!=
literal|null
condition|)
block|{
name|ins
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

