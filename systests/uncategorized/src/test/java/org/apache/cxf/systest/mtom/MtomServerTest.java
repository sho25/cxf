begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|mtom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|attachment
operator|.
name|AttachmentDeserializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Attachment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|ExchangeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|TestUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Conduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|ConduitInitiatorManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|DestinationFactoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|MessageObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|MtomServerTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT1
init|=
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|MtomServerTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PORT2
init|=
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|MtomServerTest
operator|.
name|class
argument_list|,
literal|2
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|HTTP_ID
init|=
literal|"http://schemas.xmlsoap.org/wsdl/http/"
decl_stmt|;
specifier|private
specifier|static
name|TestUtilities
name|testUtilities
init|=
operator|new
name|TestUtilities
argument_list|(
name|MtomPolicyTest
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|createTheBus
parameter_list|()
throws|throws
name|Exception
block|{
name|createStaticBus
argument_list|()
expr_stmt|;
name|testUtilities
operator|.
name|setBus
argument_list|(
name|getStaticBus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMtomRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|JaxWsServerFactoryBean
name|sf
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setServiceBean
argument_list|(
operator|new
name|EchoService
argument_list|()
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setBus
argument_list|(
name|getStaticBus
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT1
operator|+
literal|"/EchoService"
decl_stmt|;
name|sf
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Message
operator|.
name|MTOM_ENABLED
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|(
literal|null
argument_list|,
name|HTTP_ID
argument_list|)
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|ConduitInitiatorManager
name|conduitMgr
init|=
name|getStaticBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|ConduitInitiatorManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ConduitInitiator
name|conduitInit
init|=
name|conduitMgr
operator|.
name|getConduitInitiator
argument_list|(
literal|"http://schemas.xmlsoap.org/soap/http"
argument_list|)
decl_stmt|;
name|Conduit
name|conduit
init|=
name|conduitInit
operator|.
name|getConduit
argument_list|(
name|ei
argument_list|,
name|getStaticBus
argument_list|()
argument_list|)
decl_stmt|;
name|TestUtilities
operator|.
name|TestMessageObserver
name|obs
init|=
operator|new
name|TestUtilities
operator|.
name|TestMessageObserver
argument_list|()
decl_stmt|;
name|conduit
operator|.
name|setMessageObserver
argument_list|(
name|obs
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"application/xop+xml\"; "
operator|+
literal|"start=\"<soap.xml@xfire.codehaus.org>\"; "
operator|+
literal|"start-info=\"text/xml\"; "
operator|+
literal|"boundary=\"----=_Part_4_701508.1145579811786\""
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|conduit
operator|.
name|prepare
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|OutputStream
name|os
init|=
name|m
operator|.
name|getContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|testUtilities
operator|.
name|getResourceAsStream
argument_list|(
literal|"request"
argument_list|)
decl_stmt|;
if|if
condition|(
name|is
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not find resource "
operator|+
literal|"request"
argument_list|)
throw|;
block|}
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|os
operator|.
name|flush
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|res
init|=
name|obs
operator|.
name|getResponseStream
argument_list|()
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|MessageImpl
name|resMsg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|resMsg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|res
argument_list|)
argument_list|)
expr_stmt|;
name|resMsg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|obs
operator|.
name|getResponseContentType
argument_list|()
argument_list|)
expr_stmt|;
name|resMsg
operator|.
name|setExchange
argument_list|(
operator|new
name|ExchangeImpl
argument_list|()
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|resMsg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|attachments
init|=
name|resMsg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|attachments
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|attachments
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|inAtt
init|=
name|attachments
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|inAtt
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|27364
argument_list|,
name|out
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testURLBasedAttachment
parameter_list|()
throws|throws
name|Exception
block|{
name|JaxWsServerFactoryBean
name|sf
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setServiceBean
argument_list|(
operator|new
name|EchoService
argument_list|()
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setBus
argument_list|(
name|getStaticBus
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT2
operator|+
literal|"/EchoService"
decl_stmt|;
name|sf
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Message
operator|.
name|MTOM_ENABLED
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
name|sf
operator|.
name|create
argument_list|()
decl_stmt|;
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getDataBinding
argument_list|()
operator|.
name|setMtomThreshold
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|servStatic
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"mtom-policy.xml"
argument_list|)
argument_list|,
literal|"http://localhost:"
operator|+
name|PORT2
operator|+
literal|"/policy.xsd"
argument_list|)
expr_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|(
literal|null
argument_list|,
name|HTTP_ID
argument_list|)
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|ConduitInitiatorManager
name|conduitMgr
init|=
name|getStaticBus
argument_list|()
operator|.
name|getExtension
argument_list|(
name|ConduitInitiatorManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ConduitInitiator
name|conduitInit
init|=
name|conduitMgr
operator|.
name|getConduitInitiator
argument_list|(
literal|"http://schemas.xmlsoap.org/soap/http"
argument_list|)
decl_stmt|;
name|Conduit
name|conduit
init|=
name|conduitInit
operator|.
name|getConduit
argument_list|(
name|ei
argument_list|,
name|getStaticBus
argument_list|()
argument_list|)
decl_stmt|;
name|TestUtilities
operator|.
name|TestMessageObserver
name|obs
init|=
operator|new
name|TestUtilities
operator|.
name|TestMessageObserver
argument_list|()
decl_stmt|;
name|conduit
operator|.
name|setMessageObserver
argument_list|(
name|obs
argument_list|)
expr_stmt|;
name|Message
name|m
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|String
name|ct
init|=
literal|"multipart/related; type=\"application/xop+xml\"; "
operator|+
literal|"start=\"<soap.xml@xfire.codehaus.org>\"; "
operator|+
literal|"start-info=\"text/xml; charset=utf-8\"; "
operator|+
literal|"boundary=\"----=_Part_4_701508.1145579811786\""
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|ct
argument_list|)
expr_stmt|;
name|conduit
operator|.
name|prepare
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|OutputStream
name|os
init|=
name|m
operator|.
name|getContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|testUtilities
operator|.
name|getResourceAsStream
argument_list|(
literal|"request-url-attachment"
argument_list|)
decl_stmt|;
if|if
condition|(
name|is
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not find resource "
operator|+
literal|"request"
argument_list|)
throw|;
block|}
name|ByteArrayOutputStream
name|bout
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
name|bout
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|bout
operator|.
name|toString
argument_list|(
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|s
operator|=
name|s
operator|.
name|replaceAll
argument_list|(
literal|":9036/"
argument_list|,
literal|":"
operator|+
name|PORT2
operator|+
literal|"/"
argument_list|)
expr_stmt|;
name|os
operator|.
name|write
argument_list|(
name|s
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|os
operator|.
name|flush
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|res
init|=
name|obs
operator|.
name|getResponseStream
argument_list|()
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|MessageImpl
name|resMsg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|resMsg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|res
argument_list|)
argument_list|)
expr_stmt|;
name|resMsg
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
name|obs
operator|.
name|getResponseContentType
argument_list|()
argument_list|)
expr_stmt|;
name|resMsg
operator|.
name|setExchange
argument_list|(
operator|new
name|ExchangeImpl
argument_list|()
argument_list|)
expr_stmt|;
name|AttachmentDeserializer
name|deserializer
init|=
operator|new
name|AttachmentDeserializer
argument_list|(
name|resMsg
argument_list|)
decl_stmt|;
name|deserializer
operator|.
name|initializeAttachments
argument_list|()
expr_stmt|;
name|Collection
argument_list|<
name|Attachment
argument_list|>
name|attachments
init|=
name|resMsg
operator|.
name|getAttachments
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|attachments
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|attachments
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Attachment
name|inAtt
init|=
name|attachments
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|inAtt
operator|.
name|getDataHandler
argument_list|()
operator|.
name|getInputStream
argument_list|()
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong size: "
operator|+
name|out
operator|.
name|size
argument_list|()
operator|+
literal|"\n"
operator|+
name|out
operator|.
name|toString
argument_list|()
argument_list|,
name|out
operator|.
name|size
argument_list|()
operator|>
literal|970
operator|&&
name|out
operator|.
name|size
argument_list|()
operator|<
literal|1020
argument_list|)
expr_stmt|;
name|unregisterServStatic
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT2
operator|+
literal|"/policy.xsd"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|unregisterServStatic
parameter_list|(
name|String
name|add
parameter_list|)
throws|throws
name|Exception
block|{
name|Bus
name|bus
init|=
name|getStaticBus
argument_list|()
decl_stmt|;
name|DestinationFactoryManager
name|dfm
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|DestinationFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|DestinationFactory
name|df
init|=
name|dfm
operator|.
name|getDestinationFactory
argument_list|(
literal|"http://cxf.apache.org/transports/http/configuration"
argument_list|)
decl_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|()
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|add
argument_list|)
expr_stmt|;
name|Destination
name|d
init|=
name|df
operator|.
name|getDestination
argument_list|(
name|ei
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|d
operator|.
name|setMessageObserver
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * Serve static file      */
specifier|private
name|void
name|servStatic
parameter_list|(
specifier|final
name|URL
name|resource
parameter_list|,
specifier|final
name|String
name|add
parameter_list|)
throws|throws
name|Exception
block|{
name|Bus
name|bus
init|=
name|getStaticBus
argument_list|()
decl_stmt|;
name|DestinationFactoryManager
name|dfm
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|DestinationFactoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|DestinationFactory
name|df
init|=
name|dfm
operator|.
name|getDestinationFactory
argument_list|(
literal|"http://cxf.apache.org/transports/http/configuration"
argument_list|)
decl_stmt|;
name|EndpointInfo
name|ei
init|=
operator|new
name|EndpointInfo
argument_list|()
decl_stmt|;
name|ei
operator|.
name|setAddress
argument_list|(
name|add
argument_list|)
expr_stmt|;
name|Destination
name|d
init|=
name|df
operator|.
name|getDestination
argument_list|(
name|ei
argument_list|,
name|bus
argument_list|)
decl_stmt|;
name|d
operator|.
name|setMessageObserver
argument_list|(
operator|new
name|MessageObserver
argument_list|()
block|{
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
try|try
block|{
comment|// HTTP seems to need this right now...
name|ExchangeImpl
name|ex
init|=
operator|new
name|ExchangeImpl
argument_list|()
decl_stmt|;
name|ex
operator|.
name|setInMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|Conduit
name|backChannel
init|=
name|message
operator|.
name|getDestination
argument_list|()
operator|.
name|getBackChannel
argument_list|(
name|message
argument_list|)
decl_stmt|;
name|MessageImpl
name|res
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|ex
operator|.
name|setOutMessage
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|res
operator|.
name|put
argument_list|(
name|Message
operator|.
name|CONTENT_TYPE
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|backChannel
operator|.
name|prepare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|OutputStream
name|out
init|=
name|res
operator|.
name|getContent
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|resource
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
name|out
argument_list|,
literal|2048
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|backChannel
operator|.
name|close
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

