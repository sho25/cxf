begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|soapheader_ext
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|soap_ext_header
operator|.
name|audit
operator|.
name|Audit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|soap_ext_header
operator|.
name|ws
operator|.
name|SamplePortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|soap_ext_header
operator|.
name|ws
operator|.
name|SampleService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|ExtSoapHeaderClientServerTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT0
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|0
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PORT1
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SamplePortType
name|client
decl_stmt|;
specifier|private
specifier|static
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
name|extserver
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|SERVIVE_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/soap_ext_header/ws"
argument_list|,
literal|"SampleService"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|String
name|address0
init|=
literal|"http://localhost:"
operator|+
name|PORT0
operator|+
literal|"/SoapExtHeader/SampleService"
decl_stmt|;
name|Object
name|implementor1
init|=
operator|new
name|SamplePortTypeImpl
argument_list|()
decl_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address0
argument_list|,
name|implementor1
argument_list|)
expr_stmt|;
name|String
name|address1
init|=
literal|"http://localhost:"
operator|+
name|PORT1
operator|+
literal|"/SoapExtHeader/SampleService"
decl_stmt|;
name|JaxWsServerFactoryBean
name|sf
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setServiceClass
argument_list|(
name|SamplePortTypeImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|WebServiceClient
name|webService
init|=
name|SampleService
operator|.
name|class
operator|.
name|getAnnotation
argument_list|(
name|WebServiceClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|sf
operator|.
name|setServiceName
argument_list|(
operator|new
name|QName
argument_list|(
name|webService
operator|.
name|targetNamespace
argument_list|()
argument_list|,
name|webService
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setWsdlLocation
argument_list|(
name|webService
operator|.
name|wsdlLocation
argument_list|()
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setAddress
argument_list|(
name|address1
argument_list|)
expr_stmt|;
name|extserver
operator|=
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|createStaticBus
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|initClient
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownExtServer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|extserver
operator|!=
literal|null
condition|)
block|{
name|extserver
operator|.
name|stop
argument_list|()
expr_stmt|;
name|extserver
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|initClient
parameter_list|()
block|{
name|URL
name|wsdl
init|=
name|ExtSoapHeaderClientServerTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/wsdl_systest/soap_ext_header.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"WSDL is null"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|SampleService
name|service
init|=
operator|new
name|SampleService
argument_list|(
name|wsdl
argument_list|,
name|SERVIVE_NAME
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Service is null "
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|client
operator|=
name|service
operator|.
name|getSamplePort
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithArg
parameter_list|()
throws|throws
name|Exception
block|{
name|testWithArg
argument_list|(
name|PORT0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithArgWSDL
parameter_list|()
throws|throws
name|Exception
block|{
name|testWithArg
argument_list|(
name|PORT1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithNoArg
parameter_list|()
throws|throws
name|Exception
block|{
name|testWithNoArg
argument_list|(
name|PORT0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithNoArgWSDL
parameter_list|()
throws|throws
name|Exception
block|{
name|testWithNoArg
argument_list|(
name|PORT1
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testWithArg
parameter_list|(
name|String
name|port
parameter_list|)
throws|throws
name|Exception
block|{
name|updateAddressPort
argument_list|(
name|client
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|Audit
name|audit
init|=
name|createAudit
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|res
init|=
name|client
operator|.
name|singleArg
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Hello"
argument_list|)
argument_list|,
name|audit
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jerry"
argument_list|,
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testWithNoArg
parameter_list|(
name|String
name|port
parameter_list|)
throws|throws
name|Exception
block|{
name|updateAddressPort
argument_list|(
name|client
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|Audit
name|audit
init|=
name|createAudit
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|res
init|=
name|client
operator|.
name|noArgs
argument_list|(
name|audit
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"george"
argument_list|,
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Audit
name|createAudit
parameter_list|()
block|{
name|Audit
name|audit
init|=
operator|new
name|Audit
argument_list|()
decl_stmt|;
name|audit
operator|.
name|setMessageId
argument_list|(
literal|"m1"
argument_list|)
expr_stmt|;
name|audit
operator|.
name|setSender
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
return|return
name|audit
return|;
block|}
block|}
end_class

end_unit

