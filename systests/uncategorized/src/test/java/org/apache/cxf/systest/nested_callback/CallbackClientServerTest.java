begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|nested_callback
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|addressing
operator|.
name|EndpointReferenceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|nested_callback
operator|.
name|NestedCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|nested_callback
operator|.
name|SOAPService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|nested_callback
operator|.
name|ServerPortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CallbackClientServerTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|Server
operator|.
name|PORT
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CB_PORT
init|=
name|allocatePort
argument_list|(
name|CallbackClientServerTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|SERVICE_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/nested_callback"
argument_list|,
literal|"SOAPService"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|SERVICE_NAME_CALLBACK
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/nested_callback"
argument_list|,
literal|"CallbackService"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|PORT_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/nested_callback"
argument_list|,
literal|"SOAPPort"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|PORT_NAME_CALLBACK
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/nested_callback"
argument_list|,
literal|"CallbackPort"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
name|PORT_TYPE_CALLBACK
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/nested_callback"
argument_list|,
literal|"CallbackPortType"
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCallback
parameter_list|()
throws|throws
name|Exception
block|{
name|Object
name|implementor
init|=
operator|new
name|CallbackImpl
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|CB_PORT
operator|+
literal|"/CallbackContext/NestedCallbackPort"
decl_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|URL
name|wsdlURL
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/nested_callback.wsdl"
argument_list|)
decl_stmt|;
name|SOAPService
name|ss
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdlURL
argument_list|,
name|SERVICE_NAME
argument_list|)
decl_stmt|;
name|ServerPortType
name|port
init|=
name|ss
operator|.
name|getPort
argument_list|(
name|PORT_NAME
argument_list|,
name|ServerPortType
operator|.
name|class
argument_list|)
decl_stmt|;
name|updateAddressPort
argument_list|(
name|port
argument_list|,
name|PORT
argument_list|)
expr_stmt|;
name|EndpointReferenceType
name|ref
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ref
operator|=
name|EndpointReferenceUtils
operator|.
name|getEndpointReference
argument_list|(
name|wsdlURL
argument_list|,
name|SERVICE_NAME_CALLBACK
argument_list|,
name|PORT_NAME_CALLBACK
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
name|EndpointReferenceUtils
operator|.
name|setInterfaceName
argument_list|(
name|ref
argument_list|,
name|PORT_TYPE_CALLBACK
argument_list|)
expr_stmt|;
name|EndpointReferenceUtils
operator|.
name|setAddress
argument_list|(
name|ref
argument_list|,
name|address
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|NestedCallback
name|callbackObject
init|=
operator|new
name|NestedCallback
argument_list|()
decl_stmt|;
name|Source
name|source
init|=
name|EndpointReferenceUtils
operator|.
name|convertToXML
argument_list|(
name|ref
argument_list|)
decl_stmt|;
name|W3CEndpointReference
name|w3cEpr
init|=
operator|new
name|W3CEndpointReference
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|callbackObject
operator|.
name|setCallback
argument_list|(
name|w3cEpr
argument_list|)
expr_stmt|;
name|String
name|resp
init|=
name|port
operator|.
name|registerCallback
argument_list|(
name|callbackObject
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"registerCallback called"
argument_list|,
name|resp
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

