begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|factory_pattern
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|factory_pattern
operator|.
name|IsEvenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|factory_pattern
operator|.
name|ObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|EndpointReferenceUtils
import|;
end_import

begin_class
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"NumberService"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.cxf.factory_pattern.Number"
argument_list|,
name|targetNamespace
operator|=
literal|"http://cxf.apache.org/factory_pattern"
argument_list|)
specifier|public
class|class
name|NumberImpl
implements|implements
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|factory_pattern
operator|.
name|Number
block|{
annotation|@
name|Resource
specifier|protected
name|WebServiceContext
name|wsContext
decl_stmt|;
specifier|public
name|IsEvenResponse
name|isEven
parameter_list|()
block|{
name|String
name|id
init|=
name|idFromWebServiceContext
argument_list|(
name|getWebSercviceContext
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|stateFromId
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|boolean
name|ret
init|=
name|evalIsEeven
argument_list|(
name|num
argument_list|)
decl_stmt|;
return|return
name|genResponse
argument_list|(
name|ret
argument_list|)
return|;
block|}
specifier|protected
name|WebServiceContext
name|getWebSercviceContext
parameter_list|()
block|{
return|return
name|wsContext
return|;
block|}
specifier|protected
name|String
name|idFromWebServiceContext
parameter_list|(
name|WebServiceContext
name|wsC
parameter_list|)
block|{
name|MessageContext
name|mc
init|=
name|wsC
operator|.
name|getMessageContext
argument_list|()
decl_stmt|;
return|return
name|idFromMessageContext
argument_list|(
name|mc
argument_list|)
return|;
block|}
specifier|protected
name|String
name|idFromMessageContext
parameter_list|(
name|MessageContext
name|mc
parameter_list|)
block|{
name|String
name|id
init|=
name|EndpointReferenceUtils
operator|.
name|getEndpointReferenceId
argument_list|(
name|mc
argument_list|)
decl_stmt|;
name|boolean
name|jmsInvoke
init|=
literal|null
operator|!=
name|mc
operator|.
name|get
argument_list|(
name|JMSConstants
operator|.
name|JMS_REQUEST_MESSAGE
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"999"
operator|.
name|equals
argument_list|(
name|id
argument_list|)
operator|&&
name|jmsInvoke
condition|)
block|{
comment|// verification that this is indeed JMS
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"This is indeed JMS, id="
operator|+
name|id
argument_list|)
throw|;
block|}
return|return
name|id
return|;
block|}
specifier|private
name|IsEvenResponse
name|genResponse
parameter_list|(
name|boolean
name|v
parameter_list|)
block|{
name|IsEvenResponse
name|resp
init|=
operator|new
name|ObjectFactory
argument_list|()
operator|.
name|createIsEvenResponse
argument_list|()
decl_stmt|;
name|resp
operator|.
name|setEven
argument_list|(
name|v
argument_list|)
expr_stmt|;
return|return
name|resp
return|;
block|}
specifier|private
name|boolean
name|evalIsEeven
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|boolean
name|isEven
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|num
operator|!=
literal|0
operator|&&
name|num
operator|%
literal|2
operator|!=
literal|0
condition|)
block|{
name|isEven
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|isEven
return|;
block|}
specifier|private
name|int
name|stateFromId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|int
name|num
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|id
operator|!=
literal|null
condition|)
block|{
name|Integer
name|val
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|num
operator|=
name|val
operator|.
name|intValue
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"State is an empty string, cannot determine val"
argument_list|)
throw|;
block|}
return|return
name|num
return|;
block|}
block|}
end_class

end_unit

