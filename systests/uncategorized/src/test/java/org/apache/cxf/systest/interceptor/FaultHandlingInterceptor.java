begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|PingMeFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|greeter_control
operator|.
name|types
operator|.
name|FaultDetail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|FaultMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|AbstractPhaseInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|FaultHandlingInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|public
name|FaultHandlingInterceptor
parameter_list|()
block|{
name|super
argument_list|(
name|Phase
operator|.
name|USER_LOGICAL
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|FaultMode
name|mode
init|=
name|MessageUtils
operator|.
name|getFaultMode
argument_list|(
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|mode
condition|)
block|{
name|Throwable
name|cause
init|=
name|message
operator|.
name|getContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
operator|.
name|getCause
argument_list|()
decl_stmt|;
if|if
condition|(
name|FaultMode
operator|.
name|CHECKED_APPLICATION_FAULT
operator|==
name|mode
condition|)
block|{
name|PingMeFault
name|original
init|=
operator|(
name|PingMeFault
operator|)
name|cause
decl_stmt|;
name|FaultDetail
name|detail
init|=
operator|new
name|FaultDetail
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setMajor
argument_list|(
operator|(
name|short
operator|)
literal|20
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setMinor
argument_list|(
operator|(
name|short
operator|)
literal|10
argument_list|)
expr_stmt|;
name|PingMeFault
name|replaced
init|=
operator|new
name|PingMeFault
argument_list|(
name|original
operator|.
name|getMessage
argument_list|()
argument_list|,
name|detail
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|,
operator|new
name|Fault
argument_list|(
name|replaced
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|RuntimeException
name|original
init|=
operator|(
name|RuntimeException
operator|)
name|cause
decl_stmt|;
name|RuntimeException
name|replaced
init|=
operator|new
name|RuntimeException
argument_list|(
name|original
operator|.
name|getMessage
argument_list|()
operator|.
name|toUpperCase
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|Exception
operator|.
name|class
argument_list|,
operator|new
name|Fault
argument_list|(
name|replaced
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

