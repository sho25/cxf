begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|schema_validation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|ServiceMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|SchemaValidation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|Logging
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|schema_validation
operator|.
name|types
operator|.
name|ComplexStruct
import|;
end_import

begin_class
specifier|public
class|class
name|ValidationServer
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|ValidationServer
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Endpoint
argument_list|>
name|eps
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|ValidationServer
parameter_list|()
block|{     }
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|Object
name|implementor
init|=
operator|new
name|SchemaValidationImpl
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext"
decl_stmt|;
name|eps
operator|.
name|add
argument_list|(
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
operator|+
literal|"/SoapPort"
argument_list|,
name|implementor
argument_list|)
argument_list|)
expr_stmt|;
name|eps
operator|.
name|add
argument_list|(
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
operator|+
literal|"/SoapPortValidate"
argument_list|,
operator|new
name|ValidatingSchemaValidationImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|eps
operator|.
name|add
argument_list|(
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
operator|+
literal|"/PProvider"
argument_list|,
operator|new
name|PayloadProvider
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|eps
operator|.
name|add
argument_list|(
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
operator|+
literal|"/MProvider"
argument_list|,
operator|new
name|MessageProvider
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|eps
operator|.
name|add
argument_list|(
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
operator|+
literal|"/SoapPortMethodValidate"
argument_list|,
operator|new
name|ValidatingSchemaValidationMethodImpl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
while|while
condition|(
operator|!
name|eps
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|eps
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SchemaValidationService"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.schema_validation.SchemaValidation"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/schema_validation"
argument_list|,
name|wsdlLocation
operator|=
literal|"classpath:/wsdl/schema_validation.wsdl"
argument_list|)
annotation|@
name|SchemaValidation
specifier|static
class|class
name|ValidatingSchemaValidationImpl
extends|extends
name|SchemaValidationImpl
block|{      }
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SchemaValidationService"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.schema_validation.SchemaValidation"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/schema_validation"
argument_list|,
name|wsdlLocation
operator|=
literal|"classpath:/wsdl/schema_validation.wsdl"
argument_list|)
specifier|static
class|class
name|ValidatingSchemaValidationMethodImpl
extends|extends
name|SchemaValidationImpl
block|{
annotation|@
name|SchemaValidation
specifier|public
name|boolean
name|setComplexStruct
parameter_list|(
name|ComplexStruct
name|in
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
specifier|private
specifier|static
name|String
name|getResponse
parameter_list|(
name|String
name|v
parameter_list|)
block|{
if|if
condition|(
literal|"9999999999"
operator|.
name|equals
argument_list|(
name|v
argument_list|)
condition|)
block|{
return|return
literal|"<soap:Fault xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<faultcode>soap:Server</faultcode>"
operator|+
literal|"<faultstring>Fault</faultstring>"
operator|+
literal|"<detail>"
operator|+
literal|"<SomeFault xmlns=\"http://apache.org/schema_validation/types\">"
operator|+
literal|"<errorCode>1234</errorCode></SomeFault>"
operator|+
literal|"</detail>"
operator|+
literal|"</soap:Fault>"
return|;
block|}
elseif|else
if|if
condition|(
literal|"8888888888"
operator|.
name|equals
argument_list|(
name|v
argument_list|)
condition|)
block|{
return|return
literal|"<soap:Fault xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<faultcode>soap:Server</faultcode>"
operator|+
literal|"<faultstring>Fault</faultstring>"
operator|+
literal|"<detail>"
operator|+
literal|"<SomeFault xmlns=\"http://apache.org/schema_validation/types\">"
operator|+
literal|"<errorCode>1</errorCode></SomeFault>"
operator|+
literal|"</detail>"
operator|+
literal|"</soap:Fault>"
return|;
block|}
return|return
literal|""
return|;
block|}
annotation|@
name|WebServiceProvider
argument_list|(
name|wsdlLocation
operator|=
literal|"classpath:/wsdl/schema_validation.wsdl"
argument_list|,
name|serviceName
operator|=
literal|"SchemaValidationService"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/schema_validation"
argument_list|)
annotation|@
name|ServiceMode
argument_list|(
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
annotation|@
name|SchemaValidation
annotation|@
name|Logging
specifier|static
class|class
name|PayloadProvider
implements|implements
name|Provider
argument_list|<
name|Source
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Source
name|invoke
parameter_list|(
name|Source
name|request
parameter_list|)
block|{
try|try
block|{
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"SomeRequest"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|String
name|v
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
operator|.
name|getTextContent
argument_list|()
decl_stmt|;
return|return
operator|new
name|StreamSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|getResponse
argument_list|(
name|v
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
annotation|@
name|WebServiceProvider
argument_list|(
name|wsdlLocation
operator|=
literal|"classpath:/wsdl/schema_validation.wsdl"
argument_list|,
name|serviceName
operator|=
literal|"SchemaValidationService"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/schema_validation"
argument_list|)
annotation|@
name|ServiceMode
argument_list|(
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
annotation|@
name|SchemaValidation
specifier|static
class|class
name|MessageProvider
implements|implements
name|Provider
argument_list|<
name|Source
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Source
name|invoke
parameter_list|(
name|Source
name|request
parameter_list|)
block|{
try|try
block|{
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Element
name|el
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
operator|!
literal|"Body"
operator|.
name|equals
argument_list|(
name|el
operator|.
name|getLocalName
argument_list|()
argument_list|)
condition|)
block|{
name|el
operator|=
name|DOMUtils
operator|.
name|getNextElement
argument_list|(
name|el
argument_list|)
expr_stmt|;
block|}
name|el
operator|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|el
argument_list|)
expr_stmt|;
name|String
name|name
init|=
name|el
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"SomeRequest"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|String
name|v
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|el
argument_list|)
operator|.
name|getTextContent
argument_list|()
decl_stmt|;
return|return
operator|new
name|StreamSource
argument_list|(
operator|new
name|StringReader
argument_list|(
literal|"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<soap:Body>"
operator|+
name|getResponse
argument_list|(
name|v
argument_list|)
operator|+
literal|"</soap:Body></soap:Envelope>"
argument_list|)
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|ValidationServer
name|s
init|=
operator|new
name|ValidationServer
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

