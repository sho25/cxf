begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|cxf6319
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test case for CXF-6319 - namespace declarations in body and envelope are not processed correctly  * when there is a SOAPHandler.  *  * @author Tomas Hofman (thofman@redhat.com)  */
end_comment

begin_class
specifier|public
class|class
name|Cxf6319TestCase
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|static
specifier|final
name|String
name|PORT
init|=
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|Cxf6319TestCase
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testDeclarationsInEnvelope
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|ep
init|=
name|Endpoint
operator|.
name|publish
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/SoapPort"
argument_list|,
operator|new
name|ServiceImpl
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|HttpURLConnection
name|httpConnection
init|=
name|getHttpConnection
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/SoapPort/echo"
argument_list|)
decl_stmt|;
name|httpConnection
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|InputStream
name|reqin
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"request.xml"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"could not load test data"
argument_list|,
name|reqin
argument_list|)
expr_stmt|;
name|httpConnection
operator|.
name|setRequestMethod
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
name|httpConnection
operator|.
name|addRequestProperty
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|OutputStream
name|reqout
init|=
name|httpConnection
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|reqin
argument_list|,
name|reqout
argument_list|)
expr_stmt|;
name|reqout
operator|.
name|close
argument_list|()
expr_stmt|;
name|int
name|responseCode
init|=
name|httpConnection
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
name|InputStream
name|errorStream
init|=
name|httpConnection
operator|.
name|getErrorStream
argument_list|()
decl_stmt|;
name|String
name|error
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|errorStream
operator|!=
literal|null
condition|)
block|{
name|error
operator|=
name|IOUtils
operator|.
name|readStringFromStream
argument_list|(
name|errorStream
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|error
argument_list|,
literal|200
argument_list|,
name|responseCode
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|ep
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

