begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|HandlerChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebEndpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceClient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|handler_test
operator|.
name|HandlerTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|handler_test
operator|.
name|HandlerTest1
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|WebServiceClient
argument_list|(
name|name
operator|=
literal|"HandlerTestService"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/handler_test"
argument_list|,
name|wsdlLocation
operator|=
literal|"file:/D:/svn/cxf/trunk/testutils/src/main/resources/wsdl/handler_test.wsdl"
argument_list|)
annotation|@
name|HandlerChain
argument_list|(
name|file
operator|=
literal|"./handlers_invocation_testunused.xml"
argument_list|,
name|name
operator|=
literal|"TestHandlerChain"
argument_list|)
specifier|public
class|class
name|HandlerTestServiceWithAnnotation
extends|extends
name|Service
block|{
static|static
block|{
name|URL
name|url
init|=
literal|null
decl_stmt|;
try|try
block|{
name|url
operator|=
operator|new
name|URL
argument_list|(
literal|"file:/D:/svn/cxf/trunk/testutils/src/main/resources/wsdl/handler_test.wsdl"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|WSDL_LOCATION
operator|=
name|url
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|final
name|QName
name|SERVICE
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handler_test"
argument_list|,
literal|"HandlerTestService"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SOAPPORT
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handler_test"
argument_list|,
literal|"SoapPort"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|SOAPPORT1
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handler_test"
argument_list|,
literal|"SoapPort1"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URL
name|WSDL_LOCATION
decl_stmt|;
specifier|public
name|HandlerTestServiceWithAnnotation
parameter_list|(
name|URL
name|wsdlLocation
parameter_list|)
block|{
name|super
argument_list|(
name|wsdlLocation
argument_list|,
name|SERVICE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HandlerTestServiceWithAnnotation
parameter_list|(
name|URL
name|wsdlLocation
parameter_list|,
name|QName
name|serviceName
parameter_list|)
block|{
name|super
argument_list|(
name|wsdlLocation
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HandlerTestServiceWithAnnotation
parameter_list|()
block|{
name|super
argument_list|(
name|WSDL_LOCATION
argument_list|,
name|SERVICE
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return returns HandlerTest      */
annotation|@
name|WebEndpoint
argument_list|(
name|name
operator|=
literal|"SoapPort"
argument_list|)
specifier|public
name|HandlerTest
name|getSoapPort
parameter_list|()
block|{
return|return
name|super
operator|.
name|getPort
argument_list|(
name|SOAPPORT
argument_list|,
name|HandlerTest
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * @param features A list of {@link javax.xml.ws.WebServiceFeature} to      *            configure on the proxy. Supported features not in the      *<code>features</code> parameter will have their default      *            values.      * @return returns HandlerTest      */
annotation|@
name|WebEndpoint
argument_list|(
name|name
operator|=
literal|"SoapPort"
argument_list|)
specifier|public
name|HandlerTest
name|getSoapPort
parameter_list|(
name|WebServiceFeature
modifier|...
name|features
parameter_list|)
block|{
return|return
name|super
operator|.
name|getPort
argument_list|(
name|SOAPPORT
argument_list|,
name|HandlerTest
operator|.
name|class
argument_list|,
name|features
argument_list|)
return|;
block|}
comment|/**      * @return returns HandlerTest1      */
annotation|@
name|WebEndpoint
argument_list|(
name|name
operator|=
literal|"SoapPort1"
argument_list|)
specifier|public
name|HandlerTest1
name|getSoapPort1
parameter_list|()
block|{
return|return
name|super
operator|.
name|getPort
argument_list|(
name|SOAPPORT1
argument_list|,
name|HandlerTest1
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * @param features A list of {@link javax.xml.ws.WebServiceFeature} to      *            configure on the proxy. Supported features not in the      *<code>features</code> parameter will have their default      *            values.      * @return returns HandlerTest1      */
annotation|@
name|WebEndpoint
argument_list|(
name|name
operator|=
literal|"SoapPort1"
argument_list|)
specifier|public
name|HandlerTest1
name|getSoapPort1
parameter_list|(
name|WebServiceFeature
modifier|...
name|features
parameter_list|)
block|{
return|return
name|super
operator|.
name|getPort
argument_list|(
name|SOAPPORT1
argument_list|,
name|HandlerTest1
operator|.
name|class
argument_list|,
name|features
argument_list|)
return|;
block|}
block|}
end_class

end_unit

