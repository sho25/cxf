begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxws
operator|.
name|httpget
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JavaFirstHttpGetTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PORT
init|=
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BASE_URL
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/JavaFirstHttpGetTest"
decl_stmt|;
specifier|public
specifier|static
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|MyImplementation
name|implementor
init|=
operator|new
name|MyImplementation
argument_list|()
decl_stmt|;
name|JaxWsServerFactoryBean
name|svrFactory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|svrFactory
operator|.
name|setServiceClass
argument_list|(
name|MyInterface
operator|.
name|class
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|setAddress
argument_list|(
name|BASE_URL
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|setServiceBean
argument_list|(
name|implementor
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDate
parameter_list|()
throws|throws
name|Exception
block|{
name|URLConnection
name|urlCon
init|=
operator|new
name|URL
argument_list|(
name|BASE_URL
operator|+
literal|"/test2?date=2010-09-13T14:23:30.879%2B02:00"
argument_list|)
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|InputStream
name|ins
init|=
name|urlCon
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|String
name|ret
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ins
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
operator|!
name|ret
operator|.
name|contains
argument_list|(
literal|"Fault"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ret
operator|.
name|contains
argument_list|(
literal|"2010"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnum
parameter_list|()
throws|throws
name|Exception
block|{
name|URLConnection
name|urlCon
init|=
operator|new
name|URL
argument_list|(
name|BASE_URL
operator|+
literal|"/test4?myEnum=A"
argument_list|)
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|InputStream
name|ins
init|=
name|urlCon
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|String
name|ret
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ins
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ret
argument_list|,
operator|!
name|ret
operator|.
name|contains
argument_list|(
literal|"Fault"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ret
argument_list|,
name|ret
operator|.
name|contains
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNull
parameter_list|()
throws|throws
name|Exception
block|{
name|URLConnection
name|urlCon
init|=
operator|new
name|URL
argument_list|(
name|BASE_URL
operator|+
literal|"/test7"
argument_list|)
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|InputStream
name|ins
init|=
name|urlCon
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|String
name|ret
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ins
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ret
argument_list|,
name|ret
operator|.
name|contains
argument_list|(
literal|"&lt;null"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullPrimitive
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpURLConnection
name|urlCon
init|=
call|(
name|HttpURLConnection
call|)
argument_list|(
operator|new
name|URL
argument_list|(
name|BASE_URL
operator|+
literal|"/test8"
argument_list|)
operator|.
name|openConnection
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|urlCon
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
comment|//FAULT
name|InputStream
name|ins
init|=
name|urlCon
operator|.
name|getErrorStream
argument_list|()
decl_stmt|;
name|String
name|ret
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ins
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ret
argument_list|,
name|ret
operator|.
name|contains
argument_list|(
literal|"Fault"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

