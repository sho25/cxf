begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|provider
operator|.
name|datasource
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|internet
operator|.
name|MimeMultipart
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|util
operator|.
name|ByteArrayDataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|ServiceMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_class
annotation|@
name|WebServiceProvider
argument_list|(
name|serviceName
operator|=
literal|"ModelProvider"
argument_list|)
annotation|@
name|BindingType
argument_list|(
name|value
operator|=
literal|"http://cxf.apache.org/bindings/xformat"
argument_list|)
annotation|@
name|ServiceMode
argument_list|(
name|value
operator|=
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
specifier|public
class|class
name|TestProvider
extends|extends
name|AbstractProvider
argument_list|<
name|DataSource
argument_list|>
implements|implements
name|Provider
argument_list|<
name|DataSource
argument_list|>
block|{
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|TestProvider
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|javax
operator|.
name|annotation
operator|.
name|Resource
specifier|public
name|void
name|setWebServiceContext
parameter_list|(
name|WebServiceContext
name|wsc
parameter_list|)
block|{
name|super
operator|.
name|setWebServiceContext
argument_list|(
name|wsc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|DataSource
name|invoke
parameter_list|(
name|DataSource
name|req
parameter_list|)
block|{
return|return
name|super
operator|.
name|invoke
argument_list|(
name|req
argument_list|)
return|;
block|}
specifier|protected
name|DataSource
name|post
parameter_list|(
name|DataSource
name|req
parameter_list|)
block|{
name|String
name|msg
decl_stmt|;
try|try
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"content type: "
operator|+
name|req
operator|.
name|getContentType
argument_list|()
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|req
operator|.
name|getInputStream
argument_list|()
argument_list|,
name|baos
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"body ["
operator|+
operator|new
name|String
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
operator|+
literal|"]"
argument_list|)
expr_stmt|;
try|try
init|(
name|ByteArrayInputStream
name|bais
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
init|)
block|{
name|msg
operator|=
literal|"<ok/>"
expr_stmt|;
name|MimeMultipart
name|multipart
init|=
name|DataSourceProviderTest
operator|.
name|readAttachmentParts
argument_list|(
name|req
operator|.
name|getContentType
argument_list|()
argument_list|,
name|bais
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"found "
operator|+
name|multipart
operator|.
name|getCount
argument_list|()
operator|+
literal|" parts"
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|ByteArrayDataSource
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|req
operator|.
name|getContentType
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|msg
operator|=
literal|"<fail/>"
expr_stmt|;
block|}
return|return
operator|new
name|ByteArrayDataSource
argument_list|(
name|msg
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"text/xml"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|DataSource
name|get
parameter_list|(
name|DataSource
name|req
parameter_list|)
block|{
name|String
name|msg
init|=
literal|"<doc><response>Hello</response></doc>"
decl_stmt|;
return|return
operator|new
name|ByteArrayDataSource
argument_list|(
name|msg
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

