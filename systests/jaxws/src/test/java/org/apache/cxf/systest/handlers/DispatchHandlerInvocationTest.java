begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|URLDataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPBody
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPEnvelope
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Dispatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|LogicalMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
operator|.
name|Mode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|LogicalHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|LogicalMessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPMessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|SOAPFaultException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|AddNumbersService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|ObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|XMLService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|DispatchHandlerInvocationTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|private
specifier|static
name|String
name|addNumbersAddress
init|=
literal|"http://localhost:"
operator|+
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|HandlerServer
operator|.
name|class
argument_list|,
literal|1
argument_list|)
operator|+
literal|"/handlers/AddNumbersService/AddNumbersPort"
decl_stmt|;
specifier|private
specifier|static
name|String
name|greeterAddress
init|=
literal|"http://localhost:"
operator|+
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|HandlerServer
operator|.
name|class
argument_list|,
literal|2
argument_list|)
operator|+
literal|"/XMLService/XMLDispatchPort"
decl_stmt|;
specifier|private
specifier|final
name|QName
name|serviceName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handlers"
argument_list|,
literal|"AddNumbersService"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|QName
name|portName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/handlers"
argument_list|,
literal|"AddNumbersPort"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|QName
name|portNameXML
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_xml_http/wrapped"
argument_list|,
literal|"XMLDispatchPort"
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|HandlerServer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithJAXBPayloadMode
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|AddNumbersService
name|service
init|=
operator|new
name|AddNumbersService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
literal|"org.apache.handlers.types"
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Object
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|jc
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandler
name|handler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
name|TestSOAPHandler
name|soapHandler
init|=
operator|new
name|TestSOAPHandler
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|,
name|soapHandler
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
name|req
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
argument_list|()
decl_stmt|;
name|req
operator|.
name|setArg0
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|req
operator|.
name|setArg1
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|ObjectFactory
name|factory
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|JAXBElement
argument_list|<
name|AddNumbers
argument_list|>
name|e
init|=
name|factory
operator|.
name|createAddNumbers
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|JAXBElement
argument_list|<
name|?
argument_list|>
name|response
init|=
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|disp
operator|.
name|invoke
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|AddNumbersResponse
name|value
init|=
operator|(
name|AddNumbersResponse
operator|)
name|response
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|222
argument_list|,
name|value
operator|.
name|getReturn
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithJAXBUnwrapPayloadMode
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|AddNumbersServiceUnwrap
name|service
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|AddNumbersServiceUnwrap
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbersResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Object
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|jc
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandler
name|handler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
name|TestSOAPHandler
name|soapHandler
init|=
operator|new
name|TestSOAPHandler
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|,
name|soapHandler
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
name|req
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
argument_list|()
decl_stmt|;
name|req
operator|.
name|setArg0
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|req
operator|.
name|setArg1
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbersResponse
name|response
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbersResponse
operator|)
name|disp
operator|.
name|invoke
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|222
argument_list|,
name|response
operator|.
name|getReturn
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithDOMSourcMessageMode
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|AddNumbersService
name|service
init|=
operator|new
name|AddNumbersService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DOMSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|DOMSource
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandler
name|handler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
name|TestSOAPHandler
name|soapHandler
init|=
operator|new
name|TestSOAPHandler
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|,
name|soapHandler
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SOAPMessage
name|soapReq
init|=
name|factory
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|soapReq
operator|.
name|saveChanges
argument_list|()
expr_stmt|;
name|DOMSource
name|domReqMessage
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReq
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|DOMSource
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|domReqMessage
argument_list|)
decl_stmt|;
comment|//XMLUtils.writeTo(response, System.out);
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithDOMSourcPayloadMode
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|AddNumbersService
name|service
init|=
operator|new
name|AddNumbersService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DOMSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|DOMSource
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandler
name|handler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
name|TestSOAPHandler
name|soapHandler
init|=
operator|new
name|TestSOAPHandler
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|,
name|soapHandler
argument_list|)
expr_stmt|;
name|InputStream
name|is2
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReqPayload.xml"
argument_list|)
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SOAPMessage
name|soapReq
init|=
name|factory
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is2
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMessage
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReq
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|DOMSource
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|domReqMessage
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithSOAPMessageMessageMode
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|AddNumbersService
name|service
init|=
operator|new
name|AddNumbersService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|SOAPMessage
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|SOAPMessage
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandler
name|handler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
name|TestSOAPHandler
name|soapHandler
init|=
operator|new
name|TestSOAPHandler
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|,
name|soapHandler
argument_list|)
expr_stmt|;
name|InputStream
name|is2
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SOAPMessage
name|soapReq
init|=
name|factory
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is2
argument_list|)
decl_stmt|;
name|SOAPMessage
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|soapReq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
comment|//response.writeTo(System.out);
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithSOAPMessagePayloadMode
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|AddNumbersService
name|service
init|=
operator|new
name|AddNumbersService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|SOAPMessage
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|SOAPMessage
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandler
name|handler
init|=
operator|new
name|TestHandler
argument_list|()
decl_stmt|;
name|TestSOAPHandler
name|soapHandler
init|=
operator|new
name|TestSOAPHandler
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|,
name|soapHandler
argument_list|)
expr_stmt|;
name|InputStream
name|is2
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SOAPMessage
name|soapReq
init|=
name|factory
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is2
argument_list|)
decl_stmt|;
try|try
block|{
name|disp
operator|.
name|invoke
argument_list|(
name|soapReq
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Did not get expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SOAPFaultException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Did not get expected exception message: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"is not valid in PAYLOAD mode with SOAP/HTTP binding"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithDOMSourcMessageModeXMLBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|XMLService
name|service
init|=
operator|new
name|XMLService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DOMSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portNameXML
argument_list|,
name|DOMSource
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandlerXMLBinding
name|handler
init|=
operator|new
name|TestHandlerXMLBinding
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/messages/XML_GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SOAPMessage
name|soapReq
init|=
name|factory
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMessage
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReq
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|DOMSource
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|domReqMessage
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithDOMSourcPayloadModeXMLBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|XMLService
name|service
init|=
operator|new
name|XMLService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DOMSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portNameXML
argument_list|,
name|DOMSource
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandlerXMLBinding
name|handler
init|=
operator|new
name|TestHandlerXMLBinding
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/messages/XML_GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|MessageFactory
name|factory
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SOAPMessage
name|soapReq
init|=
name|factory
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMessage
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReq
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|DOMSource
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|domReqMessage
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithDataSourcMessageModeXMLBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|XMLService
name|service
init|=
operator|new
name|XMLService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DataSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portNameXML
argument_list|,
name|DataSource
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandlerXMLBinding
name|handler
init|=
operator|new
name|TestHandlerXMLBinding
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|)
expr_stmt|;
name|URL
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/messages/XML_GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|DataSource
name|ds
init|=
operator|new
name|URLDataSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|DataSource
name|resp
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|ds
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|resp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithDataSourcPayloadModeXMLBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|XMLService
name|service
init|=
operator|new
name|XMLService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DataSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portNameXML
argument_list|,
name|DataSource
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|addNumbersAddress
argument_list|)
expr_stmt|;
name|TestHandlerXMLBinding
name|handler
init|=
operator|new
name|TestHandlerXMLBinding
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|)
expr_stmt|;
name|URL
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/messages/XML_GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|DataSource
name|ds
init|=
operator|new
name|URLDataSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|DataSource
name|resp
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|ds
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|resp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithJAXBMessageModeXMLBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|XMLService
name|service
init|=
operator|new
name|XMLService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
literal|"org.apache.hello_world_xml_http.wrapped.types"
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Object
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portNameXML
argument_list|,
name|jc
argument_list|,
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|greeterAddress
argument_list|)
expr_stmt|;
name|TestHandlerXMLBinding
name|handler
init|=
operator|new
name|TestHandlerXMLBinding
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMe
name|req
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMe
argument_list|()
decl_stmt|;
name|req
operator|.
name|setRequestType
argument_list|(
literal|"tli"
argument_list|)
expr_stmt|;
name|Object
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMeResponse
name|value
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMeResponse
operator|)
name|response
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Hello tli"
argument_list|,
name|value
operator|.
name|getResponseType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvokeWithJAXBPayloadModeXMLBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/addNumbers.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|XMLService
name|service
init|=
operator|new
name|XMLService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
literal|"org.apache.hello_world_xml_http.wrapped.types"
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Object
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portNameXML
argument_list|,
name|jc
argument_list|,
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|setAddress
argument_list|(
name|disp
argument_list|,
name|greeterAddress
argument_list|)
expr_stmt|;
name|TestHandlerXMLBinding
name|handler
init|=
operator|new
name|TestHandlerXMLBinding
argument_list|()
decl_stmt|;
name|addHandlersProgrammatically
argument_list|(
name|disp
argument_list|,
name|handler
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMe
name|req
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMe
argument_list|()
decl_stmt|;
name|req
operator|.
name|setRequestType
argument_list|(
literal|"tli"
argument_list|)
expr_stmt|;
name|Object
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMeResponse
name|value
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|GreetMeResponse
operator|)
name|response
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Hello tli"
argument_list|,
name|value
operator|.
name|getResponseType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addHandlersProgrammatically
parameter_list|(
name|BindingProvider
name|bp
parameter_list|,
name|Handler
argument_list|<
name|?
argument_list|>
modifier|...
name|handlers
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|Handler
argument_list|>
name|handlerChain
init|=
name|bp
operator|.
name|getBinding
argument_list|()
operator|.
name|getHandlerChain
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|handlerChain
argument_list|)
expr_stmt|;
for|for
control|(
name|Handler
argument_list|<
name|?
argument_list|>
name|h
range|:
name|handlers
control|)
block|{
name|handlerChain
operator|.
name|add
argument_list|(
name|h
argument_list|)
expr_stmt|;
block|}
name|bp
operator|.
name|getBinding
argument_list|()
operator|.
name|setHandlerChain
argument_list|(
name|handlerChain
argument_list|)
expr_stmt|;
block|}
class|class
name|TestHandler
implements|implements
name|LogicalHandler
argument_list|<
name|LogicalMessageContext
argument_list|>
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|LogicalMessageContext
name|ctx
parameter_list|)
block|{
try|try
block|{
name|Boolean
name|outbound
init|=
operator|(
name|Boolean
operator|)
name|ctx
operator|.
name|get
argument_list|(
name|MessageContext
operator|.
name|MESSAGE_OUTBOUND_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
name|outbound
condition|)
block|{
name|LogicalMessage
name|msg
init|=
name|ctx
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|JAXBContext
name|jaxbContext
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|ObjectFactory
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hello_world_xml_http
operator|.
name|wrapped
operator|.
name|types
operator|.
name|ObjectFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|Object
name|payload
init|=
operator|(
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|msg
operator|.
name|getPayload
argument_list|(
name|jaxbContext
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
name|req
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbers
operator|)
name|payload
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|req
operator|.
name|getArg0
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|req
operator|.
name|getArg1
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|setArg0
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|req
operator|.
name|setArg1
argument_list|(
literal|21
argument_list|)
expr_stmt|;
name|ObjectFactory
name|of
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|of
operator|.
name|createAddNumbers
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setPayload
argument_list|(
name|of
operator|.
name|createAddNumbers
argument_list|(
name|req
argument_list|)
argument_list|,
name|jaxbContext
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LogicalMessage
name|msg
init|=
name|ctx
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|JAXBContext
name|jaxbContext
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|ObjectFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|Object
name|payload
init|=
operator|(
operator|(
name|JAXBElement
argument_list|<
name|?
argument_list|>
operator|)
name|msg
operator|.
name|getPayload
argument_list|(
name|jaxbContext
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbersResponse
name|res
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|handlers
operator|.
name|types
operator|.
name|AddNumbersResponse
operator|)
name|payload
decl_stmt|;
name|assertEquals
argument_list|(
literal|333
argument_list|,
name|res
operator|.
name|getReturn
argument_list|()
argument_list|)
expr_stmt|;
name|res
operator|.
name|setReturn
argument_list|(
literal|222
argument_list|)
expr_stmt|;
name|ObjectFactory
name|of
init|=
operator|new
name|ObjectFactory
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setPayload
argument_list|(
name|of
operator|.
name|createAddNumbersResponse
argument_list|(
name|res
argument_list|)
argument_list|,
name|jaxbContext
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|LogicalMessageContext
name|ctx
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{         }
block|}
class|class
name|TestHandlerXMLBinding
implements|implements
name|LogicalHandler
argument_list|<
name|LogicalMessageContext
argument_list|>
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|LogicalMessageContext
name|ctx
parameter_list|)
block|{
name|LogicalMessage
name|msg
init|=
name|ctx
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|Source
name|payload
init|=
name|msg
operator|.
name|getPayload
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|payload
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|LogicalMessageContext
name|ctx
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{         }
block|}
class|class
name|TestSOAPHandler
implements|implements
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|ctx
parameter_list|)
block|{
try|try
block|{
name|Boolean
name|outbound
init|=
operator|(
name|Boolean
operator|)
name|ctx
operator|.
name|get
argument_list|(
name|MessageContext
operator|.
name|MESSAGE_OUTBOUND_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
name|outbound
condition|)
block|{
name|SOAPMessage
name|msg
init|=
name|ctx
operator|.
name|getMessage
argument_list|()
decl_stmt|;
comment|/*                      * System.out.println("-----------soap---------");                      * msg.writeTo(System.out);                      * System.out.println("-----------soap---------");                      */
name|SOAPEnvelope
name|env
init|=
name|msg
operator|.
name|getSOAPPart
argument_list|()
operator|.
name|getEnvelope
argument_list|()
decl_stmt|;
name|SOAPBody
name|body
init|=
name|env
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|body
operator|.
name|getChildElements
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|elem
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|elem
operator|instanceof
name|SOAPElement
condition|)
block|{
name|Iterator
argument_list|<
name|?
argument_list|>
name|it2
init|=
operator|(
operator|(
name|SOAPElement
operator|)
name|elem
operator|)
operator|.
name|getChildElements
argument_list|()
decl_stmt|;
while|while
condition|(
name|it2
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|elem2
init|=
name|it2
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|elem2
operator|instanceof
name|SOAPElement
condition|)
block|{
name|String
name|value
init|=
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|name
init|=
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|indexOf
argument_list|(
literal|"arg0"
argument_list|)
operator|>=
literal|0
operator|&&
name|value
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"11"
argument_list|)
condition|)
block|{
name|value
operator|=
literal|"12"
expr_stmt|;
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|name
operator|.
name|indexOf
argument_list|(
literal|"arg1"
argument_list|)
operator|>=
literal|0
operator|&&
name|value
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"21"
argument_list|)
condition|)
block|{
name|value
operator|=
literal|"22"
expr_stmt|;
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|msg
operator|.
name|saveChanges
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|SOAPMessage
name|msg
init|=
name|ctx
operator|.
name|getMessage
argument_list|()
decl_stmt|;
comment|/*                      * System.out.println("-----------soap---------");                      * msg.writeTo(System.out);                      * System.out.println("-----------soap---------");                      */
name|SOAPEnvelope
name|env
init|=
name|msg
operator|.
name|getSOAPPart
argument_list|()
operator|.
name|getEnvelope
argument_list|()
decl_stmt|;
name|SOAPBody
name|body
init|=
name|env
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|body
operator|.
name|getChildElements
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|elem
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|elem
operator|instanceof
name|SOAPElement
condition|)
block|{
name|Iterator
argument_list|<
name|?
argument_list|>
name|it2
init|=
operator|(
operator|(
name|SOAPElement
operator|)
name|elem
operator|)
operator|.
name|getChildElements
argument_list|()
decl_stmt|;
while|while
condition|(
name|it2
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|elem2
init|=
name|it2
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|elem2
operator|instanceof
name|SOAPElement
condition|)
block|{
name|String
name|value
init|=
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|name
init|=
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|indexOf
argument_list|(
literal|"return"
argument_list|)
operator|>=
literal|0
operator|&&
name|value
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"264"
argument_list|)
condition|)
block|{
name|value
operator|=
literal|"333"
expr_stmt|;
operator|(
operator|(
name|SOAPElement
operator|)
name|elem2
operator|)
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|msg
operator|.
name|saveChanges
argument_list|()
expr_stmt|;
block|}
comment|/*                SOAPMessage msg = ctx.getMessage();                 //msg.writeTo(System.out);                 assertNotNull(msg);*/
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
specifier|final
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|ctx
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{         }
block|}
block|}
end_class

end_unit

