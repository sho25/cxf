begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|swa
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|util
operator|.
name|ByteArrayDataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|SwAServiceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|types
operator|.
name|DataStruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|types
operator|.
name|OutputResponseAll
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|types
operator|.
name|VoidRequest
import|;
end_import

begin_class
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.apache.cxf.swa.SwAServiceInterface"
argument_list|,
name|serviceName
operator|=
literal|"SwAService"
argument_list|,
name|targetNamespace
operator|=
literal|"http://cxf.apache.org/swa"
argument_list|,
name|portName
operator|=
literal|"SwAServiceHttpPort"
argument_list|)
specifier|public
class|class
name|SwAServiceImpl
implements|implements
name|SwAServiceInterface
block|{
specifier|public
name|void
name|echoDataRef
parameter_list|(
name|Holder
argument_list|<
name|DataStruct
argument_list|>
name|data
parameter_list|)
block|{
try|try
block|{
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
name|bis
operator|=
name|data
operator|.
name|value
operator|.
name|getDataRef
argument_list|()
operator|.
name|getDataSource
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
literal|6
index|]
decl_stmt|;
name|bis
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|String
name|string
init|=
name|IOUtils
operator|.
name|newStringFromBytes
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|ByteArrayDataSource
name|source
init|=
operator|new
name|ByteArrayDataSource
argument_list|(
operator|(
literal|"test"
operator|+
name|string
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|data
operator|.
name|value
operator|.
name|setDataRef
argument_list|(
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|echoData
parameter_list|(
name|Holder
argument_list|<
name|String
argument_list|>
name|text
parameter_list|,
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|data
parameter_list|)
block|{
try|try
block|{
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
name|bis
operator|=
name|data
operator|.
name|value
operator|.
name|getDataSource
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
literal|6
index|]
decl_stmt|;
name|bis
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|String
name|string
init|=
name|IOUtils
operator|.
name|newStringFromBytes
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|ByteArrayDataSource
name|source
init|=
operator|new
name|ByteArrayDataSource
argument_list|(
operator|(
literal|"test"
operator|+
name|string
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|data
operator|.
name|value
operator|=
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|echoDataWithHeader
parameter_list|(
name|Holder
argument_list|<
name|String
argument_list|>
name|text
parameter_list|,
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|data
parameter_list|,
name|Holder
argument_list|<
name|String
argument_list|>
name|headerText
parameter_list|)
block|{
try|try
block|{
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
name|bis
operator|=
name|data
operator|.
name|value
operator|.
name|getDataSource
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
literal|6
index|]
decl_stmt|;
name|bis
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|String
name|string
init|=
name|IOUtils
operator|.
name|newStringFromBytes
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|ByteArrayDataSource
name|source
init|=
operator|new
name|ByteArrayDataSource
argument_list|(
operator|(
literal|"test"
operator|+
name|string
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|data
operator|.
name|value
operator|=
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|OutputResponseAll
name|echoAllAttachmentTypes
parameter_list|(
name|VoidRequest
name|request
parameter_list|,
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|attach1
parameter_list|,
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|attach2
parameter_list|,
name|Holder
argument_list|<
name|Source
argument_list|>
name|attach3
parameter_list|,
name|Holder
argument_list|<
name|Image
argument_list|>
name|attach4
parameter_list|,
name|Holder
argument_list|<
name|Image
argument_list|>
name|attach5
parameter_list|)
block|{
try|try
block|{
name|OutputResponseAll
name|theResponse
init|=
operator|new
name|OutputResponseAll
argument_list|()
decl_stmt|;
name|theResponse
operator|.
name|setResult
argument_list|(
literal|"ok"
argument_list|)
expr_stmt|;
name|theResponse
operator|.
name|setReason
argument_list|(
literal|"ok"
argument_list|)
expr_stmt|;
if|if
condition|(
name|attach1
operator|==
literal|null
operator|||
name|attach1
operator|.
name|value
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attach1.value is null (unexpected)"
argument_list|)
expr_stmt|;
name|theResponse
operator|.
name|setReason
argument_list|(
literal|"attach1.value is null (unexpected)"
argument_list|)
expr_stmt|;
name|theResponse
operator|.
name|setResult
argument_list|(
literal|"not ok"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attach2
operator|==
literal|null
operator|||
name|attach2
operator|.
name|value
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attach2.value is null (unexpected)"
argument_list|)
expr_stmt|;
if|if
condition|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|.
name|equals
argument_list|(
literal|"ok"
argument_list|)
condition|)
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
literal|"attach2.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|+
literal|"\nattach2.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
name|theResponse
operator|.
name|setResult
argument_list|(
literal|"not ok"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attach3
operator|==
literal|null
operator|||
name|attach3
operator|.
name|value
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attach3.value is null (unexpected)"
argument_list|)
expr_stmt|;
if|if
condition|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|.
name|equals
argument_list|(
literal|"ok"
argument_list|)
condition|)
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
literal|"attach3.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|+
literal|"\nattach3.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
name|theResponse
operator|.
name|setResult
argument_list|(
literal|"not ok"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attach4
operator|==
literal|null
operator|||
name|attach4
operator|.
name|value
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attach4.value is null (unexpected)"
argument_list|)
expr_stmt|;
if|if
condition|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|.
name|equals
argument_list|(
literal|"ok"
argument_list|)
condition|)
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
literal|"attach4.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|+
literal|"\nattach4.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
name|theResponse
operator|.
name|setResult
argument_list|(
literal|"not ok"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attach5
operator|==
literal|null
operator|||
name|attach5
operator|.
name|value
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attach5.value is null (unexpected)"
argument_list|)
expr_stmt|;
if|if
condition|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|.
name|equals
argument_list|(
literal|"ok"
argument_list|)
condition|)
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
literal|"attach5.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|theResponse
operator|.
name|setReason
argument_list|(
name|theResponse
operator|.
name|getReason
argument_list|()
operator|+
literal|"\nattach5.value is null (unexpected)"
argument_list|)
expr_stmt|;
block|}
name|theResponse
operator|.
name|setResult
argument_list|(
literal|"not ok"
argument_list|)
expr_stmt|;
block|}
return|return
name|theResponse
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

