begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|LogicalMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|LogicalHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|LogicalMessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_class
specifier|public
class|class
name|TestLogicalHandler
implements|implements
name|LogicalHandler
argument_list|<
name|LogicalMessageContext
argument_list|>
block|{
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|LogicalMessageContext
name|ctx
parameter_list|)
block|{
try|try
block|{
name|LogicalMessage
name|msg
init|=
name|ctx
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|Source
name|payload
init|=
name|msg
operator|.
name|getPayload
argument_list|()
decl_stmt|;
name|String
name|request
init|=
name|getSourceAsString
argument_list|(
name|payload
argument_list|)
decl_stmt|;
comment|// System.out.println(getSourceAsString(payload));
comment|// Make sure SOAP handler has changed the value successfully.
if|if
condition|(
name|request
operator|.
name|indexOf
argument_list|(
literal|"ServerSOAPHandler"
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|InputStream
name|greetMeInputStream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeRpcLiteralReqLogical.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|source
init|=
operator|new
name|StreamSource
argument_list|()
decl_stmt|;
name|source
operator|.
name|setInputStream
argument_list|(
name|greetMeInputStream
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setPayload
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|request
operator|.
name|indexOf
argument_list|(
literal|"TestGreetMeResponse"
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|InputStream
name|greetMeInputStream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeRpcLiteralRespLogical.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|source
init|=
operator|new
name|StreamSource
argument_list|()
decl_stmt|;
name|source
operator|.
name|setInputStream
argument_list|(
name|greetMeInputStream
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setPayload
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|LogicalMessageContext
name|ctx
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|arg0
parameter_list|)
block|{     }
specifier|public
specifier|static
name|String
name|getSourceAsString
parameter_list|(
name|Source
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|TransformerFactory
name|transformerFactory
init|=
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|transformerFactory
operator|.
name|setFeature
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|XMLConstants
operator|.
name|FEATURE_SECURE_PROCESSING
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Transformer
name|transformer
init|=
name|transformerFactory
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
name|transformer
operator|.
name|setOutputProperty
argument_list|(
name|OutputKeys
operator|.
name|OMIT_XML_DECLARATION
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|transformer
operator|.
name|setOutputProperty
argument_list|(
name|OutputKeys
operator|.
name|METHOD
argument_list|,
literal|"xml"
argument_list|)
expr_stmt|;
name|Writer
name|out
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|StreamResult
name|streamResult
init|=
operator|new
name|StreamResult
argument_list|()
decl_stmt|;
name|streamResult
operator|.
name|setWriter
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|transformer
operator|.
name|transform
argument_list|(
name|s
argument_list|,
name|streamResult
argument_list|)
expr_stmt|;
return|return
name|streamResult
operator|.
name|getWriter
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

