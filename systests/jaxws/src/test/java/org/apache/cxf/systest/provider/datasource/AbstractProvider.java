begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|provider
operator|.
name|datasource
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|http
operator|.
name|HTTPBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractProvider
parameter_list|<
name|T
parameter_list|>
implements|implements
name|WebProvider
block|{
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getLogger
argument_list|(
name|AbstractProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|WebServiceContext
name|wsContext
decl_stmt|;
specifier|public
name|T
name|invoke
parameter_list|(
name|T
name|req
parameter_list|)
block|{
name|MessageContext
name|mc
init|=
name|wsContext
operator|.
name|getMessageContext
argument_list|()
decl_stmt|;
name|String
name|method
init|=
operator|(
name|String
operator|)
name|mc
operator|.
name|get
argument_list|(
name|MessageContext
operator|.
name|HTTP_REQUEST_METHOD
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"method: "
operator|+
name|method
argument_list|)
expr_stmt|;
name|T
name|ret
init|=
literal|null
decl_stmt|;
if|if
condition|(
literal|"GET"
operator|.
name|equalsIgnoreCase
argument_list|(
name|method
argument_list|)
condition|)
block|{
name|ret
operator|=
name|get
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"POST"
operator|.
name|equalsIgnoreCase
argument_list|(
name|method
argument_list|)
condition|)
block|{
name|ret
operator|=
name|post
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|protected
name|T
name|get
parameter_list|(
name|T
name|req
parameter_list|)
block|{
return|return
name|req
return|;
block|}
specifier|public
name|WebServiceContext
name|getWebServiceContext
parameter_list|()
block|{
return|return
name|wsContext
return|;
block|}
specifier|protected
name|T
name|post
parameter_list|(
name|T
name|req
parameter_list|)
block|{
return|return
name|req
return|;
block|}
specifier|public
name|void
name|publish
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|Endpoint
name|ep
init|=
name|Endpoint
operator|.
name|create
argument_list|(
name|HTTPBinding
operator|.
name|HTTP_BINDING
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|ep
operator|.
name|publish
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setWebServiceContext
parameter_list|(
name|WebServiceContext
name|wsc
parameter_list|)
block|{
name|wsContext
operator|=
name|wsc
expr_stmt|;
block|}
block|}
end_class

end_unit

