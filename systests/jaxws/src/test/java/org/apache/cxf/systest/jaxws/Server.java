begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|EndpointImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|BaseGreeterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|DocLitBareGreeterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|GreeterImpl
import|;
end_import

begin_class
specifier|public
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|BARE_PORT
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|BOGUS_REAL_PORT
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|2
argument_list|)
decl_stmt|;
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"fault-stack-trace.xml"
argument_list|)
decl_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"cxf.config.file.url"
argument_list|,
name|url
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Object
name|implementor
decl_stmt|;
name|String
name|address
decl_stmt|;
name|implementor
operator|=
operator|new
name|GreeterImplMultiPort
argument_list|()
expr_stmt|;
name|address
operator|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/MultiPort/GreeterPort"
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|implementor
operator|=
operator|new
name|DocLitBareGreeterMultiPort
argument_list|()
expr_stmt|;
name|address
operator|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/MultiPort/DocBarePort"
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|implementor
operator|=
operator|new
name|GreeterImpl
argument_list|()
expr_stmt|;
name|address
operator|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/SoapPort"
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|implementor
operator|=
operator|new
name|RefGreeterImpl
argument_list|()
expr_stmt|;
name|address
operator|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/SoapPort2"
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
comment|//publish port with soap12 binding
name|address
operator|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/SoapContext/SoapPort"
expr_stmt|;
name|EndpointImpl
name|e
init|=
operator|(
name|EndpointImpl
operator|)
name|Endpoint
operator|.
name|create
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|SOAP12HTTP_BINDING
argument_list|,
operator|new
name|Greeter12Impl
argument_list|()
argument_list|)
decl_stmt|;
name|e
operator|.
name|publish
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|implementor
operator|=
operator|new
name|DocLitBareGreeterImpl
argument_list|()
expr_stmt|;
name|address
operator|=
literal|"http://localhost:"
operator|+
name|BARE_PORT
operator|+
literal|"/SoapContext/SoapPort"
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|implementor
operator|=
operator|new
name|GreeterImplBogus
argument_list|()
expr_stmt|;
name|address
operator|=
literal|"http://localhost:"
operator|+
name|BOGUS_REAL_PORT
operator|+
literal|"/SoapContext/SoapPort"
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.apache.hello_world_soap_http.Greeter"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|)
specifier|public
class|class
name|Greeter12Impl
extends|extends
name|BaseGreeterImpl
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SOAPService"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.cxf.hello_world.elrefs.Greeter"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
name|wsdlLocation
operator|=
literal|"testutils/hello_world_ref.wsdl"
argument_list|)
specifier|public
class|class
name|RefGreeterImpl
implements|implements
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world
operator|.
name|elrefs
operator|.
name|Greeter
block|{
specifier|public
name|String
name|greetMe
parameter_list|(
name|String
name|requestType
parameter_list|)
block|{
return|return
literal|"Hello "
operator|+
name|requestType
return|;
block|}
specifier|public
name|String
name|sayHi
parameter_list|()
block|{
return|return
literal|"hi"
return|;
block|}
block|}
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SOAPServiceBogusAddressTest"
argument_list|,
name|portName
operator|=
literal|"SoapPort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.hello_world_soap_http.Greeter"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
name|wsdlLocation
operator|=
literal|"testutils/hello_world.wsdl"
argument_list|)
specifier|public
class|class
name|GreeterImplBogus
extends|extends
name|GreeterImpl
block|{          }
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SOAPServiceMultiPortTypeTest"
argument_list|,
name|portName
operator|=
literal|"GreeterPort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.hello_world_soap_http.Greeter"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
name|wsdlLocation
operator|=
literal|"testutils/hello_world.wsdl"
argument_list|)
specifier|public
class|class
name|GreeterImplMultiPort
extends|extends
name|GreeterImpl
block|{          }
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"SOAPServiceMultiPortTypeTest"
argument_list|,
name|portName
operator|=
literal|"DocLitBarePort"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.hello_world_soap_http.DocLitBare"
argument_list|,
name|targetNamespace
operator|=
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
name|wsdlLocation
operator|=
literal|"testutils/hello_world.wsdl"
argument_list|)
specifier|public
class|class
name|DocLitBareGreeterMultiPort
extends|extends
name|DocLitBareGreeterImpl
block|{          }
block|}
end_class

end_unit

