begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|transfer
operator|.
name|resolver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|Create
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|manager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|resourcefactory
operator|.
name|resolver
operator|.
name|ResourceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|resourcefactory
operator|.
name|resolver
operator|.
name|ResourceResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|transfer
operator|.
name|shared
operator|.
name|faults
operator|.
name|InvalidRepresentation
import|;
end_import

begin_class
specifier|public
class|class
name|MyResourceResolver
implements|implements
name|ResourceResolver
block|{
specifier|protected
name|String
name|studentURL
decl_stmt|;
specifier|protected
name|ResourceManager
name|studentManager
decl_stmt|;
specifier|protected
name|String
name|teachersURL
decl_stmt|;
specifier|public
name|MyResourceResolver
parameter_list|(
name|String
name|studentURL
parameter_list|,
name|ResourceManager
name|studentManager
parameter_list|,
name|String
name|teachersURL
parameter_list|)
block|{
name|this
operator|.
name|studentURL
operator|=
name|studentURL
expr_stmt|;
name|this
operator|.
name|studentManager
operator|=
name|studentManager
expr_stmt|;
name|this
operator|.
name|teachersURL
operator|=
name|teachersURL
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ResourceReference
name|resolve
parameter_list|(
name|Create
name|body
parameter_list|)
block|{
name|Element
name|representationEl
init|=
operator|(
name|Element
operator|)
name|body
operator|.
name|getRepresentation
argument_list|()
operator|.
name|getAny
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"student"
operator|.
name|equals
argument_list|(
name|representationEl
operator|.
name|getLocalName
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|ResourceReference
argument_list|(
name|studentURL
argument_list|,
name|studentManager
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
literal|"teacher"
operator|.
name|equals
argument_list|(
name|representationEl
operator|.
name|getLocalName
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|ResourceReference
argument_list|(
name|teachersURL
argument_list|,
literal|null
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|InvalidRepresentation
argument_list|()
throw|;
block|}
block|}
block|}
end_class

end_unit

