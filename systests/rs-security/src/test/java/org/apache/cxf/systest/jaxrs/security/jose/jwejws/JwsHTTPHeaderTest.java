begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|jose
operator|.
name|jwejws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|JacksonJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|AbstractPhaseInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|jose
operator|.
name|jaxrs
operator|.
name|JwsWriterInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|Book
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Some signature tests for signing HTTP Headers  */
end_comment

begin_class
specifier|public
class|class
name|JwsHTTPHeaderTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServerHTTPHeaders
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServerHTTPHeaders
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testSignHTTPHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JwsHTTPHeaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
expr_stmt|;
name|JwsWriterInterceptor
name|jwsWriterInterceptor
init|=
operator|new
name|JwsWriterInterceptor
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|jwsWriterInterceptor
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jwsheaderdefault/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.type"
argument_list|,
literal|"jwk"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"2011-04-29"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/certs/jwkPrivateSet.txt"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.algorithm"
argument_list|,
literal|"RS256"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
comment|// Expect failure on not signing the default headers
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectHttpHeaders
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testSpecifyHeadersToSign
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JwsHTTPHeaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
expr_stmt|;
name|JwsWriterInterceptor
name|jwsWriterInterceptor
init|=
operator|new
name|JwsWriterInterceptor
argument_list|()
decl_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectHttpHeaders
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|headersToSign
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
expr_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectedHttpHeaders
argument_list|(
name|headersToSign
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|jwsWriterInterceptor
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jwsheaderdefault/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.type"
argument_list|,
literal|"jwk"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"2011-04-29"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/certs/jwkPrivateSet.txt"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.algorithm"
argument_list|,
literal|"RS256"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
comment|// Expect failure on not signing all of the default headers
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testSignAdditionalCustomHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JwsHTTPHeaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
expr_stmt|;
name|JwsWriterInterceptor
name|jwsWriterInterceptor
init|=
operator|new
name|JwsWriterInterceptor
argument_list|()
decl_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectHttpHeaders
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|headersToSign
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
literal|"customheader"
argument_list|)
expr_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectedHttpHeaders
argument_list|(
name|headersToSign
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|jwsWriterInterceptor
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jwsheaderdefault/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.type"
argument_list|,
literal|"jwk"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"2011-04-29"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/certs/jwkPrivateSet.txt"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.algorithm"
argument_list|,
literal|"RS256"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|CustomHeaderInterceptor
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
decl_stmt|;
name|response
operator|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testSignCustomHeaderRequired
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JwsHTTPHeaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
expr_stmt|;
name|JwsWriterInterceptor
name|jwsWriterInterceptor
init|=
operator|new
name|JwsWriterInterceptor
argument_list|()
decl_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectHttpHeaders
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|jwsWriterInterceptor
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jwsheadercustom/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.type"
argument_list|,
literal|"jwk"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"2011-04-29"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/certs/jwkPrivateSet.txt"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.algorithm"
argument_list|,
literal|"RS256"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|CustomHeaderInterceptor
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expect failure on not signing all of the required headers
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|headersToSign
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
literal|"customheader"
argument_list|)
expr_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectedHttpHeaders
argument_list|(
name|headersToSign
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testSignEmptyCustomHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JwsHTTPHeaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
expr_stmt|;
name|JwsWriterInterceptor
name|jwsWriterInterceptor
init|=
operator|new
name|JwsWriterInterceptor
argument_list|()
decl_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectHttpHeaders
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|headersToSign
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|CONTENT_TYPE
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
name|HttpHeaders
operator|.
name|ACCEPT
argument_list|)
expr_stmt|;
name|headersToSign
operator|.
name|add
argument_list|(
literal|"customheader"
argument_list|)
expr_stmt|;
name|jwsWriterInterceptor
operator|.
name|setProtectedHttpHeaders
argument_list|(
name|headersToSign
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|jwsWriterInterceptor
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/jwsheadercustom/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.type"
argument_list|,
literal|"jwk"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"2011-04-29"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/certs/jwkPrivateSet.txt"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.algorithm"
argument_list|,
literal|"RS256"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|CustomHeaderInterceptor
name|customHeaderInterceptor
init|=
operator|new
name|CustomHeaderInterceptor
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
decl_stmt|;
name|customHeaderInterceptor
operator|.
name|setEmpty
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|customHeaderInterceptor
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
decl_stmt|;
name|response
operator|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|CustomHeaderInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|private
name|boolean
name|empty
decl_stmt|;
name|CustomHeaderInterceptor
parameter_list|(
name|String
name|phase
parameter_list|)
block|{
name|super
argument_list|(
name|phase
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
name|headers
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
operator|)
name|message
operator|.
name|get
argument_list|(
name|Message
operator|.
name|PROTOCOL_HEADERS
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"customheader"
argument_list|,
name|empty
condition|?
name|Arrays
operator|.
name|asList
argument_list|(
literal|""
argument_list|)
else|:
name|Arrays
operator|.
name|asList
argument_list|(
literal|"value1"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|empty
return|;
block|}
specifier|public
name|void
name|setEmpty
parameter_list|(
name|boolean
name|empty
parameter_list|)
block|{
name|this
operator|.
name|empty
operator|=
name|empty
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

