begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|oauth
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|net
operator|.
name|oauth
operator|.
name|OAuth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|client
operator|.
name|OAuthClientUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|client
operator|.
name|OAuthClientUtils
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TemporaryCredentialServiceTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TEMPORARY_CREDENTIALS_URL
init|=
literal|"/a/oauth/initiate"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|HOST
init|=
literal|"http://localhost:"
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|OAuthServer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetTemporaryCredentialsURIQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
name|OAuth
operator|.
name|OAUTH_SIGNATURE_METHOD
argument_list|,
literal|"HMAC-SHA1"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|put
argument_list|(
name|OAuth
operator|.
name|OAUTH_NONCE
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|put
argument_list|(
name|OAuth
operator|.
name|OAUTH_TIMESTAMP
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|uri
init|=
name|HOST
operator|+
name|OAuthServer
operator|.
name|PORT
operator|+
name|TEMPORARY_CREDENTIALS_URL
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|Token
name|t
init|=
name|OAuthClientUtils
operator|.
name|getRequestToken
argument_list|(
name|wc
argument_list|,
operator|new
name|OAuthClientUtils
operator|.
name|Consumer
argument_list|(
name|OAuthTestUtils
operator|.
name|CLIENT_ID
argument_list|,
name|OAuthTestUtils
operator|.
name|CLIENT_SECRET
argument_list|)
argument_list|,
name|URI
operator|.
name|create
argument_list|(
name|OAuthTestUtils
operator|.
name|CALLBACK
argument_list|)
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|t
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|t
operator|.
name|getSecret
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

