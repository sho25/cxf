begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|httpsignature
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPair
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPairGenerator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|MessageDigest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivateKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Priorities
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptorContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|MessageDigestInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|MessageSigner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|MessageVerifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|filters
operator|.
name|CreateDigestInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|filters
operator|.
name|CreateSignatureClientFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|filters
operator|.
name|VerifyDigestInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|httpsignature
operator|.
name|filters
operator|.
name|VerifySignatureClientFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rt
operator|.
name|security
operator|.
name|rs
operator|.
name|PrivateKeyPasswordProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|Book
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * A test for the HTTP Signature functionality in the cxf-rt-rs-security-http-signature module.  */
end_comment

begin_class
specifier|public
class|class
name|JAXRSHTTPSignatureTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServerHttpSignature
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServerHttpSignature
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignature
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureGET
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|path
argument_list|(
literal|"/126"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureServiceProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigprops/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureProperties
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.out.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/alice.httpsig.properties"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureOutProperties
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/alice.httpsig.properties"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignaturePropertiesPasswordProvider
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.password"
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"keys/alice.jks"
argument_list|)
expr_stmt|;
name|PrivateKeyPasswordProvider
name|passwordProvider
init|=
name|storeProperties
lambda|->
literal|"password"
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.key.password.provider"
argument_list|,
name|passwordProvider
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.http.signature.key.id"
argument_list|,
literal|"alice-key-id"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureRsaSha512
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
literal|"rsa-sha512"
argument_list|,
literal|"SHA-256"
argument_list|,
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigrsasha512/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureRsaSha512ServiceProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
literal|"rsa-sha512"
argument_list|,
literal|"SHA-256"
argument_list|,
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigrsasha512props/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureSignaturePropertiesRsaSha512
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigrsasha512/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.alias"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.password"
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.keystore.file"
argument_list|,
literal|"keys/alice.jks"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.key.password"
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.algorithm"
argument_list|,
literal|"rsa-sha512"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.http.signature.key.id"
argument_list|,
literal|"alice-key-id"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|VerifySignatureClientFilter
name|signatureResponseFilter
init|=
operator|new
name|VerifySignatureClientFilter
argument_list|()
decl_stmt|;
name|MessageVerifier
name|messageVerifier
init|=
operator|new
name|MessageVerifier
argument_list|(
operator|new
name|CustomPublicKeyProvider
argument_list|()
argument_list|)
decl_stmt|;
name|signatureResponseFilter
operator|.
name|setMessageVerifier
argument_list|(
name|messageVerifier
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|signatureFilter
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|signatureResponseFilter
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigresponse/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureResponseServiceProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|VerifySignatureClientFilter
name|signatureResponseFilter
init|=
operator|new
name|VerifySignatureClientFilter
argument_list|()
decl_stmt|;
name|MessageVerifier
name|messageVerifier
init|=
operator|new
name|MessageVerifier
argument_list|(
operator|new
name|CustomPublicKeyProvider
argument_list|()
argument_list|)
decl_stmt|;
name|signatureResponseFilter
operator|.
name|setMessageVerifier
argument_list|(
name|messageVerifier
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|signatureFilter
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
name|signatureResponseFilter
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigresponseprops/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureResponseProperties
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|CreateSignatureClientFilter
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|VerifySignatureClientFilter
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigresponse/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.out.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/alice.httpsig.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.in.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/bob.httpsig.properties"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureNoRequestTarget
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|headerList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"accept"
argument_list|)
decl_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
literal|"rsa-sha512"
argument_list|,
literal|"SHA-256"
argument_list|,
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|,
name|headerList
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigrsasha512/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureSignSpecificHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|headerList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"accept"
argument_list|,
literal|"(request-target)"
argument_list|)
decl_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|,
name|headerList
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureSignSpecificHeaderProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/alice.httpsig.properties"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|headerList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"accept"
argument_list|,
literal|"(request-target)"
argument_list|)
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.http.signature.out.headers"
argument_list|,
name|headerList
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderTrailingWhitespace
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|headerList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"custom"
argument_list|,
literal|"(request-target)"
argument_list|)
decl_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyid
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|,
name|headerList
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|client
operator|.
name|header
argument_list|(
literal|"custom"
argument_list|,
literal|" someval    "
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleHeaderConcatenation
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|headerList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"custom"
argument_list|,
literal|"(request-target)"
argument_list|)
decl_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|,
name|headerList
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|client
operator|.
name|header
argument_list|(
literal|"custom"
argument_list|,
literal|"someval, someval2"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDigest
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateDigestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestInterceptor
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digestFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDigestSHA512
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateDigestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestInterceptor
argument_list|(
literal|"SHA-512"
argument_list|)
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digestFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDigestResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateDigestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestInterceptor
argument_list|()
decl_stmt|;
name|VerifyDigestInterceptor
name|verifyDigestFilter
init|=
operator|new
name|VerifyDigestInterceptor
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|digestFilter
argument_list|,
name|verifyDigestFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// TODO The Digest is not being signed yet
annotation|@
name|Test
annotation|@
name|Ignore
specifier|public
name|void
name|testHttpSignatureDigest
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|CreateDigestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestInterceptor
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigdigest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|digestFilter
argument_list|,
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|Book
name|returnedBook
init|=
name|response
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|returnedBook
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//
comment|// Negative tests
comment|//
annotation|@
name|Test
specifier|public
name|void
name|testNonMatchingSignatureAlgorithm
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
literal|"rsa-sha512"
argument_list|,
literal|"SHA-256"
argument_list|,
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoHttpSignature
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoHttpSignatureGET
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|path
argument_list|(
literal|"/126"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongHTTPMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|ClientTestFilter
name|signatureFilter
init|=
operator|new
name|ClientTestFilter
argument_list|()
decl_stmt|;
name|signatureFilter
operator|.
name|setHttpMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongURI
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|ClientTestFilter
name|signatureFilter
init|=
operator|new
name|ClientTestFilter
argument_list|()
decl_stmt|;
name|signatureFilter
operator|.
name|setUri
argument_list|(
literal|"/httpsig/bookstore/books2"
argument_list|)
expr_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangedSignatureMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|ClientTestFilter
name|signatureFilter
init|=
operator|new
name|ClientTestFilter
argument_list|()
decl_stmt|;
name|signatureFilter
operator|.
name|setChangeSignatureAlgorithm
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptySignatureValue
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|ClientTestFilter
name|signatureFilter
init|=
operator|new
name|ClientTestFilter
argument_list|()
decl_stmt|;
name|signatureFilter
operator|.
name|setEmptySignatureValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testChangedSignatureValue
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|ClientTestFilter
name|signatureFilter
init|=
operator|new
name|ClientTestFilter
argument_list|()
decl_stmt|;
name|signatureFilter
operator|.
name|setChangeSignatureValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDifferentSigningKey
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|ClientTestFilter
name|signatureFilter
init|=
operator|new
name|ClientTestFilter
argument_list|()
decl_stmt|;
name|KeyPair
name|keyPair
init|=
name|KeyPairGenerator
operator|.
name|getInstance
argument_list|(
literal|"RSA"
argument_list|)
operator|.
name|generateKeyPair
argument_list|()
decl_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|keyPair
operator|.
name|getPrivate
argument_list|()
argument_list|,
literal|"alice-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHttpSignatureMissingRequiredHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|headerList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"accept"
argument_list|)
decl_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"alice-key-id"
argument_list|,
name|headerList
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUnknownKeyId
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateSignatureClientFilter
name|signatureFilter
init|=
operator|new
name|CreateSignatureClientFilter
argument_list|()
decl_stmt|;
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|PrivateKey
name|privateKey
init|=
operator|(
name|PrivateKey
operator|)
name|keyStore
operator|.
name|getKey
argument_list|(
literal|"alice"
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|privateKey
argument_list|)
expr_stmt|;
name|MessageSigner
name|messageSigner
init|=
operator|new
name|MessageSigner
argument_list|(
name|keyId
lambda|->
name|privateKey
argument_list|,
literal|"unknown-key-id"
argument_list|)
decl_stmt|;
name|signatureFilter
operator|.
name|setMessageSigner
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsig/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropertiesWrongSignatureVerification
parameter_list|()
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|CreateSignatureClientFilter
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|VerifySignatureClientFilter
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/httpsigresponse/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.out.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/alice.httpsig.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"rs.security.signature.in.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/httpsignature/alice.httpsig.properties"
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on the wrong signature verification keystore"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoDigest
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncorrectDigest
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateDigestTestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestTestInterceptor
argument_list|()
decl_stmt|;
name|digestFilter
operator|.
name|setChangeDigestValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digestFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyDigest
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateDigestTestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestTestInterceptor
argument_list|()
decl_stmt|;
name|digestFilter
operator|.
name|setEmptyDigestValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digestFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncorrectDigestAlgorithm
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|busFile
init|=
name|JAXRSHTTPSignatureTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|CreateDigestTestInterceptor
name|digestFilter
init|=
operator|new
name|CreateDigestTestInterceptor
argument_list|(
literal|"SHA-1"
argument_list|)
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/digest/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|digestFilter
argument_list|)
argument_list|,
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getStatus
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Provider
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|AUTHENTICATION
argument_list|)
specifier|private
specifier|final
class|class
name|ClientTestFilter
implements|implements
name|ClientRequestFilter
block|{
specifier|private
name|MessageSigner
name|messageSigner
decl_stmt|;
specifier|private
name|String
name|httpMethod
decl_stmt|;
specifier|private
name|String
name|uri
decl_stmt|;
specifier|private
name|boolean
name|changeSignatureAlgorithm
decl_stmt|;
specifier|private
name|boolean
name|emptySignatureValue
decl_stmt|;
specifier|private
name|boolean
name|changeSignatureValue
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|requestCtx
parameter_list|)
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|requestHeaders
init|=
name|requestCtx
operator|.
name|getHeaders
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|convertedHeaders
init|=
name|convertHeaders
argument_list|(
name|requestHeaders
argument_list|)
decl_stmt|;
try|try
block|{
name|messageSigner
operator|.
name|sign
argument_list|(
name|convertedHeaders
argument_list|,
name|uri
operator|!=
literal|null
condition|?
name|uri
else|:
name|requestCtx
operator|.
name|getUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|httpMethod
operator|!=
literal|null
condition|?
name|httpMethod
else|:
name|requestCtx
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|changeSignatureAlgorithm
condition|)
block|{
name|String
name|signatureValue
init|=
name|convertedHeaders
operator|.
name|get
argument_list|(
literal|"Signature"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|signatureValue
operator|=
name|signatureValue
operator|.
name|replace
argument_list|(
literal|"rsa-sha256"
argument_list|,
literal|"rsa-sha512"
argument_list|)
expr_stmt|;
name|requestHeaders
operator|.
name|put
argument_list|(
literal|"Signature"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|emptySignatureValue
condition|)
block|{
name|String
name|signatureValue
init|=
name|convertedHeaders
operator|.
name|get
argument_list|(
literal|"Signature"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|signatureValue
operator|=
name|signatureValue
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|signatureValue
operator|.
name|indexOf
argument_list|(
literal|"signature="
argument_list|)
operator|+
literal|"signature=\""
operator|.
name|length
argument_list|()
argument_list|)
operator|+
literal|"\""
expr_stmt|;
name|requestHeaders
operator|.
name|put
argument_list|(
literal|"Signature"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|changeSignatureValue
condition|)
block|{
name|String
name|signatureValue
init|=
name|convertedHeaders
operator|.
name|get
argument_list|(
literal|"Signature"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|signature
init|=
name|signatureValue
operator|.
name|substring
argument_list|(
name|signatureValue
operator|.
name|indexOf
argument_list|(
literal|"signature="
argument_list|)
operator|+
literal|"signature=\""
operator|.
name|length
argument_list|()
argument_list|,
name|signatureValue
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|byte
index|[]
name|decodedSignature
init|=
name|Base64
operator|.
name|getDecoder
argument_list|()
operator|.
name|decode
argument_list|(
name|signature
argument_list|)
decl_stmt|;
name|decodedSignature
index|[
literal|0
index|]
operator|++
expr_stmt|;
name|signatureValue
operator|=
name|signatureValue
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|signatureValue
operator|.
name|indexOf
argument_list|(
literal|"signature="
argument_list|)
operator|+
literal|"signature=\""
operator|.
name|length
argument_list|()
argument_list|)
operator|+
name|Base64
operator|.
name|getEncoder
argument_list|()
operator|.
name|encodeToString
argument_list|(
name|decodedSignature
argument_list|)
operator|+
literal|"\""
expr_stmt|;
name|requestHeaders
operator|.
name|put
argument_list|(
literal|"Signature"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|signatureValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|requestHeaders
operator|.
name|put
argument_list|(
literal|"Signature"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|convertedHeaders
operator|.
name|get
argument_list|(
literal|"Signature"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Convert the headers from List<Object> -> List<String>
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|convertHeaders
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|requestHeaders
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|convertedHeaders
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|requestHeaders
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Object
argument_list|>
argument_list|>
name|entry
range|:
name|requestHeaders
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|convertedHeaders
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|Object
operator|::
name|toString
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|convertedHeaders
return|;
block|}
specifier|public
name|void
name|setMessageSigner
parameter_list|(
name|MessageSigner
name|messageSigner
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|messageSigner
argument_list|)
expr_stmt|;
name|this
operator|.
name|messageSigner
operator|=
name|messageSigner
expr_stmt|;
block|}
specifier|public
name|void
name|setHttpMethod
parameter_list|(
name|String
name|httpMethod
parameter_list|)
block|{
name|this
operator|.
name|httpMethod
operator|=
name|httpMethod
expr_stmt|;
block|}
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
specifier|public
name|void
name|setChangeSignatureAlgorithm
parameter_list|(
name|boolean
name|changeSignatureAlgorithm
parameter_list|)
block|{
name|this
operator|.
name|changeSignatureAlgorithm
operator|=
name|changeSignatureAlgorithm
expr_stmt|;
block|}
specifier|public
name|void
name|setChangeSignatureValue
parameter_list|(
name|boolean
name|changeSignatureValue
parameter_list|)
block|{
name|this
operator|.
name|changeSignatureValue
operator|=
name|changeSignatureValue
expr_stmt|;
block|}
specifier|public
name|void
name|setEmptySignatureValue
parameter_list|(
name|boolean
name|emptySignatureValue
parameter_list|)
block|{
name|this
operator|.
name|emptySignatureValue
operator|=
name|emptySignatureValue
expr_stmt|;
block|}
block|}
annotation|@
name|Provider
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|HEADER_DECORATOR
argument_list|)
specifier|private
specifier|final
class|class
name|CreateDigestTestInterceptor
implements|implements
name|WriterInterceptor
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DIGEST_HEADER_NAME
init|=
literal|"Digest"
decl_stmt|;
specifier|private
specifier|final
name|String
name|digestAlgorithmName
decl_stmt|;
specifier|private
name|boolean
name|changeDigestValue
decl_stmt|;
specifier|private
name|boolean
name|emptyDigestValue
decl_stmt|;
specifier|private
name|CreateDigestTestInterceptor
parameter_list|()
block|{
name|this
argument_list|(
name|MessageDigestInputStream
operator|.
name|ALGO_SHA_256
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CreateDigestTestInterceptor
parameter_list|(
name|String
name|digestAlgorithmName
parameter_list|)
block|{
name|this
operator|.
name|digestAlgorithmName
operator|=
name|digestAlgorithmName
expr_stmt|;
block|}
specifier|private
name|boolean
name|shouldAddDigest
parameter_list|(
name|WriterInterceptorContext
name|context
parameter_list|)
block|{
return|return
literal|null
operator|!=
name|context
operator|.
name|getEntity
argument_list|()
operator|&&
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|noneMatch
argument_list|(
name|DIGEST_HEADER_NAME
operator|::
name|equalsIgnoreCase
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|aroundWriteTo
parameter_list|(
name|WriterInterceptorContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
comment|// skip digest if already set or we actually don't have a body
if|if
condition|(
name|shouldAddDigest
argument_list|(
name|context
argument_list|)
condition|)
block|{
name|addDigest
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|context
operator|.
name|proceed
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|addDigest
parameter_list|(
name|WriterInterceptorContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
comment|// make sure we have all content
name|OutputStream
name|originalOutputStream
init|=
name|context
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|CachedOutputStream
name|cachedOutputStream
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|context
operator|.
name|setOutputStream
argument_list|(
name|cachedOutputStream
argument_list|)
expr_stmt|;
name|context
operator|.
name|proceed
argument_list|()
expr_stmt|;
name|cachedOutputStream
operator|.
name|flush
argument_list|()
expr_stmt|;
comment|// then digest using requested encoding
name|String
name|encoding
init|=
name|context
operator|.
name|getMediaType
argument_list|()
operator|.
name|getParameters
argument_list|()
operator|.
name|getOrDefault
argument_list|(
name|MediaType
operator|.
name|CHARSET_PARAMETER
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
comment|// not so nice - would be better to have a stream
name|String
name|digest
init|=
name|digestAlgorithmName
operator|+
literal|"="
decl_stmt|;
try|try
block|{
name|MessageDigest
name|messageDigest
init|=
name|MessageDigest
operator|.
name|getInstance
argument_list|(
name|digestAlgorithmName
argument_list|)
decl_stmt|;
name|messageDigest
operator|.
name|update
argument_list|(
operator|new
name|String
argument_list|(
name|cachedOutputStream
operator|.
name|getBytes
argument_list|()
argument_list|,
name|encoding
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|emptyDigestValue
condition|)
block|{
if|if
condition|(
name|changeDigestValue
condition|)
block|{
name|byte
index|[]
name|bytes
init|=
name|messageDigest
operator|.
name|digest
argument_list|()
decl_stmt|;
name|bytes
index|[
literal|0
index|]
operator|+=
literal|1
expr_stmt|;
name|digest
operator|+=
name|Base64
operator|.
name|getEncoder
argument_list|()
operator|.
name|encodeToString
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|digest
operator|+=
name|Base64
operator|.
name|getEncoder
argument_list|()
operator|.
name|encodeToString
argument_list|(
name|messageDigest
operator|.
name|digest
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
comment|// add header
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|add
argument_list|(
name|DIGEST_HEADER_NAME
argument_list|,
name|digest
argument_list|)
expr_stmt|;
comment|// write the contents
name|context
operator|.
name|setOutputStream
argument_list|(
name|originalOutputStream
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|cachedOutputStream
operator|.
name|getInputStream
argument_list|()
argument_list|,
name|originalOutputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setChangeDigestValue
parameter_list|(
name|boolean
name|changeDigestValue
parameter_list|)
block|{
name|this
operator|.
name|changeDigestValue
operator|=
name|changeDigestValue
expr_stmt|;
block|}
specifier|public
name|void
name|setEmptyDigestValue
parameter_list|(
name|boolean
name|emptyDigestValue
parameter_list|)
block|{
name|this
operator|.
name|emptyDigestValue
operator|=
name|emptyDigestValue
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

