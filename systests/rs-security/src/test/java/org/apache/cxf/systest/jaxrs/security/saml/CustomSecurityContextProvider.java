begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|saml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|saml
operator|.
name|assertion
operator|.
name|Claims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|saml
operator|.
name|assertion
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|saml
operator|.
name|authorization
operator|.
name|SecurityContextProviderImpl
import|;
end_import

begin_class
specifier|public
class|class
name|CustomSecurityContextProvider
extends|extends
name|SecurityContextProviderImpl
block|{
annotation|@
name|Override
specifier|protected
name|String
name|getSubjectPrincipalName
parameter_list|(
name|Subject
name|subject
parameter_list|,
name|Claims
name|claims
parameter_list|)
block|{
name|int
name|index
init|=
name|subject
operator|.
name|getName
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"@"
argument_list|)
decl_stmt|;
return|return
name|index
operator|==
operator|-
literal|1
condition|?
name|super
operator|.
name|getSubjectPrincipalName
argument_list|(
name|subject
argument_list|,
name|claims
argument_list|)
else|:
name|subject
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|index
argument_list|)
return|;
block|}
block|}
end_class

end_unit

