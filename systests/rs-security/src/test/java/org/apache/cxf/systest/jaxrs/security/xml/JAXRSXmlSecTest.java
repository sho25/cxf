begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ProcessingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|common
operator|.
name|RSSecurityUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|EncryptionProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|XmlEncInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|XmlEncOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|XmlSecInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|XmlSecOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|XmlSigInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|xml
operator|.
name|XmlSigOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|Book
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|security
operator|.
name|BookStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xml
operator|.
name|security
operator|.
name|encryption
operator|.
name|XMLCipher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|JAXRSXmlSecTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServerXmlSec
operator|.
name|PORT
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|STAX_PORT
init|=
name|StaxBookServerXmlSec
operator|.
name|PORT
decl_stmt|;
specifier|final
name|TestParam
name|test
decl_stmt|;
specifier|public
name|JAXRSXmlSecTest
parameter_list|(
name|TestParam
name|type
parameter_list|)
block|{
name|this
operator|.
name|test
operator|=
name|type
expr_stmt|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServerXmlSec
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|StaxBookServerXmlSec
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Parameters
argument_list|(
name|name
operator|=
literal|"{0}"
argument_list|)
specifier|public
specifier|static
name|Collection
argument_list|<
name|TestParam
index|[]
argument_list|>
name|data
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|TestParam
index|[]
index|[]
block|{
block|{
operator|new
name|TestParam
argument_list|(
name|PORT
argument_list|,
literal|false
argument_list|)
block|}
block|,
block|{
operator|new
name|TestParam
argument_list|(
name|STAX_PORT
argument_list|,
literal|false
argument_list|)
block|}
block|,
block|{
operator|new
name|TestParam
argument_list|(
name|PORT
argument_list|,
literal|true
argument_list|)
block|}
block|,
block|{
operator|new
name|TestParam
argument_list|(
name|STAX_PORT
argument_list|,
literal|true
argument_list|)
block|}
block|,         }
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithEnvelopedSigAndProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig"
decl_stmt|;
name|doTestSignatureProxy
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOldConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"ws-security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"ws-security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|String
name|cryptoUrl
init|=
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
decl_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"ws-security.signature.properties"
argument_list|,
name|cryptoUrl
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|newProperties
argument_list|)
expr_stmt|;
if|if
condition|(
name|test
operator|.
name|streaming
condition|)
block|{
name|XmlSecOutInterceptor
name|sigInterceptor
init|=
operator|new
name|XmlSecOutInterceptor
argument_list|()
decl_stmt|;
name|sigInterceptor
operator|.
name|setSignRequest
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInterceptor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|XmlSigOutInterceptor
name|sigInterceptor
init|=
operator|new
name|XmlSigOutInterceptor
argument_list|()
decl_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInterceptor
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|setServiceClass
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|BookStore
name|store
init|=
name|bean
operator|.
name|create
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|store
operator|.
name|addBook
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithEnvelopedSigAndProxy2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig"
decl_stmt|;
name|doTestSignatureProxy
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
literal|""
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookEnvelopingSigAndProxy
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|test
operator|.
name|streaming
operator|||
name|STAX_PORT
operator|.
name|equals
argument_list|(
name|test
operator|.
name|port
argument_list|)
condition|)
block|{
comment|// Enveloping not supported for streaming code
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig"
decl_stmt|;
name|doTestSignatureProxy
argument_list|(
name|address
argument_list|,
literal|true
argument_list|,
literal|"file:"
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCertConstraints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsigconstraints"
decl_stmt|;
comment|// Successful test with "bob"
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|String
name|cryptoUrl
init|=
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
decl_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
name|cryptoUrl
argument_list|)
expr_stmt|;
name|doTestSignatureProxy
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|test
operator|.
name|streaming
argument_list|,
name|newProperties
argument_list|)
expr_stmt|;
comment|// Constraint validation fails with "alice"
name|newProperties
operator|.
name|clear
argument_list|()
expr_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|cryptoUrl
operator|=
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
expr_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
name|cryptoUrl
argument_list|)
expr_stmt|;
try|try
block|{
name|doTestSignatureProxy
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|test
operator|.
name|streaming
argument_list|,
name|newProperties
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on a failing cert constraint"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
specifier|private
name|void
name|doTestSignatureProxy
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|enveloping
parameter_list|,
name|String
name|cryptoUrlPrefix
parameter_list|,
name|boolean
name|streaming
parameter_list|)
throws|throws
name|Exception
block|{
name|doTestSignatureProxy
argument_list|(
name|address
argument_list|,
name|enveloping
argument_list|,
name|cryptoUrlPrefix
argument_list|,
name|streaming
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestSignatureProxy
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|enveloping
parameter_list|,
name|String
name|cryptoUrlPrefix
parameter_list|,
name|boolean
name|streaming
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newProperties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|properties
argument_list|)
decl_stmt|;
if|if
condition|(
name|newProperties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|String
name|cryptoUrl
init|=
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
decl_stmt|;
if|if
condition|(
name|cryptoUrlPrefix
operator|!=
literal|null
condition|)
block|{
name|cryptoUrl
operator|=
name|cryptoUrlPrefix
operator|+
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/"
operator|+
name|cryptoUrl
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|getPath
argument_list|()
expr_stmt|;
block|}
name|newProperties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
name|cryptoUrl
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|setProperties
argument_list|(
name|newProperties
argument_list|)
expr_stmt|;
if|if
condition|(
name|streaming
condition|)
block|{
name|XmlSecOutInterceptor
name|sigInterceptor
init|=
operator|new
name|XmlSecOutInterceptor
argument_list|()
decl_stmt|;
name|sigInterceptor
operator|.
name|setSignRequest
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInterceptor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|XmlSigOutInterceptor
name|sigInterceptor
init|=
operator|new
name|XmlSigOutInterceptor
argument_list|()
decl_stmt|;
if|if
condition|(
name|enveloping
condition|)
block|{
name|sigInterceptor
operator|.
name|setStyle
argument_list|(
name|XmlSigOutInterceptor
operator|.
name|ENVELOPING_SIG
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInterceptor
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|setServiceClass
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|BookStore
name|store
init|=
name|bean
operator|.
name|create
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|store
operator|.
name|addBook
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithEnvelopedSig
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig/bookstore/books"
decl_stmt|;
name|doTestSignature
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithEnvelopedSigNoKeyInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsignokeyinfo/bookstore/books"
decl_stmt|;
name|doTestSignature
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithEnvelopingSig
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|test
operator|.
name|streaming
operator|||
name|STAX_PORT
operator|.
name|equals
argument_list|(
name|test
operator|.
name|port
argument_list|)
condition|)
block|{
comment|// Enveloping not supported for streaming code
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig/bookstore/books"
decl_stmt|;
name|doTestSignature
argument_list|(
name|address
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithEnvelopingSigFromResponse
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|STAX_PORT
operator|.
name|equals
argument_list|(
name|test
operator|.
name|port
argument_list|)
condition|)
block|{
comment|// Enveloping not supported for streaming code
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig/bookstore/books"
decl_stmt|;
name|doTestSignature
argument_list|(
name|address
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestSignature
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|enveloping
parameter_list|,
name|boolean
name|fromResponse
parameter_list|,
name|boolean
name|useKeyInfo
parameter_list|,
name|boolean
name|streaming
parameter_list|)
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
if|if
condition|(
name|streaming
condition|)
block|{
name|XmlSecOutInterceptor
name|sigOutInterceptor
init|=
operator|new
name|XmlSecOutInterceptor
argument_list|()
decl_stmt|;
name|sigOutInterceptor
operator|.
name|setSignRequest
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|sigOutInterceptor
operator|.
name|setKeyInfoMustBeAvailable
argument_list|(
name|useKeyInfo
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigOutInterceptor
argument_list|)
expr_stmt|;
name|XmlSecInInterceptor
name|sigInInterceptor
init|=
operator|new
name|XmlSecInInterceptor
argument_list|()
decl_stmt|;
name|sigInInterceptor
operator|.
name|setRequireSignature
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|useKeyInfo
condition|)
block|{
name|sigInInterceptor
operator|.
name|setSignatureVerificationAlias
argument_list|(
literal|"alice"
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInInterceptor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|XmlSigOutInterceptor
name|sigOutInterceptor
init|=
operator|new
name|XmlSigOutInterceptor
argument_list|()
decl_stmt|;
if|if
condition|(
name|enveloping
condition|)
block|{
name|sigOutInterceptor
operator|.
name|setStyle
argument_list|(
name|XmlSigOutInterceptor
operator|.
name|ENVELOPING_SIG
argument_list|)
expr_stmt|;
block|}
name|sigOutInterceptor
operator|.
name|setKeyInfoMustBeAvailable
argument_list|(
name|useKeyInfo
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigOutInterceptor
argument_list|)
expr_stmt|;
name|XmlSigInInterceptor
name|sigInInterceptor
init|=
operator|new
name|XmlSigInInterceptor
argument_list|()
decl_stmt|;
name|sigInInterceptor
operator|.
name|setKeyInfoMustBeAvailable
argument_list|(
name|useKeyInfo
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInInterceptor
argument_list|)
expr_stmt|;
block|}
name|WebClient
name|wc
init|=
name|bean
operator|.
name|createWebClient
argument_list|()
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|10000000L
argument_list|)
expr_stmt|;
try|try
block|{
name|Book
name|book
decl_stmt|;
if|if
condition|(
operator|!
name|fromResponse
condition|)
block|{
name|book
operator|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|book
operator|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
name|fail
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ProcessingException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|BadRequestException
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedBook
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlenc/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
name|properties
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedBookGCM
parameter_list|()
throws|throws
name|Exception
block|{
comment|//
comment|// This test fails with the IBM JDK 7
comment|// IBM JDK 7 appears to require a GCMParameter class to be used, which
comment|// only exists in JDK 7. The Sun JDK appears to be more lenient and
comment|// allows us to use the existing IVParameterSpec class.
comment|//
if|if
condition|(
literal|"IBM Corporation"
operator|.
name|equals
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.vendor"
argument_list|)
argument_list|)
operator|&&
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.version"
argument_list|)
operator|!=
literal|null
operator|&&
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.version"
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"1.7"
argument_list|)
condition|)
block|{
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlenc/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|EncryptionProperties
name|encryptionProperties
init|=
operator|new
name|EncryptionProperties
argument_list|()
decl_stmt|;
name|String
name|aes128GCM
init|=
literal|"http://www.w3.org/2009/xmlenc11#aes128-gcm"
decl_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionSymmetricKeyAlgo
argument_list|(
name|aes128GCM
argument_list|)
expr_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionKeyIdType
argument_list|(
name|RSSecurityUtils
operator|.
name|X509_CERT
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
name|properties
argument_list|,
name|encryptionProperties
argument_list|,
literal|false
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedBookSHA256
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlenc/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|EncryptionProperties
name|encryptionProperties
init|=
operator|new
name|EncryptionProperties
argument_list|()
decl_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionSymmetricKeyAlgo
argument_list|(
name|XMLCipher
operator|.
name|AES_128
argument_list|)
expr_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionKeyIdType
argument_list|(
name|RSSecurityUtils
operator|.
name|X509_CERT
argument_list|)
expr_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionDigestAlgo
argument_list|(
name|XMLCipher
operator|.
name|SHA256
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
name|properties
argument_list|,
name|encryptionProperties
argument_list|,
literal|false
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedBookIssuerSerial
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlenc/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|EncryptionProperties
name|encryptionProperties
init|=
operator|new
name|EncryptionProperties
argument_list|()
decl_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionSymmetricKeyAlgo
argument_list|(
name|XMLCipher
operator|.
name|AES_128
argument_list|)
expr_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionKeyIdType
argument_list|(
name|RSSecurityUtils
operator|.
name|X509_ISSUER_SERIAL
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|false
argument_list|,
name|properties
argument_list|,
name|encryptionProperties
argument_list|,
literal|false
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedSignedBook
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsec-validate/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|true
argument_list|,
name|properties
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedSignedBookInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsec-validate/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
argument_list|)
expr_stmt|;
name|EncryptionProperties
name|encryptionProperties
init|=
operator|new
name|EncryptionProperties
argument_list|()
decl_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionSymmetricKeyAlgo
argument_list|(
literal|"http://www.w3.org/2009/xmlenc11#aes128-gcm"
argument_list|)
expr_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionKeyIdType
argument_list|(
name|RSSecurityUtils
operator|.
name|X509_CERT
argument_list|)
expr_stmt|;
try|try
block|{
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|true
argument_list|,
name|properties
argument_list|,
name|encryptionProperties
argument_list|,
literal|true
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadRequestException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|ex
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostEncryptedSignedBookUseReqSigCert
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsec-useReqSigCert/bookstore/books"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.username"
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
literal|true
argument_list|,
name|properties
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|doTestPostEncryptedBook
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|sign
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|,
name|boolean
name|streaming
parameter_list|)
throws|throws
name|Exception
block|{
name|EncryptionProperties
name|encryptionProperties
init|=
operator|new
name|EncryptionProperties
argument_list|()
decl_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionSymmetricKeyAlgo
argument_list|(
name|XMLCipher
operator|.
name|AES_128
argument_list|)
expr_stmt|;
name|encryptionProperties
operator|.
name|setEncryptionKeyIdType
argument_list|(
name|RSSecurityUtils
operator|.
name|X509_CERT
argument_list|)
expr_stmt|;
name|doTestPostEncryptedBook
argument_list|(
name|address
argument_list|,
name|sign
argument_list|,
name|properties
argument_list|,
name|encryptionProperties
argument_list|,
literal|false
argument_list|,
name|test
operator|.
name|streaming
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|doTestPostEncryptedBook
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|sign
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|,
name|EncryptionProperties
name|encryptionProperties
parameter_list|,
name|boolean
name|propagateException
parameter_list|,
name|boolean
name|streaming
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
if|if
condition|(
name|streaming
condition|)
block|{
name|XmlSecOutInterceptor
name|encInterceptor
init|=
operator|new
name|XmlSecOutInterceptor
argument_list|()
decl_stmt|;
name|encInterceptor
operator|.
name|setEncryptionKeyIdentifierType
argument_list|(
name|encryptionProperties
operator|.
name|getEncryptionKeyIdType
argument_list|()
argument_list|)
expr_stmt|;
name|encInterceptor
operator|.
name|setSymmetricEncAlgorithm
argument_list|(
name|encryptionProperties
operator|.
name|getEncryptionSymmetricKeyAlgo
argument_list|()
argument_list|)
expr_stmt|;
name|encInterceptor
operator|.
name|setEncryptionDigestAlgorithm
argument_list|(
name|encryptionProperties
operator|.
name|getEncryptionDigestAlgo
argument_list|()
argument_list|)
expr_stmt|;
name|encInterceptor
operator|.
name|setEncryptRequest
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|sign
condition|)
block|{
name|encInterceptor
operator|.
name|setSignRequest
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|encInterceptor
argument_list|)
expr_stmt|;
name|XmlSecInInterceptor
name|encInInterceptor
init|=
operator|new
name|XmlSecInInterceptor
argument_list|()
decl_stmt|;
name|encInInterceptor
operator|.
name|setRequireEncryption
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|encInInterceptor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|sign
condition|)
block|{
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlSigOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|XmlEncOutInterceptor
name|encInterceptor
init|=
operator|new
name|XmlEncOutInterceptor
argument_list|()
decl_stmt|;
name|encInterceptor
operator|.
name|setKeyIdentifierType
argument_list|(
name|encryptionProperties
operator|.
name|getEncryptionKeyIdType
argument_list|()
argument_list|)
expr_stmt|;
name|encInterceptor
operator|.
name|setSymmetricEncAlgorithm
argument_list|(
name|encryptionProperties
operator|.
name|getEncryptionSymmetricKeyAlgo
argument_list|()
argument_list|)
expr_stmt|;
name|encInterceptor
operator|.
name|setDigestAlgorithm
argument_list|(
name|encryptionProperties
operator|.
name|getEncryptionDigestAlgo
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|encInterceptor
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlEncInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|sign
condition|)
block|{
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlSigInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|WebClient
name|wc
init|=
name|bean
operator|.
name|createWebClient
argument_list|()
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|10000000L
argument_list|)
expr_stmt|;
try|try
block|{
name|Book
name|book
init|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|126L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
if|if
condition|(
name|propagateException
condition|)
block|{
throw|throw
name|ex
throw|;
block|}
else|else
block|{
name|fail
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ProcessingException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|BadRequestException
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookWithNoSig
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|test
operator|.
name|streaming
condition|)
block|{
comment|// Only testing the endpoints, not the clients here
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsig"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setServiceClass
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|BookStore
name|store
init|=
name|bean
operator|.
name|create
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|store
operator|.
name|addBook
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on no Signature"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEncryptionNoSignature
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|test
operator|.
name|streaming
condition|)
block|{
comment|// Only testing the endpoints, not the clients here
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsec-validate"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|XmlEncOutInterceptor
name|encInterceptor
init|=
operator|new
name|XmlEncOutInterceptor
argument_list|()
decl_stmt|;
name|encInterceptor
operator|.
name|setKeyIdentifierType
argument_list|(
name|RSSecurityUtils
operator|.
name|X509_CERT
argument_list|)
expr_stmt|;
name|encInterceptor
operator|.
name|setSymmetricEncAlgorithm
argument_list|(
name|XMLCipher
operator|.
name|AES_128
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|encInterceptor
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlEncInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlSigInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setServiceClass
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|BookStore
name|store
init|=
name|bean
operator|.
name|create
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|store
operator|.
name|addBook
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on no Signature"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSignatureNoEncryption
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|test
operator|.
name|streaming
condition|)
block|{
comment|// Only testing the endpoints, not the clients here
return|return;
block|}
name|String
name|address
init|=
literal|"https://localhost:"
operator|+
name|test
operator|.
name|port
operator|+
literal|"/xmlsec-validate"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|JAXRSXmlSecTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"client.xml"
argument_list|)
decl_stmt|;
name|Bus
name|springBus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|bean
operator|.
name|setBus
argument_list|(
name|springBus
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.callback-handler"
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.security.saml.KeystorePasswordCallback"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.username"
argument_list|,
literal|"bob"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.encryption.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/bob.properties"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"security.signature.properties"
argument_list|,
literal|"org/apache/cxf/systest/jaxrs/security/alice.properties"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|XmlSigOutInterceptor
name|sigInterceptor
init|=
operator|new
name|XmlSigOutInterceptor
argument_list|()
decl_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|sigInterceptor
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlEncInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|XmlSigInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setServiceClass
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|BookStore
name|store
init|=
name|bean
operator|.
name|create
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|store
operator|.
name|addBook
argument_list|(
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|126L
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on no Encryption"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
specifier|private
specifier|static
specifier|final
class|class
name|TestParam
block|{
specifier|final
name|String
name|port
decl_stmt|;
specifier|final
name|boolean
name|streaming
decl_stmt|;
name|TestParam
parameter_list|(
name|String
name|p
parameter_list|,
name|boolean
name|b
parameter_list|)
block|{
name|port
operator|=
name|p
expr_stmt|;
name|streaming
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|port
operator|+
literal|":"
operator|+
operator|(
name|streaming
condition|?
literal|"streaming"
else|:
literal|"dom"
operator|)
return|;
block|}
block|}
block|}
end_class

end_unit

