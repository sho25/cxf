begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingFaultInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingMessageInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|BindingOperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|EndpointInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|MessageInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|policy
operator|.
name|attachment
operator|.
name|external
operator|.
name|DomainExpression
import|;
end_import

begin_class
specifier|public
class|class
name|JavaFirstUriDomainExpression
implements|implements
name|DomainExpression
block|{
specifier|private
specifier|final
name|String
name|url
decl_stmt|;
specifier|public
name|JavaFirstUriDomainExpression
parameter_list|(
specifier|final
name|String
name|url
parameter_list|)
block|{
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingFaultInfo
name|paramBindingFaultInfo
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingMessageInfo
name|bmi
parameter_list|)
block|{
name|String
name|serviceName
init|=
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getBinding
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"JavaFirstAttachmentPolicyService"
operator|.
name|equals
argument_list|(
name|serviceName
argument_list|)
operator|&&
literal|"usernamepassword"
operator|.
name|equals
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return
operator|(
literal|"doInputMessagePolicy"
operator|.
name|equals
argument_list|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
operator|&&
name|MessageInfo
operator|.
name|Type
operator|.
name|INPUT
operator|.
name|equals
argument_list|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
operator|)
operator|||
operator|(
literal|"doOutputMessagePolicy"
operator|.
name|equals
argument_list|(
name|bmi
operator|.
name|getBindingOperation
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
operator|&&
name|MessageInfo
operator|.
name|Type
operator|.
name|OUTPUT
operator|.
name|equals
argument_list|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
operator|)
return|;
block|}
elseif|else
if|if
condition|(
literal|"SslUsernamePasswordAttachmentService"
operator|.
name|equals
argument_list|(
name|serviceName
argument_list|)
operator|&&
literal|"sslusernamepassword"
operator|.
name|equals
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return
name|MessageInfo
operator|.
name|Type
operator|.
name|INPUT
operator|.
name|equals
argument_list|(
name|bmi
operator|.
name|getMessageInfo
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|BindingOperationInfo
name|boi
parameter_list|)
block|{
if|if
condition|(
literal|"usernamepassword"
operator|.
name|equals
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return
literal|"doOperationLevelPolicy"
operator|.
name|equals
argument_list|(
name|boi
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|EndpointInfo
name|paramEndpointInfo
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|appliesTo
parameter_list|(
name|ServiceInfo
name|paramServiceInfo
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

