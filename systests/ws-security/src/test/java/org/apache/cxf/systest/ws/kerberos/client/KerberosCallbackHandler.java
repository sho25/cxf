begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|ws
operator|.
name|kerberos
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|CallbackHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|UnsupportedCallbackException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|security
operator|.
name|WSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|security
operator|.
name|message
operator|.
name|token
operator|.
name|BinarySecurity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|security
operator|.
name|message
operator|.
name|token
operator|.
name|TokenElementCallback
import|;
end_import

begin_comment
comment|/**  * A CallbackHandler instance that is used to mock up a Kerberos Token  */
end_comment

begin_class
specifier|public
class|class
name|KerberosCallbackHandler
implements|implements
name|CallbackHandler
block|{
specifier|private
name|String
name|valueType
init|=
name|WSConstants
operator|.
name|WSS_GSS_KRB_V5_AP_REQ
decl_stmt|;
specifier|private
name|String
name|token
init|=
literal|"8721958125981"
decl_stmt|;
specifier|public
name|KerberosCallbackHandler
parameter_list|()
block|{
comment|//
block|}
specifier|public
name|void
name|setValueType
parameter_list|(
name|String
name|valueType
parameter_list|)
block|{
name|this
operator|.
name|valueType
operator|=
name|valueType
expr_stmt|;
block|}
specifier|public
name|void
name|setToken
parameter_list|(
name|String
name|token
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
block|}
specifier|public
name|void
name|handle
parameter_list|(
name|Callback
index|[]
name|callbacks
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnsupportedCallbackException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|callbacks
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|callbacks
index|[
name|i
index|]
operator|instanceof
name|TokenElementCallback
condition|)
block|{
name|TokenElementCallback
name|callback
init|=
operator|(
name|TokenElementCallback
operator|)
name|callbacks
index|[
name|i
index|]
decl_stmt|;
comment|// Mock up a BinarySecurityToken
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|createDocument
argument_list|()
decl_stmt|;
name|BinarySecurity
name|bst
init|=
operator|new
name|BinarySecurity
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|bst
operator|.
name|addWSSENamespace
argument_list|()
expr_stmt|;
name|bst
operator|.
name|addWSUNamespace
argument_list|()
expr_stmt|;
name|bst
operator|.
name|setID
argument_list|(
literal|"BST-812847"
argument_list|)
expr_stmt|;
name|bst
operator|.
name|setValueType
argument_list|(
name|valueType
argument_list|)
expr_stmt|;
name|bst
operator|.
name|setEncodingType
argument_list|(
name|BinarySecurity
operator|.
name|BASE64_ENCODING
argument_list|)
expr_stmt|;
name|bst
operator|.
name|setToken
argument_list|(
name|token
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|callback
operator|.
name|setTokenElement
argument_list|(
name|bst
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

