<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements. See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership. The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License. You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied. See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:p="http://cxf.apache.org/policy"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans           http://www.springframework.org/schema/beans/spring-beans.xsd
          http://cxf.apache.org/jaxws                           http://cxf.apache.org/schemas/jaxws.xsd
          http://cxf.apache.org/transports/http/configuration   http://cxf.apache.org/schemas/configuration/http-conf.xsd
          http://cxf.apache.org/configuration/security          http://cxf.apache.org/schemas/configuration/security.xsd
          http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
          http://cxf.apache.org/policy http://cxf.apache.org/schemas/policy.xsd"
>
    <cxf:bus>
        <cxf:features>
            <p:policies/>
            <cxf:logging/>
        </cxf:features>
    </cxf:bus>
    
    <jaxws:client name="{http://www.example.org/contract/DoubleIt}DoubleItUsernameTokenTextPort" 
                  createdFromAPI="true">
       <jaxws:outInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxOutInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="UsernameToken"/> 
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.wssec10.client.UTPasswordCallback"/>
                        <entry key="user" value="Alice"/>
                        <entry key="passwordType" value="PasswordText"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:outInterceptors>
    </jaxws:client>
    
    <jaxws:client name="{http://www.example.org/contract/DoubleIt}DoubleItUsernameTokenDigestPort" 
                  createdFromAPI="true">
       <jaxws:outInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxOutInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="UsernameToken"/> 
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.wssec10.client.UTPasswordCallback"/>
                        <entry key="user" value="Alice"/>
                        <entry key="passwordType" value="PasswordDigest"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:outInterceptors>
    </jaxws:client>
    
    <jaxws:client name="{http://www.example.org/contract/DoubleIt}DoubleItEncryptPort" 
                  createdFromAPI="true">
       <jaxws:outInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxOutInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="Encrypt"/> 
                        <entry key="encryptionPropFile" value="org/apache/cxf/systest/ws/security/bob.properties"/>
                        <entry key="encryptionUser" value="bob"/>
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.security.KeystorePasswordCallback"/>
                        <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/> 
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:outInterceptors>
       <jaxws:inInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxInInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="Encrypt"/> 
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.security.KeystorePasswordCallback"/>
                        <entry key="decryptionPropFile" value="org/apache/cxf/systest/ws/security/alice.properties"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:inInterceptors>
    </jaxws:client>
    
    <jaxws:client name="{http://www.example.org/contract/DoubleIt}DoubleItSignaturePort" 
                  createdFromAPI="true">
       <jaxws:outInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxOutInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="Signature"/> 
                        <entry key="signaturePropFile" value="org/apache/cxf/systest/ws/security/alice.properties"/>
                        <entry key="signatureUser" value="alice"/>
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.security.KeystorePasswordCallback"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:outInterceptors>
       <jaxws:inInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxInInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="Signature"/> 
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.security.KeystorePasswordCallback"/>
                        <entry key="signatureVerificationPropFile" value="org/apache/cxf/systest/ws/security/bob.properties"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:inInterceptors>
    </jaxws:client>
    
    <jaxws:client name="{http://www.example.org/contract/DoubleIt}DoubleItSignedTimestampPort" 
                  createdFromAPI="true">
       <jaxws:outInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxOutInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="Timestamp Signature"/> 
                        <entry key="signaturePropFile" value="org/apache/cxf/systest/ws/security/alice.properties"/>
                        <entry key="signatureParts"
                               value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                        <entry key="signatureUser" value="alice"/>
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.security.KeystorePasswordCallback"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:outInterceptors>
       <jaxws:inInterceptors>
           <bean class="org.apache.cxf.ws.security.wss4j.WSS4JStaxInInterceptor">
               <constructor-arg>
                   <map>
                        <entry key="action" value="Signature"/> 
                        <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.security.KeystorePasswordCallback"/>
                        <entry key="signatureVerificationPropFile" value="org/apache/cxf/systest/ws/security/bob.properties"/>
                   </map>
               </constructor-arg>
           </bean>
       </jaxws:inInterceptors>
    </jaxws:client>
    
</beans>
