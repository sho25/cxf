begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|cors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|cors
operator|.
name|CorsHeaderConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|AbstractSpringServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|DefaultHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|BasicCrossOriginTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|SpringServer
operator|.
name|PORT
decl_stmt|;
specifier|private
name|WebClient
name|configClient
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|SpringServer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|JacksonJsonProvider
argument_list|()
argument_list|)
expr_stmt|;
name|configClient
operator|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/config"
argument_list|,
name|providers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimpleGet
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|origin
init|=
literal|"http://localhost:"
operator|+
name|PORT
decl_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|DefaultHttpClient
argument_list|()
decl_stmt|;
name|HttpGet
name|httpget
init|=
operator|new
name|HttpGet
argument_list|(
name|origin
operator|+
literal|"/test/simpleGet/HelloThere"
argument_list|)
decl_stmt|;
name|httpget
operator|.
name|addHeader
argument_list|(
literal|"Origin"
argument_list|,
name|origin
argument_list|)
expr_stmt|;
name|HttpResponse
name|response
init|=
name|httpclient
operator|.
name|execute
argument_list|(
name|httpget
argument_list|)
decl_stmt|;
name|HttpEntity
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|String
name|e
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|entity
operator|.
name|getContent
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"HelloThere"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|Header
index|[]
name|aaoHeaders
init|=
name|response
operator|.
name|getHeaders
argument_list|(
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_ORIGIN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|aaoHeaders
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|aaoHeaders
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"*"
argument_list|,
name|aaoHeaders
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|specificOriginSimpleGet
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|origin
init|=
literal|"http://localhost:"
operator|+
name|PORT
decl_stmt|;
name|String
name|confResult
init|=
name|configClient
operator|.
name|accept
argument_list|(
literal|"text/plain"
argument_list|)
operator|.
name|replacePath
argument_list|(
literal|"/setOriginList"
argument_list|)
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|post
argument_list|(
operator|new
name|String
index|[]
block|{
name|origin
block|}
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ok"
argument_list|,
name|confResult
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|DefaultHttpClient
argument_list|()
decl_stmt|;
name|HttpGet
name|httpget
init|=
operator|new
name|HttpGet
argument_list|(
name|origin
operator|+
literal|"/test/simpleGet/HelloThere"
argument_list|)
decl_stmt|;
name|httpget
operator|.
name|addHeader
argument_list|(
literal|"Origin"
argument_list|,
name|origin
argument_list|)
expr_stmt|;
name|HttpResponse
name|response
init|=
name|httpclient
operator|.
name|execute
argument_list|(
name|httpget
argument_list|)
decl_stmt|;
name|HttpEntity
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|String
name|e
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|entity
operator|.
name|getContent
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"HelloThere"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|Header
index|[]
name|aaoHeaders
init|=
name|response
operator|.
name|getHeaders
argument_list|(
name|CorsHeaderConstants
operator|.
name|HEADER_AC_ALLOW_ORIGIN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|aaoHeaders
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|aaoHeaders
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|origin
argument_list|,
name|aaoHeaders
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
specifier|public
specifier|static
class|class
name|SpringServer
extends|extends
name|AbstractSpringServer
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|AbstractSpringServer
operator|.
name|PORT
decl_stmt|;
specifier|public
name|SpringServer
parameter_list|()
block|{
name|super
argument_list|(
literal|"/jaxrs_cors"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

