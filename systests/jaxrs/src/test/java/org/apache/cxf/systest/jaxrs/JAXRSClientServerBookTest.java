begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|DeleteMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|FileRequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|GetMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PutMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|RequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|xml
operator|.
name|XMLSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|XSLTJaxbProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSClientServerBookTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropogateException
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/propogateexception"
argument_list|,
literal|""
argument_list|,
literal|"application/xml"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropogateException2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"<ns1:XMLFault xmlns:ns1=\"http://cxf.apache.org/bindings/xformat\">"
operator|+
literal|"<ns1:faultstring xmlns:ns1=\"http://cxf.apache.org/bindings/xformat\">"
operator|+
literal|"org.apache.cxf.systest.jaxrs.BookNotFoundFault: Book Exception</ns1:faultstring>"
operator|+
literal|"</ns1:XMLFault>"
decl_stmt|;
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/propogateexception2"
argument_list|,
name|data
argument_list|,
literal|"application/xml"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropogateException3
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"<nobook/>"
decl_stmt|;
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/propogateexception3"
argument_list|,
name|data
argument_list|,
literal|"application/xml"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropogateException4
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|data
init|=
literal|"<nobook/>"
decl_stmt|;
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/propogateexception4"
argument_list|,
name|data
argument_list|,
literal|"application/xml"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWebApplicationException
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/webappexception"
argument_list|,
literal|"This is a WebApplicationException"
argument_list|,
literal|"application/xml"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddBookProxyResponse
parameter_list|()
block|{
name|BookStore
name|store
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|(
literal|"CXF rocks"
argument_list|,
literal|123L
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|store
operator|.
name|addBook
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|XMLSource
name|source
init|=
operator|new
name|XMLSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|source
operator|.
name|setBuffering
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|Long
operator|.
name|parseLong
argument_list|(
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/id"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF rocks"
argument_list|,
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|store
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|b1
init|=
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|)
decl_stmt|;
name|Book
name|b2
init|=
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|books
operator|.
name|add
argument_list|(
name|b1
argument_list|)
expr_stmt|;
name|books
operator|.
name|add
argument_list|(
name|b2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books2
init|=
name|store
operator|.
name|getBookCollection
argument_list|(
name|books
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|books2
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|books
argument_list|,
name|books2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|books2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b11
init|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|b11
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b11
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b22
init|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|b22
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b22
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookArray
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|store
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|b1
init|=
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|)
decl_stmt|;
name|Book
name|b2
init|=
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|Book
index|[]
name|books
init|=
operator|new
name|Book
index|[
literal|2
index|]
decl_stmt|;
name|books
index|[
literal|0
index|]
operator|=
name|b1
expr_stmt|;
name|books
index|[
literal|1
index|]
operator|=
name|b2
expr_stmt|;
name|Book
index|[]
name|books2
init|=
name|store
operator|.
name|getBookArray
argument_list|(
name|books
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|books2
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|books
argument_list|,
name|books2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|books2
operator|.
name|length
argument_list|)
expr_stmt|;
name|Book
name|b11
init|=
name|books2
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|b11
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b11
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b22
init|=
name|books2
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|b22
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b22
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByURL
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/bookurl/http%3A%2F%2Ftest.com%2Frss%2F123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeadBookByURL
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:9080/bookstore/bookurl/http%3A%2F%2Ftest.com%2Frss%2F123"
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|head
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|getMetadata
argument_list|()
operator|.
name|size
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|InputStream
operator|)
name|response
operator|.
name|getEntity
argument_list|()
operator|)
operator|.
name|available
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWebClientUnwrapBookWithXslt
parameter_list|()
throws|throws
name|Exception
block|{
name|XSLTJaxbProvider
name|provider
init|=
operator|new
name|XSLTJaxbProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setInTemplate
argument_list|(
literal|"classpath:/org/apache/cxf/systest/jaxrs/resources/unwrapbook.xsl"
argument_list|)
expr_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:9080/bookstore/books/wrapper"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|provider
argument_list|)
argument_list|)
decl_stmt|;
name|wc
operator|.
name|path
argument_list|(
literal|"{id}"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|book
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
comment|// uncomment once I can figure out how to set for this test only
comment|// com.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize - JAXB is a pain
specifier|public
name|void
name|testProxyUnwrapBookWithXslt
parameter_list|()
throws|throws
name|Exception
block|{
name|XSLTJaxbProvider
name|provider
init|=
operator|new
name|XSLTJaxbProvider
argument_list|()
decl_stmt|;
name|provider
operator|.
name|setInTemplate
argument_list|(
literal|"classpath:/org/apache/cxf/systest/jaxrs/resources/unwrapbook2.xsl"
argument_list|)
expr_stmt|;
name|BookStore
name|bs
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|provider
argument_list|)
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|bs
operator|.
name|getWrappedBook2
argument_list|(
literal|123L
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|book
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:9080/bookstore/bookurl/http%3A%2F%2Ftest.com%2Frss%2F123"
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|options
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|values
init|=
name|response
operator|.
name|getMetadata
argument_list|()
operator|.
name|get
argument_list|(
literal|"Allow"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|values
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|values
operator|.
name|contains
argument_list|(
literal|"POST"
argument_list|)
operator|&&
name|values
operator|.
name|contains
argument_list|(
literal|"GET"
argument_list|)
operator|&&
name|values
operator|.
name|contains
argument_list|(
literal|"DELETE"
argument_list|)
operator|&&
name|values
operator|.
name|contains
argument_list|(
literal|"PUT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|InputStream
operator|)
name|response
operator|.
name|getEntity
argument_list|()
operator|)
operator|.
name|available
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyPost
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:9080/bookstore/emptypost"
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|post
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|204
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyPostProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:9080"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setResourceClass
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|BookStore
name|store
init|=
name|bean
operator|.
name|create
argument_list|(
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|store
operator|.
name|emptypost
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|204
argument_list|,
name|WebClient
operator|.
name|client
argument_list|(
name|store
argument_list|)
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByEncodedQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/bookquery?"
operator|+
literal|"urlid=http%3A%2F%2Ftest.com%2Frss%2F123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetGenericBook
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/genericbooks/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetGenericResponseBook
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/genericresponse/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByArrayQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/bookidarray?"
operator|+
literal|"id=1&id=2&id=3"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoRootResourceException
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/nobookstore/webappexception"
argument_list|,
literal|""
argument_list|,
literal|"application/xml"
argument_list|,
literal|404
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoPathMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/bookqueries"
argument_list|,
literal|""
argument_list|,
literal|"application/xml"
argument_list|,
literal|404
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteAndFailEarly
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/books/fail-early"
argument_list|,
literal|"This is supposed to go on the wire"
argument_list|,
literal|"application/bar, text/plain"
argument_list|,
literal|410
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteAndFailLate
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/books/fail-late"
argument_list|,
literal|""
argument_list|,
literal|"application/bar"
argument_list|,
literal|410
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcceptTypeMismatch
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/booknames/123"
argument_list|,
literal|""
argument_list|,
literal|"foo/bar"
argument_list|,
literal|406
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongHttpMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/unsupportedcontenttype"
argument_list|,
literal|""
argument_list|,
literal|"foo/bar"
argument_list|,
literal|405
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongQueryParameterType
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/wrongparametertype?p=1"
argument_list|,
literal|"Parameter Class java.util.Map has no constructor with single String "
operator|+
literal|"parameter, static valueOf(String) or fromString(String) methods"
argument_list|,
literal|"*/*"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionDuringConstruction
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/exceptionconstruction?p=1"
argument_list|,
literal|""
argument_list|,
literal|"foo/bar"
argument_list|,
literal|404
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSubresourceMethodNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/interface/thesubresource"
argument_list|,
literal|""
argument_list|,
literal|"foo/bar"
argument_list|,
literal|404
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoMessageWriterFound
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|msg1
init|=
literal|"No message body writer has been found for response class GregorianCalendar."
decl_stmt|;
name|String
name|msg2
init|=
literal|"No message body writer has been found for response class Calendar."
decl_stmt|;
name|getAndCompareStrings
argument_list|(
literal|"http://localhost:9080/bookstore/timetable"
argument_list|,
operator|new
name|String
index|[]
block|{
name|msg1
block|,
name|msg2
block|}
argument_list|,
literal|"*/*"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testNoMessageReaderFound
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/binarybooks"
decl_stmt|;
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/octet-stream"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestBody
argument_list|(
literal|"Bar"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|415
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConsumeTypeMismatch
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/unsupportedcontenttype"
decl_stmt|;
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/bar"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|415
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBookExists
parameter_list|()
throws|throws
name|Exception
block|{
name|checkBook
argument_list|(
literal|"http://localhost:9080/bookstore/books/check/123"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|checkBook
argument_list|(
literal|"http://localhost:9080/bookstore/books/check/125"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkBook
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|expected
parameter_list|)
throws|throws
name|Exception
block|{
name|GetMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|get
operator|.
name|setRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/plain"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|expected
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Book must be available"
argument_list|,
literal|"true"
argument_list|,
name|get
operator|.
name|getResponseBodyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"Book must not be available"
argument_list|,
literal|"false"
argument_list|,
name|get
operator|.
name|getResponseBodyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookCustomExpression
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/custom/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetHeadBook123WebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:9080/bookstore/getheadbook/"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|client
operator|.
name|head
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"HEAD_HEADER_VALUE"
argument_list|,
name|r
operator|.
name|getMetadata
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"HEAD_HEADER"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetHeadBook123WebClient2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:9080/bookstore/getheadbook/"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|client
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|b
operator|.
name|getId
argument_list|()
argument_list|,
literal|123L
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123WithProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|bs
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getBook
argument_list|(
literal|"123"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|b
operator|.
name|getId
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteWithProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|bs
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|bs
operator|.
name|deleteBook
argument_list|(
literal|"123"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreatePutWithProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|bs
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|bs
operator|.
name|createBook
argument_list|(
literal|777L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateWithProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|bs
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:9080"
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|book
operator|.
name|setId
argument_list|(
literal|888
argument_list|)
expr_stmt|;
name|bs
operator|.
name|updateBook
argument_list|(
name|book
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|304
argument_list|,
name|WebClient
operator|.
name|client
argument_list|(
name|bs
argument_list|)
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookTypeAndWildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml;q=0.8,*/*"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/*"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/query?bookId=123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/defaultquery"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/missingquery"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123json.txt"
argument_list|,
literal|"application/json, application/xml"
argument_list|,
literal|"application/json"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml, application/json"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookXmlWildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"*/*"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookBuffer
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/buffer"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/bar"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookBySegment
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/segment/matrix2;first=12;second=3"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore;bar/segment;foo/"
operator|+
literal|"matrix2;first=12;second=3;third"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByListOfSegments
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/segment/list/1/2/3"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByMatrixParameters
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/segment/matrix;first=12;second=3"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore;bar;first=12/segment;foo;"
operator|+
literal|"second=3/matrix;third"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/bookheaders"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml;q=0.5,text/xml"
argument_list|,
literal|"text/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByHeaderPerRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore2/bookheaders"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml;q=0.5,text/xml"
argument_list|,
literal|"text/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookByHeaderDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/bookheaders2"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml;q=0.5,text/xml"
argument_list|,
literal|"text/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookElement
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/element"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookAdapter
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/adapter"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123FromSub
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/interface/subresource"
argument_list|,
literal|"resources/expected_get_book123.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/books/123"
argument_list|,
literal|"resources/expected_get_book123json.txt"
argument_list|,
literal|"application/xml;q=0.1,application/json"
argument_list|,
literal|"application/json"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123FromSubObject
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booksubresourceobject/123/chaptersobject/sub/1"
argument_list|,
literal|"resources/expected_get_chapter1.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|"application/xml;charset=ISO-8859-1"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetChapter
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booksubresource/123/chapters/1"
argument_list|,
literal|"resources/expected_get_chapter1.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|"application/xml;charset=ISO-8859-1"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetChapterEncodingDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booksubresource/123/chapters/badencoding/1"
argument_list|,
literal|"resources/expected_get_chapter1_utf.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|"application/xml;charset=UTF-8"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetChapterChapter
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booksubresource/123/chapters/sub/1/recurse"
argument_list|,
literal|"resources/expected_get_chapter1_utf.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booksubresource/123/chapters/sub/1/recurse2"
argument_list|,
literal|"resources/expected_get_chapter1.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|"application/xml;charset=ISO-8859-1"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetChapterWithParentIds
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booksubresource/123/chapters/sub/1/recurse2/ids"
argument_list|,
literal|"resources/expected_get_chapter1.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|"application/xml;charset=ISO-8859-1"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123ReturnString
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/booknames/123"
argument_list|,
literal|"resources/expected_get_book123_returnstring.txt"
argument_list|,
literal|"text/plain"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddBookNoBody
parameter_list|()
throws|throws
name|Exception
block|{
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
literal|"http://localhost:9080/bookstore/books"
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddBook
parameter_list|()
throws|throws
name|Exception
block|{
name|doAddBook
argument_list|(
literal|"http://localhost:9080/bookstore/books"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddBookXmlAdapter
parameter_list|()
throws|throws
name|Exception
block|{
name|doAddBook
argument_list|(
literal|"http://localhost:9080/bookstore/booksinfo"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doAddBook
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/add_book.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_add_book.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|,
name|post
operator|.
name|getResponseBodyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddBookCustomFailureStatus
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/books/customstatus"
decl_stmt|;
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/update_book.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PostMethod
name|put
init|=
operator|new
name|PostMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|put
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|333
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are
comment|// done
name|put
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateBook
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/books"
decl_stmt|;
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/update_book.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PutMethod
name|put
init|=
operator|new
name|PutMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|put
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are
comment|// done
name|put
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
comment|// Verify result
name|endpointAddress
operator|=
literal|"http://localhost:9080/bookstore/books/123"
expr_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|URLConnection
name|connect
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connect
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|InputStream
name|in
init|=
name|connect
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_update_book.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
comment|// Roll back changes:
name|File
name|input1
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/expected_get_book123.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PutMethod
name|put1
init|=
operator|new
name|PutMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity1
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input1
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|put1
operator|.
name|setRequestEntity
argument_list|(
name|entity1
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient1
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient1
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are
comment|// done
name|put1
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateBookWithDom
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/bookswithdom"
decl_stmt|;
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/update_book.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PutMethod
name|put
init|=
operator|new
name|PutMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|put
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|String
name|resp
init|=
name|put
operator|.
name|getResponseBodyAsString
argument_list|()
decl_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/update_book.txt"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|resp
operator|.
name|indexOf
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are
comment|// done
name|put
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateBookWithJSON
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/bookswithjson"
decl_stmt|;
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/update_book_json.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PutMethod
name|put
init|=
operator|new
name|PutMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"application/json; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|put
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are
comment|// done
name|put
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
comment|// Verify result
name|endpointAddress
operator|=
literal|"http://localhost:9080/bookstore/books/123"
expr_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|URLConnection
name|connection
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|InputStream
name|in
init|=
name|connection
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_update_book.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
comment|// Roll back changes:
name|File
name|input1
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/expected_get_book123.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PutMethod
name|put1
init|=
operator|new
name|PutMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity1
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input1
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|put1
operator|.
name|setRequestEntity
argument_list|(
name|entity1
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient1
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient1
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are
comment|// done
name|put1
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateBookFailed
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/books"
decl_stmt|;
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/update_book_not_exist.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PutMethod
name|post
init|=
operator|new
name|PutMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|304
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDs
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:9080/bookstore/cds"
argument_list|)
decl_stmt|;
name|CDs
name|cds
init|=
name|wc
operator|.
name|get
argument_list|(
name|CDs
operator|.
name|class
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|CD
argument_list|>
name|collection
init|=
name|cds
operator|.
name|getCD
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|collection
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|collection
operator|.
name|contains
argument_list|(
operator|new
name|CD
argument_list|(
literal|"BICYCLE RACE"
argument_list|,
literal|124
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|collection
operator|.
name|contains
argument_list|(
operator|new
name|CD
argument_list|(
literal|"BOHEMIAN RHAPSODY"
argument_list|,
literal|123
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDJSON
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/cd/123"
argument_list|,
literal|"resources/expected_get_cdjson.txt"
argument_list|,
literal|"application/json"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testGetPlainLong
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/booksplain"
decl_stmt|;
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|post
operator|.
name|addRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"text/plain"
argument_list|)
expr_stmt|;
name|post
operator|.
name|addRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/plain"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestBody
argument_list|(
literal|"12345"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|post
operator|.
name|getResponseBodyAsString
argument_list|()
argument_list|,
literal|"12345"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteBook
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/books/123"
decl_stmt|;
name|DeleteMethod
name|post
init|=
operator|new
name|DeleteMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteBookByQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/books/id?value=123"
decl_stmt|;
name|DeleteMethod
name|post
init|=
operator|new
name|DeleteMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDsJSON
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:9080/bookstore/cds"
decl_stmt|;
name|GetMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|InputStream
name|expected123
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_cdsjson123.txt"
argument_list|)
decl_stmt|;
name|InputStream
name|expected124
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_cdsjson124.txt"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|get
operator|.
name|getResponseBodyAsString
argument_list|()
operator|.
name|indexOf
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected123
argument_list|)
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|get
operator|.
name|getResponseBodyAsString
argument_list|()
operator|.
name|indexOf
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected124
argument_list|)
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDXML
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/cd/123"
argument_list|,
literal|"resources/expected_get_cd.txt"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDWithMultiContentTypesXML
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/cdwithmultitypes/123"
argument_list|,
literal|"resources/expected_get_cd.txt"
argument_list|,
literal|"application/json;q=0.8,application/xml,*/*"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDWithMultiContentTypesCustomXML
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/cdwithmultitypes/123"
argument_list|,
literal|"resources/expected_get_cd.txt"
argument_list|,
literal|"application/bar+xml"
argument_list|,
literal|"application/bar+xml"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetCDWithMultiContentTypesJSON
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/cdwithmultitypes/123"
argument_list|,
literal|"resources/expected_get_cdjson.txt"
argument_list|,
literal|"application/json"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|getAndCompareAsStrings
argument_list|(
literal|"http://localhost:9080/bookstore/cdwithmultitypes/123"
argument_list|,
literal|"resources/expected_get_cdjson.txt"
argument_list|,
literal|"*/*,application/xml;q=0.9,application/json"
argument_list|,
literal|"application/json"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUriInfoMatchedResources
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/"
operator|+
literal|"booksubresource/123/chapters/sub/1/matched-resources"
argument_list|,
literal|"[class org.apache.cxf.systest.jaxrs.BookStore, "
operator|+
literal|"class org.apache.cxf.systest.jaxrs.Book, "
operator|+
literal|"class org.apache.cxf.systest.jaxrs.Chapter]"
argument_list|,
literal|"text/plain"
argument_list|,
literal|"text/plain"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUriInfoMatchedResourcesWithObject
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/"
operator|+
literal|"booksubresource/123/chaptersobject/sub/1/matched-resources"
argument_list|,
literal|"[class org.apache.cxf.systest.jaxrs.BookStore, "
operator|+
literal|"class org.apache.cxf.systest.jaxrs.Book, "
operator|+
literal|"class org.apache.cxf.systest.jaxrs.Chapter]"
argument_list|,
literal|"text/plain"
argument_list|,
literal|"text/plain"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUriInfoMatchedUrisDecode
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"[/bookstore/booksubresource/123/, "
operator|+
literal|"/bookstore/booksubresource/123/chapters/sub/1/, "
operator|+
literal|"/bookstore/booksubresource/123/chapters/sub/1/matched!uris]"
decl_stmt|;
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/"
operator|+
literal|"booksubresource/123/chapters/sub/1/matched%21uris?decode=true"
argument_list|,
name|expected
argument_list|,
literal|"text/plain"
argument_list|,
literal|"text/plain"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUriInfoMatchedUrisNoDecode
parameter_list|()
throws|throws
name|Exception
block|{
comment|//note '%21' instead of '!'
name|String
name|expected
init|=
literal|"[/bookstore/booksubresource/123/, "
operator|+
literal|"/bookstore/booksubresource/123/chapters/sub/1/, "
operator|+
literal|"/bookstore/booksubresource/123/chapters/sub/1/matched%21uris]"
decl_stmt|;
name|getAndCompare
argument_list|(
literal|"http://localhost:9080/bookstore/"
operator|+
literal|"booksubresource/123/chapters/sub/1/matched%21uris?decode=false"
argument_list|,
name|expected
argument_list|,
literal|"text/plain"
argument_list|,
literal|"text/plain"
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getAndCompareAsStrings
parameter_list|(
name|String
name|address
parameter_list|,
name|String
name|resourcePath
parameter_list|,
name|String
name|acceptType
parameter_list|,
name|int
name|status
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
name|getStringFromInputStream
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resourcePath
argument_list|)
argument_list|)
decl_stmt|;
name|getAndCompare
argument_list|(
name|address
argument_list|,
name|expected
argument_list|,
name|acceptType
argument_list|,
name|acceptType
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getAndCompareAsStrings
parameter_list|(
name|String
name|address
parameter_list|,
name|String
name|resourcePath
parameter_list|,
name|String
name|acceptType
parameter_list|,
name|String
name|expectedContentType
parameter_list|,
name|int
name|status
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
name|getStringFromInputStream
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resourcePath
argument_list|)
argument_list|)
decl_stmt|;
name|getAndCompare
argument_list|(
name|address
argument_list|,
name|expected
argument_list|,
name|acceptType
argument_list|,
name|expectedContentType
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getAndCompare
parameter_list|(
name|String
name|address
parameter_list|,
name|String
name|expectedValue
parameter_list|,
name|String
name|acceptType
parameter_list|,
name|int
name|expectedStatus
parameter_list|)
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
name|address
argument_list|,
name|expectedValue
argument_list|,
name|acceptType
argument_list|,
literal|null
argument_list|,
name|expectedStatus
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getAndCompare
parameter_list|(
name|String
name|address
parameter_list|,
name|String
name|expectedValue
parameter_list|,
name|String
name|acceptType
parameter_list|,
name|String
name|expectedContentType
parameter_list|,
name|int
name|expectedStatus
parameter_list|)
throws|throws
name|Exception
block|{
name|GetMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|get
operator|.
name|setRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
name|acceptType
argument_list|)
expr_stmt|;
name|get
operator|.
name|setRequestHeader
argument_list|(
literal|"Accept-Language"
argument_list|,
literal|"da;q=0.8,en"
argument_list|)
expr_stmt|;
name|get
operator|.
name|setRequestHeader
argument_list|(
literal|"Book"
argument_list|,
literal|"1,2,3"
argument_list|)
expr_stmt|;
name|HttpClient
name|httpClient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpClient
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedStatus
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|getStringFromInputStream
argument_list|(
name|get
operator|.
name|getResponseBodyAsStream
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Expected value is wrong"
argument_list|,
name|expectedValue
argument_list|,
name|content
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedStatus
operator|==
literal|200
condition|)
block|{
name|assertEquals
argument_list|(
literal|"123"
argument_list|,
name|get
operator|.
name|getResponseHeader
argument_list|(
literal|"BookId"
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|get
operator|.
name|getResponseHeader
argument_list|(
literal|"Date"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|expectedStatus
operator|==
literal|405
condition|)
block|{
name|assertNotNull
argument_list|(
name|get
operator|.
name|getResponseHeader
argument_list|(
literal|"Allow"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|expectedContentType
operator|!=
literal|null
condition|)
block|{
name|Header
name|ct
init|=
name|get
operator|.
name|getResponseHeader
argument_list|(
literal|"Content-Type"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong type of response"
argument_list|,
name|expectedContentType
argument_list|,
name|ct
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|getAndCompareStrings
parameter_list|(
name|String
name|address
parameter_list|,
name|String
index|[]
name|expectedValue
parameter_list|,
name|String
name|acceptType
parameter_list|,
name|int
name|expectedStatus
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|expectedValue
operator|.
name|length
argument_list|)
expr_stmt|;
name|GetMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|get
operator|.
name|setRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
name|acceptType
argument_list|)
expr_stmt|;
name|HttpClient
name|httpClient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpClient
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedStatus
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|String
name|jsonContent
init|=
name|getStringFromInputStream
argument_list|(
name|get
operator|.
name|getResponseBodyAsStream
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected value is wrong"
argument_list|,
name|expectedValue
index|[
literal|0
index|]
operator|.
name|equals
argument_list|(
name|jsonContent
argument_list|)
operator|||
name|expectedValue
index|[
literal|1
index|]
operator|.
name|equals
argument_list|(
name|jsonContent
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getStringFromInputStream
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|Exception
block|{
name|CachedOutputStream
name|bos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|in
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|bos
operator|.
name|getOut
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

