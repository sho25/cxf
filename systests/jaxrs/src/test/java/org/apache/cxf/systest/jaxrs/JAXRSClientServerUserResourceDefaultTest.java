begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|NotAllowedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|PreMatching
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|DefaultMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|MessageContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|AbstractResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ParameterType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|UserOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|UserResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|JAXRSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageContentsList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSClientServerUserResourceDefaultTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Ignore
specifier|public
specifier|static
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
name|server
decl_stmt|;
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|JAXRSServerFactoryBean
name|sf
init|=
operator|new
name|JAXRSServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setInvoker
argument_list|(
operator|new
name|CustomModelInvoker
argument_list|()
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setProvider
argument_list|(
operator|new
name|PreMatchContainerRequestFilter
argument_list|()
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/"
argument_list|)
expr_stmt|;
name|sf
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setDefaultModelClass
argument_list|(
name|DefaultResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|UserResource
name|ur
init|=
operator|new
name|UserResource
argument_list|()
decl_stmt|;
name|ur
operator|.
name|setPath
argument_list|(
literal|"/default"
argument_list|)
expr_stmt|;
name|UserOperation
name|op
init|=
operator|new
name|UserOperation
argument_list|()
decl_stmt|;
name|op
operator|.
name|setPath
argument_list|(
literal|"/books/{id}"
argument_list|)
expr_stmt|;
name|op
operator|.
name|setName
argument_list|(
literal|"getBook"
argument_list|)
expr_stmt|;
name|op
operator|.
name|setVerb
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|Parameter
name|param
init|=
operator|new
name|Parameter
argument_list|(
name|ParameterType
operator|.
name|PATH
argument_list|,
literal|"id"
argument_list|)
decl_stmt|;
name|param
operator|.
name|setJavaType
argument_list|(
name|Long
operator|.
name|class
argument_list|)
expr_stmt|;
name|op
operator|.
name|setParameters
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|param
argument_list|)
argument_list|)
expr_stmt|;
name|UserOperation
name|op2
init|=
operator|new
name|UserOperation
argument_list|()
decl_stmt|;
name|op2
operator|.
name|setPath
argument_list|(
literal|"echobook"
argument_list|)
expr_stmt|;
name|op2
operator|.
name|setName
argument_list|(
literal|"echo"
argument_list|)
expr_stmt|;
name|op2
operator|.
name|setVerb
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
name|op2
operator|.
name|setParameters
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|Parameter
argument_list|(
name|ParameterType
operator|.
name|REQUEST_BODY
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|UserOperation
name|op3
init|=
operator|new
name|UserOperation
argument_list|()
decl_stmt|;
name|op3
operator|.
name|setPath
argument_list|(
literal|"echobookdefault"
argument_list|)
expr_stmt|;
name|op3
operator|.
name|setName
argument_list|(
literal|"echoDefault"
argument_list|)
expr_stmt|;
name|op3
operator|.
name|setVerb
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
name|Parameter
name|echoDefaultParam
init|=
operator|new
name|Parameter
argument_list|(
name|ParameterType
operator|.
name|REQUEST_BODY
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|echoDefaultParam
operator|.
name|setJavaType
argument_list|(
name|SAXSource
operator|.
name|class
argument_list|)
expr_stmt|;
name|op3
operator|.
name|setParameters
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|echoDefaultParam
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UserOperation
argument_list|>
name|ops
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ops
operator|.
name|add
argument_list|(
name|op
argument_list|)
expr_stmt|;
name|ops
operator|.
name|add
argument_list|(
name|op2
argument_list|)
expr_stmt|;
name|ops
operator|.
name|add
argument_list|(
name|op3
argument_list|)
expr_stmt|;
name|ur
operator|.
name|setOperations
argument_list|(
name|ops
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setModelBeans
argument_list|(
name|ur
argument_list|)
expr_stmt|;
name|server
operator|=
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|AbstractResourceInfo
operator|.
name|clearAllMaps
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|createStaticBus
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookInvokeService
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/default/books/123"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|,
literal|123
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookInvokerOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|getAndCompare
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/default/books/999"
argument_list|,
literal|"application/xml"
argument_list|,
literal|200
argument_list|,
literal|999
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEchoBook
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/default/echobook"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|wc
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"echo"
argument_list|,
literal|333L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"echo"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|333L
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEchoBookDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/default/echobookdefault"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|wc
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"echo"
argument_list|,
literal|444L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"echo"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|444L
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getAndCompare
parameter_list|(
name|String
name|address
parameter_list|,
name|String
name|acceptType
parameter_list|,
name|int
name|expectedStatus
parameter_list|,
name|long
name|expectedId
parameter_list|)
throws|throws
name|Exception
block|{
name|CloseableHttpClient
name|client
init|=
name|HttpClientBuilder
operator|.
name|create
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|HttpGet
name|get
init|=
operator|new
name|HttpGet
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|get
operator|.
name|setHeader
argument_list|(
literal|"Accept"
argument_list|,
name|acceptType
argument_list|)
expr_stmt|;
try|try
block|{
name|CloseableHttpResponse
name|response
init|=
name|client
operator|.
name|execute
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedStatus
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|readBook
argument_list|(
name|response
operator|.
name|getEntity
argument_list|()
operator|.
name|getContent
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedId
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|Book
name|readBook
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBContext
name|c
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
operator|new
name|Class
index|[]
block|{
name|Book
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|Unmarshaller
name|u
init|=
name|c
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
return|return
operator|(
name|Book
operator|)
name|u
operator|.
name|unmarshal
argument_list|(
name|is
argument_list|)
return|;
block|}
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
specifier|public
specifier|static
class|class
name|DefaultResource
block|{
annotation|@
name|Context
specifier|private
name|Request
name|request
decl_stmt|;
annotation|@
name|Context
specifier|private
name|UriInfo
name|ui
decl_stmt|;
annotation|@
name|Context
specifier|private
name|HttpHeaders
name|headers
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Book
argument_list|>
name|books
init|=
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"123"
argument_list|,
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Path
argument_list|(
literal|"{a:.*}"
argument_list|)
annotation|@
name|DefaultMethod
specifier|public
name|Response
name|handle
parameter_list|()
block|{
if|if
condition|(
name|HttpMethod
operator|.
name|GET
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|id
init|=
name|ui
operator|.
name|getPathParameters
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|book
argument_list|,
name|headers
operator|.
name|getAcceptableMediaTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
throw|throw
operator|new
name|NotAllowedException
argument_list|(
literal|"GET"
argument_list|)
throw|;
block|}
specifier|public
name|Book
name|echo
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
return|return
name|book
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CustomModelInvoker
extends|extends
name|JAXRSInvoker
block|{
annotation|@
name|Override
specifier|public
name|Object
name|invoke
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Object
name|request
parameter_list|,
name|Object
name|resourceObject
parameter_list|)
block|{
name|MessageContext
name|mc
init|=
operator|new
name|MessageContextImpl
argument_list|(
name|exchange
operator|.
name|getInMessage
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|request
argument_list|)
decl_stmt|;
name|String
name|path
init|=
name|mc
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"default/books/999"
operator|.
name|equals
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|Long
name|bookId
init|=
operator|(
name|Long
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
name|bookId
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|Response
operator|.
name|ok
argument_list|(
name|book
argument_list|,
name|mc
operator|.
name|getHttpHeaders
argument_list|()
operator|.
name|getAcceptableMediaTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|MessageContentsList
argument_list|(
name|r
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
literal|"default/echobookdefault"
operator|.
name|equals
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|Source
name|source
init|=
operator|(
name|Source
operator|)
name|params
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|Response
operator|.
name|ok
argument_list|(
name|source
argument_list|,
name|MediaType
operator|.
name|APPLICATION_ATOM_XML_TYPE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|MessageContentsList
argument_list|(
name|r
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|invoke
argument_list|(
name|exchange
argument_list|,
name|request
argument_list|,
name|resourceObject
argument_list|)
return|;
block|}
block|}
block|}
annotation|@
name|PreMatching
specifier|private
specifier|static
class|class
name|PreMatchContainerRequestFilter
implements|implements
name|ContainerRequestFilter
block|{
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|path
init|=
name|context
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|endsWith
argument_list|(
literal|"123"
argument_list|)
condition|)
block|{
comment|// Setting this property makes sense only if we have a user model,
comment|// default service class, a number of method parameters described
comment|// in the model not matching a number of the matched method's parameters,
comment|// and this method is actually expected to be invoked (testGetBookInvokeService)
comment|// which is rare for a model-only case, typically a custom invoker would manage
comment|// the actual processing of the request
name|JAXRSUtils
operator|.
name|getCurrentMessage
argument_list|()
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.preferMethodParameters"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

