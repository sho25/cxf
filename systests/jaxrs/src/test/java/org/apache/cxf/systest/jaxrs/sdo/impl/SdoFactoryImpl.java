begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|sdo
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|sdo
operator|.
name|SdoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|sdo
operator|.
name|Structure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tuscany
operator|.
name|sdo
operator|.
name|helper
operator|.
name|HelperContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tuscany
operator|.
name|sdo
operator|.
name|impl
operator|.
name|FactoryBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tuscany
operator|.
name|sdo
operator|.
name|model
operator|.
name|ModelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tuscany
operator|.
name|sdo
operator|.
name|model
operator|.
name|impl
operator|.
name|ModelFactoryImpl
import|;
end_import

begin_import
import|import
name|commonj
operator|.
name|sdo
operator|.
name|DataObject
import|;
end_import

begin_import
import|import
name|commonj
operator|.
name|sdo
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|commonj
operator|.
name|sdo
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|commonj
operator|.
name|sdo
operator|.
name|helper
operator|.
name|HelperContext
import|;
end_import

begin_comment
comment|//CHECKSTYLE:OFF
end_comment

begin_class
specifier|public
class|class
name|SdoFactoryImpl
extends|extends
name|FactoryBase
implements|implements
name|SdoFactory
block|{
specifier|public
specifier|static
specifier|final
name|String
name|NAMESPACE_URI
init|=
literal|"http://apache.org/structure/types"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NAMESPACE_PREFIX
init|=
literal|"tns"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PATTERN_VERSION
init|=
literal|"1.2"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|STRUCTURE
init|=
literal|1
decl_stmt|;
specifier|private
specifier|static
name|SdoFactoryImpl
name|instance
init|=
literal|null
decl_stmt|;
specifier|protected
name|Type
name|structureType
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|isCreated
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|isInitialized
init|=
literal|false
decl_stmt|;
specifier|public
name|SdoFactoryImpl
parameter_list|()
block|{
name|super
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|NAMESPACE_PREFIX
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.sdo"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|register
parameter_list|(
name|HelperContext
name|scope
parameter_list|)
block|{
if|if
condition|(
name|scope
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Scope can not be null"
argument_list|)
throw|;
block|}
if|if
condition|(
operator|(
operator|(
name|HelperContextImpl
operator|)
name|scope
operator|)
operator|.
name|getExtendedMetaData
argument_list|()
operator|.
name|getPackage
argument_list|(
name|NAMESPACE_URI
argument_list|)
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
comment|// Register this package with provided scope
operator|(
operator|(
name|HelperContextImpl
operator|)
name|scope
operator|)
operator|.
name|getExtendedMetaData
argument_list|()
operator|.
name|putPackage
argument_list|(
name|NAMESPACE_URI
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|//Register dependent packages with provided scope
name|ModelFactory
operator|.
name|INSTANCE
operator|.
name|register
argument_list|(
name|scope
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DataObject
name|create
parameter_list|(
name|int
name|typeNumber
parameter_list|)
block|{
switch|switch
condition|(
name|typeNumber
condition|)
block|{
case|case
name|STRUCTURE
case|:
return|return
operator|(
name|DataObject
operator|)
name|createStructure
argument_list|()
return|;
default|default :
return|return
name|super
operator|.
name|create
argument_list|(
name|typeNumber
argument_list|)
return|;
block|}
block|}
specifier|public
name|Structure
name|createStructure
parameter_list|()
block|{
return|return
operator|new
name|StructureImpl
argument_list|()
return|;
block|}
specifier|public
name|Type
name|getStructure
parameter_list|()
block|{
return|return
name|structureType
return|;
block|}
specifier|public
specifier|static
name|SdoFactoryImpl
name|init
parameter_list|()
block|{
if|if
condition|(
name|instance
operator|!=
literal|null
condition|)
block|{
return|return
name|instance
return|;
block|}
name|instance
operator|=
operator|new
name|SdoFactoryImpl
argument_list|()
expr_stmt|;
name|instance
operator|.
name|createMetaData
argument_list|()
expr_stmt|;
name|instance
operator|.
name|initializeMetaData
argument_list|()
expr_stmt|;
return|return
name|instance
return|;
block|}
specifier|public
name|void
name|createMetaData
parameter_list|()
block|{
if|if
condition|(
name|isCreated
condition|)
block|{
return|return;
block|}
name|isCreated
operator|=
literal|true
expr_stmt|;
name|structureType
operator|=
name|createType
argument_list|(
literal|false
argument_list|,
name|STRUCTURE
argument_list|)
expr_stmt|;
name|createProperty
argument_list|(
literal|true
argument_list|,
name|structureType
argument_list|,
name|StructureImpl
operator|.
name|_INTERNAL_TEXT
argument_list|)
expr_stmt|;
name|createProperty
argument_list|(
literal|true
argument_list|,
name|structureType
argument_list|,
name|StructureImpl
operator|.
name|_INTERNAL_INT
argument_list|)
expr_stmt|;
name|createProperty
argument_list|(
literal|true
argument_list|,
name|structureType
argument_list|,
name|StructureImpl
operator|.
name|_INTERNAL_DBL
argument_list|)
expr_stmt|;
name|createProperty
argument_list|(
literal|true
argument_list|,
name|structureType
argument_list|,
name|StructureImpl
operator|.
name|_INTERNAL_TEXTS
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initializeMetaData
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
condition|)
block|{
return|return;
block|}
name|isInitialized
operator|=
literal|true
expr_stmt|;
name|ModelFactoryImpl
name|theModelPackageImpl
init|=
operator|(
name|ModelFactoryImpl
operator|)
name|ModelFactoryImpl
operator|.
name|init
argument_list|()
decl_stmt|;
name|Property
name|property
init|=
literal|null
decl_stmt|;
comment|// Add supertypes to types
name|initializeType
argument_list|(
name|structureType
argument_list|,
name|Structure
operator|.
name|class
argument_list|,
literal|"Structure"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|property
operator|=
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|initializeProperty
argument_list|(
name|property
argument_list|,
name|theModelPackageImpl
operator|.
name|getString
argument_list|()
argument_list|,
literal|"text"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|Structure
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|property
operator|=
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|initializeProperty
argument_list|(
name|property
argument_list|,
name|theModelPackageImpl
operator|.
name|getInt
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|Structure
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|property
operator|=
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|initializeProperty
argument_list|(
name|property
argument_list|,
name|theModelPackageImpl
operator|.
name|getDouble
argument_list|()
argument_list|,
literal|"dbl"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|Structure
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|property
operator|=
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|initializeProperty
argument_list|(
name|property
argument_list|,
name|theModelPackageImpl
operator|.
name|getString
argument_list|()
argument_list|,
literal|"texts"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|Structure
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createXSDMetaData
argument_list|(
name|theModelPackageImpl
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createXSDMetaData
parameter_list|(
name|ModelFactoryImpl
name|theModelPackageImpl
parameter_list|)
block|{
name|super
operator|.
name|initXSD
argument_list|()
expr_stmt|;
name|addXSDMapping
argument_list|(
name|structureType
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"name"
block|,
literal|"Structure"
block|,
literal|"kind"
block|,
literal|"elementOnly"
block|}
argument_list|)
expr_stmt|;
name|addXSDMapping
argument_list|(
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|0
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"kind"
block|,
literal|"element"
block|,
literal|"name"
block|,
literal|"text"
block|,
literal|"namespace"
block|,
literal|"##targetNamespace"
block|}
argument_list|)
expr_stmt|;
name|addXSDMapping
argument_list|(
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"kind"
block|,
literal|"element"
block|,
literal|"name"
block|,
literal|"int"
block|,
literal|"namespace"
block|,
literal|"##targetNamespace"
block|}
argument_list|)
expr_stmt|;
name|addXSDMapping
argument_list|(
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"kind"
block|,
literal|"element"
block|,
literal|"name"
block|,
literal|"dbl"
block|,
literal|"namespace"
block|,
literal|"##targetNamespace"
block|}
argument_list|)
expr_stmt|;
name|addXSDMapping
argument_list|(
name|getLocalProperty
argument_list|(
name|structureType
argument_list|,
literal|3
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"kind"
block|,
literal|"element"
block|,
literal|"name"
block|,
literal|"texts"
block|,
literal|"namespace"
block|,
literal|"##targetNamespace"
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|//SdoFactoryImpl
end_comment

end_unit

