begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientResponseContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientResponseFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|InvocationCallback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericEntity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|MessageBodyReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ReaderInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ReaderInterceptorContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|WriterInterceptorContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|JAXBElementProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|BookStore
operator|.
name|BookInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRS20ClientServerBookTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServer20
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServer20
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetGenericBook
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/genericbooks/123"
decl_stmt|;
name|doTestGetGenericBook
argument_list|(
name|address
argument_list|,
literal|124L
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetGenericBook2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/genericbooks2/123"
decl_stmt|;
name|doTestGetGenericBook
argument_list|(
name|address
argument_list|,
literal|123L
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestGetGenericBook
parameter_list|(
name|String
name|address
parameter_list|,
name|long
name|bookId
parameter_list|,
name|boolean
name|checkAnnotations
parameter_list|)
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000L
argument_list|)
expr_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bookId
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|MediaType
name|mt
init|=
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getMediaType
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"application/xml;charset=ISO-8859-1"
argument_list|,
name|mt
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkAnnotations
condition|)
block|{
name|assertEquals
argument_list|(
literal|"OK"
argument_list|,
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getHeaderString
argument_list|(
literal|"Annotations"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertNull
argument_list|(
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getHeaderString
argument_list|(
literal|"Annotations"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|doTestGetBook
argument_list|(
name|address
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSyncLink
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|sync
argument_list|()
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validateResponse
argument_list|(
name|wc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSpec
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|Client
name|client
init|=
name|ClientBuilder
operator|.
name|newClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|register
argument_list|(
operator|(
name|Object
operator|)
name|ClientFilterClientAndConfigCheck
operator|.
name|class
argument_list|)
expr_stmt|;
name|client
operator|.
name|property
argument_list|(
literal|"clientproperty"
argument_list|,
literal|"somevalue"
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|client
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSpecProvider
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|Client
name|client
init|=
name|ClientBuilder
operator|.
name|newClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|register
argument_list|(
operator|new
name|BookInfoReader
argument_list|()
argument_list|)
expr_stmt|;
name|BookInfo
name|book
init|=
name|client
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|get
argument_list|(
name|BookInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookWebTargetProvider
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders"
decl_stmt|;
name|Client
name|client
init|=
name|ClientBuilder
operator|.
name|newClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|register
argument_list|(
operator|new
name|BookInfoReader
argument_list|()
argument_list|)
expr_stmt|;
name|BookInfo
name|book
init|=
name|client
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|path
argument_list|(
literal|"simple"
argument_list|)
operator|.
name|request
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|get
argument_list|(
name|BookInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSyncWithAsync
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|doTestGetBook
argument_list|(
name|address
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|doTestGetBookAsync
argument_list|(
name|address
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookAsyncNoCallback
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|Book
argument_list|>
name|future
init|=
name|wc
operator|.
name|async
argument_list|()
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validateResponse
argument_list|(
name|wc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookAsyncResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|doTestGetBookAsyncResponse
argument_list|(
name|address
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookAsyncInvoker
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|doTestGetBookAsync
argument_list|(
name|address
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPreMatchContainerFilterThrowsException
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/throwException"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Prematch filter error"
argument_list|,
name|response
operator|.
name|readEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"prematch"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"FilterException"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OK"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Response"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OK2"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Response2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"DynamicResponse"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Custom"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"serverWrite"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ServerWriterInterceptor"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"serverWrite2"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ServerWriterInterceptor2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"serverWriteHttpResponse"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ServerWriterInterceptorHttpResponse"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"text/plain;charset=us-ascii"
argument_list|,
name|response
operator|.
name|getMediaType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostMatchContainerFilterThrowsException
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple?throwException"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000L
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Postmatch filter error"
argument_list|,
name|response
operator|.
name|readEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"postmatch"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"FilterException"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OK"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Response"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OK2"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Response2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dynamic"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"DynamicResponse"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"custom"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Custom"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"serverWrite"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ServerWriterInterceptor"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"text/plain;charset=us-ascii"
argument_list|,
name|response
operator|.
name|getMediaType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookWrongPath
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/wrongpath"
decl_stmt|;
name|doTestGetBook
argument_list|(
name|address
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookWrongPathAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/wrongpath"
decl_stmt|;
name|doTestGetBookAsync
argument_list|(
name|address
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostCollectionGenericEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/collections3"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|GenericEntity
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|collectionEntity
init|=
name|createGenericEntity
argument_list|()
decl_stmt|;
specifier|final
name|Holder
argument_list|<
name|Book
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
name|callback
init|=
name|createCallback
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|Book
argument_list|>
name|future
init|=
name|wc
operator|.
name|post
argument_list|(
name|collectionEntity
argument_list|,
name|callback
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|book
argument_list|,
name|holder
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|collectionEntity
operator|.
name|getEntity
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|collectionEntity
operator|.
name|getEntity
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostCollectionGenericEntityAsEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/collections3"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|GenericEntity
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|collectionEntity
init|=
name|createGenericEntity
argument_list|()
decl_stmt|;
specifier|final
name|Holder
argument_list|<
name|Book
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
name|callback
init|=
name|createCallback
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|Book
argument_list|>
name|future
init|=
name|wc
operator|.
name|async
argument_list|()
operator|.
name|post
argument_list|(
name|Entity
operator|.
name|entity
argument_list|(
name|collectionEntity
argument_list|,
literal|"application/xml"
argument_list|)
argument_list|,
name|callback
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|book
argument_list|,
name|holder
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|collectionEntity
operator|.
name|getEntity
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|collectionEntity
operator|.
name|getEntity
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|,
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostReplaceBook
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/books2"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|ReplaceBodyFilter
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|555L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|561L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostReplaceBookMistypedCT
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/books2"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|ReplaceBodyFilter
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000L
argument_list|)
expr_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"text/mistypedxml"
argument_list|)
operator|.
name|type
argument_list|(
literal|"text/xml"
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|555L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|561L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceBookMistypedCTAndHttpVerb
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/books2/mistyped"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|ReplaceBodyFilter
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000L
argument_list|)
expr_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"text/mistypedxml"
argument_list|)
operator|.
name|type
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|header
argument_list|(
literal|"THEMETHOD"
argument_list|,
literal|"PUT"
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|invoke
argument_list|(
literal|"DELETE"
argument_list|,
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
literal|555L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|561L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostGetCollectionGenericEntityAndType
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/collections"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|GenericEntity
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|collectionEntity
init|=
name|createGenericEntity
argument_list|()
decl_stmt|;
specifier|final
name|Holder
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|InvocationCallback
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|callback
init|=
operator|new
name|CustomInvocationCallback
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|future
init|=
name|wc
operator|.
name|async
argument_list|()
operator|.
name|post
argument_list|(
name|Entity
operator|.
name|entity
argument_list|(
name|collectionEntity
argument_list|,
literal|"application/xml"
argument_list|)
argument_list|,
name|callback
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books2
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|books2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
name|collectionEntity
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|books
argument_list|,
name|books2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|books2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b11
init|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|b11
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b11
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b22
init|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|b22
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b22
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostGetCollectionGenericEntityAndType2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/collections"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|type
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|GenericEntity
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|collectionEntity
init|=
name|createGenericEntity
argument_list|()
decl_stmt|;
name|GenericType
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|genericResponseType
init|=
operator|new
name|GenericType
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
argument_list|()
block|{                 }
decl_stmt|;
name|Future
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|future
init|=
name|wc
operator|.
name|async
argument_list|()
operator|.
name|post
argument_list|(
name|Entity
operator|.
name|entity
argument_list|(
name|collectionEntity
argument_list|,
literal|"application/xml"
argument_list|)
argument_list|,
name|genericResponseType
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books2
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|books2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
name|collectionEntity
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|books
argument_list|,
name|books2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|books2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b11
init|=
name|books
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|b11
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b11
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b22
init|=
name|books
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|b22
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b22
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|GenericEntity
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|createGenericEntity
parameter_list|()
block|{
name|Book
name|b1
init|=
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|123L
argument_list|)
decl_stmt|;
name|Book
name|b2
init|=
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|124L
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|books
operator|.
name|add
argument_list|(
name|b1
argument_list|)
expr_stmt|;
name|books
operator|.
name|add
argument_list|(
name|b2
argument_list|)
expr_stmt|;
return|return
operator|new
name|GenericEntity
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
argument_list|(
name|books
argument_list|)
block|{             }
return|;
block|}
specifier|private
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
name|createCallback
parameter_list|(
specifier|final
name|Holder
argument_list|<
name|Book
argument_list|>
name|holder
parameter_list|)
block|{
return|return
operator|new
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|completed
parameter_list|(
name|Book
name|response
parameter_list|)
block|{
name|holder
operator|.
name|value
operator|=
name|response
expr_stmt|;
block|}
specifier|public
name|void
name|failed
parameter_list|(
name|Throwable
name|error
parameter_list|)
block|{
name|error
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|static
class|class
name|CustomInvocationCallback
implements|implements
name|InvocationCallback
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
block|{
specifier|private
name|Holder
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|holder
decl_stmt|;
specifier|public
name|CustomInvocationCallback
parameter_list|(
name|Holder
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|holder
parameter_list|)
block|{
name|this
operator|.
name|holder
operator|=
name|holder
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|completed
parameter_list|(
name|List
argument_list|<
name|Book
argument_list|>
name|books
parameter_list|)
block|{
name|holder
operator|.
name|value
operator|=
name|books
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|failed
parameter_list|(
name|Throwable
name|arg0
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
specifier|private
name|void
name|doTestGetBook
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|useAsync
parameter_list|)
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|(
name|address
argument_list|)
decl_stmt|;
if|if
condition|(
name|useAsync
condition|)
block|{
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"use.async.http.conduit"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|Book
name|book
init|=
name|wc
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validateResponse
argument_list|(
name|wc
argument_list|)
expr_stmt|;
block|}
specifier|private
name|WebClient
name|createWebClient
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientHeaderRequestFilter
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientHeaderResponseFilter
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000L
argument_list|)
expr_stmt|;
return|return
name|wc
return|;
block|}
specifier|private
name|WebClient
name|createWebClientPost
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientHeaderRequestFilter
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientHeaderResponseFilter
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientReaderInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientWriterInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000L
argument_list|)
expr_stmt|;
return|return
name|wc
return|;
block|}
specifier|private
name|void
name|doTestGetBookAsync
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|asyncInvoker
parameter_list|)
throws|throws
name|InterruptedException
throws|,
name|ExecutionException
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|(
name|address
argument_list|)
decl_stmt|;
specifier|final
name|Holder
argument_list|<
name|Book
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
name|callback
init|=
name|createCallback
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|Book
argument_list|>
name|future
init|=
name|asyncInvoker
condition|?
name|wc
operator|.
name|async
argument_list|()
operator|.
name|get
argument_list|(
name|callback
argument_list|)
else|:
name|wc
operator|.
name|get
argument_list|(
name|callback
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|book
argument_list|,
name|holder
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validateResponse
argument_list|(
name|wc
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestPostBookAsyncHandler
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|InterruptedException
throws|,
name|ExecutionException
block|{
name|WebClient
name|wc
init|=
name|createWebClientPost
argument_list|(
name|address
argument_list|)
decl_stmt|;
specifier|final
name|Holder
argument_list|<
name|Book
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<
name|Book
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
name|callback
init|=
operator|new
name|InvocationCallback
argument_list|<
name|Book
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|completed
parameter_list|(
name|Book
name|response
parameter_list|)
block|{
name|holder
operator|.
name|value
operator|=
name|response
expr_stmt|;
block|}
specifier|public
name|void
name|failed
parameter_list|(
name|Throwable
name|error
parameter_list|)
block|{             }
block|}
decl_stmt|;
name|Future
argument_list|<
name|Book
argument_list|>
name|future
init|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"async"
argument_list|,
literal|126L
argument_list|)
argument_list|,
name|callback
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|future
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|book
argument_list|,
name|holder
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validatePostResponse
argument_list|(
name|wc
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestGetBookAsyncResponse
parameter_list|(
name|String
name|address
parameter_list|,
name|boolean
name|asyncInvoker
parameter_list|)
throws|throws
name|InterruptedException
throws|,
name|ExecutionException
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
specifier|final
name|Holder
argument_list|<
name|Response
argument_list|>
name|holder
init|=
operator|new
name|Holder
argument_list|<
name|Response
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|InvocationCallback
argument_list|<
name|Response
argument_list|>
name|callback
init|=
operator|new
name|InvocationCallback
argument_list|<
name|Response
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|completed
parameter_list|(
name|Response
name|response
parameter_list|)
block|{
name|holder
operator|.
name|value
operator|=
name|response
expr_stmt|;
block|}
specifier|public
name|void
name|failed
parameter_list|(
name|Throwable
name|error
parameter_list|)
block|{             }
block|}
decl_stmt|;
name|Future
argument_list|<
name|Response
argument_list|>
name|future
init|=
name|asyncInvoker
condition|?
name|wc
operator|.
name|async
argument_list|()
operator|.
name|get
argument_list|(
name|callback
argument_list|)
else|:
name|wc
operator|.
name|get
argument_list|(
name|callback
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|future
operator|.
name|get
argument_list|()
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validateResponse
argument_list|(
name|wc
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateResponse
parameter_list|(
name|WebClient
name|wc
parameter_list|)
block|{
name|Response
name|response
init|=
name|wc
operator|.
name|getResponse
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OK"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Response"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OK2"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Response2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dynamic"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"DynamicResponse"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dynamic2"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"DynamicResponse2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"custom"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Custom"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"simple"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"Simple"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"serverWrite"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ServerWriterInterceptor"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/xml;charset=us-ascii"
argument_list|,
name|response
operator|.
name|getMediaType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://localhost/redirect"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
name|HttpHeaders
operator|.
name|LOCATION
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validatePostResponse
parameter_list|(
name|WebClient
name|wc
parameter_list|,
name|boolean
name|async
parameter_list|)
block|{
name|validateResponse
argument_list|(
name|wc
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|getResponse
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
operator|!
name|async
condition|?
literal|"serverRead"
else|:
literal|"serverReadAsync"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ServerReaderInterceptor"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"clientWrite"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ClientWriterInterceptor"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"clientRead"
argument_list|,
name|response
operator|.
name|getHeaderString
argument_list|(
literal|"ClientReaderInterceptor"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClientFiltersLocalResponse
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstores"
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientCacheRequestFilter
argument_list|()
argument_list|)
expr_stmt|;
name|providers
operator|.
name|add
argument_list|(
operator|new
name|ClientHeaderResponseFilter
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|providers
argument_list|)
decl_stmt|;
name|Book
name|theBook
init|=
operator|new
name|Book
argument_list|(
literal|"Echo"
argument_list|,
literal|123L
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|wc
operator|.
name|post
argument_list|(
name|theBook
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|201
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://localhost/redirect"
argument_list|,
name|r
operator|.
name|getHeaderString
argument_list|(
name|HttpHeaders
operator|.
name|LOCATION
argument_list|)
argument_list|)
expr_stmt|;
name|Book
name|responseBook
init|=
name|r
operator|.
name|readEntity
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|theBook
argument_list|,
name|responseBook
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBook
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|WebClient
name|wc
init|=
name|createWebClientPost
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"Book"
argument_list|,
literal|126L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validatePostResponse
argument_list|(
name|wc
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookNewMediaType
parameter_list|()
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple"
decl_stmt|;
name|WebClient
name|wc
init|=
name|createWebClientPost
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|wc
operator|.
name|header
argument_list|(
literal|"newmediatype"
argument_list|,
literal|"application/v1+xml"
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|wc
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|(
literal|"Book"
argument_list|,
literal|126L
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validatePostResponse
argument_list|(
name|wc
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/v1+xml"
argument_list|,
name|wc
operator|.
name|getResponse
argument_list|()
operator|.
name|getHeaderString
argument_list|(
literal|"newmediatypeused"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBookExistsServerStreamReplace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/books/check2"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"text/plain"
argument_list|)
operator|.
name|type
argument_list|(
literal|"text/plain"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|wc
operator|.
name|post
argument_list|(
literal|"s"
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBookExistsServerAddressOverwrite
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/books/checkN"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|wc
operator|.
name|accept
argument_list|(
literal|"text/plain"
argument_list|)
operator|.
name|type
argument_list|(
literal|"text/plain"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|wc
operator|.
name|post
argument_list|(
literal|"s"
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple/async"
decl_stmt|;
name|WebClient
name|wc
init|=
name|createWebClientPost
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|Book
argument_list|>
name|future
init|=
name|wc
operator|.
name|async
argument_list|()
operator|.
name|post
argument_list|(
name|Entity
operator|.
name|xml
argument_list|(
operator|new
name|Book
argument_list|(
literal|"Book"
argument_list|,
literal|126L
argument_list|)
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|future
operator|.
name|get
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|validatePostResponse
argument_list|(
name|wc
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookAsyncHandler
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/bookheaders/simple/async"
decl_stmt|;
name|doTestPostBookAsyncHandler
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|ReplaceBodyFilter
implements|implements
name|ClientRequestFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|rc
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|method
init|=
name|rc
operator|.
name|getMethod
argument_list|()
decl_stmt|;
name|String
name|expectedMethod
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getAcceptableMediaTypes
argument_list|()
operator|.
name|contains
argument_list|(
name|MediaType
operator|.
name|valueOf
argument_list|(
literal|"text/mistypedxml"
argument_list|)
argument_list|)
operator|&&
name|rc
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"THEMETHOD"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|expectedMethod
operator|=
literal|"DELETE"
expr_stmt|;
name|rc
operator|.
name|setUri
argument_list|(
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/books2"
argument_list|)
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setMethod
argument_list|(
name|rc
operator|.
name|getHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"THEMETHOD"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|expectedMethod
operator|=
literal|"POST"
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|expectedMethod
operator|.
name|equals
argument_list|(
name|method
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
name|rc
operator|.
name|setEntity
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book"
argument_list|,
operator|(
operator|(
name|Book
operator|)
name|rc
operator|.
name|getEntity
argument_list|()
operator|)
operator|.
name|getId
argument_list|()
operator|+
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|ClientCacheRequestFilter
implements|implements
name|ClientRequestFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|context
operator|.
name|abortWith
argument_list|(
name|Response
operator|.
name|status
argument_list|(
literal|201
argument_list|)
operator|.
name|entity
argument_list|(
name|context
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|ClientHeaderRequestFilter
implements|implements
name|ClientRequestFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|putSingle
argument_list|(
literal|"Simple"
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ClientFilterClientAndConfigCheck
implements|implements
name|ClientRequestFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|prop
init|=
name|context
operator|.
name|getClient
argument_list|()
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"clientproperty"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|prop2
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"clientproperty"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|prop2
operator|.
name|equals
argument_list|(
name|prop
argument_list|)
operator|||
operator|!
literal|"somevalue"
operator|.
name|equals
argument_list|(
name|prop2
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
block|}
block|}
specifier|private
specifier|static
class|class
name|ClientHeaderResponseFilter
implements|implements
name|ClientResponseFilter
block|{
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|reqContext
parameter_list|,
name|ClientResponseContext
name|respContext
parameter_list|)
throws|throws
name|IOException
block|{
name|respContext
operator|.
name|getHeaders
argument_list|()
operator|.
name|putSingle
argument_list|(
name|HttpHeaders
operator|.
name|LOCATION
argument_list|,
literal|"http://localhost/redirect"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ClientReaderInterceptor
implements|implements
name|ReaderInterceptor
block|{
annotation|@
name|Override
specifier|public
name|Object
name|aroundReadFrom
parameter_list|(
name|ReaderInterceptorContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
if|if
condition|(
name|context
operator|.
name|getInputStream
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|add
argument_list|(
literal|"ClientReaderInterceptor"
argument_list|,
literal|"clientRead"
argument_list|)
expr_stmt|;
block|}
return|return
name|context
operator|.
name|proceed
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ClientWriterInterceptor
implements|implements
name|WriterInterceptor
block|{
annotation|@
name|Override
specifier|public
name|void
name|aroundWriteTo
parameter_list|(
name|WriterInterceptorContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
name|context
operator|.
name|getHeaders
argument_list|()
operator|.
name|add
argument_list|(
literal|"ClientWriterInterceptor"
argument_list|,
literal|"clientWrite"
argument_list|)
expr_stmt|;
name|context
operator|.
name|proceed
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|BookInfoReader
implements|implements
name|MessageBodyReader
argument_list|<
name|BookInfo
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isReadable
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|arg2
parameter_list|,
name|MediaType
name|arg3
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|BookInfo
name|readFrom
parameter_list|(
name|Class
argument_list|<
name|BookInfo
argument_list|>
name|arg0
parameter_list|,
name|Type
name|arg1
parameter_list|,
name|Annotation
index|[]
name|anns
parameter_list|,
name|MediaType
name|mt
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
parameter_list|,
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
name|Book
name|book
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Book
argument_list|>
argument_list|()
operator|.
name|readFrom
argument_list|(
name|Book
operator|.
name|class
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|anns
argument_list|,
name|mt
argument_list|,
name|headers
argument_list|,
name|is
argument_list|)
decl_stmt|;
return|return
operator|new
name|BookInfo
argument_list|(
name|book
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

