begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|reactor
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|JacksonJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|AbstractResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|reactor
operator|.
name|client
operator|.
name|ReactorInvoker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|reactor
operator|.
name|client
operator|.
name|ReactorInvokerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|reactor
operator|.
name|test
operator|.
name|StepVerifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|FluxReactorTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|ReactorServer
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|AbstractResourceInfo
operator|.
name|clearAllMaps
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|ReactorServer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|createStaticBus
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetHelloWorldJson
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor/flux/textJson"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
name|HelloWorldBean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|bean
lambda|->
name|bean
operator|.
name|getGreeting
argument_list|()
operator|.
name|equals
argument_list|(
literal|"Hello"
argument_list|)
operator|&&
name|bean
operator|.
name|getAudience
argument_list|()
operator|.
name|equals
argument_list|(
literal|"World"
argument_list|)
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTextJsonImplicitListAsyncStream
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor/flux/textJsonImplicitListAsyncStream"
decl_stmt|;
name|doTestTextJsonImplicitListAsyncStream
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTextJsonImplicitListAsyncStream2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/textJsonImplicitListAsyncStream2"
decl_stmt|;
name|doTestTextJsonImplicitListAsyncStream
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFluxEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/empty"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|getFlux
argument_list|(
name|HelloWorldBean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFluxErrors
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/errors"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|getFlux
argument_list|(
name|HelloWorldBean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|b
lambda|->
name|b
operator|.
name|getGreeting
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"Person 1"
argument_list|)
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFluxErrorsResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/errors"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|r
lambda|->
name|r
operator|.
name|getStatus
argument_list|()
operator|==
literal|500
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFluxErrorsResponseWithMapper
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/mapper/errors"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|r
lambda|->
name|r
operator|.
name|getStatus
argument_list|()
operator|==
literal|400
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFluxImmediateErrors
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/immediate/errors"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|getFlux
argument_list|(
name|HelloWorldBean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|expectError
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFluxImmediateErrorsResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/reactor2/flux/immediate/errors"
decl_stmt|;
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|r
lambda|->
name|r
operator|.
name|getStatus
argument_list|()
operator|==
literal|500
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|doTestTextJsonImplicitListAsyncStream
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
name|StepVerifier
operator|.
name|create
argument_list|(
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ReactorInvokerProvider
argument_list|()
argument_list|)
operator|.
name|target
argument_list|(
name|address
argument_list|)
operator|.
name|request
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|rx
argument_list|(
name|ReactorInvoker
operator|.
name|class
argument_list|)
operator|.
name|getFlux
argument_list|(
name|HelloWorldBean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|bean
lambda|->
name|bean
operator|.
name|getGreeting
argument_list|()
operator|.
name|equals
argument_list|(
literal|"Hello"
argument_list|)
operator|&&
name|bean
operator|.
name|getAudience
argument_list|()
operator|.
name|equals
argument_list|(
literal|"World"
argument_list|)
argument_list|)
operator|.
name|expectNextMatches
argument_list|(
name|bean
lambda|->
name|bean
operator|.
name|getGreeting
argument_list|()
operator|.
name|equals
argument_list|(
literal|"Ciao"
argument_list|)
operator|&&
name|bean
operator|.
name|getAudience
argument_list|()
operator|.
name|equals
argument_list|(
literal|"World"
argument_list|)
argument_list|)
operator|.
name|expectComplete
argument_list|()
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

