begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|WebTarget
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|xml
operator|.
name|XMLSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|AbstractResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|endsWith
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|JAXRSClientServerQueryParamBookTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServer
operator|.
name|PORT
decl_stmt|;
specifier|private
specifier|final
name|Boolean
name|threadSafe
decl_stmt|;
specifier|public
name|JAXRSClientServerQueryParamBookTest
parameter_list|(
name|Boolean
name|threadSafe
parameter_list|)
block|{
name|this
operator|.
name|threadSafe
operator|=
name|threadSafe
expr_stmt|;
block|}
annotation|@
name|Parameters
argument_list|(
name|name
operator|=
literal|"Client is thread safe = {0}"
argument_list|)
specifier|public
specifier|static
name|Collection
argument_list|<
name|Boolean
argument_list|>
name|data
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Boolean
index|[]
block|{
literal|null
block|,
literal|true
block|,
literal|false
block|}
argument_list|)
return|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|AbstractResourceInfo
operator|.
name|clearAllMaps
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|createStaticBus
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfLongAndDoubleQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
name|Book
name|book
init|=
name|client
operator|.
name|getBookFromListOfLongAndDouble
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|1L
argument_list|,
literal|2L
argument_list|,
literal|3L
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfLongAndDoubleQueryWebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|()
decl_stmt|;
name|Response
name|r
init|=
name|wc
operator|.
name|path
argument_list|(
literal|"/bookstore/listoflonganddouble"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|1L
argument_list|,
literal|2L
argument_list|,
literal|3L
argument_list|)
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|wc
operator|.
name|getCurrentURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|endsWith
argument_list|(
literal|"value=1&value=2&value=3"
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
init|)
block|{
name|XMLSource
name|source
init|=
operator|new
name|XMLSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|Long
operator|.
name|parseLong
argument_list|(
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/id"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfLongAndDoubleQueryAsManyWebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|()
decl_stmt|;
name|Response
name|r
init|=
name|wc
operator|.
name|path
argument_list|(
literal|"/bookstore/listoflonganddouble"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|"3"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|wc
operator|.
name|getCurrentURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|endsWith
argument_list|(
literal|"value=1&value=2&value=3"
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
init|)
block|{
name|XMLSource
name|source
init|=
operator|new
name|XMLSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123L
argument_list|,
name|Long
operator|.
name|parseLong
argument_list|(
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/id"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfLongAndDoubleQueryAsString
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/bookstore/listoflonganddouble"
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setCustomQuery
argument_list|(
literal|"value=1,2,3"
argument_list|)
expr_stmt|;
specifier|final
name|CloseableHttpClient
name|client
init|=
name|HttpClientBuilder
operator|.
name|create
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|HttpGet
name|get
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|get
operator|.
name|addHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
try|try
init|(
name|CloseableHttpResponse
name|response
init|=
name|client
operator|.
name|execute
argument_list|(
name|get
argument_list|)
init|)
block|{
comment|// should not succeed since "parse.query.value.as.collection" contextual property is not set
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfLongAndDoubleQueryEmptyWebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|()
decl_stmt|;
name|Response
name|r
init|=
name|wc
operator|.
name|path
argument_list|(
literal|"/bookstore/listoflonganddouble"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|""
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|wc
operator|.
name|getCurrentURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|endsWith
argument_list|(
literal|"value="
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
init|)
block|{
name|XMLSource
name|source
init|=
operator|new
name|XMLSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|Long
operator|.
name|parseLong
argument_list|(
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/id"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfLongAndDoubleQueryEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
name|Book
name|book
init|=
name|client
operator|.
name|getBookFromListOfLongAndDouble
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|()
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfStringsWebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|wc
init|=
name|createWebClient
argument_list|()
decl_stmt|;
name|Response
name|r
init|=
name|wc
operator|.
name|path
argument_list|(
literal|"/bookstore/querysub/listofstrings"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|"this is"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|"the book"
argument_list|)
operator|.
name|query
argument_list|(
literal|"value"
argument_list|,
literal|"title"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|wc
operator|.
name|getCurrentURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|endsWith
argument_list|(
literal|"value=this+is&value=the+book&value=title"
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
init|)
block|{
name|XMLSource
name|source
init|=
operator|new
name|XMLSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"this is the book title"
argument_list|,
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfStringsJaxrsClient
parameter_list|()
throws|throws
name|Exception
block|{
name|WebTarget
name|client
init|=
name|createJaxrsClient
argument_list|()
decl_stmt|;
name|Response
name|r
init|=
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/querysub/listofstrings"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"value"
argument_list|,
literal|"this is"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"value"
argument_list|,
literal|"the book"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"value"
argument_list|,
literal|"title"
argument_list|)
operator|.
name|request
argument_list|()
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
init|)
block|{
name|XMLSource
name|source
init|=
operator|new
name|XMLSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"this is the book title"
argument_list|,
name|source
operator|.
name|getValue
argument_list|(
literal|"Book/name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListOfStrings
parameter_list|()
throws|throws
name|Exception
block|{
name|BookStore
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
name|Book
name|book
init|=
name|client
operator|.
name|getQuerySub
argument_list|()
operator|.
name|getBookFromListStrings
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"this is"
argument_list|,
literal|"the book"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"this is the book title"
argument_list|,
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|WebClient
name|createWebClient
parameter_list|()
block|{
if|if
condition|(
name|threadSafe
operator|==
literal|null
condition|)
block|{
return|return
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|threadSafe
argument_list|)
return|;
block|}
block|}
specifier|private
name|BookStore
name|createClient
parameter_list|()
block|{
if|if
condition|(
name|threadSafe
operator|==
literal|null
condition|)
block|{
return|return
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
argument_list|,
name|BookStore
operator|.
name|class
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
argument_list|,
name|BookStore
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|threadSafe
argument_list|)
return|;
block|}
block|}
specifier|private
name|WebTarget
name|createJaxrsClient
parameter_list|()
block|{
if|if
condition|(
name|threadSafe
operator|==
literal|null
condition|)
block|{
return|return
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|target
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|ClientBuilder
operator|.
name|newClient
argument_list|()
operator|.
name|property
argument_list|(
literal|"thread.safe.client"
argument_list|,
name|threadSafe
argument_list|)
operator|.
name|target
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

