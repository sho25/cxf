begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLClassLoader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|JarFile
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|codegen
operator|.
name|CodeGeneratorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|xml
operator|.
name|XMLSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|wadl
operator|.
name|WadlGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|utils
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|HTTPConduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSClientServerResourceCreatedSpringProviderTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServerResourceCreatedSpringProviders
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServerResourceCreatedSpringProviders
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasePetStoreWithoutTrailingSlash
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HTTPConduit
name|conduit
init|=
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
decl_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setConnectionTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|client
operator|.
name|accept
argument_list|(
literal|"text/plain"
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PetStore
operator|.
name|CLOSED
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasePetStore
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HTTPConduit
name|conduit
init|=
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
decl_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setConnectionTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|client
operator|.
name|accept
argument_list|(
literal|"text/plain"
argument_list|)
operator|.
name|get
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PetStore
operator|.
name|CLOSED
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleRootsWadl
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|getWadlResourcesInfo
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources"
argument_list|,
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources"
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|path1
init|=
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
decl_stmt|;
name|int
name|bookStoreInd
init|=
name|path1
operator|.
name|contains
argument_list|(
literal|"/bookstore"
argument_list|)
condition|?
literal|0
else|:
literal|1
decl_stmt|;
name|int
name|petStoreInd
init|=
name|bookStoreInd
operator|==
literal|0
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
name|bookStoreInd
argument_list|)
argument_list|)
expr_stmt|;
name|checkPetStoreInfo
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
name|petStoreInd
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBookStoreWadl
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|getWadlResourcesInfo
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources"
argument_list|,
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/bookstore"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkBookStoreInfo
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPetStoreWadl
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|getWadlResourcesInfo
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources"
argument_list|,
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/petstore"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|checkPetStoreInfo
argument_list|(
name|resourceEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPetStoreSource
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/petstore"
argument_list|)
decl_stmt|;
name|HTTPConduit
name|conduit
init|=
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
decl_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setConnectionTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|XMLSource
name|source
init|=
name|wc
operator|.
name|query
argument_list|(
literal|"_code"
argument_list|,
literal|""
argument_list|)
operator|.
name|query
argument_list|(
literal|"_os"
argument_list|,
name|getOs
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
name|XMLSource
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|link
init|=
name|source
operator|.
name|getValue
argument_list|(
literal|"ns:html/ns:body/ns:ul/ns:a/@href"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"ns"
argument_list|,
literal|"http://www.w3.org/1999/xhtml"
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
name|wc2
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|link
argument_list|)
decl_stmt|;
name|HTTPConduit
name|conduit2
init|=
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc2
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
decl_stmt|;
name|conduit2
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|conduit2
operator|.
name|getClient
argument_list|()
operator|.
name|setConnectionTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|wc2
operator|.
name|accept
argument_list|(
literal|"application/zip"
argument_list|)
operator|.
name|get
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|tmpdir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
decl_stmt|;
name|File
name|classes
init|=
operator|new
name|File
argument_list|(
name|tmpdir
argument_list|,
literal|"cxf-jaxrs-test-compiled-src"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|classes
operator|.
name|mkdir
argument_list|()
condition|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
name|File
name|unzippedSrc
init|=
operator|new
name|File
argument_list|(
name|tmpdir
argument_list|,
literal|"cxf-jaxrs-test-unzipped-src"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|unzippedSrc
operator|.
name|mkdir
argument_list|()
condition|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|compileSrc
argument_list|(
name|classes
argument_list|,
name|unzippedSrc
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|verifyClasses
argument_list|(
name|classes
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|FileUtils
operator|.
name|removeDir
argument_list|(
name|classes
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|removeDir
argument_list|(
name|unzippedSrc
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ClassResourceInfo
name|cri
init|=
name|ResourceUtils
operator|.
name|createClassResourceInfo
argument_list|(
name|PetStore
operator|.
name|class
argument_list|,
name|PetStore
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
operator|new
name|CodeGeneratorProvider
argument_list|()
operator|.
name|removeCode
argument_list|(
name|cri
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|verifyClasses
parameter_list|(
name|File
name|classesDir
parameter_list|)
block|{
name|List
argument_list|<
name|File
argument_list|>
name|clsFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|classesDir
argument_list|,
literal|".+\\.class$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|clsFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|clsFiles
argument_list|,
literal|"org.apache.cxf.systest.jaxrs.PetStore.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|checkContains
parameter_list|(
name|List
argument_list|<
name|File
argument_list|>
name|clsFiles
parameter_list|,
name|String
name|name
parameter_list|)
block|{
for|for
control|(
name|File
name|f
range|:
name|clsFiles
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getAbsolutePath
argument_list|()
operator|.
name|replace
argument_list|(
name|getPathSep
argument_list|()
argument_list|,
literal|"."
argument_list|)
operator|.
name|endsWith
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|String
name|getPathSep
parameter_list|()
block|{
name|String
name|os
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|os
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|"win"
argument_list|)
condition|)
block|{
return|return
literal|"\\"
return|;
block|}
else|else
block|{
return|return
literal|"/"
return|;
block|}
block|}
specifier|private
name|void
name|checkBookStoreInfo
parameter_list|(
name|Element
name|resource
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"/bookstore"
argument_list|,
name|resource
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkPetStoreInfo
parameter_list|(
name|Element
name|resource
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"/"
argument_list|,
name|resource
operator|.
name|getAttribute
argument_list|(
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|Element
argument_list|>
name|getWadlResourcesInfo
parameter_list|(
name|String
name|baseURI
parameter_list|,
name|String
name|requestURI
parameter_list|,
name|int
name|size
parameter_list|)
throws|throws
name|Exception
block|{
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|requestURI
operator|+
literal|"?_wadl&_type=xml"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|client
operator|.
name|get
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|Element
name|root
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
name|root
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application"
argument_list|,
name|root
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|resourcesEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|root
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"resources"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resourcesEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|resourcesEl
init|=
name|resourcesEls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|baseURI
argument_list|,
name|resourcesEl
operator|.
name|getAttribute
argument_list|(
literal|"base"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|resourceEls
init|=
name|DOMUtils
operator|.
name|getChildrenWithName
argument_list|(
name|resourcesEl
argument_list|,
name|WadlGenerator
operator|.
name|WADL_NS
argument_list|,
literal|"resource"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|resourceEls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resourceEls
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/bookstore/books/123"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|URLConnection
name|connect
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connect
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|connect
operator|.
name|addRequestProperty
argument_list|(
literal|"Content-Language"
argument_list|,
literal|"badgerFishLanguage"
argument_list|)
expr_stmt|;
name|InputStream
name|in
init|=
name|connect
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
comment|//Ensure BadgerFish output as this should have replaced the standard JSONProvider
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_book123badgerfish.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BadgerFish output not correct"
argument_list|,
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/bookstore/books/12345"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|connect
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connect
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/plain,application/xml"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|connect
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|in
init|=
name|connect
operator|.
name|getErrorStream
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_book_notfound_mapped.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Exception is not mapped correctly"
argument_list|,
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookNotExistent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/bookstore/nonexistent"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|connect
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connect
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|405
argument_list|,
name|connect
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|in
init|=
name|connect
operator|.
name|getErrorStream
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Exception is not mapped correctly"
argument_list|,
literal|"StringTextWriter - Nonexistent method"
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostPetStatus
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/webapp/resources/petstore/pets"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|httpUrlConnection
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|httpUrlConnection
operator|.
name|setUseCaches
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setDefaultUseCaches
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setDoInput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setRequestMethod
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setRequestProperty
argument_list|(
literal|"Content-type"
argument_list|,
literal|"application/x-www-form-urlencoded"
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|setRequestProperty
argument_list|(
literal|"Connection"
argument_list|,
literal|"close"
argument_list|)
expr_stmt|;
name|OutputStream
name|outputstream
init|=
name|httpUrlConnection
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|File
name|inputFile
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/singleValPostBody.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|byte
index|[]
name|tmp
init|=
operator|new
name|byte
index|[
literal|4096
index|]
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|inputFile
argument_list|)
decl_stmt|;
try|try
block|{
while|while
condition|(
operator|(
name|i
operator|=
name|is
operator|.
name|read
argument_list|(
name|tmp
argument_list|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|outputstream
operator|.
name|write
argument_list|(
name|tmp
argument_list|,
literal|0
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|outputstream
operator|.
name|flush
argument_list|()
expr_stmt|;
name|int
name|responseCode
init|=
name|httpUrlConnection
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|responseCode
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong status returned"
argument_list|,
literal|"open"
argument_list|,
name|getStringFromInputStream
argument_list|(
name|httpUrlConnection
operator|.
name|getInputStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|httpUrlConnection
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostPetStatus2
parameter_list|()
throws|throws
name|Exception
block|{
name|Socket
name|s
init|=
operator|new
name|Socket
argument_list|(
literal|"localhost"
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|PORT
argument_list|)
argument_list|)
decl_stmt|;
name|IOUtils
operator|.
name|copyAndCloseInput
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/formRequest.txt"
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|,
name|s
operator|.
name|getOutputStream
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|getOutputStream
argument_list|()
operator|.
name|flush
argument_list|()
expr_stmt|;
try|try
block|{
name|assertTrue
argument_list|(
literal|"Wrong status returned"
argument_list|,
name|getStringFromInputStream
argument_list|(
name|s
operator|.
name|getInputStream
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
literal|"open"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getStringFromInputStream
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|IOUtils
operator|.
name|toString
argument_list|(
name|in
argument_list|)
return|;
block|}
specifier|private
name|void
name|compileSrc
parameter_list|(
name|File
name|classes
parameter_list|,
name|File
name|unzippedSrc
parameter_list|,
name|InputStream
name|zipFile
parameter_list|)
throws|throws
name|Exception
block|{
name|unzip
argument_list|(
name|zipFile
argument_list|,
name|unzippedSrc
argument_list|)
expr_stmt|;
name|StringBuilder
name|classPath
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|setupClasspath
argument_list|(
name|classPath
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|File
argument_list|>
name|srcFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|unzippedSrc
argument_list|,
literal|".+\\.java$"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|compileJavaSrc
argument_list|(
name|classPath
operator|.
name|toString
argument_list|()
argument_list|,
name|srcFiles
argument_list|,
name|classes
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"Could not compile classes"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|unzip
parameter_list|(
name|InputStream
name|fin
parameter_list|,
name|File
name|unzippedSrc
parameter_list|)
throws|throws
name|Exception
block|{
name|ZipInputStream
name|zin
init|=
operator|new
name|ZipInputStream
argument_list|(
name|fin
argument_list|)
decl_stmt|;
name|ZipEntry
name|ze
init|=
literal|null
decl_stmt|;
while|while
condition|(
operator|(
name|ze
operator|=
name|zin
operator|.
name|getNextEntry
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|String
name|entryName
init|=
name|ze
operator|.
name|getName
argument_list|()
decl_stmt|;
name|int
name|index
init|=
name|entryName
operator|.
name|lastIndexOf
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
argument_list|)
decl_stmt|;
name|File
name|packageDir
init|=
operator|new
name|File
argument_list|(
name|unzippedSrc
argument_list|,
name|entryName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|index
argument_list|)
argument_list|)
decl_stmt|;
name|packageDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileOutputStream
name|fout
init|=
operator|new
name|FileOutputStream
argument_list|(
operator|new
name|File
argument_list|(
name|packageDir
argument_list|,
name|entryName
operator|.
name|substring
argument_list|(
name|index
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
name|zin
operator|.
name|read
argument_list|()
init|;
name|c
operator|!=
operator|-
literal|1
condition|;
name|c
operator|=
name|zin
operator|.
name|read
argument_list|()
control|)
block|{
name|fout
operator|.
name|write
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
name|zin
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
name|fout
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|zin
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|boolean
name|compileJavaSrc
parameter_list|(
name|String
name|classPath
parameter_list|,
name|List
argument_list|<
name|File
argument_list|>
name|srcList
parameter_list|,
name|String
name|dest
parameter_list|)
block|{
name|String
index|[]
name|javacCommand
init|=
operator|new
name|String
index|[
name|srcList
operator|.
name|size
argument_list|()
operator|+
literal|7
index|]
decl_stmt|;
name|javacCommand
index|[
literal|0
index|]
operator|=
literal|"javac"
expr_stmt|;
name|javacCommand
index|[
literal|1
index|]
operator|=
literal|"-classpath"
expr_stmt|;
name|javacCommand
index|[
literal|2
index|]
operator|=
name|classPath
expr_stmt|;
name|javacCommand
index|[
literal|3
index|]
operator|=
literal|"-d"
expr_stmt|;
name|javacCommand
index|[
literal|4
index|]
operator|=
name|dest
expr_stmt|;
name|javacCommand
index|[
literal|5
index|]
operator|=
literal|"-target"
expr_stmt|;
name|javacCommand
index|[
literal|6
index|]
operator|=
literal|"1.5"
expr_stmt|;
name|int
name|i
init|=
literal|7
decl_stmt|;
for|for
control|(
name|File
name|f
range|:
name|srcList
control|)
block|{
name|javacCommand
index|[
name|i
operator|++
index|]
operator|=
name|f
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|Compiler
name|javaCompiler
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|Compiler
argument_list|()
decl_stmt|;
return|return
name|javaCompiler
operator|.
name|internalCompile
argument_list|(
name|javacCommand
argument_list|,
literal|7
argument_list|)
return|;
block|}
specifier|static
name|void
name|setupClasspath
parameter_list|(
name|StringBuilder
name|classPath
parameter_list|,
name|ClassLoader
name|classLoader
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|ClassLoader
name|scl
init|=
name|ClassLoader
operator|.
name|getSystemClassLoader
argument_list|()
decl_stmt|;
name|ClassLoader
name|tcl
init|=
name|classLoader
decl_stmt|;
do|do
block|{
if|if
condition|(
name|tcl
operator|instanceof
name|URLClassLoader
condition|)
block|{
name|URL
index|[]
name|urls
init|=
operator|(
operator|(
name|URLClassLoader
operator|)
name|tcl
operator|)
operator|.
name|getURLs
argument_list|()
decl_stmt|;
if|if
condition|(
name|urls
operator|==
literal|null
condition|)
block|{
name|urls
operator|=
operator|new
name|URL
index|[
literal|0
index|]
expr_stmt|;
block|}
for|for
control|(
name|URL
name|url
range|:
name|urls
control|)
block|{
if|if
condition|(
name|url
operator|.
name|getProtocol
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"file"
argument_list|)
condition|)
block|{
name|File
name|file
decl_stmt|;
if|if
condition|(
name|url
operator|.
name|toURI
argument_list|()
operator|.
name|getPath
argument_list|()
operator|==
literal|null
condition|)
block|{
continue|continue;
block|}
try|try
block|{
name|file
operator|=
operator|new
name|File
argument_list|(
name|url
operator|.
name|toURI
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|urise
parameter_list|)
block|{
if|if
condition|(
name|url
operator|.
name|getPath
argument_list|()
operator|==
literal|null
condition|)
block|{
continue|continue;
block|}
name|file
operator|=
operator|new
name|File
argument_list|(
name|url
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|file
operator|.
name|exists
argument_list|()
condition|)
block|{
name|classPath
operator|.
name|append
argument_list|(
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"path.separator"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|file
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".jar"
argument_list|)
condition|)
block|{
name|addClasspathFromManifest
argument_list|(
name|classPath
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|tcl
operator|=
name|tcl
operator|.
name|getParent
argument_list|()
expr_stmt|;
if|if
condition|(
literal|null
operator|==
name|tcl
condition|)
block|{
break|break;
block|}
block|}
do|while
condition|(
operator|!
name|tcl
operator|.
name|equals
argument_list|(
name|scl
operator|.
name|getParent
argument_list|()
argument_list|)
condition|)
do|;
block|}
specifier|static
name|void
name|addClasspathFromManifest
parameter_list|(
name|StringBuilder
name|classPath
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|JarFile
name|jar
init|=
operator|new
name|JarFile
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|Attributes
name|attr
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|jar
operator|.
name|getManifest
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|attr
operator|=
name|jar
operator|.
name|getManifest
argument_list|()
operator|.
name|getMainAttributes
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|attr
operator|!=
literal|null
condition|)
block|{
name|String
name|cp
init|=
name|attr
operator|.
name|getValue
argument_list|(
literal|"Class-Path"
argument_list|)
decl_stmt|;
while|while
condition|(
name|cp
operator|!=
literal|null
condition|)
block|{
name|String
name|fileName
init|=
name|cp
decl_stmt|;
name|int
name|idx
init|=
name|fileName
operator|.
name|indexOf
argument_list|(
literal|' '
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|!=
operator|-
literal|1
condition|)
block|{
name|fileName
operator|=
name|fileName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|idx
argument_list|)
expr_stmt|;
name|cp
operator|=
name|cp
operator|.
name|substring
argument_list|(
name|idx
operator|+
literal|1
argument_list|)
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|cp
operator|=
literal|null
expr_stmt|;
block|}
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|File
name|f2
decl_stmt|;
if|if
condition|(
name|uri
operator|.
name|isAbsolute
argument_list|()
condition|)
block|{
name|f2
operator|=
operator|new
name|File
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|f2
operator|=
operator|new
name|File
argument_list|(
name|file
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|f2
operator|.
name|exists
argument_list|()
condition|)
block|{
name|classPath
operator|.
name|append
argument_list|(
name|f2
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|classPath
operator|.
name|append
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"path.separator"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|String
name|getOs
parameter_list|()
block|{
name|String
name|os
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|os
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|"win"
argument_list|)
condition|)
block|{
return|return
literal|"win"
return|;
block|}
else|else
block|{
return|return
literal|"unix"
return|;
block|}
block|}
block|}
end_class

end_unit

