begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|NotFoundException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Form
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|FileRequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|RequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|AbstractFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|FIStaxInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|FIStaxOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|Interceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|InterceptorProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|transform
operator|.
name|TransformInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|transform
operator|.
name|TransformOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|io
operator|.
name|CachedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|ClientConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|ResponseExceptionMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|xml
operator|.
name|XMLSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|MetadataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|JAXBElementProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|AbstractPhaseInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|BookSoapService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|BookStoreJaxrsJaxws
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|BookStoreSoapRestFastInfoset2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|BookStoreSoapRestFastInfoset3
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|HelloWorld
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|jaxws
operator|.
name|UserImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|HTTPConduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transports
operator|.
name|http
operator|.
name|configuration
operator|.
name|HTTPClientPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSSoapBookTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
name|BookServerRestSoap
operator|.
name|PORT
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|BookServerRestSoap
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloRest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/hello-rest"
decl_stmt|;
name|HelloWorld
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|address
argument_list|,
name|HelloWorld
operator|.
name|class
argument_list|)
decl_stmt|;
name|useHelloService
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloSoap
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|QName
name|serviceName
init|=
operator|new
name|QName
argument_list|(
literal|"http://hello.com"
argument_list|,
literal|"HelloWorld"
argument_list|)
decl_stmt|;
specifier|final
name|QName
name|portName
init|=
operator|new
name|QName
argument_list|(
literal|"http://hello.com"
argument_list|,
literal|"HelloWorldPort"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/hello-soap"
decl_stmt|;
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
name|serviceName
argument_list|)
decl_stmt|;
name|service
operator|.
name|addPort
argument_list|(
name|portName
argument_list|,
name|SOAPBinding
operator|.
name|SOAP11HTTP_BINDING
argument_list|,
name|address
argument_list|)
expr_stmt|;
name|HelloWorld
name|hw
init|=
name|service
operator|.
name|getPort
argument_list|(
name|HelloWorld
operator|.
name|class
argument_list|)
decl_stmt|;
name|useHelloService
argument_list|(
name|hw
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloSoapCustomDataBindingJaxb
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/hello-soap-databinding-jaxb"
decl_stmt|;
name|doTestHelloSoapCustomDataBinding
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloSoapCustomDataBindingJaxbXslt
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/hello-soap-databinding-xslt"
decl_stmt|;
name|doTestHelloSoapCustomDataBinding
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestHelloSoapCustomDataBinding
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|QName
name|serviceName
init|=
operator|new
name|QName
argument_list|(
literal|"http://hello.com"
argument_list|,
literal|"HelloWorld"
argument_list|)
decl_stmt|;
specifier|final
name|QName
name|portName
init|=
operator|new
name|QName
argument_list|(
literal|"http://hello.com"
argument_list|,
literal|"HelloWorldPort"
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
name|serviceName
argument_list|)
decl_stmt|;
name|service
operator|.
name|addPort
argument_list|(
name|portName
argument_list|,
name|SOAPBinding
operator|.
name|SOAP11HTTP_BINDING
argument_list|,
name|address
argument_list|)
expr_stmt|;
name|HelloWorld
name|hw
init|=
name|service
operator|.
name|getPort
argument_list|(
name|HelloWorld
operator|.
name|class
argument_list|)
decl_stmt|;
name|Client
name|cl
init|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|hw
argument_list|)
decl_stmt|;
name|HTTPConduit
name|http
init|=
operator|(
name|HTTPConduit
operator|)
name|cl
operator|.
name|getConduit
argument_list|()
decl_stmt|;
name|HTTPClientPolicy
name|httpClientPolicy
init|=
operator|new
name|HTTPClientPolicy
argument_list|()
decl_stmt|;
name|httpClientPolicy
operator|.
name|setConnectionTimeout
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|httpClientPolicy
operator|.
name|setReceiveTimeout
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|http
operator|.
name|setClient
argument_list|(
name|httpClientPolicy
argument_list|)
expr_stmt|;
name|User
name|user
init|=
operator|new
name|UserImpl
argument_list|(
literal|"Barry"
argument_list|)
decl_stmt|;
name|User
name|user2
init|=
name|hw
operator|.
name|echoUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|user
argument_list|,
name|user2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Barry"
argument_list|,
name|user2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|useHelloService
parameter_list|(
name|HelloWorld
name|service
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Hello Barry"
argument_list|,
name|service
operator|.
name|sayHi
argument_list|(
literal|"Barry"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello Fred"
argument_list|,
name|service
operator|.
name|sayHiToUser
argument_list|(
operator|new
name|UserImpl
argument_list|(
literal|"Fred"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|User
argument_list|>
name|users
init|=
name|service
operator|.
name|getUsers
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|users
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fred"
argument_list|,
name|users
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|users
operator|=
name|service
operator|.
name|echoUsers
argument_list|(
name|users
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|users
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fred"
argument_list|,
name|users
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAll
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|in
init|=
name|getHttpInputStream
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest2/myRestService"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"0"
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookTransform
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/v1/rest-transform/bookstore/books/123"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|client
operator|.
name|get
argument_list|()
decl_stmt|;
name|String
name|str
init|=
name|getStringFromInputStream
argument_list|(
operator|(
name|InputStream
operator|)
name|r
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|str
operator|.
name|contains
argument_list|(
literal|"TheBook"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookTransform
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/v1/rest-transform/bookstore/books"
decl_stmt|;
name|TransformOutInterceptor
name|out
init|=
operator|new
name|TransformOutInterceptor
argument_list|()
decl_stmt|;
name|out
operator|.
name|setOutTransformElements
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"{http://www.example.org/books}*"
argument_list|,
literal|"{http://www.example.org/super-books}*"
argument_list|)
argument_list|)
expr_stmt|;
name|TransformInInterceptor
name|in
init|=
operator|new
name|TransformInInterceptor
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|// If Book2 didn't have {http://www.example.org/books}Book
comment|// then we'd just do '"*" : "{http://www.example.org/books}*'
comment|// but given that we have TheBook being returned, we need
name|map
operator|.
name|put
argument_list|(
literal|"TheBook"
argument_list|,
literal|"{http://www.example.org/books}Book"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
literal|"{http://www.example.org/books}id"
argument_list|)
expr_stmt|;
name|in
operator|.
name|setInTransformElements
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|Book2
name|book
init|=
name|client
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|post
argument_list|(
operator|new
name|Book2
argument_list|()
argument_list|,
name|Book2
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostBookTransformV2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/v2/rest-transform/bookstore/books"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
name|client
operator|.
name|accept
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|post
argument_list|(
operator|new
name|Book
argument_list|()
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|124L
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookFastinfoset
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest3/bookstore/fastinfoset2"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FIStaxInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|JAXBElementProvider
argument_list|<
name|?
argument_list|>
name|p
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConsumeMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProvider
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|FIStaxInInterceptor
operator|.
name|FI_GET_SUPPORTED
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|WebClient
name|client
init|=
name|bean
operator|.
name|createWebClient
argument_list|()
decl_stmt|;
name|Book
name|b
init|=
name|client
operator|.
name|accept
argument_list|(
literal|"application/fastinfoset"
argument_list|)
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"CXF2"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostGetBookFastinfoset
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest3/bookstore/fastinfoset"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FIStaxOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FIStaxInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|JAXBElementProvider
argument_list|<
name|?
argument_list|>
name|p
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConsumeMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setProduceMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProvider
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|FIStaxOutInterceptor
operator|.
name|FI_ENABLED
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|WebClient
name|client
init|=
name|bean
operator|.
name|createWebClient
argument_list|()
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
name|Book
name|b2
init|=
name|client
operator|.
name|type
argument_list|(
literal|"application/fastinfoset"
argument_list|)
operator|.
name|accept
argument_list|(
literal|"application/fastinfoset"
argument_list|)
operator|.
name|post
argument_list|(
name|b
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|b2
operator|.
name|getName
argument_list|()
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b2
operator|.
name|getId
argument_list|()
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostGetBookFastinfosetProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConsumeMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setProduceMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|client
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest4"
argument_list|,
name|BookStoreSoapRestFastInfoset2
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|p
argument_list|)
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
name|Book
name|b2
init|=
name|client
operator|.
name|addFastinfoBook
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|b2
operator|.
name|getName
argument_list|()
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b2
operator|.
name|getId
argument_list|()
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|checkFiInterceptors
argument_list|(
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPostGetBookFastinfosetProxyInterceptors
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
name|p
init|=
operator|new
name|JAXBElementProvider
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|p
operator|.
name|setConsumeMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setProduceMediaTypes
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"application/fastinfoset"
argument_list|)
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|client
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest5"
argument_list|,
name|BookStoreSoapRestFastInfoset3
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|p
argument_list|)
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|(
literal|"CXF"
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
comment|// Just to make sure it is enforced
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
operator|.
name|getRequestContext
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|FIStaxOutInterceptor
operator|.
name|FI_ENABLED
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|Book
name|b2
init|=
name|client
operator|.
name|addFastinfoBook
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|b2
operator|.
name|getName
argument_list|()
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b2
operator|.
name|getId
argument_list|()
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|checkFiInterceptors
argument_list|(
name|WebClient
operator|.
name|getConfig
argument_list|(
name|client
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkFiInterceptors
parameter_list|(
name|ClientConfiguration
name|cfg
parameter_list|)
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Interceptor
argument_list|<
name|?
argument_list|>
name|in
range|:
name|cfg
operator|.
name|getInInterceptors
argument_list|()
control|)
block|{
if|if
condition|(
name|in
operator|instanceof
name|FIStaxInInterceptor
condition|)
block|{
name|count
operator|++
expr_stmt|;
break|break;
block|}
block|}
for|for
control|(
name|Interceptor
argument_list|<
name|?
argument_list|>
name|in
range|:
name|cfg
operator|.
name|getOutInterceptors
argument_list|()
control|)
block|{
if|if
condition|(
name|in
operator|instanceof
name|FIStaxOutInterceptor
condition|)
block|{
name|count
operator|++
expr_stmt|;
break|break;
block|}
block|}
name|assertEquals
argument_list|(
literal|"In and Out FastInfoset interceptors are expected"
argument_list|,
literal|2
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123ServletResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|in
init|=
name|getHttpInputStream
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore/0"
argument_list|)
decl_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_book123.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|in
init|=
name|getHttpInputStream
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore/123"
argument_list|)
decl_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_book123.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|,
name|getStringFromInputStream
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123Client
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|HTTPConduit
name|conduit
init|=
operator|(
name|HTTPConduit
operator|)
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getConduit
argument_list|()
decl_stmt|;
name|Book
name|b
init|=
name|proxy
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
literal|"123"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|HTTPConduit
name|conduit2
init|=
operator|(
name|HTTPConduit
operator|)
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getConduit
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|conduit
argument_list|,
name|conduit2
argument_list|)
expr_stmt|;
name|conduit
operator|.
name|getClient
argument_list|()
operator|.
name|setAutoRedirect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|=
name|proxy
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
literal|"123"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123WebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/123"
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|client
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123XMLSource
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/123"
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|XMLSource
name|source
init|=
name|client
operator|.
name|get
argument_list|(
name|XMLSource
operator|.
name|class
argument_list|)
decl_stmt|;
name|source
operator|.
name|setBuffering
argument_list|()
expr_stmt|;
name|Book
name|b
init|=
name|source
operator|.
name|getNode
argument_list|(
literal|"/Book"
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|b
operator|=
name|source
operator|.
name|getNode
argument_list|(
literal|"/Book"
argument_list|,
name|Book
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoBookWebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/books/0/subresource"
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|client
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|204
argument_list|,
name|client
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook123WebClientResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/123"
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|readBook
argument_list|(
operator|(
name|InputStream
operator|)
name|client
operator|.
name|get
argument_list|()
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBook356ClientException
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|TestResponseExceptionMapper
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|proxy
operator|.
name|getBook
argument_list|(
literal|356L
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BookNotFoundFault
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"No Book with id 356 is available"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NotFoundException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCheckBookClientException
parameter_list|()
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|NotFoundResponseExceptionMapper
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|proxy
operator|.
name|checkBook
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckBookClientErrorResponse
parameter_list|()
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|DummyResponseExceptionMapper
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|proxy
operator|.
name|checkBook
argument_list|(
literal|100L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|SC_NOT_FOUND
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoBook357WebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.http.throw_io_exceptions"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore/356"
argument_list|)
expr_stmt|;
name|WebClient
name|wc
init|=
name|bean
operator|.
name|createWebClient
argument_list|()
decl_stmt|;
name|Response
name|response
init|=
name|wc
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|msg
init|=
name|IOUtils
operator|.
name|readStringFromStream
argument_list|(
operator|(
name|InputStream
operator|)
name|response
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"No Book with id 356 is available"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOtherInterceptorDrainingStream
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TestStreamDrainInterptor
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
name|client
init|=
name|bean
operator|.
name|createWebClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/123"
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|client
operator|.
name|get
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceClient
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"125"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBook
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|125
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceClientWithContext
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"125"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBookWithContext
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|125
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceClientNoProduces
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"125"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBookNoProduces
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|125
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceParamExtensions
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"139"
argument_list|)
decl_stmt|;
name|Book
name|bean
init|=
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|139L
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBook4
argument_list|(
name|bean
argument_list|,
name|bean
argument_list|,
name|bean
argument_list|,
name|bean
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|139
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceParamExtensions2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"139"
argument_list|)
decl_stmt|;
name|BookBean
name|bean
init|=
operator|new
name|BookBean
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|139L
argument_list|)
decl_stmt|;
name|bean
operator|.
name|getComments
argument_list|()
operator|.
name|put
argument_list|(
literal|1L
argument_list|,
literal|"Good"
argument_list|)
expr_stmt|;
name|bean
operator|.
name|getComments
argument_list|()
operator|.
name|put
argument_list|(
literal|2L
argument_list|,
literal|"Good"
argument_list|)
expr_stmt|;
name|BookBean
name|b
init|=
name|bs
operator|.
name|getTheBookQueryBean
argument_list|(
name|bean
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|139
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceParamOrder
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"139"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBook5
argument_list|(
literal|"CXF"
argument_list|,
literal|555L
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|555
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddOrderFormBean
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"139"
argument_list|)
decl_stmt|;
name|OrderBean
name|order
init|=
operator|new
name|OrderBean
argument_list|()
decl_stmt|;
name|order
operator|.
name|setId
argument_list|(
literal|123L
argument_list|)
expr_stmt|;
name|order
operator|.
name|setWeight
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|order
operator|.
name|setCustomerTitle
argument_list|(
name|OrderBean
operator|.
name|Title
operator|.
name|MS
argument_list|)
expr_stmt|;
name|OrderBean
name|order2
init|=
name|bs
operator|.
name|addOrder
argument_list|(
name|order
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
literal|123L
argument_list|)
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|order2
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrderBean
operator|.
name|Title
operator|.
name|MS
argument_list|,
name|order2
operator|.
name|getCustomerTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceWebClientParamExtensions
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/books/139/subresource4/139/CXF Rocks"
argument_list|)
expr_stmt|;
name|Book
name|bean
init|=
operator|new
name|Book
argument_list|(
literal|"CXF Rocks"
argument_list|,
literal|139L
argument_list|)
decl_stmt|;
name|Form
name|form
init|=
operator|new
name|Form
argument_list|()
decl_stmt|;
name|form
operator|.
name|param
argument_list|(
literal|"name"
argument_list|,
literal|"CXF Rocks"
argument_list|)
operator|.
name|param
argument_list|(
literal|"id"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
literal|139L
argument_list|)
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|readBook
argument_list|(
operator|(
name|InputStream
operator|)
name|client
operator|.
name|matrix
argument_list|(
literal|""
argument_list|,
name|bean
argument_list|)
operator|.
name|query
argument_list|(
literal|""
argument_list|,
name|bean
argument_list|)
operator|.
name|form
argument_list|(
name|form
argument_list|)
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|139
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF Rocks"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceClient2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|doTestSubresource
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy2
init|=
name|proxy
operator|.
name|getBookStore
argument_list|(
literal|"number1"
argument_list|)
decl_stmt|;
name|doTestSubresource
argument_list|(
name|proxy2
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy3
init|=
name|proxy2
operator|.
name|getBookStore
argument_list|(
literal|"number1"
argument_list|)
decl_stmt|;
name|doTestSubresource
argument_list|(
name|proxy3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceWebClientProxyBean
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|,
name|MediaType
operator|.
name|TEXT_XML_TYPE
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|fromClient
argument_list|(
name|client
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|doTestSubresource
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy2
init|=
name|JAXRSClientFactory
operator|.
name|fromClient
argument_list|(
name|WebClient
operator|.
name|client
argument_list|(
name|proxy
argument_list|)
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|doTestSubresource
argument_list|(
name|proxy2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceWebClientProxy2
parameter_list|()
throws|throws
name|Exception
block|{
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore"
argument_list|)
operator|.
name|path
argument_list|(
literal|"/books/378"
argument_list|)
decl_stmt|;
name|client
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|TEXT_PLAIN_TYPE
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|BookSubresource
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|fromClient
argument_list|(
name|client
argument_list|,
name|BookSubresource
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|proxy
operator|.
name|getTheBook2
argument_list|(
literal|"CXF "
argument_list|,
literal|"in "
argument_list|,
literal|"Acti"
argument_list|,
literal|"on "
argument_list|,
literal|"- 3"
argument_list|,
literal|"7"
argument_list|,
literal|"8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|378
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 378"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestSubresource
parameter_list|(
name|BookStoreJaxrsJaxws
name|proxy
parameter_list|)
throws|throws
name|Exception
block|{
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"378"
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBook2
argument_list|(
literal|"CXF "
argument_list|,
literal|"in "
argument_list|,
literal|"Acti"
argument_list|,
literal|"on "
argument_list|,
literal|"- 3"
argument_list|,
literal|"7"
argument_list|,
literal|"8"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|378
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 378"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|bs
argument_list|)
operator|.
name|reset
argument_list|()
operator|.
name|header
argument_list|(
literal|"N4"
argument_list|,
literal|"- 4"
argument_list|)
expr_stmt|;
name|b
operator|=
name|bs
operator|.
name|getTheBook2
argument_list|(
literal|"CXF "
argument_list|,
literal|"in "
argument_list|,
literal|"Acti"
argument_list|,
literal|"on "
argument_list|,
literal|null
argument_list|,
literal|"7"
argument_list|,
literal|"8"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|378
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 478"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookWebClientForm
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore/books/679/subresource3"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
init|=
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|putSingle
argument_list|(
literal|"id"
argument_list|,
literal|"679"
argument_list|)
expr_stmt|;
name|map
operator|.
name|add
argument_list|(
literal|"name"
argument_list|,
literal|"CXF in Action - "
argument_list|)
expr_stmt|;
name|map
operator|.
name|add
argument_list|(
literal|"name"
argument_list|,
literal|"679"
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|readBook
argument_list|(
operator|(
name|InputStream
operator|)
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|form
argument_list|(
name|map
argument_list|)
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|679
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 679"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookWebClientForm2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore/books/679/subresource3"
decl_stmt|;
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|Form
name|f
init|=
operator|new
name|Form
argument_list|(
operator|new
name|MetadataMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|f
operator|.
name|param
argument_list|(
literal|"id"
argument_list|,
literal|"679"
argument_list|)
operator|.
name|param
argument_list|(
literal|"name"
argument_list|,
literal|"CXF in Action - "
argument_list|)
operator|.
name|param
argument_list|(
literal|"name"
argument_list|,
literal|"679"
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|readBook
argument_list|(
operator|(
name|InputStream
operator|)
name|wc
operator|.
name|accept
argument_list|(
literal|"application/xml"
argument_list|)
operator|.
name|form
argument_list|(
name|f
argument_list|)
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|679
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 679"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSubresourceClientFormParam
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|BookSubresource
name|bs
init|=
name|proxy
operator|.
name|getBookSubresource
argument_list|(
literal|"679"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|parts
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parts
operator|.
name|add
argument_list|(
literal|"CXF in Action - "
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
literal|679
argument_list|)
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|bs
operator|.
name|getTheBook3
argument_list|(
literal|"679"
argument_list|,
name|parts
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|679
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 679"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddGetBook123WebClient
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|WebClient
name|client
init|=
name|WebClient
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|)
decl_stmt|;
name|client
operator|.
name|path
argument_list|(
literal|"/bookstore/books"
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|b
operator|.
name|setId
argument_list|(
literal|124
argument_list|)
expr_stmt|;
name|b
operator|.
name|setName
argument_list|(
literal|"CXF in Action - 2"
argument_list|)
expr_stmt|;
name|Book
name|b2
init|=
name|client
operator|.
name|post
argument_list|(
name|b
argument_list|,
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|b
argument_list|,
name|b2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124
argument_list|,
name|b2
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 2"
argument_list|,
name|b2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddGetBook123Client
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|baseAddress
argument_list|,
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|b
operator|.
name|setId
argument_list|(
literal|124
argument_list|)
expr_stmt|;
name|b
operator|.
name|setName
argument_list|(
literal|"CXF in Action - 2"
argument_list|)
expr_stmt|;
name|Book
name|b2
init|=
name|proxy
operator|.
name|addBook
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|b
argument_list|,
name|b2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|124
argument_list|,
name|b2
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action - 2"
argument_list|,
name|b2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddGetBookRest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|endpointAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest/bookstore/books"
decl_stmt|;
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/add_book.txt"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|FileRequestEntity
argument_list|(
name|input
argument_list|,
literal|"text/xml; charset=ISO-8859-1"
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HttpClient
name|httpclient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|result
init|=
name|httpclient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|InputStream
name|expected
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_add_book.txt"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getStringFromInputStream
argument_list|(
name|expected
argument_list|)
argument_list|,
name|post
operator|.
name|getResponseBodyAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Release current connection to the connection pool once you are done
name|post
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBookSoap
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|wsdlAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/soap/bookservice?wsdl"
decl_stmt|;
name|URL
name|wsdlUrl
init|=
operator|new
name|URL
argument_list|(
name|wsdlAddress
argument_list|)
decl_stmt|;
name|BookSoapService
name|service
init|=
operator|new
name|BookSoapService
argument_list|(
name|wsdlUrl
argument_list|,
operator|new
name|QName
argument_list|(
literal|"http://books.com"
argument_list|,
literal|"BookService"
argument_list|)
argument_list|)
decl_stmt|;
name|BookStoreJaxrsJaxws
name|store
init|=
name|service
operator|.
name|getBookPort
argument_list|()
decl_stmt|;
name|Book
name|book
init|=
name|store
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id is wrong"
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetUnqualifiedBookSoap
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|wsdlAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/soap-transform/bookservice?wsdl"
decl_stmt|;
name|BookSoapService
name|service
init|=
operator|new
name|BookSoapService
argument_list|(
operator|new
name|URL
argument_list|(
name|wsdlAddress
argument_list|)
argument_list|,
operator|new
name|QName
argument_list|(
literal|"http://books.com"
argument_list|,
literal|"BookService"
argument_list|)
argument_list|)
decl_stmt|;
name|BookStoreJaxrsJaxws
name|store
init|=
name|service
operator|.
name|getBookPort
argument_list|()
decl_stmt|;
name|TransformOutInterceptor
name|out
init|=
operator|new
name|TransformOutInterceptor
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mapOut
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|// Book content (id, name) is unqualified, thus the following works
comment|// because JAXB will report
comment|// - {http://jaxws.jaxrs.systest.cxf.apache.org/}Book
comment|// - id
comment|// - name
comment|// and only the qualified top-level Book tag gets matched by the following
comment|// mapping
name|mapOut
operator|.
name|put
argument_list|(
literal|"{http://jaxws.jaxrs.systest.cxf.apache.org/}*"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|out
operator|.
name|setOutTransformElements
argument_list|(
name|mapOut
argument_list|)
expr_stmt|;
name|TransformInInterceptor
name|in
init|=
operator|new
name|TransformInInterceptor
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mapIn
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|// mapIn.put("*", "{http://jaxws.jaxrs.systest.cxf.apache.org/}*");
comment|// won't work for a case where a totally unqualified getBookResponse needs to be
comment|// qualified such that only the top-level getBookResponse is processed because of '*'.
comment|// Such a mapping would work nicely if we had say a package-info making both
comment|// Book id& name qualified; otherwise we need to choose what tag we need to qualify
comment|// mapIn.put("*", "{http://jaxws.jaxrs.systest.cxf.apache.org/}*");
comment|// works too if the schema validation is disabled
name|mapIn
operator|.
name|put
argument_list|(
literal|"getBookResponse"
argument_list|,
literal|"{http://jaxws.jaxrs.systest.cxf.apache.org/}getBookResponse"
argument_list|)
expr_stmt|;
name|in
operator|.
name|setInTransformElements
argument_list|(
name|mapIn
argument_list|)
expr_stmt|;
name|Client
name|cl
init|=
name|ClientProxy
operator|.
name|getClient
argument_list|(
name|store
argument_list|)
decl_stmt|;
operator|(
operator|(
name|HTTPConduit
operator|)
name|cl
operator|.
name|getConduit
argument_list|()
operator|)
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|10000000
argument_list|)
expr_stmt|;
name|cl
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|cl
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|store
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
literal|123
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id is wrong"
argument_list|,
name|book
operator|.
name|getId
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServiceListingsAndWadl
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|listings
init|=
name|getStringFromInputStream
argument_list|(
name|getHttpInputStream
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|listings
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|listings
operator|.
name|contains
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/soap/bookservice?wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listings
operator|.
name|contains
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/soap/bookservice2?wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|listings
operator|.
name|contains
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest?_wadl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest?_wadl&type=xml"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|listings
operator|.
name|contains
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest2?_wadl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest2?_wadl&type=xml"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listings
operator|.
name|contains
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest3?_wadl"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listings
operator|.
name|contains
argument_list|(
literal|"Atom Log Feed"
argument_list|)
argument_list|)
expr_stmt|;
name|WebClient
name|webClient
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest3?_wadl"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|webClient
operator|.
name|get
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddFeatureToClient
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setResourceClass
argument_list|(
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
expr_stmt|;
name|TestFeature
name|testFeature
init|=
operator|new
name|TestFeature
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AbstractFeature
argument_list|>
name|features
init|=
operator|new
name|ArrayList
argument_list|<
name|AbstractFeature
argument_list|>
argument_list|()
decl_stmt|;
name|features
operator|.
name|add
argument_list|(
name|testFeature
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setFeatures
argument_list|(
name|features
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
operator|(
name|BookStoreJaxrsJaxws
operator|)
name|bean
operator|.
name|create
argument_list|()
decl_stmt|;
name|Book
name|b
init|=
name|proxy
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
literal|"123"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Out Interceptor not invoked"
argument_list|,
name|testFeature
operator|.
name|handleMessageOnOutInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"In Interceptor not invoked"
argument_list|,
name|testFeature
operator|.
name|handleMessageOnInInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|b
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CXF in Action"
argument_list|,
name|b
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServerFaultInInterceptor
parameter_list|()
throws|throws
name|Exception
block|{
comment|//testing faults created by server handled correctly
comment|//999 causes error code of 404, 404 has a different code path so need to test too
name|serverFaultInInterceptorTest
argument_list|(
literal|"999"
argument_list|)
expr_stmt|;
comment|//322 causes a checked exception to be thrown so need to
name|serverFaultInInterceptorTest
argument_list|(
literal|"322"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClientFaultOutInterceptor
parameter_list|()
throws|throws
name|Exception
block|{
comment|//testing faults created by client out interceptor chain handled correctly
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setResourceClass
argument_list|(
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
expr_stmt|;
specifier|final
name|boolean
name|addBadOutInterceptor
init|=
literal|true
decl_stmt|;
name|TestFeature
name|testFeature
init|=
operator|new
name|TestFeature
argument_list|(
name|addBadOutInterceptor
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AbstractFeature
argument_list|>
name|features
init|=
operator|new
name|ArrayList
argument_list|<
name|AbstractFeature
argument_list|>
argument_list|()
decl_stmt|;
name|features
operator|.
name|add
argument_list|(
name|testFeature
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setFeatures
argument_list|(
name|features
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
operator|(
name|BookStoreJaxrsJaxws
operator|)
name|bean
operator|.
name|create
argument_list|()
decl_stmt|;
try|try
block|{
comment|//321 is special case - causes error code of 525
name|proxy
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
literal|"123"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Method should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Out Interceptor not invoked"
argument_list|,
name|testFeature
operator|.
name|handleMessageOnOutInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"In Interceptor not invoked"
argument_list|,
operator|!
name|testFeature
operator|.
name|handleMessageOnInInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong exception caught"
argument_list|,
literal|"fault from bad interceptor"
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Client In Fault In Interceptor was invoked"
argument_list|,
operator|!
name|testFeature
operator|.
name|faultInInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|serverFaultInInterceptorTest
parameter_list|(
name|String
name|param
parameter_list|)
block|{
name|String
name|baseAddress
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/test/services/rest"
decl_stmt|;
name|JAXRSClientFactoryBean
name|bean
init|=
operator|new
name|JAXRSClientFactoryBean
argument_list|()
decl_stmt|;
name|bean
operator|.
name|setAddress
argument_list|(
name|baseAddress
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setResourceClass
argument_list|(
name|BookStoreJaxrsJaxws
operator|.
name|class
argument_list|)
expr_stmt|;
name|TestFeature
name|testFeature
init|=
operator|new
name|TestFeature
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AbstractFeature
argument_list|>
name|features
init|=
operator|new
name|ArrayList
argument_list|<
name|AbstractFeature
argument_list|>
argument_list|()
decl_stmt|;
name|features
operator|.
name|add
argument_list|(
name|testFeature
argument_list|)
expr_stmt|;
name|bean
operator|.
name|setFeatures
argument_list|(
name|features
argument_list|)
expr_stmt|;
name|BookStoreJaxrsJaxws
name|proxy
init|=
operator|(
name|BookStoreJaxrsJaxws
operator|)
name|bean
operator|.
name|create
argument_list|()
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|proxy
argument_list|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.http.no_io_exceptions"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
comment|//321 is special case - causes error code of 525
name|proxy
operator|.
name|getBook
argument_list|(
operator|new
name|Long
argument_list|(
name|param
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Method should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Out Interceptor not invoked"
argument_list|,
name|testFeature
operator|.
name|handleMessageOnOutInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"322"
operator|.
name|equals
argument_list|(
name|param
argument_list|)
condition|)
block|{
comment|//In interceptors not called when checked exception thrown from server
name|assertTrue
argument_list|(
literal|"In Interceptor not invoked"
argument_list|,
name|testFeature
operator|.
name|handleMessageOnInInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertTrue
argument_list|(
literal|"In Interceptor not invoked"
argument_list|,
operator|!
name|testFeature
operator|.
name|handleMessageOnInInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"Client In Fault In Interceptor not invoked"
argument_list|,
name|testFeature
operator|.
name|faultInInterceptorCalled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getStringFromInputStream
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|Exception
block|{
name|CachedOutputStream
name|bos
init|=
operator|new
name|CachedOutputStream
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
name|in
argument_list|,
name|bos
argument_list|)
expr_stmt|;
name|String
name|str
init|=
operator|new
name|String
argument_list|(
name|bos
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|str
return|;
block|}
specifier|private
name|InputStream
name|getHttpInputStream
parameter_list|(
name|String
name|endpointAddress
parameter_list|)
throws|throws
name|Exception
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|endpointAddress
argument_list|)
decl_stmt|;
name|URLConnection
name|connect
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|connect
operator|.
name|addRequestProperty
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/xml,text/plain"
argument_list|)
expr_stmt|;
return|return
name|connect
operator|.
name|getInputStream
argument_list|()
return|;
block|}
specifier|private
name|Book
name|readBook
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|Exception
block|{
name|JAXBContext
name|c
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
operator|new
name|Class
index|[]
block|{
name|Book
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|Unmarshaller
name|u
init|=
name|c
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
return|return
operator|(
name|Book
operator|)
name|u
operator|.
name|unmarshal
argument_list|(
name|is
argument_list|)
return|;
block|}
annotation|@
name|Ignore
specifier|public
specifier|static
class|class
name|TestResponseExceptionMapper
implements|implements
name|ResponseExceptionMapper
argument_list|<
name|BookNotFoundFault
argument_list|>
block|{
specifier|public
name|TestResponseExceptionMapper
parameter_list|()
block|{         }
specifier|public
name|BookNotFoundFault
name|fromResponse
parameter_list|(
name|Response
name|r
parameter_list|)
block|{
name|Object
name|value
init|=
name|r
operator|.
name|getMetadata
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"BOOK-HEADER"
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|BookNotFoundFault
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Ignore
specifier|public
specifier|static
class|class
name|NotFoundResponseExceptionMapper
implements|implements
name|ResponseExceptionMapper
argument_list|<
name|Exception
argument_list|>
block|{
specifier|public
name|Exception
name|fromResponse
parameter_list|(
name|Response
name|r
parameter_list|)
block|{
if|if
condition|(
name|r
operator|.
name|getStatus
argument_list|()
operator|==
name|HttpStatus
operator|.
name|SC_NOT_FOUND
condition|)
block|{
return|return
operator|new
name|NotFoundException
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
annotation|@
name|Ignore
specifier|public
specifier|static
class|class
name|DummyResponseExceptionMapper
implements|implements
name|ResponseExceptionMapper
argument_list|<
name|Exception
argument_list|>
block|{
specifier|public
name|Exception
name|fromResponse
parameter_list|(
name|Response
name|r
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
annotation|@
name|Ignore
specifier|public
class|class
name|TestStreamDrainInterptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|public
name|TestStreamDrainInterptor
parameter_list|()
block|{
name|super
argument_list|(
name|Phase
operator|.
name|RECEIVE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|InputStream
name|is
init|=
name|message
operator|.
name|getContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|is
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|byte
index|[]
name|payload
decl_stmt|;
try|try
block|{
comment|// input stream will be closed by readBytesFromStream()
name|payload
operator|=
name|IOUtils
operator|.
name|readBytesFromStream
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"payload was null"
argument_list|,
name|payload
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"payload was EMPTY"
argument_list|,
name|payload
operator|.
name|length
operator|>
literal|0
argument_list|)
expr_stmt|;
name|message
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|payload
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|String
name|error
init|=
literal|"Failed to read the stream properly due to "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|error
argument_list|,
name|e
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Ignore
specifier|public
class|class
name|TestFeature
extends|extends
name|AbstractFeature
block|{
specifier|private
name|TestOutInterceptor
name|testOutInterceptor
decl_stmt|;
specifier|private
name|TestInInterceptor
name|testInInterceptor
decl_stmt|;
specifier|private
name|TestFaultInInterceptor
name|testFaultInInterceptor
decl_stmt|;
specifier|private
name|boolean
name|addBadOutInterceptor
decl_stmt|;
specifier|public
name|TestFeature
parameter_list|()
block|{         }
specifier|public
name|TestFeature
parameter_list|(
name|boolean
name|addBadOutInterceptor
parameter_list|)
block|{
name|this
operator|.
name|addBadOutInterceptor
operator|=
name|addBadOutInterceptor
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|initializeProvider
parameter_list|(
name|InterceptorProvider
name|provider
parameter_list|,
name|Bus
name|bus
parameter_list|)
block|{
name|testOutInterceptor
operator|=
operator|new
name|TestOutInterceptor
argument_list|(
name|addBadOutInterceptor
argument_list|)
expr_stmt|;
name|testInInterceptor
operator|=
operator|new
name|TestInInterceptor
argument_list|()
expr_stmt|;
name|testFaultInInterceptor
operator|=
operator|new
name|TestFaultInInterceptor
argument_list|()
expr_stmt|;
name|provider
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|testOutInterceptor
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|testInInterceptor
argument_list|)
expr_stmt|;
name|provider
operator|.
name|getInFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
name|testFaultInInterceptor
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|handleMessageOnOutInterceptorCalled
parameter_list|()
block|{
return|return
name|testOutInterceptor
operator|.
name|handleMessageCalled
argument_list|()
return|;
block|}
specifier|protected
name|boolean
name|handleMessageOnInInterceptorCalled
parameter_list|()
block|{
return|return
name|testInInterceptor
operator|.
name|handleMessageCalled
argument_list|()
return|;
block|}
specifier|protected
name|boolean
name|faultInInterceptorCalled
parameter_list|()
block|{
return|return
name|testFaultInInterceptor
operator|.
name|handleMessageCalled
argument_list|()
return|;
block|}
block|}
annotation|@
name|Ignore
specifier|public
class|class
name|TestInInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|private
name|boolean
name|handleMessageCalled
decl_stmt|;
specifier|public
name|TestInInterceptor
parameter_list|()
block|{
name|this
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TestInInterceptor
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|super
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|handleMessageCalled
operator|=
literal|true
expr_stmt|;
block|}
specifier|protected
name|boolean
name|handleMessageCalled
parameter_list|()
block|{
return|return
name|handleMessageCalled
return|;
block|}
block|}
annotation|@
name|Ignore
specifier|public
class|class
name|TestOutInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|private
name|boolean
name|handleMessageCalled
decl_stmt|;
specifier|private
name|boolean
name|isBadOutInterceptor
decl_stmt|;
specifier|public
name|TestOutInterceptor
parameter_list|(
name|boolean
name|isBadOutInterceptor
parameter_list|)
block|{
name|this
argument_list|(
name|Phase
operator|.
name|PRE_MARSHAL
argument_list|)
expr_stmt|;
name|this
operator|.
name|isBadOutInterceptor
operator|=
name|isBadOutInterceptor
expr_stmt|;
block|}
specifier|public
name|TestOutInterceptor
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|super
argument_list|(
name|Phase
operator|.
name|PRE_MARSHAL
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|handleMessageCalled
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|isBadOutInterceptor
condition|)
block|{
throw|throw
operator|new
name|Fault
argument_list|(
operator|new
name|Exception
argument_list|(
literal|"fault from bad interceptor"
argument_list|)
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|boolean
name|handleMessageCalled
parameter_list|()
block|{
return|return
name|handleMessageCalled
return|;
block|}
block|}
annotation|@
name|Ignore
specifier|public
class|class
name|TestFaultInInterceptor
extends|extends
name|AbstractPhaseInterceptor
argument_list|<
name|Message
argument_list|>
block|{
specifier|private
name|boolean
name|handleMessageCalled
decl_stmt|;
specifier|public
name|TestFaultInInterceptor
parameter_list|()
block|{
name|this
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TestFaultInInterceptor
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|super
argument_list|(
name|Phase
operator|.
name|PRE_STREAM
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Fault
block|{
name|handleMessageCalled
operator|=
literal|true
expr_stmt|;
block|}
specifier|protected
name|boolean
name|handleMessageCalled
parameter_list|()
block|{
return|return
name|handleMessageCalled
return|;
block|}
block|}
block|}
end_class

end_unit

