begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"all"
argument_list|)
specifier|public
class|class
name|GenericRestServiceImpl
parameter_list|<
name|T
extends|extends
name|Book
parameter_list|,
name|PK
extends|extends
name|Long
parameter_list|>
implements|implements
name|IRestService
argument_list|<
name|T
argument_list|,
name|PK
argument_list|>
block|{
specifier|private
name|Map
name|entities
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|T
name|getById
parameter_list|(
name|PK
name|id
parameter_list|)
block|{
return|return
operator|(
name|T
operator|)
name|entities
operator|.
name|get
argument_list|(
operator|(
name|Long
operator|)
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PK
name|postEntity
parameter_list|(
name|T
name|instance
parameter_list|)
block|{
name|entities
operator|.
name|put
argument_list|(
literal|1L
argument_list|,
name|instance
argument_list|)
expr_stmt|;
return|return
operator|(
name|PK
operator|)
name|entities
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
return|;
block|}
block|}
end_class

end_unit

