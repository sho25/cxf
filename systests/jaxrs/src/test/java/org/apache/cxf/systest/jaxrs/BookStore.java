begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PreDestroy
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HEAD
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HeaderParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|MatrixParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|EntityTag
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|GenericEntity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|PathSegment
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|SecurityContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|StreamingOutput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlAdapter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlJavaTypeAdapter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|GZIP
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|ProxyHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|XMLUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|Oneway
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|SearchCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|search
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|phase
operator|.
name|PhaseInterceptorChain
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/bookstore"
argument_list|)
annotation|@
name|GZIP
argument_list|(
name|threshold
operator|=
literal|1
argument_list|)
specifier|public
class|class
name|BookStore
block|{
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|Book
argument_list|>
name|books
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Book
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|CD
argument_list|>
name|cds
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CD
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|long
name|bookId
init|=
literal|123
decl_stmt|;
specifier|private
name|long
name|cdId
init|=
literal|123
decl_stmt|;
specifier|private
name|String
name|currentBookId
decl_stmt|;
annotation|@
name|PathParam
argument_list|(
literal|"CDId"
argument_list|)
specifier|private
name|String
name|currentCdId
decl_stmt|;
annotation|@
name|Context
specifier|private
name|HttpHeaders
name|httpHeaders
decl_stmt|;
annotation|@
name|Context
specifier|private
name|SecurityContext
name|securityContext
decl_stmt|;
specifier|public
name|BookStore
parameter_list|()
block|{
name|init
argument_list|()
expr_stmt|;
block|}
annotation|@
name|PostConstruct
specifier|public
name|void
name|postConstruct
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"PostConstruct called"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PreDestroy
specifier|public
name|void
name|preDestroy
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"PreDestroy called"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"emptypost"
argument_list|)
specifier|public
name|void
name|emptypost
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"empty post"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"webappexception"
argument_list|)
specifier|public
name|Book
name|throwException
parameter_list|()
block|{
name|Response
name|response
init|=
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|entity
argument_list|(
literal|"This is a WebApplicationException"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|response
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"tempredirect"
argument_list|)
specifier|public
name|Response
name|tempRedirectAndSetCookies
parameter_list|()
block|{
name|URI
name|uri
init|=
name|UriBuilder
operator|.
name|fromPath
argument_list|(
literal|"whatever/redirection"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"css1"
argument_list|,
literal|"http://bar"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|Response
operator|.
name|temporaryRedirect
argument_list|(
name|uri
argument_list|)
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
literal|"a=b"
argument_list|)
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
literal|"c=d"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"setcookies"
argument_list|)
specifier|public
name|Response
name|setComplexCookies
parameter_list|()
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
literal|"bar.com.anoncart=107894933471602436; Domain=.bar.com;"
operator|+
literal|" Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"setmanycookies"
argument_list|)
specifier|public
name|Response
name|setTwoCookies
parameter_list|()
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
literal|"JSESSIONID=0475F7F30A26E5B0C15D69; Path=/"
argument_list|)
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
literal|"COOKIETWO=dummy; Expires=Sat, 20-Nov-2010 19:11:32 GMT; Path=/"
argument_list|)
operator|.
name|header
argument_list|(
literal|"Set-Cookie"
argument_list|,
literal|"COOKIETWO=dummy2; expires=Sat, 20-Nov-2010 19:11:32 GMT; Path=/"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"propagate-exception"
argument_list|)
specifier|public
name|Book
name|propogateException
parameter_list|()
throws|throws
name|BookNotFoundFault
block|{
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
literal|"Book Exception"
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"name-in-query"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getBookFromQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Book
argument_list|(
name|name
argument_list|,
literal|321L
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"propagate-exception2"
argument_list|)
specifier|public
name|Book
name|propogateException2
parameter_list|()
throws|throws
name|BookNotFoundFault
block|{
name|PhaseInterceptorChain
operator|.
name|getCurrentMessage
argument_list|()
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.propagate.exception"
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
literal|"Book Exception"
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"propagate-exception3"
argument_list|)
specifier|public
name|Book
name|propogateException3
parameter_list|()
throws|throws
name|BookNotFoundFault
block|{
name|PhaseInterceptorChain
operator|.
name|getCurrentMessage
argument_list|()
operator|.
name|getExchange
argument_list|()
operator|.
name|put
argument_list|(
literal|"org.apache.cxf.systest.for-out-fault-interceptor"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
literal|"Book Exception"
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"books/check/{id}"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/plain"
argument_list|)
specifier|public
name|boolean
name|checkBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|Long
name|id
parameter_list|)
block|{
return|return
name|books
operator|.
name|containsKey
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"books/check2"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/plain"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"text/plain"
argument_list|)
specifier|public
name|Boolean
name|checkBook2
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
return|return
name|books
operator|.
name|containsKey
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"timetable"
argument_list|)
specifier|public
name|Calendar
name|getTimetable
parameter_list|()
block|{
return|return
operator|new
name|GregorianCalendar
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"wrongparametertype"
argument_list|)
specifier|public
name|void
name|wrongParameterType
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"p"
argument_list|)
name|Map
name|p
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"This op is not expected to be invoked"
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"exceptionduringconstruction"
argument_list|)
specifier|public
name|void
name|wrongParameterType
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"p"
argument_list|)
name|BadBook
name|p
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"This op is not expected to be invoked"
argument_list|)
throw|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/unsupportedcontenttype"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|String
name|unsupportedContentType
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"This op is not expected to be invoked"
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/bookurl/{URL}/"
argument_list|)
specifier|public
name|Book
name|getBookByURL
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"URL"
argument_list|)
name|String
name|urlValue
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|url2
init|=
operator|new
name|URL
argument_list|(
name|urlValue
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|int
name|index
init|=
name|url2
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
return|return
name|doGetBook
argument_list|(
name|url2
operator|.
name|substring
argument_list|(
name|index
operator|+
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"post401"
argument_list|)
specifier|public
name|Response
name|get401WithText
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|Response
operator|.
name|status
argument_list|(
literal|401
argument_list|)
operator|.
name|entity
argument_list|(
literal|"This is 401"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/collections"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
literal|"application/xml"
block|,
literal|"application/json"
block|}
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
literal|"application/xml"
block|,
literal|"application/json"
block|}
argument_list|)
specifier|public
name|List
argument_list|<
name|Book
argument_list|>
name|getBookCollection
parameter_list|(
name|List
argument_list|<
name|Book
argument_list|>
name|bs
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|bs
operator|==
literal|null
operator|||
name|bs
operator|.
name|size
argument_list|()
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
return|return
name|bs
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/collections"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
literal|"application/xml"
block|,
literal|"application/json"
block|}
argument_list|)
specifier|public
name|List
argument_list|<
name|Book
argument_list|>
name|getBookCollection
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|(
name|books
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/array"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
index|[]
name|getBookArray
parameter_list|(
name|Book
index|[]
name|bs
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|bs
operator|==
literal|null
operator|||
name|bs
operator|.
name|length
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
return|return
name|bs
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/segment/{pathsegment}/"
argument_list|)
specifier|public
name|Book
name|getBookBySegment
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"pathsegment"
argument_list|)
name|PathSegment
name|segment
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
literal|"matrix2"
operator|.
name|equals
argument_list|(
name|segment
operator|.
name|getPath
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
name|segment
operator|.
name|getMatrixParameters
argument_list|()
decl_stmt|;
name|String
name|s1
init|=
name|map
operator|.
name|getFirst
argument_list|(
literal|"first"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|s2
init|=
name|map
operator|.
name|getFirst
argument_list|(
literal|"second"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
return|return
name|doGetBook
argument_list|(
name|s1
operator|+
name|s2
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/segment/list/{pathsegment:.+}/"
argument_list|)
specifier|public
name|Book
name|getBookBySegment
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"pathsegment"
argument_list|)
name|List
argument_list|<
name|PathSegment
argument_list|>
name|list
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|doGetBook
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
operator|+
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPath
argument_list|()
operator|+
name|list
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/segment/matrix"
argument_list|)
specifier|public
name|Book
name|getBookByMatrixParams
parameter_list|(
annotation|@
name|MatrixParam
argument_list|(
literal|"first"
argument_list|)
name|String
name|s1
parameter_list|,
annotation|@
name|MatrixParam
argument_list|(
literal|"second"
argument_list|)
name|String
name|s2
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|doGetBook
argument_list|(
name|s1
operator|+
name|s2
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/segment/matrix-list"
argument_list|)
specifier|public
name|Book
name|getBookByMatrixListParams
parameter_list|(
annotation|@
name|MatrixParam
argument_list|(
literal|"first"
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|list
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|list
operator|.
name|size
argument_list|()
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
return|return
name|doGetBook
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|+
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/bookheaders/"
argument_list|)
specifier|public
name|Book
name|getBookByHeader
parameter_list|(
annotation|@
name|HeaderParam
argument_list|(
literal|"BOOK"
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|ids
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|MediaType
argument_list|>
name|types
init|=
name|httpHeaders
operator|.
name|getAcceptableMediaTypes
argument_list|()
decl_stmt|;
if|if
condition|(
name|types
operator|.
name|size
argument_list|()
operator|!=
literal|2
operator|||
operator|!
literal|"text/xml"
operator|.
name|equals
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|||
operator|!
name|MediaType
operator|.
name|APPLICATION_XML_TYPE
operator|.
name|isCompatible
argument_list|(
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
name|List
argument_list|<
name|Locale
argument_list|>
name|locales
init|=
name|httpHeaders
operator|.
name|getAcceptableLanguages
argument_list|()
decl_stmt|;
if|if
condition|(
name|locales
operator|.
name|size
argument_list|()
operator|!=
literal|2
operator|||
operator|!
literal|"en"
operator|.
name|equals
argument_list|(
name|locales
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLanguage
argument_list|()
argument_list|)
operator|||
operator|!
literal|"da"
operator|.
name|equals
argument_list|(
name|locales
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLanguage
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Cookie
argument_list|>
name|cookies
init|=
name|httpHeaders
operator|.
name|getCookies
argument_list|()
decl_stmt|;
if|if
condition|(
name|cookies
operator|.
name|size
argument_list|()
operator|!=
literal|3
operator|||
operator|!
name|cookies
operator|.
name|containsKey
argument_list|(
literal|"a"
argument_list|)
operator|||
operator|!
name|cookies
operator|.
name|containsKey
argument_list|(
literal|"c"
argument_list|)
operator|||
operator|!
name|cookies
operator|.
name|containsKey
argument_list|(
literal|"e"
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|cookiesList
init|=
name|httpHeaders
operator|.
name|getRequestHeader
argument_list|(
name|HttpHeaders
operator|.
name|COOKIE
argument_list|)
decl_stmt|;
if|if
condition|(
name|cookiesList
operator|.
name|size
argument_list|()
operator|!=
literal|3
operator|||
operator|!
name|cookiesList
operator|.
name|contains
argument_list|(
literal|"a=b"
argument_list|)
operator|||
operator|!
name|cookiesList
operator|.
name|contains
argument_list|(
literal|"c=d"
argument_list|)
operator|||
operator|!
name|cookiesList
operator|.
name|contains
argument_list|(
literal|"e=f"
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
return|return
name|doGetBook
argument_list|(
name|ids
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|+
name|ids
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|+
name|ids
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/bookheaders2/"
argument_list|)
specifier|public
name|Book
name|getBookByHeader
parameter_list|(
annotation|@
name|DefaultValue
argument_list|(
literal|"123"
argument_list|)
annotation|@
name|HeaderParam
argument_list|(
literal|"BOOK2"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/getheadbook/"
argument_list|)
specifier|public
name|Book
name|getBookGetHead
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|doGetBook
argument_list|(
literal|"123"
argument_list|)
return|;
block|}
annotation|@
name|HEAD
annotation|@
name|Path
argument_list|(
literal|"/getheadbook/"
argument_list|)
specifier|public
name|Response
name|getBookGetHead2
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|header
argument_list|(
literal|"HEAD_HEADER"
argument_list|,
literal|"HEAD_HEADER_VALUE"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/bookquery"
argument_list|)
specifier|public
name|Book
name|getBookByURLQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"urlid"
argument_list|)
name|String
name|urlValue
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|url2
init|=
operator|new
name|URL
argument_list|(
name|urlValue
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|int
name|index
init|=
name|url2
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
return|return
name|doGetBook
argument_list|(
name|url2
operator|.
name|substring
argument_list|(
name|index
operator|+
literal|1
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/bookidarray"
argument_list|)
specifier|public
name|Book
name|getBookByURLQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"id"
argument_list|)
name|String
index|[]
name|ids
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ids
operator|==
literal|null
operator|||
name|ids
operator|.
name|length
operator|!=
literal|3
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
return|return
name|doGetBook
argument_list|(
name|ids
index|[
literal|0
index|]
operator|+
name|ids
index|[
literal|1
index|]
operator|+
name|ids
index|[
literal|2
index|]
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/securebooks/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getSecureBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
if|if
condition|(
operator|!
name|securityContext
operator|.
name|isSecure
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|status
argument_list|(
literal|403
argument_list|)
operator|.
name|entity
argument_list|(
literal|"Unsecure link"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/genericbooks/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|GenericEntity
argument_list|<
name|GenericHandler
argument_list|<
name|Book
argument_list|>
argument_list|>
name|getGenericBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
operator|new
name|GenericEntity
argument_list|<
name|GenericHandler
argument_list|<
name|Book
argument_list|>
argument_list|>
argument_list|(
operator|new
name|GenericHandler
argument_list|<
name|Book
argument_list|>
argument_list|(
name|doGetBook
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
block|{ }
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/genericresponse/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Response
name|getGenericResponseBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|getGenericBook
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/response/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Response
name|getBookAsResponse
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|Book
name|entity
init|=
name|doGetBook
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|EntityTag
name|etag
init|=
operator|new
name|EntityTag
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|entity
operator|.
name|hashCode
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|tag
argument_list|(
name|etag
argument_list|)
operator|.
name|entity
argument_list|(
name|entity
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/cglib"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getBookCGLIB
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|createCglibProxy
argument_list|(
name|doGetBook
argument_list|(
name|id
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/the books/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getBookWithSpace
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/search"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getBook
parameter_list|(
annotation|@
name|Context
name|SearchContext
name|searchContext
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|SearchCondition
argument_list|<
name|Book
argument_list|>
name|sc
init|=
name|searchContext
operator|.
name|getCondition
argument_list|(
name|Book
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|sc
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
literal|"Search exception"
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|Book
argument_list|>
name|found
init|=
name|sc
operator|.
name|findAll
argument_list|(
name|books
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|found
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
literal|"Single book is expected"
argument_list|)
throw|;
block|}
return|return
name|found
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
specifier|public
name|Book
name|getBookTextXml
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/wrapper/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|BookWrapper
name|getWrappedBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|Long
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|BookWrapper
name|bw
init|=
operator|new
name|BookWrapper
argument_list|()
decl_stmt|;
name|Book
name|b
init|=
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|99999L
argument_list|)
decl_stmt|;
name|bw
operator|.
name|setBook
argument_list|(
name|b
argument_list|)
expr_stmt|;
return|return
name|bw
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/wrapper2/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Book
name|getWrappedBook2
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|Long
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
operator|new
name|Book
argument_list|(
literal|"CXF in Action"
argument_list|,
literal|99999L
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"books/custom/{bookId:\\d\\d\\d}"
argument_list|)
specifier|public
name|Book
name|getBookCustom
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/query"
argument_list|)
specifier|public
name|Book
name|getBookQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"bookId"
argument_list|)
name|long
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|Long
operator|.
name|toString
argument_list|(
name|id
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/defaultquery"
argument_list|)
specifier|public
name|Book
name|getDefaultBookQuery
parameter_list|(
annotation|@
name|DefaultValue
argument_list|(
literal|"123"
argument_list|)
annotation|@
name|QueryParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/missingquery"
argument_list|)
specifier|public
name|Book
name|getBookMissingQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"bookId"
argument_list|)
name|long
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
if|if
condition|(
name|id
operator|!=
literal|0
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
return|return
name|doGetBook
argument_list|(
literal|"123"
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/element"
argument_list|)
specifier|public
name|JAXBElement
argument_list|<
name|Book
argument_list|>
name|getBookElement
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|JAXBElement
argument_list|<
name|Book
argument_list|>
argument_list|(
operator|new
name|QName
argument_list|(
literal|""
argument_list|,
literal|"Book"
argument_list|)
argument_list|,
name|Book
operator|.
name|class
argument_list|,
name|doGetBook
argument_list|(
literal|"123"
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/adapter"
argument_list|)
annotation|@
name|XmlJavaTypeAdapter
argument_list|(
name|BookInfoAdapter
operator|.
name|class
argument_list|)
specifier|public
name|BookInfo
name|getBookAdapter
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|BookInfo
argument_list|(
name|doGetBook
argument_list|(
literal|"123"
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/books/adapter-list"
argument_list|)
annotation|@
name|XmlJavaTypeAdapter
argument_list|(
name|BookInfoAdapterList
operator|.
name|class
argument_list|)
specifier|public
name|Set
argument_list|<
name|Book
argument_list|>
name|getBookAdapterList
parameter_list|(
name|Set
argument_list|<
name|Book
argument_list|>
name|collection
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|collection
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|(
literal|400
argument_list|)
throw|;
block|}
return|return
name|Collections
operator|.
name|singleton
argument_list|(
name|doGetBook
argument_list|(
name|Long
operator|.
name|toString
argument_list|(
name|collection
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/interface/adapter"
argument_list|)
specifier|public
name|BookInfoInterface
name|getBookAdapter2
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|BookInfo2
argument_list|(
name|doGetBook
argument_list|(
literal|"123"
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
specifier|public
name|void
name|setBookId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|currentBookId
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/json;q=0.9"
argument_list|)
specifier|public
name|Book
name|getBookAsJSON
parameter_list|()
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|currentBookId
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/buffer"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/bar"
argument_list|)
specifier|public
name|InputStream
name|getBufferedBook
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/expected_get_book123.txt"
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/fail-early"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/bar"
argument_list|)
specifier|public
name|StreamingOutput
name|failEarlyInWrite
parameter_list|()
block|{
return|return
operator|new
name|StreamingOutputImpl
argument_list|(
literal|true
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/fail-late"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/bar"
argument_list|)
specifier|public
name|StreamingOutput
name|writeToStreamAndFail
parameter_list|()
block|{
return|return
operator|new
name|StreamingOutputImpl
argument_list|(
literal|false
argument_list|)
return|;
block|}
specifier|private
name|Book
name|doGetBook
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|book
operator|!=
literal|null
condition|)
block|{
return|return
name|book
return|;
block|}
else|else
block|{
name|BookNotFoundDetails
name|details
init|=
operator|new
name|BookNotFoundDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
name|details
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Path
argument_list|(
literal|"/booksubresource/{bookId}/"
argument_list|)
specifier|public
name|Book
name|getBookSubResource
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|book
operator|!=
literal|null
condition|)
block|{
return|return
name|book
return|;
block|}
else|else
block|{
name|BookNotFoundDetails
name|details
init|=
operator|new
name|BookNotFoundDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
name|details
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Path
argument_list|(
literal|"/booksubresourceobject/{bookId}/"
argument_list|)
specifier|public
name|Object
name|getBookSubResourceObject
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|getBookSubResource
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/booknames/{bookId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/*"
argument_list|)
specifier|public
name|String
name|getBookName
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|int
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|book
operator|!=
literal|null
condition|)
block|{
return|return
name|book
operator|.
name|getName
argument_list|()
return|;
block|}
else|else
block|{
name|BookNotFoundDetails
name|details
init|=
operator|new
name|BookNotFoundDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
name|details
argument_list|)
throw|;
block|}
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/books"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Response
name|addBook
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
name|String
name|ct1
init|=
name|httpHeaders
operator|.
name|getMediaType
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|ct2
init|=
name|httpHeaders
operator|.
name|getRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|ct3
init|=
name|httpHeaders
operator|.
name|getRequestHeaders
argument_list|()
operator|.
name|getFirst
argument_list|(
literal|"Content-Type"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
literal|"application/xml"
operator|.
name|equals
argument_list|(
name|ct1
argument_list|)
operator|&&
name|ct1
operator|.
name|equals
argument_list|(
name|ct2
argument_list|)
operator|&&
name|ct1
operator|.
name|equals
argument_list|(
name|ct3
argument_list|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unexpected content type"
argument_list|)
throw|;
block|}
name|book
operator|.
name|setId
argument_list|(
name|bookId
operator|+
literal|1
argument_list|)
expr_stmt|;
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|book
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/oneway"
argument_list|)
annotation|@
name|Oneway
specifier|public
name|void
name|onewayRequest
parameter_list|()
block|{
if|if
condition|(
operator|!
name|PhaseInterceptorChain
operator|.
name|getCurrentMessage
argument_list|()
operator|.
name|getExchange
argument_list|()
operator|.
name|isOneWay
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/books/customstatus"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"text/xml"
argument_list|)
specifier|public
name|Book
name|addBookCustomFailure
parameter_list|(
name|Book
name|book
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|response
parameter_list|)
block|{
name|response
operator|.
name|setStatus
argument_list|(
literal|233
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"CustomHeader"
argument_list|,
literal|"CustomValue"
argument_list|)
expr_stmt|;
name|book
operator|.
name|setId
argument_list|(
literal|888
argument_list|)
expr_stmt|;
return|return
name|book
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/booksinfo"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Response
name|addBook
parameter_list|(
annotation|@
name|XmlJavaTypeAdapter
argument_list|(
name|BookInfoAdapter
operator|.
name|class
argument_list|)
name|BookInfo
name|bookInfo
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|bookInfo
operator|.
name|asBook
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/binarybooks"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/xml"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/octet-stream"
argument_list|)
specifier|public
name|Response
name|addBinaryBook
parameter_list|(
name|long
index|[]
name|book
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|book
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/books/"
argument_list|)
specifier|public
name|Response
name|updateBook
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/books/{id}"
argument_list|)
specifier|public
name|Response
name|createBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|Long
name|id
parameter_list|)
block|{
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|==
literal|null
condition|)
block|{
name|Book
name|newBook
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|newBook
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|books
operator|.
name|put
argument_list|(
name|newBook
operator|.
name|getId
argument_list|()
argument_list|,
name|newBook
argument_list|)
expr_stmt|;
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/bookswithdom/"
argument_list|)
specifier|public
name|DOMSource
name|updateBook
parameter_list|(
name|DOMSource
name|ds
parameter_list|)
block|{
name|XMLUtils
operator|.
name|printDOM
argument_list|(
name|ds
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ds
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/bookswithjson/"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|Response
name|updateBookJSON
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
specifier|public
name|Response
name|deleteBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
block|{
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"/books/id"
argument_list|)
specifier|public
name|Response
name|deleteWithQuery
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"value"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
literal|"-1"
argument_list|)
name|int
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|!=
literal|123
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|()
throw|;
block|}
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/booksplain"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"text/plain"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/plain"
argument_list|)
specifier|public
name|Long
name|echoBookId
parameter_list|(
name|long
name|theBookId
parameter_list|)
block|{
return|return
operator|new
name|Long
argument_list|(
name|theBookId
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/booksecho"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"text/plain"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/plain"
argument_list|)
specifier|public
name|Response
name|echoBookNameAndHeader
parameter_list|(
annotation|@
name|HeaderParam
argument_list|(
literal|"CustomHeader"
argument_list|)
name|String
name|headerValue
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|entity
argument_list|(
name|name
argument_list|)
operator|.
name|header
argument_list|(
literal|"CustomHeader"
argument_list|,
name|headerValue
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Path
argument_list|(
literal|"/bookstoresub"
argument_list|)
specifier|public
name|BookStore
name|echoThroughBookStoreSub
parameter_list|()
block|{
return|return
name|this
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/booksecho2"
argument_list|)
annotation|@
name|Consumes
argument_list|(
literal|"text/plain"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"text/plain"
argument_list|)
specifier|public
name|Response
name|echoBookNameAndHeader2
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|echoBookNameAndHeader
argument_list|(
name|httpHeaders
operator|.
name|getRequestHeader
argument_list|(
literal|"CustomHeader"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|name
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cd/{CDId}/"
argument_list|)
specifier|public
name|CD
name|getCD
parameter_list|()
block|{
name|CD
name|cd
init|=
name|cds
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|currentCdId
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|cd
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cdwithmultitypes/{CDId}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
literal|"application/xml"
block|,
literal|"application/bar+xml"
block|,
literal|"application/json"
block|}
argument_list|)
specifier|public
name|CD
name|getCDWithMultiContentTypes
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"CDId"
argument_list|)
name|String
name|id
parameter_list|)
block|{
name|CD
name|cd
init|=
name|cds
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|cd
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cds/"
argument_list|)
specifier|public
name|CDs
name|getCDs
parameter_list|()
block|{
name|CDs
name|c
init|=
operator|new
name|CDs
argument_list|()
decl_stmt|;
name|c
operator|.
name|setCD
argument_list|(
name|cds
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|c
return|;
block|}
annotation|@
name|Path
argument_list|(
literal|"/interface"
argument_list|)
specifier|public
name|BookSubresource
name|getBookFromSubresource
parameter_list|()
block|{
return|return
operator|new
name|BookSubresourceImpl
argument_list|()
return|;
block|}
specifier|final
name|void
name|init
parameter_list|()
block|{
name|Book
name|book
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|book
operator|.
name|setId
argument_list|(
name|bookId
argument_list|)
expr_stmt|;
name|book
operator|.
name|setName
argument_list|(
literal|"CXF in Action"
argument_list|)
expr_stmt|;
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|CD
name|cd
init|=
operator|new
name|CD
argument_list|()
decl_stmt|;
name|cd
operator|.
name|setId
argument_list|(
name|cdId
argument_list|)
expr_stmt|;
name|cd
operator|.
name|setName
argument_list|(
literal|"BOHEMIAN RHAPSODY"
argument_list|)
expr_stmt|;
name|cds
operator|.
name|put
argument_list|(
name|cd
operator|.
name|getId
argument_list|()
argument_list|,
name|cd
argument_list|)
expr_stmt|;
name|CD
name|cd1
init|=
operator|new
name|CD
argument_list|()
decl_stmt|;
name|cd1
operator|.
name|setId
argument_list|(
operator|++
name|cdId
argument_list|)
expr_stmt|;
name|cd1
operator|.
name|setName
argument_list|(
literal|"BICYCLE RACE"
argument_list|)
expr_stmt|;
name|cds
operator|.
name|put
argument_list|(
name|cd1
operator|.
name|getId
argument_list|()
argument_list|,
name|cd1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|XmlJavaTypeAdapter
argument_list|(
name|BookInfoAdapter
operator|.
name|class
argument_list|)
specifier|private
specifier|static
interface|interface
name|BookInfoInterface
block|{
name|String
name|getName
parameter_list|()
function_decl|;
name|long
name|getId
parameter_list|()
function_decl|;
block|}
specifier|static
class|class
name|BookInfo
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|long
name|id
decl_stmt|;
specifier|public
name|BookInfo
parameter_list|()
block|{                      }
specifier|public
name|BookInfo
parameter_list|(
name|Book
name|b
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|b
operator|.
name|getName
argument_list|()
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|b
operator|.
name|getId
argument_list|()
expr_stmt|;
if|if
condition|(
name|id
operator|==
literal|0
condition|)
block|{
name|id
operator|=
literal|124
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|long
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|Book
name|asBook
parameter_list|()
block|{
name|Book
name|b
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|b
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|b
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|b
return|;
block|}
block|}
specifier|static
class|class
name|BookInfo2
extends|extends
name|BookInfo
implements|implements
name|BookInfoInterface
block|{
specifier|public
name|BookInfo2
parameter_list|()
block|{                      }
specifier|public
name|BookInfo2
parameter_list|(
name|Book
name|b
parameter_list|)
block|{
name|super
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|BookInfoAdapterList
extends|extends
name|XmlAdapter
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|,
name|Set
argument_list|<
name|Book
argument_list|>
argument_list|>
block|{
specifier|public
name|List
name|marshal
parameter_list|(
name|Set
argument_list|<
name|Book
argument_list|>
name|set
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|Book
argument_list|>
argument_list|(
name|set
argument_list|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Book
argument_list|>
name|unmarshal
parameter_list|(
name|List
argument_list|<
name|Book
argument_list|>
name|list
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|HashSet
argument_list|<
name|Book
argument_list|>
argument_list|(
name|list
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|BookInfoAdapter
extends|extends
name|XmlAdapter
argument_list|<
name|Book
argument_list|,
name|BookInfo
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|Book
name|marshal
parameter_list|(
name|BookInfo
name|v
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|Book
argument_list|(
name|v
operator|.
name|getName
argument_list|()
argument_list|,
name|v
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|BookInfo
name|unmarshal
parameter_list|(
name|Book
name|b
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|BookInfo
argument_list|(
name|b
argument_list|)
return|;
block|}
block|}
specifier|static
class|class
name|BadBook
block|{
specifier|public
name|BadBook
parameter_list|(
name|String
name|s
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"The bad book"
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
class|class
name|StreamingOutputImpl
implements|implements
name|StreamingOutput
block|{
specifier|private
name|boolean
name|failEarly
decl_stmt|;
specifier|public
name|StreamingOutputImpl
parameter_list|(
name|boolean
name|failEarly
parameter_list|)
block|{
name|this
operator|.
name|failEarly
operator|=
name|failEarly
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|OutputStream
name|output
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
if|if
condition|(
name|failEarly
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|status
argument_list|(
literal|410
argument_list|)
operator|.
name|type
argument_list|(
literal|"text/plain"
argument_list|)
operator|.
name|entity
argument_list|(
literal|"This is supposed to go on the wire"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
throw|;
block|}
else|else
block|{
name|output
operator|.
name|write
argument_list|(
literal|"This is not supposed to go on the wire"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
literal|410
argument_list|)
throw|;
block|}
block|}
block|}
specifier|private
name|Book
name|createCglibProxy
parameter_list|(
specifier|final
name|Book
name|book
parameter_list|)
block|{
specifier|final
name|InvocationHandler
name|handler
init|=
operator|new
name|InvocationHandler
argument_list|()
block|{
specifier|public
name|Object
name|invoke
parameter_list|(
name|Object
name|object
parameter_list|,
name|Method
name|method
parameter_list|,
name|Object
index|[]
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
return|return
name|method
operator|.
name|invoke
argument_list|(
name|book
argument_list|,
name|args
argument_list|)
return|;
block|}
block|}
decl_stmt|;
return|return
operator|(
name|Book
operator|)
name|ProxyHelper
operator|.
name|getProxy
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Book
operator|.
name|class
block|}
argument_list|,
name|handler
argument_list|)
return|;
block|}
block|}
end_class

end_unit

