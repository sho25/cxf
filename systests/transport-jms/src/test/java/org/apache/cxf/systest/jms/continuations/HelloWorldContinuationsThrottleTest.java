begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jms
operator|.
name|continuations
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ArrayBlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadPoolExecutor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jms
operator|.
name|AbstractVmJMSTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|HelloWorldContinuationsThrottleTest
extends|extends
name|AbstractVmJMSTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|WSDL_PATH
init|=
literal|"org/apache/cxf/systest/jms/continuations/test.wsdl"
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|startBusAndJMS
argument_list|(
name|HelloWorldContinuationsThrottleTest
operator|.
name|class
argument_list|)
expr_stmt|;
name|publish
argument_list|(
literal|"jms:queue:test.jmstransport.text?replyToQueueName=test.jmstransport.text.reply"
argument_list|,
operator|new
name|HelloWorldWithContinuationsJMS2
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testThrottleContinuations
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|serviceName
init|=
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/systest/jaxws"
argument_list|,
literal|"HelloContinuationService"
argument_list|)
decl_stmt|;
name|URL
name|wsdlURL
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
name|WSDL_PATH
argument_list|)
decl_stmt|;
name|HelloContinuationService
name|service
init|=
operator|new
name|HelloContinuationService
argument_list|(
name|wsdlURL
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
specifier|final
name|HelloContinuation
name|helloPort
init|=
name|markForClose
argument_list|(
name|service
operator|.
name|getPort
argument_list|(
name|HelloContinuation
operator|.
name|class
argument_list|,
name|cff
argument_list|)
argument_list|)
decl_stmt|;
name|ThreadPoolExecutor
name|executor
init|=
operator|new
name|ThreadPoolExecutor
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
operator|new
name|ArrayBlockingQueue
argument_list|<
name|Runnable
argument_list|>
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|CountDownLatch
name|startSignal
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|CountDownLatch
name|helloDoneSignal
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|executor
operator|.
name|execute
argument_list|(
operator|new
name|HelloWorker
argument_list|(
name|helloPort
argument_list|,
literal|"Fred"
argument_list|,
literal|""
argument_list|,
name|startSignal
argument_list|,
name|helloDoneSignal
argument_list|)
argument_list|)
expr_stmt|;
name|startSignal
operator|.
name|countDown
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|executor
operator|.
name|execute
argument_list|(
operator|new
name|HelloWorker
argument_list|(
name|helloPort
argument_list|,
literal|"Barry"
argument_list|,
literal|"Jameson"
argument_list|,
name|startSignal
argument_list|,
name|helloDoneSignal
argument_list|)
argument_list|)
expr_stmt|;
name|executor
operator|.
name|execute
argument_list|(
operator|new
name|HelloWorker
argument_list|(
name|helloPort
argument_list|,
literal|"Harry"
argument_list|,
literal|""
argument_list|,
name|startSignal
argument_list|,
name|helloDoneSignal
argument_list|)
argument_list|)
expr_stmt|;
name|executor
operator|.
name|execute
argument_list|(
operator|new
name|HelloWorker
argument_list|(
name|helloPort
argument_list|,
literal|"Rob"
argument_list|,
literal|"Davidson"
argument_list|,
name|startSignal
argument_list|,
name|helloDoneSignal
argument_list|)
argument_list|)
expr_stmt|;
name|executor
operator|.
name|execute
argument_list|(
operator|new
name|HelloWorker
argument_list|(
name|helloPort
argument_list|,
literal|"James"
argument_list|,
literal|"ServiceMix"
argument_list|,
name|startSignal
argument_list|,
name|helloDoneSignal
argument_list|)
argument_list|)
expr_stmt|;
name|helloDoneSignal
operator|.
name|await
argument_list|(
literal|60
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|executor
operator|.
name|shutdownNow
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Some invocations are still running"
argument_list|,
literal|0
argument_list|,
name|helloDoneSignal
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

