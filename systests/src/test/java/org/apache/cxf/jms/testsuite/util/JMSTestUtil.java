begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jms
operator|.
name|testsuite
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|DeliveryMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testsuite
operator|.
name|testcase
operator|.
name|TestCaseType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testsuite
operator|.
name|testcase
operator|.
name|TestCasesType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSOldConfigHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JNDIConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|uri
operator|.
name|JMSEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|uri
operator|.
name|JMSEndpointParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|uri
operator|.
name|JMSURIConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|JmsTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|MessageCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|support
operator|.
name|destination
operator|.
name|JndiDestinationResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jndi
operator|.
name|JndiTemplate
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|JMSTestUtil
block|{
specifier|private
specifier|static
name|TestCasesType
name|testcases
decl_stmt|;
specifier|private
name|JMSTestUtil
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|createSession
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
name|JMSEndpoint
name|endpoint
init|=
name|JMSEndpointParser
operator|.
name|createEndpoint
argument_list|(
name|address
argument_list|)
decl_stmt|;
try|try
block|{
name|JmsTemplate
name|jmsTemplate
init|=
name|JMSFactory
operator|.
name|createJmsTemplate
argument_list|(
name|getInitJMSConfiguration
argument_list|(
name|address
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Destination
name|dest
init|=
name|JMSFactory
operator|.
name|resolveOrCreateDestination
argument_list|(
name|jmsTemplate
argument_list|,
name|endpoint
operator|.
name|getDestinationName
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|jmsTemplate
operator|.
name|send
argument_list|(
name|dest
argument_list|,
operator|new
name|MessageCreator
argument_list|()
block|{
specifier|public
name|Message
name|createMessage
parameter_list|(
name|Session
name|session
parameter_list|)
throws|throws
name|JMSException
block|{
name|TextMessage
name|message
init|=
name|session
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setText
argument_list|(
literal|"This is message "
operator|+
literal|1
argument_list|)
expr_stmt|;
return|return
name|message
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Exception occurred: "
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|TestCaseType
argument_list|>
name|getTestCases
parameter_list|()
block|{
try|try
block|{
if|if
condition|(
name|testcases
operator|==
literal|null
condition|)
block|{
name|loadTestCases
argument_list|()
expr_stmt|;
block|}
return|return
name|testcases
operator|.
name|getTestCase
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|ArrayList
argument_list|<
name|TestCaseType
argument_list|>
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|TestCaseType
name|getTestCase
parameter_list|(
name|String
name|testId
parameter_list|)
block|{
if|if
condition|(
name|testId
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Iterator
argument_list|<
name|TestCaseType
argument_list|>
name|iter
init|=
name|getTestCases
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|TestCaseType
name|testcase
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|testId
operator|.
name|equals
argument_list|(
name|testcase
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|testcase
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
specifier|static
name|void
name|loadTestCases
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
literal|"org.apache.cxf.testsuite.testcase"
argument_list|)
decl_stmt|;
name|Unmarshaller
name|unmarshaller
init|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
name|JAXBElement
name|e
init|=
operator|(
name|JAXBElement
operator|)
name|unmarshaller
operator|.
name|unmarshal
argument_list|(
operator|new
name|JMSTestUtil
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/cxf/jms/testsuite/util/testcases.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|testcases
operator|=
operator|(
name|TestCasesType
operator|)
name|e
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|JmsTemplate
name|getJmsTemplate
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|JMSFactory
operator|.
name|createJmsTemplate
argument_list|(
name|getInitJMSConfiguration
argument_list|(
name|address
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Destination
name|getJmsDestination
parameter_list|(
name|JmsTemplate
name|jmsTemplate
parameter_list|,
name|String
name|destinationName
parameter_list|,
name|boolean
name|pubSubDomain
parameter_list|)
block|{
return|return
name|JMSFactory
operator|.
name|resolveOrCreateDestination
argument_list|(
name|jmsTemplate
argument_list|,
name|destinationName
argument_list|,
name|pubSubDomain
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|JMSConfiguration
name|getInitJMSConfiguration
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
name|JMSEndpoint
name|endpoint
init|=
name|JMSEndpointParser
operator|.
name|createEndpoint
argument_list|(
name|address
argument_list|)
decl_stmt|;
name|JMSConfiguration
name|jmsConfig
init|=
operator|new
name|JMSConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|endpoint
operator|.
name|isSetDeliveryMode
argument_list|()
condition|)
block|{
name|int
name|deliveryMode
init|=
name|endpoint
operator|.
name|getDeliveryMode
argument_list|()
operator|.
name|equals
argument_list|(
name|JMSURIConstants
operator|.
name|DELIVERYMODE_PERSISTENT
argument_list|)
condition|?
name|DeliveryMode
operator|.
name|PERSISTENT
else|:
name|DeliveryMode
operator|.
name|NON_PERSISTENT
decl_stmt|;
name|jmsConfig
operator|.
name|setDeliveryMode
argument_list|(
name|deliveryMode
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|endpoint
operator|.
name|isSetPriority
argument_list|()
condition|)
block|{
name|int
name|priority
init|=
name|endpoint
operator|.
name|getPriority
argument_list|()
decl_stmt|;
name|jmsConfig
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|endpoint
operator|.
name|isSetTimeToLive
argument_list|()
condition|)
block|{
name|long
name|timeToLive
init|=
name|endpoint
operator|.
name|getTimeToLive
argument_list|()
decl_stmt|;
name|jmsConfig
operator|.
name|setTimeToLive
argument_list|(
name|timeToLive
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|jmsConfig
operator|.
name|isUsingEndpointInfo
argument_list|()
condition|)
block|{
name|JndiTemplate
name|jt
init|=
operator|new
name|JndiTemplate
argument_list|()
decl_stmt|;
name|jt
operator|.
name|setEnvironment
argument_list|(
name|JMSOldConfigHolder
operator|.
name|getInitialContextEnv
argument_list|(
name|endpoint
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|pubSubDomain
init|=
literal|false
decl_stmt|;
name|pubSubDomain
operator|=
name|endpoint
operator|.
name|getJmsVariant
argument_list|()
operator|.
name|equals
argument_list|(
name|JMSURIConstants
operator|.
name|TOPIC
argument_list|)
expr_stmt|;
name|JNDIConfiguration
name|jndiConfig
init|=
operator|new
name|JNDIConfiguration
argument_list|()
decl_stmt|;
name|jndiConfig
operator|.
name|setJndiConnectionFactoryName
argument_list|(
name|endpoint
operator|.
name|getJndiConnectionFactoryName
argument_list|()
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setJndiTemplate
argument_list|(
name|jt
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setJndiConfig
argument_list|(
name|jndiConfig
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setExplicitQosEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setPubSubDomain
argument_list|(
name|pubSubDomain
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setPubSubNoLocal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boolean
name|useJndi
init|=
name|endpoint
operator|.
name|getJmsVariant
argument_list|()
operator|.
name|equals
argument_list|(
name|JMSURIConstants
operator|.
name|JNDI
argument_list|)
decl_stmt|;
if|if
condition|(
name|useJndi
condition|)
block|{
comment|// Setup Destination jndi destination resolver
specifier|final
name|JndiDestinationResolver
name|jndiDestinationResolver
init|=
operator|new
name|JndiDestinationResolver
argument_list|()
decl_stmt|;
name|jndiDestinationResolver
operator|.
name|setJndiTemplate
argument_list|(
name|jt
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setDestinationResolver
argument_list|(
name|jndiDestinationResolver
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setTargetDestination
argument_list|(
name|endpoint
operator|.
name|getDestinationName
argument_list|()
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setReplyDestination
argument_list|(
name|endpoint
operator|.
name|getReplyToName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Use the default dynamic destination resolver
name|jmsConfig
operator|.
name|setTargetDestination
argument_list|(
name|endpoint
operator|.
name|getDestinationName
argument_list|()
argument_list|)
expr_stmt|;
name|jmsConfig
operator|.
name|setReplyDestination
argument_list|(
name|endpoint
operator|.
name|getReplyToName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|jmsConfig
return|;
block|}
block|}
end_class

end_unit

