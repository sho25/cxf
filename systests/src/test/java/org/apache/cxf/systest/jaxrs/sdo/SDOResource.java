begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|sdo
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|sdo
operator|.
name|impl
operator|.
name|StructureImpl
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/structures"
argument_list|)
specifier|public
class|class
name|SDOResource
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/structure"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
literal|"application/xml"
block|,
literal|"application/json"
block|}
argument_list|)
specifier|public
name|Structure
name|getStructure
parameter_list|()
block|{
name|Structure
name|struct
init|=
operator|new
name|StructureImpl
argument_list|()
decl_stmt|;
name|struct
operator|.
name|getTexts
argument_list|()
operator|.
name|add
argument_list|(
literal|"text1"
argument_list|)
expr_stmt|;
name|struct
operator|.
name|setText
argument_list|(
literal|"sdo"
argument_list|)
expr_stmt|;
name|struct
operator|.
name|setInt
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|struct
operator|.
name|setDbl
argument_list|(
literal|123.5
argument_list|)
expr_stmt|;
return|return
name|struct
return|;
block|}
block|}
end_class

end_unit

