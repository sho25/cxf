begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ConsumeMime
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ProduceMime
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|book
operator|.
name|BookNotFoundDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|customer
operator|.
name|book
operator|.
name|BookNotFoundFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|XMLUtils
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/bookstore/"
argument_list|)
specifier|public
class|class
name|BookStore
block|{
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|Book
argument_list|>
name|books
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Book
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|CD
argument_list|>
name|cds
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CD
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|long
name|bookId
init|=
literal|123
decl_stmt|;
specifier|private
name|long
name|cdId
init|=
literal|123
decl_stmt|;
specifier|public
name|BookStore
parameter_list|()
block|{
name|init
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----books: "
operator|+
name|books
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"webappexception"
argument_list|)
specifier|public
name|Book
name|throwException
parameter_list|()
block|{
name|Response
name|response
init|=
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|entity
argument_list|(
literal|"This is a WebApplicationException"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|response
argument_list|)
throw|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"timetable"
argument_list|)
specifier|public
name|Calendar
name|getTimetable
parameter_list|()
block|{
return|return
operator|new
name|GregorianCalendar
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
specifier|public
name|Book
name|getBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books"
argument_list|)
specifier|public
name|Books
name|getBooks
parameter_list|()
block|{
return|return
operator|new
name|Books
argument_list|(
name|books
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
annotation|@
name|ProduceMime
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|Book
name|getBookAsJSON
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
return|return
name|doGetBook
argument_list|(
name|id
argument_list|)
return|;
block|}
specifier|private
name|Book
name|doGetBook
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking getBook with id: "
operator|+
name|id
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|book
operator|!=
literal|null
condition|)
block|{
return|return
name|book
return|;
block|}
else|else
block|{
name|BookNotFoundDetails
name|details
init|=
operator|new
name|BookNotFoundDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
name|details
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Path
argument_list|(
literal|"/booksubresource/{bookId}/"
argument_list|)
specifier|public
name|Book
name|getBookSubResource
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking getBookSubResource with id: "
operator|+
name|id
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|book
operator|!=
literal|null
condition|)
block|{
return|return
name|book
return|;
block|}
else|else
block|{
name|BookNotFoundDetails
name|details
init|=
operator|new
name|BookNotFoundDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
name|details
argument_list|)
throw|;
block|}
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/booknames/{bookId}/"
argument_list|)
annotation|@
name|ProduceMime
argument_list|(
literal|"text/*"
argument_list|)
specifier|public
name|String
name|getBookName
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|int
name|id
parameter_list|)
throws|throws
name|BookNotFoundFault
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking getBookName with id: "
operator|+
name|id
argument_list|)
expr_stmt|;
name|Book
name|book
init|=
name|books
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|book
operator|!=
literal|null
condition|)
block|{
return|return
name|book
operator|.
name|getName
argument_list|()
return|;
block|}
else|else
block|{
name|BookNotFoundDetails
name|details
init|=
operator|new
name|BookNotFoundDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BookNotFoundFault
argument_list|(
name|details
argument_list|)
throw|;
block|}
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/books"
argument_list|)
annotation|@
name|ProduceMime
argument_list|(
literal|"text/xml"
argument_list|)
annotation|@
name|ConsumeMime
argument_list|(
literal|"application/xml"
argument_list|)
specifier|public
name|Response
name|addBook
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking addBook, book name is: "
operator|+
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|book
operator|.
name|setId
argument_list|(
operator|++
name|bookId
argument_list|)
expr_stmt|;
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|book
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/binarybooks"
argument_list|)
annotation|@
name|ProduceMime
argument_list|(
literal|"text/xml"
argument_list|)
annotation|@
name|ConsumeMime
argument_list|(
literal|"application/octet-stream"
argument_list|)
specifier|public
name|Response
name|addBinaryBook
parameter_list|(
name|long
index|[]
name|book
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|book
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/books/"
argument_list|)
specifier|public
name|Response
name|updateBook
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking updateBook, book name is: "
operator|+
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/bookswithdom/"
argument_list|)
specifier|public
name|DOMSource
name|updateBook
parameter_list|(
name|DOMSource
name|ds
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking updateBook with DOMSource"
argument_list|)
expr_stmt|;
name|XMLUtils
operator|.
name|printDOM
argument_list|(
name|ds
operator|.
name|getNode
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ds
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/bookswithjson/"
argument_list|)
annotation|@
name|ConsumeMime
argument_list|(
literal|"application/json"
argument_list|)
specifier|public
name|Response
name|updateBookJSON
parameter_list|(
name|Book
name|book
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking updateBook, book name is: "
operator|+
name|book
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"/books/{bookId}/"
argument_list|)
specifier|public
name|Response
name|deleteBook
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"bookId"
argument_list|)
name|String
name|id
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking deleteBook with bookId: "
operator|+
name|id
argument_list|)
expr_stmt|;
name|Book
name|b
init|=
name|books
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|Response
name|r
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|r
operator|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|Response
operator|.
name|notModified
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cd/{CDId}/"
argument_list|)
specifier|public
name|CD
name|getCD
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"CDId"
argument_list|)
name|String
name|id
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking getCD with cdId: "
operator|+
name|id
argument_list|)
expr_stmt|;
name|CD
name|cd
init|=
name|cds
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|cd
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cdwithmultitypes/{CDId}/"
argument_list|)
annotation|@
name|ProduceMime
argument_list|(
block|{
literal|"application/xml"
block|,
literal|"application/json"
block|}
argument_list|)
specifier|public
name|CD
name|getCDWithMultiContentTypes
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"CDId"
argument_list|)
name|String
name|id
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking getCDWithMultiContentTypes with cdId: "
operator|+
name|id
argument_list|)
expr_stmt|;
name|CD
name|cd
init|=
name|cds
operator|.
name|get
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|cd
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cds/"
argument_list|)
specifier|public
name|CDs
name|getCDs
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"----invoking getCDs"
argument_list|)
expr_stmt|;
name|CDs
name|c
init|=
operator|new
name|CDs
argument_list|()
decl_stmt|;
name|c
operator|.
name|setCD
argument_list|(
name|cds
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|c
return|;
block|}
specifier|final
name|void
name|init
parameter_list|()
block|{
name|Book
name|book
init|=
operator|new
name|Book
argument_list|()
decl_stmt|;
name|book
operator|.
name|setId
argument_list|(
name|bookId
argument_list|)
expr_stmt|;
name|book
operator|.
name|setName
argument_list|(
literal|"CXF in Action"
argument_list|)
expr_stmt|;
name|books
operator|.
name|put
argument_list|(
name|book
operator|.
name|getId
argument_list|()
argument_list|,
name|book
argument_list|)
expr_stmt|;
name|CD
name|cd
init|=
operator|new
name|CD
argument_list|()
decl_stmt|;
name|cd
operator|.
name|setId
argument_list|(
name|cdId
argument_list|)
expr_stmt|;
name|cd
operator|.
name|setName
argument_list|(
literal|"BOHEMIAN RHAPSODY"
argument_list|)
expr_stmt|;
name|cds
operator|.
name|put
argument_list|(
name|cd
operator|.
name|getId
argument_list|()
argument_list|,
name|cd
argument_list|)
expr_stmt|;
name|CD
name|cd1
init|=
operator|new
name|CD
argument_list|()
decl_stmt|;
name|cd1
operator|.
name|setId
argument_list|(
operator|++
name|cdId
argument_list|)
expr_stmt|;
name|cd1
operator|.
name|setName
argument_list|(
literal|"BICYCLE RACE"
argument_list|)
expr_stmt|;
name|cds
operator|.
name|put
argument_list|(
name|cd1
operator|.
name|getId
argument_list|()
argument_list|,
name|cd1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

