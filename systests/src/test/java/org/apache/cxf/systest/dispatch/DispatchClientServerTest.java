begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|dispatch
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|AsyncHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Dispatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|XMLUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|GreeterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|SOAPService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|GreetMe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|types
operator|.
name|GreetMeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|DispatchClientServerTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|private
specifier|final
name|QName
name|serviceName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"SOAPDispatchService"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|QName
name|portName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"SoapDispatchPort"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|Object
name|implementor
init|=
operator|new
name|GreeterImpl
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:9006/SOAPDispatchService/SoapDispatchPort"
decl_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSOAPMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService
name|service
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|SOAPMessage
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|SOAPMessage
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
comment|// Test request-response
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapReqMsg
argument_list|)
expr_stmt|;
name|SOAPMessage
name|soapResMsg
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|soapReqMsg
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapResMsg
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage"
argument_list|,
name|expected
argument_list|,
name|soapResMsg
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|getTextContent
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test oneway
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq1.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg1
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapReqMsg1
argument_list|)
expr_stmt|;
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|soapReqMsg1
argument_list|)
expr_stmt|;
comment|// Test async polling
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq2.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg2
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapReqMsg2
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|soapReqMsg2
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapResMsg2
init|=
operator|(
name|SOAPMessage
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapResMsg2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage2"
argument_list|,
name|expected2
argument_list|,
name|soapResMsg2
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|getTextContent
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test async callback
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq3.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg3
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is3
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapReqMsg3
argument_list|)
expr_stmt|;
name|TestSOAPMessageHandler
name|tsmh
init|=
operator|new
name|TestSOAPMessageHandler
argument_list|()
decl_stmt|;
name|Future
name|f
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|soapReqMsg3
argument_list|,
name|tsmh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|f
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|f
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|// wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage3"
argument_list|,
name|expected3
argument_list|,
name|tsmh
operator|.
name|getReplyBuffer
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDOMSourceMESSAGE
parameter_list|()
throws|throws
name|Exception
block|{
comment|/*URL wsdl = getClass().getResource("/wsdl/hello_world.wsdl");         assertNotNull(wsdl);          SOAPService service = new SOAPService(wsdl, serviceName);         assertNotNull(service);*/
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|service
operator|.
name|addPort
argument_list|(
name|portName
argument_list|,
literal|"http://schemas.xmlsoap.org/soap/"
argument_list|,
literal|"http://localhost:9006/SOAPDispatchService/SoapDispatchPort"
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DOMSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|DOMSource
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg
argument_list|)
expr_stmt|;
name|DOMSource
name|domResMsg
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|domReqMsg
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domResMsg
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage"
argument_list|,
name|expected
argument_list|,
name|domResMsg
operator|.
name|getNode
argument_list|()
operator|.
name|getFirstChild
argument_list|()
operator|.
name|getTextContent
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test invoke oneway
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq1.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg1
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is1
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg1
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg1
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg1
argument_list|)
expr_stmt|;
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|domReqMsg1
argument_list|)
expr_stmt|;
comment|// Test async polling
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq2.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg2
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is2
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg2
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg2
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg2
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|domReqMsg2
argument_list|)
decl_stmt|;
name|DOMSource
name|domRespMsg2
init|=
operator|(
name|DOMSource
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage2"
argument_list|,
name|expected2
argument_list|,
name|domRespMsg2
operator|.
name|getNode
argument_list|()
operator|.
name|getFirstChild
argument_list|()
operator|.
name|getTextContent
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test async callback
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq3.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg3
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is3
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg3
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg3
operator|.
name|getSOAPPart
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg3
argument_list|)
expr_stmt|;
name|TestDOMSourceHandler
name|tdsh
init|=
operator|new
name|TestDOMSourceHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|domReqMsg3
argument_list|,
name|tdsh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|// wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage3"
argument_list|,
name|expected3
argument_list|,
name|tdsh
operator|.
name|getReplyBuffer
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDOMSourcePAYLOAD
parameter_list|()
throws|throws
name|Exception
block|{
comment|/*URL wsdl = getClass().getResource("/wsdl/hello_world.wsdl");         assertNotNull(wsdl);          SOAPService service = new SOAPService(wsdl, serviceName);         assertNotNull(service);*/
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|service
operator|.
name|addPort
argument_list|(
name|portName
argument_list|,
literal|"http://schemas.xmlsoap.org/soap/"
argument_list|,
literal|"http://localhost:9006/SOAPDispatchService/SoapDispatchPort"
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|DOMSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|DOMSource
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|extractContentAsDocument
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg
argument_list|)
expr_stmt|;
comment|// invoke
name|DOMSource
name|domResMsg
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|domReqMsg
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domResMsg
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage"
argument_list|,
name|expected
argument_list|,
name|domResMsg
operator|.
name|getNode
argument_list|()
operator|.
name|getTextContent
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq1.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg1
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is1
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg1
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg1
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|extractContentAsDocument
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg1
argument_list|)
expr_stmt|;
comment|// invokeOneWay
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|domReqMsg1
argument_list|)
expr_stmt|;
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq2.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg2
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is2
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg2
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg2
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|extractContentAsDocument
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg2
argument_list|)
expr_stmt|;
comment|// invokeAsync
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|domReqMsg2
argument_list|)
decl_stmt|;
name|DOMSource
name|domRespMsg2
init|=
operator|(
name|DOMSource
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|domRespMsg2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage2"
argument_list|,
name|expected2
argument_list|,
name|domRespMsg2
operator|.
name|getNode
argument_list|()
operator|.
name|getTextContent
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq3.xml"
argument_list|)
decl_stmt|;
name|SOAPMessage
name|soapReqMsg3
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|(
literal|null
argument_list|,
name|is3
argument_list|)
decl_stmt|;
name|DOMSource
name|domReqMsg3
init|=
operator|new
name|DOMSource
argument_list|(
name|soapReqMsg3
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|extractContentAsDocument
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|domReqMsg3
argument_list|)
expr_stmt|;
comment|// invokeAsync with AsyncHandler
name|TestDOMSourceHandler
name|tdsh
init|=
operator|new
name|TestDOMSourceHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|domReqMsg3
argument_list|,
name|tdsh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|// wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response should be : Hello TestSOAPInputMessage3"
argument_list|,
name|expected3
argument_list|,
name|tdsh
operator|.
name|getReplyBuffer
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJAXBObjectPAYLOAD
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService
name|service
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
literal|"org.apache.hello_world_soap_http.types"
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Object
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|jc
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|String
name|expected
init|=
literal|"Hello Jeeves"
decl_stmt|;
name|GreetMe
name|greetMe
init|=
operator|new
name|GreetMe
argument_list|()
decl_stmt|;
name|greetMe
operator|.
name|setRequestType
argument_list|(
literal|"Jeeves"
argument_list|)
expr_stmt|;
name|Object
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|greetMe
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|String
name|responseValue
init|=
operator|(
operator|(
name|GreetMeResponse
operator|)
name|response
operator|)
operator|.
name|getResponseType
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected string, "
operator|+
name|expected
argument_list|,
name|expected
operator|.
name|equals
argument_list|(
name|responseValue
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test oneway
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|greetMe
argument_list|)
expr_stmt|;
comment|// Test async polling
name|Response
name|response2
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|greetMe
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response2
argument_list|)
expr_stmt|;
name|GreetMeResponse
name|greetMeResponse
init|=
operator|(
name|GreetMeResponse
operator|)
name|response2
operator|.
name|get
argument_list|()
decl_stmt|;
name|String
name|responseValue2
init|=
name|greetMeResponse
operator|.
name|getResponseType
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected string, "
operator|+
name|expected
argument_list|,
name|expected
operator|.
name|equals
argument_list|(
name|responseValue2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test async callback
name|TestJAXBHandler
name|tjbh
init|=
operator|new
name|TestJAXBHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|greetMe
argument_list|,
name|tjbh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|// wait
block|}
name|String
name|responseValue3
init|=
operator|(
operator|(
name|GreetMeResponse
operator|)
name|tjbh
operator|.
name|getResponse
argument_list|()
operator|)
operator|.
name|getResponseType
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected string, "
operator|+
name|expected
argument_list|,
name|expected
operator|.
name|equals
argument_list|(
name|responseValue3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJAXBObjectPAYLOADWithFeature
parameter_list|()
throws|throws
name|Exception
block|{
name|bus
operator|=
name|BusFactory
operator|.
name|getDefaultBus
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|configFileName
operator|=
literal|"org/apache/cxf/systest/dispatch/client-config.xml"
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|(
name|SpringBusFactory
operator|)
name|SpringBusFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|bus
operator|=
name|bf
operator|.
name|createBus
argument_list|(
name|configFileName
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|String
name|bindingId
init|=
literal|"http://schemas.xmlsoap.org/wsdl/soap/"
decl_stmt|;
name|String
name|endpointUrl
init|=
literal|"http://localhost:9006/SOAPDispatchService/SoapDispatchPort"
decl_stmt|;
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|service
operator|.
name|addPort
argument_list|(
name|portName
argument_list|,
name|bindingId
argument_list|,
name|endpointUrl
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|JAXBContext
name|jc
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
literal|"org.apache.hello_world_soap_http.types"
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Object
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|jc
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|String
name|expected
init|=
literal|"Hello Jeeves"
decl_stmt|;
name|GreetMe
name|greetMe
init|=
operator|new
name|GreetMe
argument_list|()
decl_stmt|;
name|greetMe
operator|.
name|setRequestType
argument_list|(
literal|"Jeeves"
argument_list|)
expr_stmt|;
name|Object
name|response
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|greetMe
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|String
name|responseValue
init|=
operator|(
operator|(
name|GreetMeResponse
operator|)
name|response
operator|)
operator|.
name|getResponseType
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected string, "
operator|+
name|expected
argument_list|,
name|expected
operator|.
name|equals
argument_list|(
name|responseValue
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Feature should be applied"
argument_list|,
literal|1
argument_list|,
name|TestDispatchFeature
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Feature based interceptors should be added"
argument_list|,
literal|1
argument_list|,
name|TestDispatchFeature
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Feature based In interceptors has be added to in chain."
argument_list|,
literal|1
argument_list|,
name|TestDispatchFeature
operator|.
name|getInInterceptorCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Feature based interceptors has to be added to out chain."
argument_list|,
literal|1
argument_list|,
name|TestDispatchFeature
operator|.
name|getOutInterceptorCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSAXSourceMESSAGE
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService
name|service
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource
init|=
operator|new
name|InputSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|SAXSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|SAXSource
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceResp
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|saxSourceReq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceResp
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|saxSourceResp
argument_list|)
operator|.
name|contains
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test oneway
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq1.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource1
init|=
operator|new
name|InputSource
argument_list|(
name|is1
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq1
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq1
argument_list|)
expr_stmt|;
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|saxSourceReq1
argument_list|)
expr_stmt|;
comment|// Test async polling
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq2.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource2
init|=
operator|new
name|InputSource
argument_list|(
name|is2
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq2
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq2
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|saxSourceReq2
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceResp2
init|=
operator|(
name|SAXSource
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceResp2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|saxSourceResp2
argument_list|)
operator|.
name|contains
argument_list|(
name|expected2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test async callback
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq3.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource3
init|=
operator|new
name|InputSource
argument_list|(
name|is3
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq3
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource3
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq3
argument_list|)
expr_stmt|;
name|TestSAXSourceHandler
name|tssh
init|=
operator|new
name|TestSAXSourceHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|saxSourceReq3
argument_list|,
name|tssh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|//wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|SAXSource
name|saxSourceResp3
init|=
name|tssh
operator|.
name|getSAXSource
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceResp3
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|saxSourceResp3
argument_list|)
operator|.
name|contains
argument_list|(
name|expected3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSAXSourcePAYLOAD
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService
name|service
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|SAXSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|SAXSource
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
comment|// Test request-response
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource
init|=
operator|new
name|InputSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq
argument_list|)
expr_stmt|;
name|SAXSource
name|saxSourceResp
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|saxSourceReq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceResp
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|saxSourceResp
argument_list|)
operator|.
name|contains
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test oneway
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq1.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource1
init|=
operator|new
name|InputSource
argument_list|(
name|is1
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq1
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq1
argument_list|)
expr_stmt|;
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|saxSourceReq1
argument_list|)
expr_stmt|;
comment|// Test async polling
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq2.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource2
init|=
operator|new
name|InputSource
argument_list|(
name|is2
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq2
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq2
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|saxSourceReq2
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceResp2
init|=
operator|(
name|SAXSource
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceResp2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|saxSourceResp2
argument_list|)
operator|.
name|contains
argument_list|(
name|expected2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test async callback
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq3.xml"
argument_list|)
decl_stmt|;
name|InputSource
name|inputSource3
init|=
operator|new
name|InputSource
argument_list|(
name|is3
argument_list|)
decl_stmt|;
name|SAXSource
name|saxSourceReq3
init|=
operator|new
name|SAXSource
argument_list|(
name|inputSource3
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceReq3
argument_list|)
expr_stmt|;
name|TestSAXSourceHandler
name|tssh
init|=
operator|new
name|TestSAXSourceHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|saxSourceReq3
argument_list|,
name|tssh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|//wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|SAXSource
name|saxSourceResp3
init|=
name|tssh
operator|.
name|getSAXSource
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|saxSourceResp3
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|saxSourceResp3
argument_list|)
operator|.
name|contains
argument_list|(
name|expected3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStreamSourceMESSAGE
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService
name|service
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|StreamSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|StreamSource
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq
init|=
operator|new
name|StreamSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq
argument_list|)
expr_stmt|;
name|StreamSource
name|streamSourceResp
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|streamSourceReq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceResp
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|streamSourceResp
argument_list|)
operator|.
name|contains
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq1.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq1
init|=
operator|new
name|StreamSource
argument_list|(
name|is1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq1
argument_list|)
expr_stmt|;
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|streamSourceReq1
argument_list|)
expr_stmt|;
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq2.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq2
init|=
operator|new
name|StreamSource
argument_list|(
name|is2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq2
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|streamSourceReq2
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceResp2
init|=
operator|(
name|StreamSource
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceResp2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|streamSourceResp2
argument_list|)
operator|.
name|contains
argument_list|(
name|expected2
argument_list|)
argument_list|)
expr_stmt|;
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralReq3.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq3
init|=
operator|new
name|StreamSource
argument_list|(
name|is3
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq3
argument_list|)
expr_stmt|;
name|TestStreamSourceHandler
name|tssh
init|=
operator|new
name|TestStreamSourceHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|streamSourceReq3
argument_list|,
name|tssh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|//wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|StreamSource
name|streamSourceResp3
init|=
name|tssh
operator|.
name|getStreamSource
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceResp3
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|streamSourceResp3
argument_list|)
operator|.
name|contains
argument_list|(
name|expected3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStreamSourcePAYLOAD
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService
name|service
init|=
operator|new
name|SOAPService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|Dispatch
argument_list|<
name|StreamSource
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|portName
argument_list|,
name|StreamSource
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq
init|=
operator|new
name|StreamSource
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq
argument_list|)
expr_stmt|;
name|StreamSource
name|streamSourceResp
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|streamSourceReq
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceResp
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Hello TestSOAPInputMessage"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|streamSourceResp
argument_list|)
operator|.
name|contains
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
name|InputStream
name|is1
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq1.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq1
init|=
operator|new
name|StreamSource
argument_list|(
name|is1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq1
argument_list|)
expr_stmt|;
name|disp
operator|.
name|invokeOneWay
argument_list|(
name|streamSourceReq1
argument_list|)
expr_stmt|;
comment|// Test async polling
name|InputStream
name|is2
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq2.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq2
init|=
operator|new
name|StreamSource
argument_list|(
name|is2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq2
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|streamSourceReq2
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceResp2
init|=
operator|(
name|StreamSource
operator|)
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceResp2
argument_list|)
expr_stmt|;
name|String
name|expected2
init|=
literal|"Hello TestSOAPInputMessage2"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|streamSourceResp2
argument_list|)
operator|.
name|contains
argument_list|(
name|expected2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test async callback
name|InputStream
name|is3
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"resources/GreetMeDocLiteralSOAPBodyReq3.xml"
argument_list|)
decl_stmt|;
name|StreamSource
name|streamSourceReq3
init|=
operator|new
name|StreamSource
argument_list|(
name|is3
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceReq3
argument_list|)
expr_stmt|;
name|TestStreamSourceHandler
name|tssh
init|=
operator|new
name|TestStreamSourceHandler
argument_list|()
decl_stmt|;
name|Future
name|fd
init|=
name|disp
operator|.
name|invokeAsync
argument_list|(
name|streamSourceReq3
argument_list|,
name|tssh
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fd
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|fd
operator|.
name|isDone
argument_list|()
condition|)
block|{
comment|//wait
block|}
name|String
name|expected3
init|=
literal|"Hello TestSOAPInputMessage3"
decl_stmt|;
name|StreamSource
name|streamSourceResp3
init|=
name|tssh
operator|.
name|getStreamSource
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|streamSourceResp3
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected: "
operator|+
name|expected
argument_list|,
name|XMLUtils
operator|.
name|toString
argument_list|(
name|streamSourceResp3
argument_list|)
operator|.
name|contains
argument_list|(
name|expected3
argument_list|)
argument_list|)
expr_stmt|;
block|}
class|class
name|TestSOAPMessageHandler
implements|implements
name|AsyncHandler
argument_list|<
name|SOAPMessage
argument_list|>
block|{
name|String
name|replyBuffer
decl_stmt|;
specifier|public
name|void
name|handleResponse
parameter_list|(
name|Response
argument_list|<
name|SOAPMessage
argument_list|>
name|response
parameter_list|)
block|{
try|try
block|{
name|SOAPMessage
name|reply
init|=
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|replyBuffer
operator|=
name|reply
operator|.
name|getSOAPBody
argument_list|()
operator|.
name|getTextContent
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
block|}
specifier|public
name|String
name|getReplyBuffer
parameter_list|()
block|{
return|return
name|replyBuffer
return|;
block|}
block|}
comment|// REVISIT: Exception handling?
class|class
name|TestDOMSourceHandler
implements|implements
name|AsyncHandler
argument_list|<
name|DOMSource
argument_list|>
block|{
name|String
name|replyBuffer
decl_stmt|;
specifier|public
name|void
name|handleResponse
parameter_list|(
name|Response
argument_list|<
name|DOMSource
argument_list|>
name|response
parameter_list|)
block|{
try|try
block|{
name|DOMSource
name|reply
init|=
name|response
operator|.
name|get
argument_list|()
decl_stmt|;
name|replyBuffer
operator|=
name|DOMUtils
operator|.
name|getChild
argument_list|(
name|reply
operator|.
name|getNode
argument_list|()
argument_list|,
name|Node
operator|.
name|ELEMENT_NODE
argument_list|)
operator|.
name|getTextContent
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
block|}
specifier|public
name|String
name|getReplyBuffer
parameter_list|()
block|{
return|return
name|replyBuffer
return|;
block|}
block|}
comment|// REVISIT: Exception handling?
class|class
name|TestJAXBHandler
implements|implements
name|AsyncHandler
argument_list|<
name|Object
argument_list|>
block|{
name|Object
name|reply
decl_stmt|;
specifier|public
name|void
name|handleResponse
parameter_list|(
name|Response
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
try|try
block|{
name|reply
operator|=
name|response
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
block|}
specifier|public
name|Object
name|getResponse
parameter_list|()
block|{
return|return
name|reply
return|;
block|}
block|}
comment|// REVISIT: Exception handling?
class|class
name|TestSAXSourceHandler
implements|implements
name|AsyncHandler
argument_list|<
name|SAXSource
argument_list|>
block|{
name|SAXSource
name|reply
decl_stmt|;
specifier|public
name|void
name|handleResponse
parameter_list|(
name|Response
argument_list|<
name|SAXSource
argument_list|>
name|response
parameter_list|)
block|{
try|try
block|{
name|reply
operator|=
name|response
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|SAXSource
name|getSAXSource
parameter_list|()
block|{
return|return
name|reply
return|;
block|}
block|}
comment|// REVISIT: Exception handling?
class|class
name|TestStreamSourceHandler
implements|implements
name|AsyncHandler
argument_list|<
name|StreamSource
argument_list|>
block|{
name|StreamSource
name|reply
decl_stmt|;
specifier|public
name|void
name|handleResponse
parameter_list|(
name|Response
argument_list|<
name|StreamSource
argument_list|>
name|response
parameter_list|)
block|{
try|try
block|{
name|reply
operator|=
name|response
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
block|}
specifier|public
name|StreamSource
name|getStreamSource
parameter_list|()
block|{
return|return
name|reply
return|;
block|}
block|}
block|}
end_class

end_unit

