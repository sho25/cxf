begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ExceptionMapper
import|;
end_import

begin_class
specifier|public
class|class
name|BookExceptionMapper
implements|implements
name|ExceptionMapper
argument_list|<
name|BookNotFoundFault
argument_list|>
block|{
specifier|private
name|boolean
name|toHandle
decl_stmt|;
specifier|public
name|Response
name|toResponse
parameter_list|(
name|BookNotFoundFault
name|ex
parameter_list|)
block|{
comment|// status is 200 just to simplify the test client code
if|if
condition|(
name|toHandle
condition|)
block|{
return|return
name|Response
operator|.
name|status
argument_list|(
literal|200
argument_list|)
operator|.
name|entity
argument_list|(
literal|"No book found at all : "
operator|+
name|ex
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|setToHandle
parameter_list|(
name|Boolean
name|toHandle
parameter_list|)
block|{
name|this
operator|.
name|toHandle
operator|=
name|toHandle
expr_stmt|;
block|}
block|}
end_class

end_unit

