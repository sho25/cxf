begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_mixedstyle
operator|.
name|GreeterImplMixedStyle
import|;
end_import

begin_class
specifier|public
class|class
name|ServerMixedStyle
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|Object
name|implementor
init|=
operator|new
name|GreeterImplMixedStyle
argument_list|()
decl_stmt|;
name|String
name|address
init|=
literal|"http://localhost:9027/SoapContext/SoapPort"
decl_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
literal|"http://localhost:9027/cxf885"
argument_list|,
operator|new
name|MixedTestImpl
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|ServerMixedStyle
name|s
init|=
operator|new
name|ServerMixedStyle
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|WebService
argument_list|(
name|targetNamespace
operator|=
literal|"http://example.com"
argument_list|)
specifier|public
specifier|static
interface|interface
name|MixedTest
block|{
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"Simple"
argument_list|)
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"SimpleResponse"
argument_list|,
name|targetNamespace
operator|=
literal|"http://example.com"
argument_list|)
annotation|@
name|SOAPBinding
argument_list|(
name|parameterStyle
operator|=
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|BARE
argument_list|)
name|String
name|simple
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"Simple"
argument_list|)
name|String
name|req
parameter_list|)
function_decl|;
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"Hello"
argument_list|)
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"Result"
argument_list|)
annotation|@
name|SOAPBinding
argument_list|(
name|parameterStyle
operator|=
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|WRAPPED
argument_list|)
name|String
name|hello
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"A"
argument_list|)
name|String
name|a
parameter_list|,
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"B"
argument_list|)
name|String
name|b
parameter_list|)
function_decl|;
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"Simple2"
argument_list|)
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"Simple2Response"
argument_list|,
name|targetNamespace
operator|=
literal|"http://example.com"
argument_list|)
annotation|@
name|SOAPBinding
argument_list|(
name|parameterStyle
operator|=
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|BARE
argument_list|)
name|String
name|simple2
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"Simple2"
argument_list|)
name|int
name|a
parameter_list|)
function_decl|;
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"Tripple"
argument_list|)
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"Result"
argument_list|)
annotation|@
name|SOAPBinding
argument_list|(
name|parameterStyle
operator|=
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|WRAPPED
argument_list|)
name|String
name|tripple
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"A"
argument_list|)
name|String
name|a
parameter_list|,
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"B"
argument_list|)
name|String
name|b
parameter_list|,
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"C"
argument_list|)
name|String
name|c
parameter_list|)
function_decl|;
block|}
annotation|@
name|WebService
argument_list|(
name|targetNamespace
operator|=
literal|"http://example.com"
argument_list|)
specifier|public
class|class
name|MixedTestImpl
implements|implements
name|MixedTest
block|{
specifier|public
name|String
name|hello
parameter_list|(
name|String
name|a
parameter_list|,
name|String
name|b
parameter_list|)
block|{
return|return
literal|"Hello "
operator|+
name|a
operator|+
literal|" and "
operator|+
name|b
return|;
block|}
specifier|public
name|String
name|simple
parameter_list|(
name|String
name|req
parameter_list|)
block|{
return|return
literal|"Hello "
operator|+
name|req
return|;
block|}
specifier|public
name|String
name|simple2
parameter_list|(
name|int
name|a
parameter_list|)
block|{
return|return
literal|"Int: "
operator|+
name|a
return|;
block|}
specifier|public
name|String
name|tripple
parameter_list|(
name|String
name|a
parameter_list|,
name|String
name|b
parameter_list|,
name|String
name|c
parameter_list|)
block|{
return|return
literal|"Tripple: "
operator|+
name|a
operator|+
literal|" "
operator|+
name|b
operator|+
literal|" "
operator|+
name|c
return|;
block|}
block|}
block|}
end_class

end_unit

