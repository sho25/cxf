begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|swa
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|imageio
operator|.
name|ImageIO
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|util
operator|.
name|ByteArrayDataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|AttachmentPart
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPBody
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|soap
operator|.
name|SOAPMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Dispatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|SwAService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|SwAServiceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|types
operator|.
name|DataStruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|types
operator|.
name|OutputResponseAll
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|swa
operator|.
name|types
operator|.
name|VoidRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ClientServerSwaTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSwa
parameter_list|()
throws|throws
name|Exception
block|{
name|SwAService
name|service
init|=
operator|new
name|SwAService
argument_list|()
decl_stmt|;
name|SwAServiceInterface
name|port
init|=
name|service
operator|.
name|getSwAServiceHttpPort
argument_list|()
decl_stmt|;
comment|//        ((BindingProvider)port).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,
comment|//                                                        "http://localhost:9037/swa");
name|Holder
argument_list|<
name|String
argument_list|>
name|textHolder
init|=
operator|new
name|Holder
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|data
init|=
operator|new
name|Holder
argument_list|<
name|DataHandler
argument_list|>
argument_list|()
decl_stmt|;
name|ByteArrayDataSource
name|source
init|=
operator|new
name|ByteArrayDataSource
argument_list|(
literal|"foobar"
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|DataHandler
name|handler
init|=
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|data
operator|.
name|value
operator|=
name|handler
expr_stmt|;
name|textHolder
operator|.
name|value
operator|=
literal|"Hi"
expr_stmt|;
name|port
operator|.
name|echoData
argument_list|(
name|textHolder
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
name|bis
operator|=
name|data
operator|.
name|value
operator|.
name|getDataSource
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|byte
name|b
index|[]
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
name|bis
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|String
name|string
init|=
operator|new
name|String
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testfoobar"
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hi"
argument_list|,
name|textHolder
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSwaWithHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|SwAService
name|service
init|=
operator|new
name|SwAService
argument_list|()
decl_stmt|;
name|SwAServiceInterface
name|port
init|=
name|service
operator|.
name|getSwAServiceHttpPort
argument_list|()
decl_stmt|;
comment|//        ((BindingProvider)port).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,
comment|//                                                        "http://localhost:9037/swa");
name|Holder
argument_list|<
name|String
argument_list|>
name|textHolder
init|=
operator|new
name|Holder
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|String
argument_list|>
name|headerHolder
init|=
operator|new
name|Holder
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|data
init|=
operator|new
name|Holder
argument_list|<
name|DataHandler
argument_list|>
argument_list|()
decl_stmt|;
name|ByteArrayDataSource
name|source
init|=
operator|new
name|ByteArrayDataSource
argument_list|(
literal|"foobar"
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|DataHandler
name|handler
init|=
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|data
operator|.
name|value
operator|=
name|handler
expr_stmt|;
name|textHolder
operator|.
name|value
operator|=
literal|"Hi"
expr_stmt|;
name|headerHolder
operator|.
name|value
operator|=
literal|"Header"
expr_stmt|;
name|port
operator|.
name|echoDataWithHeader
argument_list|(
name|textHolder
argument_list|,
name|data
argument_list|,
name|headerHolder
argument_list|)
expr_stmt|;
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
name|bis
operator|=
name|data
operator|.
name|value
operator|.
name|getDataSource
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|byte
name|b
index|[]
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
name|bis
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|String
name|string
init|=
operator|new
name|String
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testfoobar"
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hi"
argument_list|,
name|textHolder
operator|.
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Header"
argument_list|,
name|headerHolder
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSwaDataStruct
parameter_list|()
throws|throws
name|Exception
block|{
name|SwAService
name|service
init|=
operator|new
name|SwAService
argument_list|()
decl_stmt|;
name|SwAServiceInterface
name|port
init|=
name|service
operator|.
name|getSwAServiceHttpPort
argument_list|()
decl_stmt|;
comment|//        ((BindingProvider)port).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,
comment|//                                                        "http://localhost:9037/swa");
name|Holder
argument_list|<
name|DataStruct
argument_list|>
name|structHolder
init|=
operator|new
name|Holder
argument_list|<
name|DataStruct
argument_list|>
argument_list|()
decl_stmt|;
name|ByteArrayDataSource
name|source
init|=
operator|new
name|ByteArrayDataSource
argument_list|(
literal|"foobar"
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|DataHandler
name|handler
init|=
operator|new
name|DataHandler
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|DataStruct
name|struct
init|=
operator|new
name|DataStruct
argument_list|()
decl_stmt|;
name|struct
operator|.
name|setDataRef
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|structHolder
operator|.
name|value
operator|=
name|struct
expr_stmt|;
name|port
operator|.
name|echoDataRef
argument_list|(
name|structHolder
argument_list|)
expr_stmt|;
name|handler
operator|=
name|structHolder
operator|.
name|value
operator|.
name|getDataRef
argument_list|()
expr_stmt|;
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
name|bis
operator|=
name|handler
operator|.
name|getDataSource
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|byte
name|b
index|[]
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
name|bis
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|String
name|string
init|=
operator|new
name|String
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testfoobar"
argument_list|,
name|string
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSwaTypes
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|Boolean
operator|.
name|getBoolean
argument_list|(
literal|"java.awt.headless"
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Running headless. Skipping test as Images may not work."
argument_list|)
expr_stmt|;
return|return;
block|}
name|SwAService
name|service
init|=
operator|new
name|SwAService
argument_list|()
decl_stmt|;
name|SwAServiceInterface
name|port
init|=
name|service
operator|.
name|getSwAServiceHttpPort
argument_list|()
decl_stmt|;
name|URL
name|url1
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.text"
argument_list|)
decl_stmt|;
name|URL
name|url2
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.html"
argument_list|)
decl_stmt|;
name|URL
name|url3
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.xml"
argument_list|)
decl_stmt|;
name|URL
name|url4
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.jpeg1"
argument_list|)
decl_stmt|;
name|URL
name|url5
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.jpeg2"
argument_list|)
decl_stmt|;
name|DataHandler
name|dh1
init|=
operator|new
name|DataHandler
argument_list|(
name|url1
argument_list|)
decl_stmt|;
name|DataHandler
name|dh2
init|=
operator|new
name|DataHandler
argument_list|(
name|url2
argument_list|)
decl_stmt|;
name|DataHandler
name|dh3
init|=
operator|new
name|DataHandler
argument_list|(
name|url3
argument_list|)
decl_stmt|;
comment|//DataHandler dh4 = new DataHandler(url4);
comment|//DataHandler dh5 = new DataHandler(url5);
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|attach1
init|=
operator|new
name|Holder
argument_list|<
name|DataHandler
argument_list|>
argument_list|()
decl_stmt|;
name|attach1
operator|.
name|value
operator|=
name|dh1
expr_stmt|;
name|Holder
argument_list|<
name|DataHandler
argument_list|>
name|attach2
init|=
operator|new
name|Holder
argument_list|<
name|DataHandler
argument_list|>
argument_list|()
decl_stmt|;
name|attach2
operator|.
name|value
operator|=
name|dh2
expr_stmt|;
name|Holder
argument_list|<
name|Source
argument_list|>
name|attach3
init|=
operator|new
name|Holder
argument_list|<
name|Source
argument_list|>
argument_list|()
decl_stmt|;
name|attach3
operator|.
name|value
operator|=
operator|new
name|StreamSource
argument_list|(
name|dh3
operator|.
name|getInputStream
argument_list|()
argument_list|)
expr_stmt|;
name|Holder
argument_list|<
name|Image
argument_list|>
name|attach4
init|=
operator|new
name|Holder
argument_list|<
name|Image
argument_list|>
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|Image
argument_list|>
name|attach5
init|=
operator|new
name|Holder
argument_list|<
name|Image
argument_list|>
argument_list|()
decl_stmt|;
name|attach4
operator|.
name|value
operator|=
name|ImageIO
operator|.
name|read
argument_list|(
name|url4
argument_list|)
expr_stmt|;
name|attach5
operator|.
name|value
operator|=
name|ImageIO
operator|.
name|read
argument_list|(
name|url5
argument_list|)
expr_stmt|;
name|VoidRequest
name|request
init|=
operator|new
name|VoidRequest
argument_list|()
decl_stmt|;
name|OutputResponseAll
name|response
init|=
name|port
operator|.
name|echoAllAttachmentTypes
argument_list|(
name|request
argument_list|,
name|attach1
argument_list|,
name|attach2
argument_list|,
name|attach3
argument_list|,
name|attach4
argument_list|,
name|attach5
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSwaTypesWithDispatchAPI
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|Boolean
operator|.
name|getBoolean
argument_list|(
literal|"java.awt.headless"
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Running headless. Skipping test as Images may not work."
argument_list|)
expr_stmt|;
return|return;
block|}
name|URL
name|url1
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.text"
argument_list|)
decl_stmt|;
name|URL
name|url2
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.html"
argument_list|)
decl_stmt|;
name|URL
name|url3
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.xml"
argument_list|)
decl_stmt|;
name|URL
name|url4
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.jpeg1"
argument_list|)
decl_stmt|;
name|URL
name|url5
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"resources/attach.jpeg2"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|IOUtils
operator|.
name|readBytesFromStream
argument_list|(
name|url1
operator|.
name|openStream
argument_list|()
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bigBytes
init|=
operator|new
name|byte
index|[
name|bytes
operator|.
name|length
operator|*
literal|50
index|]
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|50
condition|;
name|x
operator|++
control|)
block|{
name|System
operator|.
name|arraycopy
argument_list|(
name|bytes
argument_list|,
literal|0
argument_list|,
name|bigBytes
argument_list|,
name|x
operator|*
name|bytes
operator|.
name|length
argument_list|,
name|bytes
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
name|DataHandler
name|dh1
init|=
operator|new
name|DataHandler
argument_list|(
operator|new
name|ByteArrayDataSource
argument_list|(
name|bigBytes
argument_list|,
literal|"text/plain"
argument_list|)
argument_list|)
decl_stmt|;
name|DataHandler
name|dh2
init|=
operator|new
name|DataHandler
argument_list|(
name|url2
argument_list|)
decl_stmt|;
name|DataHandler
name|dh3
init|=
operator|new
name|DataHandler
argument_list|(
name|url3
argument_list|)
decl_stmt|;
name|DataHandler
name|dh4
init|=
operator|new
name|DataHandler
argument_list|(
name|url4
argument_list|)
decl_stmt|;
name|DataHandler
name|dh5
init|=
operator|new
name|DataHandler
argument_list|(
name|url5
argument_list|)
decl_stmt|;
name|SwAService
name|service
init|=
operator|new
name|SwAService
argument_list|()
decl_stmt|;
name|Dispatch
argument_list|<
name|SOAPMessage
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
name|SwAService
operator|.
name|SwAServiceHttpPort
argument_list|,
name|SOAPMessage
operator|.
name|class
argument_list|,
name|Service
operator|.
name|Mode
operator|.
name|MESSAGE
argument_list|)
decl_stmt|;
name|SOAPMessage
name|msg
init|=
name|MessageFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|createMessage
argument_list|()
decl_stmt|;
name|SOAPBody
name|body
init|=
name|msg
operator|.
name|getSOAPPart
argument_list|()
operator|.
name|getEnvelope
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|body
operator|.
name|addBodyElement
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/swa/types"
argument_list|,
literal|"VoidRequest"
argument_list|)
argument_list|)
expr_stmt|;
name|AttachmentPart
name|att
init|=
name|msg
operator|.
name|createAttachmentPart
argument_list|(
name|dh1
argument_list|)
decl_stmt|;
name|att
operator|.
name|setContentId
argument_list|(
literal|"<attach1=c187f5da-fa5d-4ab9-81db-33c2bb855201@apache.org>"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|addAttachmentPart
argument_list|(
name|att
argument_list|)
expr_stmt|;
name|att
operator|=
name|msg
operator|.
name|createAttachmentPart
argument_list|(
name|dh2
argument_list|)
expr_stmt|;
name|att
operator|.
name|setContentId
argument_list|(
literal|"<attach2=c187f5da-fa5d-4ab9-81db-33c2bb855202@apache.org>"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|addAttachmentPart
argument_list|(
name|att
argument_list|)
expr_stmt|;
name|att
operator|=
name|msg
operator|.
name|createAttachmentPart
argument_list|(
name|dh3
argument_list|)
expr_stmt|;
name|att
operator|.
name|setContentId
argument_list|(
literal|"<attach3=c187f5da-fa5d-4ab9-81db-33c2bb855203@apache.org>"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|addAttachmentPart
argument_list|(
name|att
argument_list|)
expr_stmt|;
name|att
operator|=
name|msg
operator|.
name|createAttachmentPart
argument_list|(
name|dh4
argument_list|)
expr_stmt|;
name|att
operator|.
name|setContentId
argument_list|(
literal|"<attach4=c187f5da-fa5d-4ab9-81db-33c2bb855204@apache.org>"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|addAttachmentPart
argument_list|(
name|att
argument_list|)
expr_stmt|;
name|att
operator|=
name|msg
operator|.
name|createAttachmentPart
argument_list|(
name|dh5
argument_list|)
expr_stmt|;
name|att
operator|.
name|setContentId
argument_list|(
literal|"<attach5=c187f5da-fa5d-4ab9-81db-33c2bb855205@apache.org>"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|addAttachmentPart
argument_list|(
name|att
argument_list|)
expr_stmt|;
comment|//Test for CXF-
name|msg
operator|=
name|disp
operator|.
name|invoke
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|msg
operator|.
name|countAttachments
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

