begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|UndeclaredThrowableException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|BadRecordLitFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HWByteMsgService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HelloWorldOneWayPort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HelloWorldOneWayQueueService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HelloWorldPortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HelloWorldPubSubPort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HelloWorldPubSubService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|HelloWorldService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|hello_world_jms
operator|.
name|NoSuchCodeLitFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSMessageHeadersType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|jms
operator|.
name|JMSPropertyType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_doc_lit
operator|.
name|Greeter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_doc_lit
operator|.
name|PingMeFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_doc_lit
operator|.
name|SOAPService2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
specifier|public
class|class
name|JMSClientServerTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|protected
specifier|static
name|boolean
name|serversStarted
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|serversStarted
condition|)
block|{
return|return;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"activemq.store.dir"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
literal|"activemq.store.dir"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"activemq.store.dir"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|props
operator|.
name|put
argument_list|(
literal|"java.util.logging.config.file"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.util.logging.config.file"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|EmbeddedJMSBrokerLauncher
operator|.
name|class
argument_list|,
name|props
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|serversStarted
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|URL
name|getWSDLURL
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|public
name|QName
name|getServiceName
parameter_list|(
name|QName
name|q
parameter_list|)
block|{
return|return
name|q
return|;
block|}
specifier|public
name|QName
name|getPortName
parameter_list|(
name|QName
name|q
parameter_list|)
block|{
return|return
name|q
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDocBasicConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|serviceName
init|=
name|getServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_doc_lit"
argument_list|,
literal|"SOAPService2"
argument_list|)
argument_list|)
decl_stmt|;
name|QName
name|portName
init|=
name|getPortName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_doc_lit"
argument_list|,
literal|"SoapPort2"
argument_list|)
argument_list|)
decl_stmt|;
name|URL
name|wsdl
init|=
name|getWSDLURL
argument_list|(
literal|"/wsdl/hello_world_doc_lit.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|SOAPService2
name|service
init|=
operator|new
name|SOAPService2
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|String
name|response1
init|=
operator|new
name|String
argument_list|(
literal|"Hello Milestone-"
argument_list|)
decl_stmt|;
name|String
name|response2
init|=
operator|new
name|String
argument_list|(
literal|"Bonjour"
argument_list|)
decl_stmt|;
try|try
block|{
name|Greeter
name|greeter
init|=
name|service
operator|.
name|getPort
argument_list|(
name|portName
argument_list|,
name|Greeter
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|5
condition|;
name|idx
operator|++
control|)
block|{
name|String
name|greeting
init|=
name|greeter
operator|.
name|greetMe
argument_list|(
literal|"Milestone-"
operator|+
name|idx
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|exResponse
init|=
name|response1
operator|+
name|idx
decl_stmt|;
name|assertEquals
argument_list|(
name|exResponse
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|reply
init|=
name|greeter
operator|.
name|sayHi
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response2
argument_list|,
name|reply
argument_list|)
expr_stmt|;
try|try
block|{
name|greeter
operator|.
name|pingMe
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown FaultException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PingMeFault
name|ex
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ex
operator|.
name|getFaultInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|serviceName
init|=
name|getServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldService"
argument_list|)
argument_list|)
decl_stmt|;
name|QName
name|portName
init|=
name|getPortName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldPort"
argument_list|)
argument_list|)
decl_stmt|;
name|URL
name|wsdl
init|=
name|getWSDLURL
argument_list|(
literal|"/wsdl/jms_test.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|HelloWorldService
name|service
init|=
operator|new
name|HelloWorldService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|String
name|response1
init|=
operator|new
name|String
argument_list|(
literal|"Hello Milestone-"
argument_list|)
decl_stmt|;
name|String
name|response2
init|=
operator|new
name|String
argument_list|(
literal|"Bonjour"
argument_list|)
decl_stmt|;
try|try
block|{
name|HelloWorldPortType
name|greeter
init|=
name|service
operator|.
name|getPort
argument_list|(
name|portName
argument_list|,
name|HelloWorldPortType
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|5
condition|;
name|idx
operator|++
control|)
block|{
name|String
name|greeting
init|=
name|greeter
operator|.
name|greetMe
argument_list|(
literal|"Milestone-"
operator|+
name|idx
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|exResponse
init|=
name|response1
operator|+
name|idx
decl_stmt|;
name|assertEquals
argument_list|(
name|exResponse
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|reply
init|=
name|greeter
operator|.
name|sayHi
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response2
argument_list|,
name|reply
argument_list|)
expr_stmt|;
try|try
block|{
name|greeter
operator|.
name|testRpcLitFault
argument_list|(
literal|"BadRecordLitFault"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown BadRecoedLitFault"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadRecordLitFault
name|ex
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ex
operator|.
name|getFaultInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|greeter
operator|.
name|testRpcLitFault
argument_list|(
literal|"NoSuchCodeLitFault"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown NoSuchCodeLitFault exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchCodeLitFault
name|nslf
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|nslf
operator|.
name|getFaultInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|nslf
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testByteMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|serviceName
init|=
name|getServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HWByteMsgService"
argument_list|)
argument_list|)
decl_stmt|;
name|URL
name|wsdl
init|=
name|getWSDLURL
argument_list|(
literal|"/wsdl/jms_test.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|HWByteMsgService
name|service
init|=
operator|new
name|HWByteMsgService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|String
name|response1
init|=
operator|new
name|String
argument_list|(
literal|"Hello Milestone-"
argument_list|)
decl_stmt|;
name|String
name|response2
init|=
operator|new
name|String
argument_list|(
literal|"Bonjour"
argument_list|)
decl_stmt|;
try|try
block|{
name|HelloWorldPortType
name|greeter
init|=
name|service
operator|.
name|getHWSByteMsgPort
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|2
condition|;
name|idx
operator|++
control|)
block|{
name|String
name|greeting
init|=
name|greeter
operator|.
name|greetMe
argument_list|(
literal|"Milestone-"
operator|+
name|idx
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|exResponse
init|=
name|response1
operator|+
name|idx
decl_stmt|;
name|assertEquals
argument_list|(
name|exResponse
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|reply
init|=
name|greeter
operator|.
name|sayHi
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response2
argument_list|,
name|reply
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOneWayTopicConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|serviceName
init|=
name|getServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldPubSubService"
argument_list|)
argument_list|)
decl_stmt|;
name|QName
name|portName
init|=
name|getPortName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldPubSubPort"
argument_list|)
argument_list|)
decl_stmt|;
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/jms_test.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|HelloWorldPubSubService
name|service
init|=
operator|new
name|HelloWorldPubSubService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
try|try
block|{
name|HelloWorldPubSubPort
name|greeter
init|=
name|service
operator|.
name|getPort
argument_list|(
name|portName
argument_list|,
name|HelloWorldPubSubPort
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|5
condition|;
name|idx
operator|++
control|)
block|{
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"JMS:PubSub:Milestone-"
operator|+
name|idx
argument_list|)
expr_stmt|;
block|}
comment|//Give some time to complete one-way calls.
name|Thread
operator|.
name|sleep
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionsWithinSpring
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassPathXmlApplicationContext
name|ctx
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"/org/apache/cxf/systest/jms/JMSClients.xml"
block|}
argument_list|)
decl_stmt|;
name|HelloWorldPortType
name|greeter
init|=
operator|(
name|HelloWorldPortType
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"jmsRPCClient"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|greeter
argument_list|)
expr_stmt|;
name|String
name|response1
init|=
operator|new
name|String
argument_list|(
literal|"Hello Milestone-"
argument_list|)
decl_stmt|;
name|String
name|response2
init|=
operator|new
name|String
argument_list|(
literal|"Bonjour"
argument_list|)
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|5
condition|;
name|idx
operator|++
control|)
block|{
name|String
name|greeting
init|=
name|greeter
operator|.
name|greetMe
argument_list|(
literal|"Milestone-"
operator|+
name|idx
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|exResponse
init|=
name|response1
operator|+
name|idx
decl_stmt|;
name|assertEquals
argument_list|(
name|exResponse
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|String
name|reply
init|=
name|greeter
operator|.
name|sayHi
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response2
argument_list|,
name|reply
argument_list|)
expr_stmt|;
try|try
block|{
name|greeter
operator|.
name|testRpcLitFault
argument_list|(
literal|"BadRecordLitFault"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown BadRecoedLitFault"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadRecordLitFault
name|ex
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ex
operator|.
name|getFaultInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|greeter
operator|.
name|testRpcLitFault
argument_list|(
literal|"NoSuchCodeLitFault"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown NoSuchCodeLitFault exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchCodeLitFault
name|nslf
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|nslf
operator|.
name|getFaultInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|nslf
operator|.
name|getFaultInfo
argument_list|()
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
name|HelloWorldOneWayPort
name|greeter1
init|=
operator|(
name|HelloWorldOneWayPort
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"jmsQueueOneWayServiceClient"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|greeter1
argument_list|)
expr_stmt|;
try|try
block|{
name|greeter1
operator|.
name|greetMeOneWay
argument_list|(
literal|"hello"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|fail
argument_list|(
literal|"There should not throw the exception"
operator|+
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOneWayQueueConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|serviceName
init|=
name|getServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldOneWayQueueService"
argument_list|)
argument_list|)
decl_stmt|;
name|QName
name|portName
init|=
name|getPortName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldOneWayQueuePort"
argument_list|)
argument_list|)
decl_stmt|;
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/jms_test.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|HelloWorldOneWayQueueService
name|service
init|=
operator|new
name|HelloWorldOneWayQueueService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
try|try
block|{
name|HelloWorldOneWayPort
name|greeter
init|=
name|service
operator|.
name|getPort
argument_list|(
name|portName
argument_list|,
name|HelloWorldOneWayPort
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|5
condition|;
name|idx
operator|++
control|)
block|{
name|greeter
operator|.
name|greetMeOneWay
argument_list|(
literal|"JMS:Queue:Milestone-"
operator|+
name|idx
argument_list|)
expr_stmt|;
block|}
comment|//Give some time to complete one-way calls.
name|Thread
operator|.
name|sleep
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContextPropogation
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|testReturnPropertyName
init|=
literal|"Test_Prop"
decl_stmt|;
specifier|final
name|String
name|testIgnoredPropertyName
init|=
literal|"Test_Prop_No_Return"
decl_stmt|;
name|QName
name|serviceName
init|=
name|getServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldService"
argument_list|)
argument_list|)
decl_stmt|;
name|QName
name|portName
init|=
name|getPortName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.apache.org/hello_world_jms"
argument_list|,
literal|"HelloWorldPort"
argument_list|)
argument_list|)
decl_stmt|;
name|URL
name|wsdl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/jms_test.wsdl"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|HelloWorldService
name|service
init|=
operator|new
name|HelloWorldService
argument_list|(
name|wsdl
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|service
argument_list|)
expr_stmt|;
try|try
block|{
name|HelloWorldPortType
name|greeter
init|=
name|service
operator|.
name|getPort
argument_list|(
name|portName
argument_list|,
name|HelloWorldPortType
operator|.
name|class
argument_list|)
decl_stmt|;
name|InvocationHandler
name|handler
init|=
name|Proxy
operator|.
name|getInvocationHandler
argument_list|(
name|greeter
argument_list|)
decl_stmt|;
name|BindingProvider
name|bp
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|BindingProvider
condition|)
block|{
name|bp
operator|=
operator|(
name|BindingProvider
operator|)
name|handler
expr_stmt|;
comment|//System.out.println(bp.toString());
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|requestContext
init|=
name|bp
operator|.
name|getRequestContext
argument_list|()
decl_stmt|;
name|JMSMessageHeadersType
name|requestHeader
init|=
operator|new
name|JMSMessageHeadersType
argument_list|()
decl_stmt|;
name|requestHeader
operator|.
name|setJMSCorrelationID
argument_list|(
literal|"JMS_SAMPLE_CORRELATION_ID"
argument_list|)
expr_stmt|;
name|requestHeader
operator|.
name|setJMSExpiration
argument_list|(
literal|3600000L
argument_list|)
expr_stmt|;
name|JMSPropertyType
name|propType
init|=
operator|new
name|JMSPropertyType
argument_list|()
decl_stmt|;
name|propType
operator|.
name|setName
argument_list|(
name|testReturnPropertyName
argument_list|)
expr_stmt|;
name|propType
operator|.
name|setValue
argument_list|(
literal|"mustReturn"
argument_list|)
expr_stmt|;
name|requestHeader
operator|.
name|getProperty
argument_list|()
operator|.
name|add
argument_list|(
name|propType
argument_list|)
expr_stmt|;
name|propType
operator|=
operator|new
name|JMSPropertyType
argument_list|()
expr_stmt|;
name|propType
operator|.
name|setName
argument_list|(
name|testIgnoredPropertyName
argument_list|)
expr_stmt|;
name|propType
operator|.
name|setValue
argument_list|(
literal|"mustNotReturn"
argument_list|)
expr_stmt|;
name|requestContext
operator|.
name|put
argument_list|(
name|JMSConstants
operator|.
name|JMS_CLIENT_REQUEST_HEADERS
argument_list|,
name|requestHeader
argument_list|)
expr_stmt|;
block|}
name|String
name|greeting
init|=
name|greeter
operator|.
name|greetMe
argument_list|(
literal|"Milestone-"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"no response received from service"
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello Milestone-"
argument_list|,
name|greeting
argument_list|)
expr_stmt|;
if|if
condition|(
name|bp
operator|!=
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|responseContext
init|=
name|bp
operator|.
name|getResponseContext
argument_list|()
decl_stmt|;
name|JMSMessageHeadersType
name|responseHdr
init|=
operator|(
name|JMSMessageHeadersType
operator|)
name|responseContext
operator|.
name|get
argument_list|(
name|JMSConstants
operator|.
name|JMS_CLIENT_RESPONSE_HEADERS
argument_list|)
decl_stmt|;
if|if
condition|(
name|responseHdr
operator|==
literal|null
condition|)
block|{
name|fail
argument_list|(
literal|"response Header should not be null"
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"CORRELATION ID should match :"
argument_list|,
literal|"JMS_SAMPLE_CORRELATION_ID"
operator|.
name|equals
argument_list|(
name|responseHdr
operator|.
name|getJMSCorrelationID
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"response Headers must conain the app property set in request context."
argument_list|,
name|responseHdr
operator|.
name|getProperty
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|JMSPropertyType
name|p
range|:
name|responseHdr
operator|.
name|getProperty
argument_list|()
control|)
block|{
if|if
condition|(
name|testReturnPropertyName
operator|.
name|equals
argument_list|(
name|p
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
literal|"response Headers must match the app property set in request context."
argument_list|,
name|found
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|ex
parameter_list|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|ex
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
block|}
end_class

end_unit

