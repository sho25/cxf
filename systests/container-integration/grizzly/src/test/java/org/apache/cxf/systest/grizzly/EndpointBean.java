begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|grizzly
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PreDestroy
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|soap
operator|.
name|MTOM
import|;
end_import

begin_class
annotation|@
name|WebService
argument_list|(
name|serviceName
operator|=
literal|"EndpointService"
argument_list|,
name|endpointInterface
operator|=
literal|"org.apache.cxf.systest.grizzly.EndpointInterface"
argument_list|,
name|targetNamespace
operator|=
literal|"http://org.apache.cxf/jaxws/endpoint/"
argument_list|)
annotation|@
name|MTOM
specifier|public
class|class
name|EndpointBean
implements|implements
name|EndpointInterface
block|{
specifier|private
name|int
name|count
decl_stmt|;
specifier|private
name|boolean
name|initialized
decl_stmt|;
specifier|public
name|String
name|echo
parameter_list|(
name|String
name|input
parameter_list|)
block|{
name|count
operator|++
expr_stmt|;
return|return
name|input
return|;
block|}
annotation|@
name|PostConstruct
specifier|public
name|void
name|init
parameter_list|()
block|{
name|this
operator|.
name|initialized
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|PreDestroy
specifier|public
name|void
name|destroy
parameter_list|()
block|{
comment|// nothing to do
block|}
specifier|public
name|int
name|getCount
parameter_list|()
block|{
name|this
operator|.
name|ensureInit
argument_list|()
expr_stmt|;
return|return
name|count
return|;
block|}
specifier|public
name|void
name|getException
parameter_list|()
block|{
name|this
operator|.
name|ensureInit
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|WebServiceException
argument_list|(
literal|"Ooops"
argument_list|)
throw|;
block|}
specifier|public
name|DHResponse
name|echoDataHandler
parameter_list|(
name|DHRequest
name|request
parameter_list|)
block|{
name|this
operator|.
name|ensureInit
argument_list|()
expr_stmt|;
name|DataHandler
name|dataHandler
init|=
name|request
operator|.
name|getDataHandler
argument_list|()
decl_stmt|;
try|try
block|{
if|if
condition|(
operator|!
literal|"text/plain"
operator|.
name|equals
argument_list|(
name|dataHandler
operator|.
name|getContentType
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
literal|"Wrong content type"
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
literal|"some string"
operator|.
name|equals
argument_list|(
name|dataHandler
operator|.
name|getContent
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
literal|"Wrong data"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|DataHandler
name|responseData
init|=
operator|new
name|DataHandler
argument_list|(
literal|"Server data"
argument_list|,
literal|"text/plain"
argument_list|)
decl_stmt|;
return|return
operator|new
name|DHResponse
argument_list|(
name|responseData
argument_list|)
return|;
block|}
specifier|private
name|void
name|ensureInit
parameter_list|()
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|initialized
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|()
throw|;
block|}
block|}
block|}
end_class

end_unit

