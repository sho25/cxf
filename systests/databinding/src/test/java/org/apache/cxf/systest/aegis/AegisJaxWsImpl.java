begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|aegis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|annotations
operator|.
name|Logging
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|aegis
operator|.
name|bean
operator|.
name|Item
import|;
end_import

begin_class
annotation|@
name|Logging
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.apache.cxf.systest.aegis.AegisJaxWs"
argument_list|)
specifier|public
class|class
name|AegisJaxWsImpl
implements|implements
name|AegisJaxWs
block|{
name|Map
argument_list|<
name|Integer
argument_list|,
name|Item
argument_list|>
name|items
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Item
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|addItem
parameter_list|(
name|Item
name|item
parameter_list|)
block|{
name|items
operator|.
name|put
argument_list|(
name|item
operator|.
name|getKey
argument_list|()
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
name|getItemsMap
parameter_list|()
block|{
return|return
name|items
return|;
block|}
specifier|public
name|Map
argument_list|<
name|Integer
argument_list|,
name|Item
argument_list|>
name|getItemsMapSpecified
parameter_list|()
block|{
return|return
name|items
return|;
block|}
specifier|public
name|Item
name|getItemByKey
parameter_list|(
name|String
name|key1
parameter_list|,
name|String
name|key2
parameter_list|)
block|{
name|Item
name|fake
init|=
operator|new
name|Item
argument_list|()
decl_stmt|;
name|fake
operator|.
name|setKey
argument_list|(
operator|new
name|Integer
argument_list|(
literal|33
argument_list|)
argument_list|)
expr_stmt|;
name|fake
operator|.
name|setData
argument_list|(
name|key1
operator|+
literal|":"
operator|+
name|key2
argument_list|)
expr_stmt|;
return|return
name|fake
return|;
block|}
specifier|public
name|Integer
name|getSimpleValue
parameter_list|(
name|Integer
name|a
parameter_list|,
name|String
name|b
parameter_list|)
block|{
return|return
name|a
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getStringList
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
return|;
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|echoBigList
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|l
parameter_list|)
block|{
return|return
name|l
return|;
block|}
specifier|public
name|byte
index|[]
name|export
parameter_list|(
name|List
argument_list|<
name|Integer
argument_list|>
name|integers
parameter_list|)
block|{
name|StringBuilder
name|b
init|=
operator|new
name|StringBuilder
argument_list|(
name|integers
operator|.
name|size
argument_list|()
operator|*
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|Integer
name|i
range|:
name|integers
control|)
block|{
name|b
operator|.
name|append
argument_list|(
name|i
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
return|return
name|b
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|(
literal|"utf-8"
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

