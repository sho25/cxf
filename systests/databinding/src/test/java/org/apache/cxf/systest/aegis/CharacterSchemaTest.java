begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|aegis
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Attr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|type
operator|.
name|basic
operator|.
name|CharacterAsStringType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|TestUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|AbstractDependencyInjectionSpringContextTests
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|CharacterSchemaTest
extends|extends
name|AbstractDependencyInjectionSpringContextTests
block|{
specifier|private
name|TestUtilities
name|testUtilities
decl_stmt|;
specifier|public
name|CharacterSchemaTest
parameter_list|()
block|{
name|testUtilities
operator|=
operator|new
name|TestUtilities
argument_list|(
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|String
index|[]
name|getConfigLocations
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
literal|"classpath:aegisSportsServiceBeans.xml"
block|}
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSchema
parameter_list|()
throws|throws
name|Exception
block|{
name|testUtilities
operator|.
name|setBus
argument_list|(
operator|(
name|Bus
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"cxf"
argument_list|)
argument_list|)
expr_stmt|;
name|testUtilities
operator|.
name|addDefaultNamespaces
argument_list|()
expr_stmt|;
name|testUtilities
operator|.
name|addNamespace
argument_list|(
literal|"aegis"
argument_list|,
literal|"http://cxf.apache.org/aegisTypes"
argument_list|)
expr_stmt|;
name|Server
name|s
init|=
name|testUtilities
operator|.
name|getServerForService
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://aegis.systest.cxf.apache.org/"
argument_list|,
literal|"SportsService"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|Document
name|wsdl
init|=
name|testUtilities
operator|.
name|getWSDLDocument
argument_list|(
name|s
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
name|NodeList
name|typeAttrList
init|=
name|testUtilities
operator|.
name|assertValid
argument_list|(
literal|"//xsd:complexType[@name='BeanWithCharacter']/xsd:sequence"
operator|+
literal|"/xsd:element[@name='character']"
operator|+
literal|"/@type"
argument_list|,
name|wsdl
argument_list|)
decl_stmt|;
name|Attr
name|typeAttr
init|=
operator|(
name|Attr
operator|)
name|typeAttrList
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|typeAttrValue
init|=
name|typeAttr
operator|.
name|getValue
argument_list|()
decl_stmt|;
comment|// now, this thing is a qname with a :, and we have to work out if it's correct.
name|String
index|[]
name|pieces
init|=
name|typeAttrValue
operator|.
name|split
argument_list|(
literal|":"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CharacterAsStringType
operator|.
name|CHARACTER_AS_STRING_TYPE_QNAME
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|pieces
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|Node
name|elementNode
init|=
name|typeAttr
operator|.
name|getOwnerElement
argument_list|()
decl_stmt|;
name|String
name|url
init|=
name|testUtilities
operator|.
name|resolveNamespacePrefix
argument_list|(
name|pieces
index|[
literal|0
index|]
argument_list|,
name|elementNode
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CharacterAsStringType
operator|.
name|CHARACTER_AS_STRING_TYPE_QNAME
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

