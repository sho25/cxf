begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|event
operator|.
name|LogEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|event
operator|.
name|LogEventSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|model
operator|.
name|ExtendedWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|model
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|service
operator|.
name|PropertyOrderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|service
operator|.
name|TestService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|test
operator|.
name|TestUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|AbstractJUnit4SpringContextTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath:extrajaxbclass.xml"
block|}
argument_list|)
specifier|public
class|class
name|TestServiceTest
extends|extends
name|AbstractJUnit4SpringContextTests
block|{
specifier|static
specifier|final
name|String
name|PORT
init|=
name|TestUtil
operator|.
name|getPortNumber
argument_list|(
name|TestServiceTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|TestLoggingEventSender
name|fault
init|=
operator|new
name|TestLoggingEventSender
argument_list|()
decl_stmt|;
specifier|private
name|TestUtilities
name|testUtilities
decl_stmt|;
specifier|public
name|TestServiceTest
parameter_list|()
block|{
name|testUtilities
operator|=
operator|new
name|TestUtilities
argument_list|(
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExtraSubClassWithJaxb
parameter_list|()
throws|throws
name|Throwable
block|{
name|Widget
name|expected
init|=
operator|new
name|ExtendedWidget
argument_list|(
literal|42
argument_list|,
literal|"blah"
argument_list|,
literal|"blah"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|TestService
name|testClient
init|=
name|getTestClient
argument_list|()
decl_stmt|;
name|Widget
name|widgetFromService
init|=
name|testClient
operator|.
name|getWidgetById
argument_list|(
literal|42
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|widgetFromService
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExtraSubClassWithJaxbFromEndpoint
parameter_list|()
throws|throws
name|Throwable
block|{
name|Widget
name|expected
init|=
operator|new
name|ExtendedWidget
argument_list|(
literal|42
argument_list|,
literal|"blah"
argument_list|,
literal|"blah"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|TestService
name|testClient
init|=
name|getTestClient
argument_list|()
decl_stmt|;
operator|(
operator|(
name|BindingProvider
operator|)
name|testClient
operator|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|BindingProvider
operator|.
name|ENDPOINT_ADDRESS_PROPERTY
argument_list|,
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/service/TestEndpoint"
argument_list|)
expr_stmt|;
name|Widget
name|widgetFromService
init|=
name|testClient
operator|.
name|getWidgetById
argument_list|(
literal|42
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|widgetFromService
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionPropertyOrder
parameter_list|()
throws|throws
name|Throwable
block|{
operator|(
operator|(
name|Bus
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"cxf"
argument_list|)
operator|)
operator|.
name|getOutFaultInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|(
name|fault
argument_list|)
argument_list|)
expr_stmt|;
name|TestService
name|testClient
init|=
name|getTestClient
argument_list|()
decl_stmt|;
operator|(
operator|(
name|BindingProvider
operator|)
name|testClient
operator|)
operator|.
name|getRequestContext
argument_list|()
operator|.
name|put
argument_list|(
name|BindingProvider
operator|.
name|ENDPOINT_ADDRESS_PROPERTY
argument_list|,
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/service/TestEndpoint"
argument_list|)
expr_stmt|;
try|try
block|{
name|testClient
operator|.
name|echo
argument_list|(
literal|"Exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PropertyOrderException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Expect<message> element is before<data> element :"
operator|+
name|fault
operator|.
name|getMessage
argument_list|()
argument_list|,
name|fault
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"</message><data"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|TestLoggingEventSender
implements|implements
name|LogEventSender
block|{
specifier|private
name|String
name|logMessage
decl_stmt|;
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|logMessage
return|;
block|}
specifier|public
name|void
name|clearMessage
parameter_list|()
block|{
name|logMessage
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|send
parameter_list|(
name|LogEvent
name|event
parameter_list|)
block|{
name|logMessage
operator|=
name|event
operator|.
name|getPayload
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSchema
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/service/TestService?wsdl"
argument_list|)
decl_stmt|;
name|String
name|s
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|url
operator|.
name|openStream
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|s
argument_list|,
name|s
operator|.
name|contains
argument_list|(
literal|"application/octet-stream"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAutoFaultBeanProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|testUtilities
operator|.
name|setBus
argument_list|(
operator|(
name|Bus
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"cxf"
argument_list|)
argument_list|)
expr_stmt|;
name|testUtilities
operator|.
name|addDefaultNamespaces
argument_list|()
expr_stmt|;
name|testUtilities
operator|.
name|addNamespace
argument_list|(
literal|"ts"
argument_list|,
literal|"http://cxf.org.apache/service"
argument_list|)
expr_stmt|;
name|Server
name|s
init|=
name|testUtilities
operator|.
name|getServerForService
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://cxf.org.apache/service"
argument_list|,
literal|"TestServiceService"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|wsdl
init|=
name|testUtilities
operator|.
name|getWSDLDocument
argument_list|(
name|s
argument_list|)
decl_stmt|;
name|testUtilities
operator|.
name|assertInvalid
argument_list|(
literal|"//xsd:complexType[@name='TestServiceException']"
operator|+
literal|"/xsd:sequence/xsd:element[@name='serialVersionUID']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|testUtilities
operator|.
name|assertInvalid
argument_list|(
literal|"//xsd:complexType[@name='TestServiceException']"
operator|+
literal|"/xsd:sequence/xsd:element[@name='privateInt']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
name|testUtilities
operator|.
name|assertValid
argument_list|(
literal|"//xsd:complexType[@name='TestServiceException']"
operator|+
literal|"/xsd:sequence/xsd:element[@name='publicString']"
argument_list|,
name|wsdl
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return the testClient      */
specifier|public
name|TestService
name|getTestClient
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"testClient"
argument_list|,
name|TestService
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

