begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|service
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|model
operator|.
name|ExtendedWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|model
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author shade  */
end_comment

begin_class
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.apache.cxf.systest.jaxb.service.TestService"
argument_list|)
specifier|public
class|class
name|TestServiceImpl
implements|implements
name|TestService
block|{
specifier|public
name|Widget
name|getWidgetById
parameter_list|(
name|long
name|id
parameter_list|)
block|{
return|return
operator|new
name|ExtendedWidget
argument_list|(
name|id
argument_list|,
literal|"blah"
argument_list|,
literal|"blah"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
name|void
name|testExceptionMarshalling
parameter_list|()
throws|throws
name|TestServiceException
block|{
throw|throw
operator|new
name|TestServiceException
argument_list|(
literal|"Your hovercraft is full of eels."
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

