begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ext
operator|.
name|logging
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|model
operator|.
name|NameElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|model
operator|.
name|bar
operator|.
name|BarName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|model
operator|.
name|foo
operator|.
name|FooName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|server
operator|.
name|bar
operator|.
name|BarServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|server
operator|.
name|foo
operator|.
name|FooServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|service
operator|.
name|Getter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|service
operator|.
name|bar
operator|.
name|BarService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxb
operator|.
name|shareclasses
operator|.
name|service
operator|.
name|foo
operator|.
name|FooService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusTestServerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|MultipleServiceShareClassTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|static
specifier|final
name|String
name|PORT
init|=
name|allocatePort
argument_list|(
name|MultipleServiceShareClassTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|ADDRESS1
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/BarService"
decl_stmt|;
specifier|static
specifier|final
name|String
name|ADDRESS2
init|=
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/FooService"
decl_stmt|;
specifier|public
specifier|static
class|class
name|Server
extends|extends
name|AbstractBusTestServerBase
block|{
specifier|protected
name|void
name|run
parameter_list|()
block|{
name|registerService
argument_list|(
name|FooService
operator|.
name|class
argument_list|,
operator|new
name|FooServiceImpl
argument_list|()
argument_list|)
expr_stmt|;
name|registerService
argument_list|(
name|BarService
operator|.
name|class
argument_list|,
operator|new
name|BarServiceImpl
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|registerService
parameter_list|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|service
parameter_list|,
specifier|final
name|Object
name|serviceImpl
parameter_list|)
block|{
specifier|final
name|JaxWsServerFactoryBean
name|builder
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setBus
argument_list|(
name|getBus
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/"
operator|+
name|service
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setServiceBean
argument_list|(
name|serviceImpl
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setServiceClass
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|builder
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"done!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"server did not launch correctly"
argument_list|,
name|launchServer
argument_list|(
name|Server
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCallMultipleService
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|NameElement
name|barName
init|=
operator|new
name|BarName
argument_list|()
decl_stmt|;
name|barName
operator|.
name|setName
argument_list|(
literal|"Bob"
argument_list|)
expr_stmt|;
name|callBar
argument_list|(
name|barName
argument_list|)
expr_stmt|;
specifier|final
name|NameElement
name|fooName
init|=
operator|new
name|FooName
argument_list|()
decl_stmt|;
name|fooName
operator|.
name|setName
argument_list|(
literal|"Alice"
argument_list|)
expr_stmt|;
name|callFoo
argument_list|(
name|fooName
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|callFoo
parameter_list|(
specifier|final
name|NameElement
name|nameElement
parameter_list|)
block|{
name|FooService
name|fooClient
init|=
name|createGetterService
argument_list|(
name|FooService
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|fooClient
operator|.
name|getName
argument_list|(
name|nameElement
argument_list|)
argument_list|,
literal|"Alice"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|callBar
parameter_list|(
specifier|final
name|NameElement
name|nameElement
parameter_list|)
block|{
name|BarService
name|barClient
init|=
name|createGetterService
argument_list|(
name|BarService
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|barClient
operator|.
name|getName
argument_list|(
name|nameElement
argument_list|)
argument_list|,
literal|"Bob"
argument_list|)
expr_stmt|;
block|}
specifier|private
parameter_list|<
name|T
extends|extends
name|Getter
parameter_list|>
name|T
name|createGetterService
parameter_list|(
specifier|final
name|Class
argument_list|<
name|T
argument_list|>
name|serviceClass
parameter_list|)
block|{
name|JaxWsProxyFactoryBean
name|factory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:"
operator|+
name|PORT
operator|+
literal|"/"
operator|+
name|serviceClass
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|create
argument_list|(
name|serviceClass
argument_list|)
return|;
block|}
block|}
end_class

end_unit

