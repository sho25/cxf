begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|jaxrs
operator|.
name|sse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonProcessingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|JacksonJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|hasItems
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractSseTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|private
specifier|final
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testBooksStreamIsReturned
parameter_list|()
throws|throws
name|JsonProcessingException
block|{
name|Response
name|r
init|=
name|createWebClient
argument_list|(
literal|"/rest/api/bookstore/sse/100"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|response
init|=
name|r
operator|.
name|readEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #1"
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #2"
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #3"
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #4"
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBooksStreamIsReturnedFromLastEventId
parameter_list|()
throws|throws
name|JsonProcessingException
block|{
name|Response
name|r
init|=
name|createWebClient
argument_list|(
literal|"/rest/api/bookstore/sse/100"
argument_list|)
operator|.
name|header
argument_list|(
name|HttpHeaders
operator|.
name|LAST_EVENT_ID_HEADER
argument_list|,
literal|150
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|response
init|=
name|r
operator|.
name|readEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 151"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #151"
argument_list|,
literal|151
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 152"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #152"
argument_list|,
literal|152
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 152"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #153"
argument_list|,
literal|153
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 152"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #154"
argument_list|,
literal|154
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBooksAreReturned
parameter_list|()
throws|throws
name|JsonProcessingException
block|{
name|Response
name|r
init|=
name|createWebClient
argument_list|(
literal|"/rest/api/bookstore"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Book
index|[]
name|books
init|=
name|r
operator|.
name|readEntity
argument_list|(
name|Book
index|[]
operator|.
expr|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|books
argument_list|)
argument_list|,
name|hasItems
argument_list|(
operator|new
name|Book
argument_list|(
literal|"New Book #1"
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|Book
argument_list|(
literal|"New Book #2"
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBooksStreamIsBroadcasted
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Collection
argument_list|<
name|Future
argument_list|<
name|Response
argument_list|>
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|results
operator|.
name|add
argument_list|(
name|createWebClient
argument_list|(
literal|"/rest/api/bookstore/broadcast/sse"
argument_list|)
operator|.
name|async
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|createWebClient
argument_list|(
literal|"/rest/api/bookstore/broadcast/close"
argument_list|)
operator|.
name|async
argument_list|()
operator|.
name|post
argument_list|(
literal|null
argument_list|)
operator|.
name|get
argument_list|(
literal|4
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|Future
argument_list|<
name|Response
argument_list|>
name|result
range|:
name|results
control|)
block|{
specifier|final
name|Response
name|r
init|=
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|r
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|response
init|=
name|r
operator|.
name|readEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 1000"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #1000"
argument_list|,
literal|1000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"id: 2000"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
argument_list|,
name|containsString
argument_list|(
literal|"data: "
operator|+
name|toJson
argument_list|(
literal|"New Book #2000"
argument_list|,
literal|2000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|toJson
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|Integer
name|id
parameter_list|)
throws|throws
name|JsonProcessingException
block|{
return|return
name|mapper
operator|.
name|writeValueAsString
argument_list|(
operator|new
name|Book
argument_list|(
name|name
argument_list|,
name|id
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|WebClient
name|createWebClient
parameter_list|(
specifier|final
name|String
name|url
parameter_list|,
specifier|final
name|String
name|media
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|?
argument_list|>
name|providers
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|WebClient
name|wc
init|=
name|WebClient
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|getPort
argument_list|()
operator|+
name|url
argument_list|,
name|providers
argument_list|)
operator|.
name|accept
argument_list|(
name|media
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|wc
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|5000L
argument_list|)
expr_stmt|;
return|return
name|wc
return|;
block|}
specifier|protected
name|WebClient
name|createWebClient
parameter_list|(
specifier|final
name|String
name|url
parameter_list|)
block|{
return|return
name|createWebClient
argument_list|(
name|url
argument_list|,
name|MediaType
operator|.
name|SERVER_SENT_EVENTS
argument_list|)
return|;
block|}
specifier|protected
specifier|abstract
name|int
name|getPort
parameter_list|()
function_decl|;
block|}
end_class

end_unit

