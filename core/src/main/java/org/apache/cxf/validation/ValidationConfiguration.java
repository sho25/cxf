begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|validation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|ConstraintValidatorFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|MessageInterpolator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|ParameterNameProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|TraversableResolver
import|;
end_import

begin_class
specifier|public
class|class
name|ValidationConfiguration
block|{
specifier|private
name|ParameterNameProvider
name|parameterNameProvider
decl_stmt|;
specifier|private
name|MessageInterpolator
name|messageInterpolator
decl_stmt|;
specifier|private
name|TraversableResolver
name|traversableResolver
decl_stmt|;
specifier|private
name|ConstraintValidatorFactory
name|constraintValidatorFactory
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
specifier|public
name|ValidationConfiguration
parameter_list|()
block|{      }
specifier|public
name|ValidationConfiguration
parameter_list|(
name|ParameterNameProvider
name|parameterNameProvider
parameter_list|)
block|{
name|this
operator|.
name|parameterNameProvider
operator|=
name|parameterNameProvider
expr_stmt|;
block|}
specifier|public
name|ParameterNameProvider
name|getParameterNameProvider
parameter_list|()
block|{
return|return
name|parameterNameProvider
return|;
block|}
specifier|public
name|void
name|setParameterNameProvider
parameter_list|(
name|ParameterNameProvider
name|parameterNameProvider
parameter_list|)
block|{
name|this
operator|.
name|parameterNameProvider
operator|=
name|parameterNameProvider
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
specifier|public
name|void
name|setProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
specifier|public
name|MessageInterpolator
name|getMessageInterpolator
parameter_list|()
block|{
return|return
name|messageInterpolator
return|;
block|}
specifier|public
name|void
name|setMessageInterpolator
parameter_list|(
name|MessageInterpolator
name|messageInterpolator
parameter_list|)
block|{
name|this
operator|.
name|messageInterpolator
operator|=
name|messageInterpolator
expr_stmt|;
block|}
specifier|public
name|TraversableResolver
name|getTraversableResolver
parameter_list|()
block|{
return|return
name|traversableResolver
return|;
block|}
specifier|public
name|void
name|setTraversableResolver
parameter_list|(
name|TraversableResolver
name|traversableResolver
parameter_list|)
block|{
name|this
operator|.
name|traversableResolver
operator|=
name|traversableResolver
expr_stmt|;
block|}
specifier|public
name|ConstraintValidatorFactory
name|getConstraintValidatorFactory
parameter_list|()
block|{
return|return
name|constraintValidatorFactory
return|;
block|}
specifier|public
name|void
name|setConstraintValidatorFactory
parameter_list|(
name|ConstraintValidatorFactory
name|constraintValidatorFactory
parameter_list|)
block|{
name|this
operator|.
name|constraintValidatorFactory
operator|=
name|constraintValidatorFactory
expr_stmt|;
block|}
block|}
end_class

end_unit

