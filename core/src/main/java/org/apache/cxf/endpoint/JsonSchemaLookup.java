begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectWriter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|module
operator|.
name|jaxb
operator|.
name|JaxbAnnotationModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_class
specifier|public
class|class
name|JsonSchemaLookup
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|JsonSchemaLookup
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|JsonSchemaLookup
name|singleton
decl_stmt|;
specifier|private
name|ObjectMapper
name|mapper
decl_stmt|;
specifier|public
name|JsonSchemaLookup
parameter_list|()
block|{     }
specifier|public
specifier|static
name|JsonSchemaLookup
name|getSingleton
parameter_list|()
block|{
if|if
condition|(
name|singleton
operator|==
literal|null
condition|)
block|{
comment|// lazy create one
operator|new
name|JsonSchemaLookup
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
block|}
return|return
name|singleton
return|;
block|}
specifier|public
name|void
name|init
parameter_list|()
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
literal|"Creating JsonSchemaLookup instance"
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|mapper
operator|==
literal|null
condition|)
block|{
name|mapper
operator|=
operator|new
name|ObjectMapper
argument_list|()
expr_stmt|;
name|mapper
operator|.
name|setVisibilityChecker
argument_list|(
operator|new
name|IgnorePropertiesBackedByTransientFields
argument_list|(
name|mapper
operator|.
name|getVisibilityChecker
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|JaxbAnnotationModule
name|module1
init|=
operator|new
name|JaxbAnnotationModule
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|registerModule
argument_list|(
name|module1
argument_list|)
expr_stmt|;
name|BeanValidationAnnotationModule
name|module2
init|=
operator|new
name|BeanValidationAnnotationModule
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|registerModule
argument_list|(
name|module2
argument_list|)
expr_stmt|;
block|}
comment|// now lets expose the mbean...
name|singleton
operator|=
name|this
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"Exception during initialization: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|getSchemaForClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Looking up schema for "
operator|+
name|clazz
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|name
init|=
name|clazz
operator|.
name|getName
argument_list|()
decl_stmt|;
try|try
block|{
name|ObjectWriter
name|writer
init|=
name|mapper
operator|.
name|writer
argument_list|()
operator|.
name|with
argument_list|(
operator|new
name|FourSpacePrettyPrinter
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|writer
operator|.
name|writeValueAsString
argument_list|(
name|mapper
operator|.
name|generateJsonSchema
argument_list|(
name|clazz
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|FINEST
argument_list|,
literal|"Failed to generate JSON schema for class "
operator|+
name|name
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|""
return|;
block|}
block|}
specifier|public
name|ObjectMapper
name|getMapper
parameter_list|()
block|{
return|return
name|mapper
return|;
block|}
specifier|public
name|void
name|setMapper
parameter_list|(
name|ObjectMapper
name|mapper
parameter_list|)
block|{
name|this
operator|.
name|mapper
operator|=
name|mapper
expr_stmt|;
block|}
block|}
end_class

end_unit

