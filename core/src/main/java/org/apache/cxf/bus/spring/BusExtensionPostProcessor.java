begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|extension
operator|.
name|BusExtension
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|BeanPostProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContextAware
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|Ordered
import|;
end_import

begin_class
annotation|@
name|NoJSR250Annotations
specifier|public
class|class
name|BusExtensionPostProcessor
implements|implements
name|BeanPostProcessor
implements|,
name|ApplicationContextAware
implements|,
name|Ordered
block|{
specifier|private
name|Bus
name|bus
decl_stmt|;
specifier|private
name|ApplicationContext
name|context
decl_stmt|;
specifier|public
name|void
name|setApplicationContext
parameter_list|(
name|ApplicationContext
name|ctx
parameter_list|)
block|{
name|context
operator|=
name|ctx
expr_stmt|;
block|}
specifier|public
name|int
name|getOrder
parameter_list|()
block|{
return|return
literal|1001
return|;
block|}
specifier|public
name|Object
name|postProcessAfterInitialization
parameter_list|(
name|Object
name|bean
parameter_list|,
name|String
name|beanId
parameter_list|)
block|{
return|return
name|bean
return|;
block|}
specifier|public
name|Object
name|postProcessBeforeInitialization
parameter_list|(
name|Object
name|bean
parameter_list|,
name|String
name|beanId
parameter_list|)
block|{
if|if
condition|(
name|bean
operator|instanceof
name|BusExtension
operator|&&
literal|null
operator|!=
name|getBus
argument_list|()
condition|)
block|{
name|Class
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
name|cls
init|=
operator|(
operator|(
name|BusExtension
operator|)
name|bean
operator|)
operator|.
name|getRegistrationType
argument_list|()
decl_stmt|;
name|registerExt
argument_list|(
name|bean
argument_list|,
name|cls
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|bean
operator|instanceof
name|Bus
operator|&&
name|Bus
operator|.
name|DEFAULT_BUS_ID
operator|.
name|equals
argument_list|(
name|beanId
argument_list|)
condition|)
block|{
name|bus
operator|=
operator|(
name|Bus
operator|)
name|bean
expr_stmt|;
block|}
return|return
name|bean
return|;
block|}
specifier|private
parameter_list|<
name|T
parameter_list|>
name|void
name|registerExt
parameter_list|(
name|Object
name|bean
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
name|getBus
argument_list|()
operator|.
name|setExtension
argument_list|(
name|cls
operator|.
name|cast
argument_list|(
name|bean
argument_list|)
argument_list|,
name|cls
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Bus
name|getBus
parameter_list|()
block|{
if|if
condition|(
name|bus
operator|==
literal|null
condition|)
block|{
name|bus
operator|=
operator|(
name|Bus
operator|)
name|context
operator|.
name|getBean
argument_list|(
name|Bus
operator|.
name|DEFAULT_BUS_ID
argument_list|)
expr_stmt|;
block|}
return|return
name|bus
return|;
block|}
block|}
end_class

end_unit

