begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|managers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ListIterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|injection
operator|.
name|NoJSR250Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|ConfiguredBeanLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ClientLifeCycleListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|ClientLifeCycleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|extension
operator|.
name|BusExtension
import|;
end_import

begin_class
annotation|@
name|NoJSR250Annotations
specifier|public
class|class
name|ClientLifeCycleManagerImpl
implements|implements
name|ClientLifeCycleManager
implements|,
name|BusExtension
block|{
specifier|private
name|CopyOnWriteArrayList
argument_list|<
name|ClientLifeCycleListener
argument_list|>
name|listeners
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<
name|ClientLifeCycleListener
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|ClientLifeCycleManagerImpl
parameter_list|()
block|{              }
specifier|public
name|ClientLifeCycleManagerImpl
parameter_list|(
name|Bus
name|b
parameter_list|)
block|{
name|Collection
argument_list|<
name|?
extends|extends
name|ClientLifeCycleListener
argument_list|>
name|l
init|=
name|b
operator|.
name|getExtension
argument_list|(
name|ConfiguredBeanLocator
operator|.
name|class
argument_list|)
operator|.
name|getBeansOfType
argument_list|(
name|ClientLifeCycleListener
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
name|listeners
operator|.
name|addAll
argument_list|(
name|l
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getRegistrationType
parameter_list|()
block|{
return|return
name|ClientLifeCycleManager
operator|.
name|class
return|;
block|}
specifier|public
name|void
name|registerListener
parameter_list|(
name|ClientLifeCycleListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|addIfAbsent
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clientCreated
parameter_list|(
name|Client
name|client
parameter_list|)
block|{
for|for
control|(
name|ClientLifeCycleListener
name|listener
range|:
name|listeners
control|)
block|{
name|listener
operator|.
name|clientCreated
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|clientDestroyed
parameter_list|(
name|Client
name|client
parameter_list|)
block|{
name|ListIterator
argument_list|<
name|ClientLifeCycleListener
argument_list|>
name|li
init|=
name|listeners
operator|.
name|listIterator
argument_list|(
name|listeners
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
name|li
operator|.
name|hasPrevious
argument_list|()
condition|)
block|{
name|li
operator|.
name|previous
argument_list|()
operator|.
name|clientDestroyed
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|unRegisterListener
parameter_list|(
name|ClientLifeCycleListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|remove
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

