begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|version
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Version
block|{
specifier|private
specifier|static
name|String
name|version
decl_stmt|;
specifier|private
specifier|static
name|String
name|name
decl_stmt|;
specifier|private
specifier|static
name|String
name|fullVersion
decl_stmt|;
specifier|private
specifier|static
name|String
name|buildNumber
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION_BASE
init|=
literal|"/org/apache/cxf/version/"
decl_stmt|;
specifier|private
name|Version
parameter_list|()
block|{
comment|// utility class - never constructed
block|}
specifier|private
specifier|static
name|InputStream
name|getResourceAsStream
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
name|ClassLoader
name|cl
init|=
name|Version
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
decl_stmt|;
name|InputStream
name|ins
init|=
name|cl
operator|.
name|getResourceAsStream
argument_list|(
name|resource
argument_list|)
decl_stmt|;
if|if
condition|(
name|ins
operator|==
literal|null
operator|&&
name|resource
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|ins
operator|=
name|cl
operator|.
name|getResourceAsStream
argument_list|(
name|resource
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ins
return|;
block|}
specifier|private
specifier|static
specifier|synchronized
name|void
name|loadProperties
parameter_list|()
block|{
if|if
condition|(
name|version
operator|==
literal|null
condition|)
block|{
name|Properties
name|p
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
init|(
name|InputStream
name|ins
init|=
name|getResourceAsStream
argument_list|(
name|VERSION_BASE
operator|+
literal|"version.properties"
argument_list|)
init|)
block|{
name|p
operator|.
name|load
argument_list|(
name|ins
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// ignore, will end up with defaults
block|}
name|version
operator|=
name|p
operator|.
name|getProperty
argument_list|(
literal|"product.version"
argument_list|,
literal|"<unknown>"
argument_list|)
expr_stmt|;
name|name
operator|=
name|p
operator|.
name|getProperty
argument_list|(
literal|"product.name"
argument_list|,
literal|"Apache CXF"
argument_list|)
expr_stmt|;
name|buildNumber
operator|=
name|p
operator|.
name|getProperty
argument_list|(
literal|"build.number"
argument_list|,
literal|"<unknown>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|version
operator|.
name|contains
argument_list|(
literal|"SNAPSHOT"
argument_list|)
operator|||
name|version
operator|.
name|contains
argument_list|(
literal|"<unknown>"
argument_list|)
condition|)
block|{
name|fullVersion
operator|=
name|name
operator|+
literal|" "
operator|+
name|version
operator|+
literal|"-"
operator|+
name|buildNumber
expr_stmt|;
block|}
else|else
block|{
name|fullVersion
operator|=
name|name
operator|+
literal|" "
operator|+
name|version
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|String
name|getCurrentVersion
parameter_list|()
block|{
name|loadProperties
argument_list|()
expr_stmt|;
return|return
name|version
return|;
block|}
specifier|public
specifier|static
name|String
name|getName
parameter_list|()
block|{
name|loadProperties
argument_list|()
expr_stmt|;
return|return
name|name
return|;
block|}
comment|/**      * Returns version string as normally used in print, such as Apache CXF 3.2.4      *      */
specifier|public
specifier|static
name|String
name|getCompleteVersionString
parameter_list|()
block|{
name|loadProperties
argument_list|()
expr_stmt|;
return|return
name|fullVersion
return|;
block|}
block|}
end_class

end_unit

