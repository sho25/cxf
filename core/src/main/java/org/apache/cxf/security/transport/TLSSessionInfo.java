begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|security
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|Certificate
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLSession
import|;
end_import

begin_comment
comment|/**  * An immutable struct that contains information about a negotiated  * TLS Session, including the (potentially negotiated) peer certificates  * as well as the currently effective TLS ciper suite.  */
end_comment

begin_class
specifier|public
class|class
name|TLSSessionInfo
block|{
specifier|private
specifier|final
name|SSLSession
name|sslSession
decl_stmt|;
specifier|private
specifier|final
name|Certificate
index|[]
name|peerCertificates
decl_stmt|;
specifier|private
specifier|final
name|String
name|cipherSuite
decl_stmt|;
comment|/**      * This constructor has the effect of calling      * TLSSessionInfo(null, suite)      */
specifier|public
name|TLSSessionInfo
parameter_list|(
specifier|final
name|String
name|suite
parameter_list|)
block|{
name|this
argument_list|(
name|suite
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param       suite      *              The negotiated cipher suite      *              This parameter may not be null, by contract      *      * @param       session      *              The JSSE representation of the SSL Session      *              negotiated with the peer (optionally null, if      *              it is unavailable)      *      * @param       certs      *              the peer X.509 certificate chain (optinally null)      */
specifier|public
name|TLSSessionInfo
parameter_list|(
specifier|final
name|String
name|suite
parameter_list|,
specifier|final
name|SSLSession
name|session
parameter_list|,
specifier|final
name|Certificate
index|[]
name|certs
parameter_list|)
block|{
assert|assert
name|suite
operator|!=
literal|null
assert|;
name|cipherSuite
operator|=
name|suite
expr_stmt|;
name|sslSession
operator|=
name|session
expr_stmt|;
name|peerCertificates
operator|=
name|certs
expr_stmt|;
block|}
comment|/**      * @return      the negotiated cipher suite.  This attribute is      *              guaranteed to be non-null.      */
specifier|public
specifier|final
name|String
name|getChipherSuite
parameter_list|()
block|{
return|return
name|cipherSuite
return|;
block|}
comment|/**      * @return      the peer X.509 certificate chain, as negotiated      *              though the TLS handshake.  This attribute may be      *              null, for example, if the SSL peer has not been      *              authenticated.      */
specifier|public
specifier|final
name|Certificate
index|[]
name|getPeerCertificates
parameter_list|()
block|{
return|return
name|peerCertificates
return|;
block|}
comment|/**      * @return      the negotiated SSL Session.  This attribute may be      *              null if it is unavailable from the underlying      *              transport.      */
specifier|public
specifier|final
name|SSLSession
name|getSSLSession
parameter_list|()
block|{
return|return
name|sslSession
return|;
block|}
block|}
end_class

end_unit

