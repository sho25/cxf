begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|PartialXMLStreamReaderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testReader
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|test
init|=
literal|"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<soap:Header>"
operator|+
literal|"<ns2:SoapHeaderIn xmlns:ns4=\"http://cxf.apache.org/transform/fault\" "
operator|+
literal|"xmlns:ns3=\"http://cxf.apache.org/transform/header/element\" "
operator|+
literal|"xmlns:ns2=\"http://cxf.apache.org/transform/header\" "
operator|+
literal|"xmlns=\"http://cxf.apache.org/transform/test\">"
operator|+
literal|"<ns2:OperationalMode>SIMULATION1</ns2:OperationalMode>"
operator|+
literal|"<ns2:SomeComplexHeaderType>"
operator|+
literal|"<ns3:CallerCorrelationId>SomeComplexValue</ns3:CallerCorrelationId>"
operator|+
literal|"</ns2:SomeComplexHeaderType>"
operator|+
literal|"</ns2:SoapHeaderIn>"
operator|+
literal|"</soap:Header>"
operator|+
literal|"<soap:Body>"
operator|+
literal|"<TransformTestRequest xmlns=\"http://cxf.apache.org/transform/test\" "
operator|+
literal|"xmlns:ns2=\"http://cxf.apache.org/transform/header\" "
operator|+
literal|"xmlns:ns3=\"http://cxf.apache.org/transform/header/element\" "
operator|+
literal|"xmlns:ns4=\"http://cxf.apache.org/transform/fault\" />"
operator|+
literal|"</soap:Body></soap:Envelope>"
decl_stmt|;
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
operator|new
name|StringReader
argument_list|(
name|test
argument_list|)
argument_list|)
decl_stmt|;
name|QName
name|bodyTag
init|=
operator|new
name|QName
argument_list|(
literal|"http://schemas.xmlsoap.org/soap/envelope/"
argument_list|,
literal|"Body"
argument_list|)
decl_stmt|;
name|PartialXMLStreamReader
name|filteredReader
init|=
operator|new
name|PartialXMLStreamReader
argument_list|(
name|reader
argument_list|,
name|bodyTag
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|filteredReader
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|XMLStreamWriter
name|writer
init|=
name|StaxUtils
operator|.
name|createXMLStreamWriter
argument_list|(
name|bos
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|copy
argument_list|(
name|doc
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|String
name|value
init|=
name|bos
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
operator|(
literal|"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<soap:Header>"
operator|+
literal|"<ns2:SoapHeaderIn xmlns=\"http://cxf.apache.org/transform/test\" "
operator|+
literal|"xmlns:ns2=\"http://cxf.apache.org/transform/header\" "
operator|+
literal|"xmlns:ns3=\"http://cxf.apache.org/transform/header/element\" "
operator|+
literal|"xmlns:ns4=\"http://cxf.apache.org/transform/fault\">"
operator|+
literal|"<ns2:OperationalMode>SIMULATION1</ns2:OperationalMode>"
operator|+
literal|"<ns2:SomeComplexHeaderType>"
operator|+
literal|"<ns3:CallerCorrelationId>SomeComplexValue</ns3:CallerCorrelationId>"
operator|+
literal|"</ns2:SomeComplexHeaderType></ns2:SoapHeaderIn></soap:Header>"
operator|+
literal|"<soap:Body/>"
operator|+
literal|"</soap:Envelope>"
operator|)
operator|.
name|equals
argument_list|(
name|value
operator|.
name|trim
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

