begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Array
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|validation
operator|.
name|BeanValidationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|validation
operator|.
name|ValidationConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|PackageUtilsTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetClassPackageName
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Should get same packageName"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEmptyPackageName
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|className
init|=
literal|"HelloWorld"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Should return empty string"
argument_list|,
literal|""
argument_list|,
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|className
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameSingleClass
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesInSamePackage
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|Number
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"java.lang"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesInDiffPackages
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesCommonRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|Annotation
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"java.lang"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesCommonRoot2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Annotation
operator|.
name|class
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"java.lang"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesCommonRoot3
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Annotation
operator|.
name|class
argument_list|,
name|Array
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"java.lang"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesCommonRoot4
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|CXFBusFactory
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBContextCache
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesCommonRoot5
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|CXFBusFactory
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBContextCache
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameManyClassesCommonRoot6
parameter_list|()
block|{
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|BusApplicationContext
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|spring
operator|.
name|JAXBBeanFactory
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedPackageNameIgnoreProxyClasses
parameter_list|()
block|{
comment|// build any proxy object resulting in com.sun.proxy...
name|Object
name|proxy
init|=
name|ProxyHelper
operator|.
name|getProxy
argument_list|(
name|BeanValidationProvider
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Serializable
operator|.
name|class
block|}
argument_list|,
operator|new
name|ReflectionInvokationHandler
argument_list|(
operator|new
name|ValidationConfiguration
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|packageName
init|=
name|PackageUtils
operator|.
name|getSharedPackageName
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|proxy
operator|.
name|getClass
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|BusApplicationContext
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|spring
operator|.
name|JAXBBeanFactory
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf"
argument_list|,
name|packageName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

