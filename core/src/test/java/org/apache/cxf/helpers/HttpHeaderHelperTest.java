begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|HttpHeaderHelperTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testMapCharset
parameter_list|()
block|{
specifier|final
name|String
name|charset
init|=
name|StandardCharsets
operator|.
name|UTF_8
operator|.
name|name
argument_list|()
decl_stmt|;
name|String
name|cs
init|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
name|charset
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|charset
argument_list|,
name|cs
argument_list|)
expr_stmt|;
name|cs
operator|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
literal|"\""
operator|+
name|charset
operator|+
literal|"\""
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|charset
argument_list|,
name|cs
argument_list|)
expr_stmt|;
name|cs
operator|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
literal|"'"
operator|+
name|charset
operator|+
literal|"'"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|charset
argument_list|,
name|cs
argument_list|)
expr_stmt|;
name|cs
operator|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpHeaderHelper
operator|.
name|ISO88591
argument_list|,
name|cs
argument_list|)
expr_stmt|;
name|cs
operator|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
literal|"''"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpHeaderHelper
operator|.
name|ISO88591
argument_list|,
name|cs
argument_list|)
expr_stmt|;
name|cs
operator|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
literal|"wrong-charset-name"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|cs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyCharset
parameter_list|()
block|{
name|String
name|cs
init|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
name|HttpHeaderHelper
operator|.
name|findCharset
argument_list|(
literal|"foo/bar; charset="
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpHeaderHelper
operator|.
name|ISO88591
argument_list|,
name|cs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyCharset2
parameter_list|()
block|{
name|String
name|cs
init|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
name|HttpHeaderHelper
operator|.
name|findCharset
argument_list|(
literal|"foo/bar; charset=;"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpHeaderHelper
operator|.
name|ISO88591
argument_list|,
name|cs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoCharset
parameter_list|()
block|{
name|String
name|cs
init|=
name|HttpHeaderHelper
operator|.
name|mapCharset
argument_list|(
name|HttpHeaderHelper
operator|.
name|findCharset
argument_list|(
literal|"foo/bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpHeaderHelper
operator|.
name|ISO88591
argument_list|,
name|cs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindCharset
parameter_list|()
block|{
specifier|final
name|String
name|charset
init|=
name|StandardCharsets
operator|.
name|UTF_8
operator|.
name|name
argument_list|()
decl_stmt|;
name|String
name|cs
init|=
name|HttpHeaderHelper
operator|.
name|findCharset
argument_list|(
literal|"foo/bar; charset="
operator|+
name|charset
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|charset
argument_list|,
name|cs
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

