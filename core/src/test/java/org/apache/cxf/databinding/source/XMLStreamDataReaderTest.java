begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|databinding
operator|.
name|source
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|XMLStreamDataReaderTest
extends|extends
name|Assert
block|{
specifier|private
specifier|static
specifier|final
name|byte
index|[]
name|DUMMY_DATA
init|=
literal|"<ns:dummy xmlns:ns='http://www.apache.org/cxf'/>"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testCloseOriginalInputStream
parameter_list|()
throws|throws
name|Exception
block|{
name|XMLStreamDataReader
name|reader
init|=
operator|new
name|XMLStreamDataReader
argument_list|()
decl_stmt|;
name|Message
name|msg
init|=
operator|new
name|MessageImpl
argument_list|()
decl_stmt|;
name|TestInputStream
name|in1
init|=
operator|new
name|TestInputStream
argument_list|(
name|DUMMY_DATA
argument_list|)
decl_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|in1
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setProperty
argument_list|(
name|Message
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|msg
argument_list|)
expr_stmt|;
name|Object
name|obj
init|=
name|reader
operator|.
name|read
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://www.apache.org/cxf"
argument_list|,
literal|"dummy"
argument_list|)
argument_list|,
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|in1
argument_list|)
argument_list|,
name|XMLStreamReader
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|obj
operator|instanceof
name|XMLStreamReader
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|in1
operator|.
name|isClosed
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|XMLStreamReader
operator|)
name|obj
operator|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|in1
operator|.
name|isClosed
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|TestInputStream
extends|extends
name|ByteArrayInputStream
block|{
specifier|private
name|boolean
name|closed
decl_stmt|;
name|TestInputStream
parameter_list|(
name|byte
index|[]
name|buf
parameter_list|)
block|{
name|super
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|closed
operator|=
literal|true
expr_stmt|;
name|super
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isClosed
parameter_list|()
block|{
return|return
name|closed
return|;
block|}
block|}
block|}
end_class

end_unit

