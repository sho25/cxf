begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|performance
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ArrayOfMeshInterfaceObject
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ArrayOfSimpleEvent
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|Benchmark
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|EchoMeshInterfaceObjectsResponse
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|EchoSimpleEventsResponse
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|MeshInterfaceObject
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ReceiveMeshInterfaceObjectsResponse
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ReceiveSimpleEventsResponse
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SendMeshInterfaceObjectsResponse
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SendSimpleEventsResponse
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SimpleEvent
import|;
end_import

begin_class
annotation|@
name|javax
operator|.
name|jws
operator|.
name|WebService
argument_list|(
name|name
operator|=
literal|"Benchmark"
argument_list|,
name|serviceName
operator|=
literal|"Benchmark"
argument_list|,
name|portName
operator|=
literal|"Benchmark"
argument_list|,
name|targetNamespace
operator|=
literal|"http://www.extreme.indiana.edu/wsdl/Benchmark1"
argument_list|,
name|endpointInterface
operator|=
literal|"edu.indiana.extreme.wsdl.benchmark1.Benchmark"
argument_list|)
specifier|public
class|class
name|BenchmarkImpl
implements|implements
name|Benchmark
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|BenchmarkImpl
operator|.
name|class
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|BenchmarkImpl
parameter_list|()
block|{
name|LOG
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|INFO
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoVoid(*      */
specifier|public
name|void
name|echoVoid
parameter_list|()
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoVoid"
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoBase64(byte[]  input )*      */
specifier|public
name|byte
index|[]
name|echoBase64
parameter_list|(
name|byte
index|[]
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoBase64"
argument_list|)
expr_stmt|;
return|return
name|input
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoStrings(java.util.List<java.lang.String>  input )*      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|echoStrings
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoStrings"
argument_list|)
expr_stmt|;
return|return
name|input
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoInts(java.util.List<java.lang.Integer>  input )*      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|echoInts
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoInts"
argument_list|)
expr_stmt|;
return|return
name|input
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoDoubles(java.util.List<java.lang.Double>  input )*      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Double
argument_list|>
name|echoDoubles
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Double
argument_list|>
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoDoubles"
argument_list|)
expr_stmt|;
return|return
name|input
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoSimpleEvents(edu.indiana.extreme.wsdl.benchmark1.EchoSimpleEventsRequest  input )*      */
specifier|public
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|EchoSimpleEventsResponse
name|echoSimpleEvents
parameter_list|(
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|EchoSimpleEventsRequest
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoSimpleEvents"
argument_list|)
expr_stmt|;
name|EchoSimpleEventsResponse
name|ret
init|=
operator|new
name|EchoSimpleEventsResponse
argument_list|()
decl_stmt|;
name|ret
operator|.
name|setEchoSimpleEventsReturn
argument_list|(
name|input
operator|.
name|getInput
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#echoMeshInterfaceObjects(edu.indiana.extreme.wsdl.benchmark1.EchoMeshInterfaceObjectsRequest  input )*      */
specifier|public
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|EchoMeshInterfaceObjectsResponse
name|echoMeshInterfaceObjects
parameter_list|(
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|EchoMeshInterfaceObjectsRequest
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation echoMeshInterfaceObjects"
argument_list|)
expr_stmt|;
name|EchoMeshInterfaceObjectsResponse
name|ret
init|=
operator|new
name|EchoMeshInterfaceObjectsResponse
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MeshInterfaceObject
argument_list|>
name|output
init|=
name|ret
operator|.
name|getEchoMeshInterfaceObjectReturn
argument_list|()
decl_stmt|;
for|for
control|(
name|MeshInterfaceObject
name|mio
range|:
name|input
operator|.
name|getInput
argument_list|()
control|)
block|{
name|output
operator|.
name|add
argument_list|(
name|mio
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#receiveBase64(byte[]  input )*      */
specifier|public
name|int
name|receiveBase64
parameter_list|(
name|byte
index|[]
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation receiveBase64"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Executing operation receiveBase64 "
operator|+
name|input
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|input
operator|.
name|length
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#receiveStrings(java.util.List<java.lang.String>  input )*      */
specifier|public
name|int
name|receiveStrings
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation receiveStrings"
argument_list|)
expr_stmt|;
return|return
name|input
operator|.
name|size
argument_list|()
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#receiveInts(java.util.List<java.lang.Integer>  input )*      */
specifier|public
name|int
name|receiveInts
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation receiveInts"
argument_list|)
expr_stmt|;
return|return
name|input
operator|.
name|size
argument_list|()
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#receiveDoubles(java.util.List<java.lang.Double>  input )*      */
specifier|public
name|int
name|receiveDoubles
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Double
argument_list|>
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation receiveDoubles"
argument_list|)
expr_stmt|;
return|return
name|input
operator|.
name|size
argument_list|()
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#receiveSimpleEvents(edu.indiana.extreme.wsdl.benchmark1.ReceiveSimpleEventsRequest  input )*      */
specifier|public
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ReceiveSimpleEventsResponse
name|receiveSimpleEvents
parameter_list|(
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ReceiveSimpleEventsRequest
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation receiveSimpleEvents"
argument_list|)
expr_stmt|;
name|ReceiveSimpleEventsResponse
name|ret
init|=
operator|new
name|ReceiveSimpleEventsResponse
argument_list|()
decl_stmt|;
name|ret
operator|.
name|setReceiveSimpleEventsReturn
argument_list|(
name|input
operator|.
name|getInput
argument_list|()
operator|.
name|getItem
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#receiveMeshInterfaceObjects(edu.indiana.extreme.wsdl.benchmark1.ReceiveMeshInterfaceObjectsRequest  input )*      */
specifier|public
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ReceiveMeshInterfaceObjectsResponse
name|receiveMeshInterfaceObjects
parameter_list|(
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|ReceiveMeshInterfaceObjectsRequest
name|input
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation receiveMeshInterfaceObjects"
argument_list|)
expr_stmt|;
name|ReceiveMeshInterfaceObjectsResponse
name|ret
init|=
operator|new
name|ReceiveMeshInterfaceObjectsResponse
argument_list|()
decl_stmt|;
name|ret
operator|.
name|setReceiveMeshInterfaceObjectsReturn
argument_list|(
name|input
operator|.
name|getInput
argument_list|()
operator|.
name|getItem
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#sendBase64(int  size )*      */
specifier|public
name|byte
index|[]
name|sendBase64
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation sendBase64"
argument_list|)
expr_stmt|;
return|return
operator|new
name|byte
index|[
name|size
index|]
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#sendStrings(int  size )*      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|sendStrings
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation sendStrings"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|0
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|String
name|temp
init|=
literal|"s"
operator|+
name|i
decl_stmt|;
name|ret
operator|.
name|add
argument_list|(
name|temp
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#sendInts(int  size )*      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|sendInts
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation sendInts"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|ret
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|Integer
name|temp
init|=
name|i
decl_stmt|;
name|ret
operator|.
name|add
argument_list|(
name|temp
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#sendDoubles(int  size )*      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Double
argument_list|>
name|sendDoubles
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation sendDoubles"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Double
argument_list|>
name|ret
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|double
name|temp
init|=
name|i
decl_stmt|;
name|ret
operator|.
name|add
argument_list|(
name|temp
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#sendSimpleEvents(edu.indiana.extreme.wsdl.benchmark1.SendSimpleEventsRequest  size )*      */
specifier|public
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SendSimpleEventsResponse
name|sendSimpleEvents
parameter_list|(
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SendSimpleEventsRequest
name|size
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation sendSimpleEvents"
argument_list|)
expr_stmt|;
name|SendSimpleEventsResponse
name|ret
init|=
operator|new
name|SendSimpleEventsResponse
argument_list|()
decl_stmt|;
name|ArrayOfSimpleEvent
name|value
init|=
operator|new
name|ArrayOfSimpleEvent
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SimpleEvent
argument_list|>
name|item
init|=
name|value
operator|.
name|getItem
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
operator|.
name|getSize
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|SimpleEvent
name|object
init|=
operator|new
name|SimpleEvent
argument_list|()
decl_stmt|;
name|object
operator|.
name|setSequenceNumber
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|object
operator|.
name|setMessage
argument_list|(
literal|"Message #"
operator|+
name|i
argument_list|)
expr_stmt|;
name|object
operator|.
name|setTimestamp
argument_list|(
name|Math
operator|.
name|sqrt
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|add
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setSendSimpleEventsReturn
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
comment|/* (non-Javadoc)      * @see edu.indiana.extreme.wsdl.benchmark1.Benchmark#sendMeshInterfaceObjects(edu.indiana.extreme.wsdl.benchmark1.SendMeshInterfaceObjectsRequest  size )*      */
specifier|public
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SendMeshInterfaceObjectsResponse
name|sendMeshInterfaceObjects
parameter_list|(
name|edu
operator|.
name|indiana
operator|.
name|extreme
operator|.
name|wsdl
operator|.
name|benchmark1
operator|.
name|SendMeshInterfaceObjectsRequest
name|size
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Executing operation sendMeshInterfaceObjects"
argument_list|)
expr_stmt|;
name|SendMeshInterfaceObjectsResponse
name|ret
init|=
operator|new
name|SendMeshInterfaceObjectsResponse
argument_list|()
decl_stmt|;
name|ArrayOfMeshInterfaceObject
name|value
init|=
operator|new
name|ArrayOfMeshInterfaceObject
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MeshInterfaceObject
argument_list|>
name|item
init|=
name|value
operator|.
name|getItem
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
operator|.
name|getSize
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|MeshInterfaceObject
name|object
init|=
operator|new
name|MeshInterfaceObject
argument_list|()
decl_stmt|;
name|object
operator|.
name|setX
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|object
operator|.
name|setY
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|object
operator|.
name|setValue
argument_list|(
name|Math
operator|.
name|sqrt
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|add
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setSendMeshInterfaceObjectsReturn
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

