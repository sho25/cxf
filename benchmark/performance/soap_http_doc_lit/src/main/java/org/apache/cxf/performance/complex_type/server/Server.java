begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|performance
operator|.
name|complex_type
operator|.
name|server
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_class
specifier|public
class|class
name|Server
implements|implements
name|Runnable
block|{
specifier|public
name|Server
parameter_list|(
name|String
name|address
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting Server"
argument_list|)
expr_stmt|;
name|Object
name|implementor
init|=
operator|new
name|ServerImpl
argument_list|()
decl_stmt|;
name|Endpoint
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|implementor
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Server published "
operator|+
name|address
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|host
init|=
literal|"localhost"
decl_stmt|;
name|String
name|protocol
init|=
literal|"http"
decl_stmt|;
name|String
name|cfg
init|=
literal|null
decl_stmt|;
name|boolean
name|wait
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|args
operator|.
name|length
condition|;
name|x
operator|++
control|)
block|{
if|if
condition|(
literal|"-host"
operator|.
name|equals
argument_list|(
name|args
index|[
name|x
index|]
argument_list|)
condition|)
block|{
name|host
operator|=
name|args
index|[
name|x
operator|+
literal|1
index|]
expr_stmt|;
name|x
operator|++
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"-protocol"
operator|.
name|equals
argument_list|(
name|args
index|[
name|x
index|]
argument_list|)
condition|)
block|{
name|protocol
operator|=
name|args
index|[
name|x
operator|+
literal|1
index|]
expr_stmt|;
name|x
operator|++
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"-BUScfg"
operator|.
name|equals
argument_list|(
name|args
index|[
name|x
index|]
argument_list|)
condition|)
block|{
name|cfg
operator|=
name|args
index|[
name|x
operator|+
literal|1
index|]
expr_stmt|;
name|x
operator|++
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"-nowait"
operator|.
name|equals
argument_list|(
name|args
index|[
name|x
index|]
argument_list|)
condition|)
block|{
name|wait
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|cfg
operator|==
literal|null
operator|||
literal|"none"
operator|.
name|equals
argument_list|(
name|cfg
argument_list|)
condition|)
block|{
name|BusFactory
operator|.
name|getDefaultBus
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
operator|new
name|SpringBusFactory
argument_list|()
operator|.
name|createBus
argument_list|(
name|cfg
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
name|protocol
operator|+
literal|"://"
operator|+
name|host
operator|+
literal|":8080/cxf-benchmark-soapdoclit/services/SoapHttpDocLitPort"
argument_list|)
decl_stmt|;
name|server
operator|.
name|run
argument_list|()
expr_stmt|;
if|if
condition|(
name|wait
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000000
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"running server"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"READY"
argument_list|)
expr_stmt|;
block|}
name|void
name|shutdown
parameter_list|(
name|boolean
name|wait
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"shutting down server"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

