begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tracing
operator|.
name|htrace
operator|.
name|ext
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|htrace
operator|.
name|core
operator|.
name|Span
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|htrace
operator|.
name|core
operator|.
name|Tracer
import|;
end_import

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|pattern
operator|.
name|ClassicConverter
import|;
end_import

begin_import
import|import
name|ch
operator|.
name|qos
operator|.
name|logback
operator|.
name|classic
operator|.
name|spi
operator|.
name|ILoggingEvent
import|;
end_import

begin_comment
comment|/**  * Logback conversion rule implementation to enrich log records with tracing details like spanId and tracerId.   * For example, here is sample logback.xml configuration snippet:  *   *<conversionRule conversionWord="trace" converterClass="org.apache.cxf.tracing.htrace.ext.LogbackSpanConverter" />  *   *<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">  *<encoder>  *<pattern>[%level] [%trace] %d{yyyy-MM-dd HH:mm:ss.SSS} %logger{36} %msg%n</pattern>  *</encoder>  *</appender>  *   * Which produces the following sample output:  *    *  [INFO] [-, -] 2017-03-11 14:40:13.603 org.eclipse.jetty.server.Server Started @2731ms  *  [INFO] [tracer-server/192.168.0.101, span: 6d3e0d975d4c883cce12aee1fd8f3e7e] 2017-03-11 14:40:24.013   *     com.example.rs.PeopleRestService Getting all employees  *  [INFO] [tracer-server/192.168.0.101, span: 6d3e0d975d4c883c7592f4c2317dec22] 2017-03-11 14:40:28.017   *     com.example.rs.PeopleRestService Looking up manager in the DB database  *  */
end_comment

begin_class
specifier|public
class|class
name|LogbackSpanConverter
extends|extends
name|ClassicConverter
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SPAN
init|=
literal|"span"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMPTY_TRACE
init|=
literal|"-, -"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|convert
parameter_list|(
name|ILoggingEvent
name|event
parameter_list|)
block|{
specifier|final
name|Span
name|currentSpan
init|=
name|Tracer
operator|.
name|getCurrentSpan
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentSpan
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|StringBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|currentSpan
operator|.
name|getTracerId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
operator|.
name|append
argument_list|(
name|SPAN
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
operator|.
name|append
argument_list|(
name|currentSpan
operator|.
name|getSpanId
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
return|return
name|EMPTY_TRACE
return|;
block|}
block|}
end_class

end_unit

