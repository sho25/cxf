begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tracing
operator|.
name|htrace
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|endpoint
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|AbstractFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ServerProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|htrace
operator|.
name|core
operator|.
name|HTraceConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|htrace
operator|.
name|core
operator|.
name|Tracer
import|;
end_import

begin_class
specifier|public
class|class
name|HTraceFeature
extends|extends
name|AbstractFeature
block|{
specifier|private
name|HTraceConfiguration
name|configuration
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|public
name|HTraceFeature
parameter_list|()
block|{
name|this
argument_list|(
name|HTraceConfiguration
operator|.
name|EMPTY
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HTraceFeature
parameter_list|(
specifier|final
name|HTraceConfiguration
name|configuration
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
specifier|final
name|Server
name|server
parameter_list|,
specifier|final
name|Bus
name|bus
parameter_list|)
block|{
specifier|final
name|ServerProviderFactory
name|providerFactory
init|=
operator|(
name|ServerProviderFactory
operator|)
name|server
operator|.
name|getEndpoint
argument_list|()
operator|.
name|get
argument_list|(
name|ServerProviderFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Tracer
name|tracer
init|=
operator|new
name|Tracer
operator|.
name|Builder
argument_list|()
operator|.
name|conf
argument_list|(
name|configuration
argument_list|)
operator|.
name|name
argument_list|(
name|name
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
if|if
condition|(
name|providerFactory
operator|!=
literal|null
condition|)
block|{
name|providerFactory
operator|.
name|setUserProviders
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|HTraceProvider
argument_list|(
name|tracer
argument_list|)
argument_list|,
operator|new
name|HTraceContextProvider
argument_list|(
name|tracer
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setConfiguration
parameter_list|(
specifier|final
name|HTraceConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
specifier|public
name|HTraceConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

