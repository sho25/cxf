begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tracing
operator|.
name|brave
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|FeatureContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tracing
operator|.
name|brave
operator|.
name|HttpServerSpanParser
import|;
end_import

begin_import
import|import
name|brave
operator|.
name|Tracing
import|;
end_import

begin_import
import|import
name|brave
operator|.
name|http
operator|.
name|HttpTracing
import|;
end_import

begin_class
annotation|@
name|Provider
specifier|public
class|class
name|BraveFeature
implements|implements
name|Feature
block|{
specifier|private
specifier|final
name|HttpTracing
name|brave
decl_stmt|;
specifier|public
name|BraveFeature
parameter_list|()
block|{
name|this
argument_list|(
literal|"cxf-svc-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BraveFeature
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|HttpTracing
operator|.
name|newBuilder
argument_list|(
name|Tracing
operator|.
name|newBuilder
argument_list|()
operator|.
name|localServiceName
argument_list|(
name|name
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|serverParser
argument_list|(
operator|new
name|HttpServerSpanParser
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BraveFeature
parameter_list|(
specifier|final
name|Tracing
name|tracing
parameter_list|)
block|{
name|this
argument_list|(
name|HttpTracing
operator|.
name|newBuilder
argument_list|(
name|tracing
argument_list|)
operator|.
name|serverParser
argument_list|(
operator|new
name|HttpServerSpanParser
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BraveFeature
parameter_list|(
specifier|final
name|HttpTracing
name|brave
parameter_list|)
block|{
name|this
operator|.
name|brave
operator|=
name|brave
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|configure
parameter_list|(
name|FeatureContext
name|context
parameter_list|)
block|{
name|context
operator|.
name|register
argument_list|(
operator|new
name|BraveProvider
argument_list|(
name|brave
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|register
argument_list|(
operator|new
name|BraveContextProvider
argument_list|(
name|brave
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

