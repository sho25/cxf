begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|spi
operator|.
name|CreationalContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|RuntimeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|FeatureContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|cdi
operator|.
name|event
operator|.
name|DisposableCreationalContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ConfigurableImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ConfigurableImpl
operator|.
name|Instantiator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|impl
operator|.
name|ConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|provider
operator|.
name|ServerConfigurableFactory
import|;
end_import

begin_comment
comment|/**   * Creates the instance of Configurable<?> suitable for CDI-managed runtime.  */
end_comment

begin_class
specifier|public
class|class
name|CdiServerConfigurableFactory
implements|implements
name|ServerConfigurableFactory
block|{
specifier|private
specifier|final
name|BeanManager
name|beanManager
decl_stmt|;
name|CdiServerConfigurableFactory
parameter_list|(
specifier|final
name|BeanManager
name|beanManager
parameter_list|)
block|{
name|this
operator|.
name|beanManager
operator|=
name|beanManager
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Configurable
argument_list|<
name|FeatureContext
argument_list|>
name|create
parameter_list|(
name|FeatureContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|CdiServerFeatureContextConfigurable
argument_list|(
name|context
argument_list|,
name|beanManager
argument_list|)
return|;
block|}
comment|/**       * Instantiates the instance of the provider using CDI/BeanManager (or fall back      * to default strategy of CDI bean is not available).      */
specifier|private
specifier|static
class|class
name|CdiInstantiator
implements|implements
name|Instantiator
block|{
specifier|private
specifier|final
name|BeanManager
name|beanManager
decl_stmt|;
name|CdiInstantiator
parameter_list|(
specifier|final
name|BeanManager
name|beanManager
parameter_list|)
block|{
name|this
operator|.
name|beanManager
operator|=
name|beanManager
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Object
name|create
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|)
block|{
specifier|final
name|Set
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
name|candidates
init|=
name|beanManager
operator|.
name|getBeans
argument_list|(
name|cls
argument_list|)
decl_stmt|;
specifier|final
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
init|=
name|beanManager
operator|.
name|resolve
argument_list|(
name|candidates
argument_list|)
decl_stmt|;
if|if
condition|(
name|bean
operator|!=
literal|null
condition|)
block|{
specifier|final
name|CreationalContext
argument_list|<
name|?
argument_list|>
name|context
init|=
name|beanManager
operator|.
name|createCreationalContext
argument_list|(
name|bean
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|beanManager
operator|.
name|isNormalScope
argument_list|(
name|bean
operator|.
name|getScope
argument_list|()
argument_list|)
condition|)
block|{
name|beanManager
operator|.
name|fireEvent
argument_list|(
operator|new
name|DisposableCreationalContext
argument_list|(
name|context
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|beanManager
operator|.
name|getReference
argument_list|(
name|bean
argument_list|,
name|cls
argument_list|,
name|context
argument_list|)
return|;
block|}
else|else
block|{
comment|// No CDI bean available, falling back to default instantiation strategy
return|return
name|ConfigurationImpl
operator|.
name|createProvider
argument_list|(
name|cls
argument_list|)
return|;
block|}
block|}
block|}
specifier|private
specifier|static
class|class
name|CdiServerFeatureContextConfigurable
extends|extends
name|ConfigurableImpl
argument_list|<
name|FeatureContext
argument_list|>
block|{
specifier|private
specifier|final
name|Instantiator
name|instantiator
decl_stmt|;
name|CdiServerFeatureContextConfigurable
parameter_list|(
name|FeatureContext
name|mc
parameter_list|,
name|BeanManager
name|beanManager
parameter_list|)
block|{
name|super
argument_list|(
name|mc
argument_list|,
name|RuntimeType
operator|.
name|SERVER
argument_list|)
expr_stmt|;
name|this
operator|.
name|instantiator
operator|=
operator|new
name|CdiInstantiator
argument_list|(
name|beanManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Instantiator
name|getInstantiator
parameter_list|()
block|{
return|return
name|instantiator
return|;
block|}
block|}
block|}
end_class

end_unit

