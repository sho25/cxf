begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|event
operator|.
name|Observes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|AfterDeploymentValidation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Extension
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|ProcessBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ApplicationPath
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_comment
comment|/**  * Apache CXF portable CDI extension to support initialization of JAX-RS / JAX-WS resources.    */
end_comment

begin_class
specifier|public
class|class
name|JAXRSCdiResourceExtension
implements|implements
name|Extension
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
name|applicationBeans
init|=
operator|new
name|ArrayList
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
name|serviceBeans
init|=
operator|new
name|ArrayList
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
name|providerBeans
init|=
operator|new
name|ArrayList
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Application
argument_list|>
name|applications
init|=
operator|new
name|ArrayList
argument_list|<
name|Application
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|services
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|providers
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|collect
parameter_list|(
annotation|@
name|Observes
specifier|final
name|ProcessBean
argument_list|<
name|T
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getAnnotated
argument_list|()
operator|.
name|isAnnotationPresent
argument_list|(
name|ApplicationPath
operator|.
name|class
argument_list|)
condition|)
block|{
name|applicationBeans
operator|.
name|add
argument_list|(
name|event
operator|.
name|getBean
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|event
operator|.
name|getAnnotated
argument_list|()
operator|.
name|isAnnotationPresent
argument_list|(
name|Path
operator|.
name|class
argument_list|)
condition|)
block|{
name|serviceBeans
operator|.
name|add
argument_list|(
name|event
operator|.
name|getBean
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|event
operator|.
name|getAnnotated
argument_list|()
operator|.
name|isAnnotationPresent
argument_list|(
name|Provider
operator|.
name|class
argument_list|)
condition|)
block|{
name|providerBeans
operator|.
name|add
argument_list|(
name|event
operator|.
name|getBean
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|load
parameter_list|(
annotation|@
name|Observes
specifier|final
name|AfterDeploymentValidation
name|event
parameter_list|,
specifier|final
name|BeanManager
name|beanManager
parameter_list|)
block|{
for|for
control|(
specifier|final
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
range|:
name|applicationBeans
control|)
block|{
name|applications
operator|.
name|add
argument_list|(
operator|(
name|Application
operator|)
name|beanManager
operator|.
name|getReference
argument_list|(
name|bean
argument_list|,
name|bean
operator|.
name|getBeanClass
argument_list|()
argument_list|,
name|beanManager
operator|.
name|createCreationalContext
argument_list|(
name|bean
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
specifier|final
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
range|:
name|serviceBeans
control|)
block|{
name|services
operator|.
name|add
argument_list|(
name|beanManager
operator|.
name|getReference
argument_list|(
name|bean
argument_list|,
name|bean
operator|.
name|getBeanClass
argument_list|()
argument_list|,
name|beanManager
operator|.
name|createCreationalContext
argument_list|(
name|bean
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
specifier|final
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
range|:
name|providerBeans
control|)
block|{
name|providers
operator|.
name|add
argument_list|(
name|beanManager
operator|.
name|getReference
argument_list|(
name|bean
argument_list|,
name|bean
operator|.
name|getBeanClass
argument_list|()
argument_list|,
name|beanManager
operator|.
name|createCreationalContext
argument_list|(
name|bean
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|List
argument_list|<
name|Application
argument_list|>
name|getApplications
parameter_list|()
block|{
return|return
name|applications
return|;
block|}
specifier|public
name|List
argument_list|<
name|Object
argument_list|>
name|getServices
parameter_list|()
block|{
return|return
name|services
return|;
block|}
specifier|public
name|List
argument_list|<
name|Object
argument_list|>
name|getProviders
parameter_list|()
block|{
return|return
name|providers
return|;
block|}
block|}
end_class

end_unit

