begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|AfterBeanDiscovery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Annotated
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|ProcessBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|JAXRSCdiResourceExtensionTest
block|{
specifier|private
specifier|final
name|JAXRSCdiResourceExtension
name|extension
init|=
operator|new
name|JAXRSCdiResourceExtension
argument_list|()
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|BeanManager
name|beanManager
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|AfterBeanDiscovery
name|event
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Bean
argument_list|<
name|Bus
argument_list|>
name|busBean
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|ProcessBean
argument_list|<
name|Bus
argument_list|>
name|processBean
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Annotated
name|annotated
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|shouldNotAddDefaultApplicationWhenNoResourcesDefined
parameter_list|()
block|{
name|extension
operator|.
name|injectBus
argument_list|(
name|event
argument_list|,
name|beanManager
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|event
argument_list|)
operator|.
name|addBean
argument_list|(
name|any
argument_list|(
name|CdiBusBean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|event
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|addBean
argument_list|(
name|any
argument_list|(
name|DefaultApplicationBean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|,
literal|"unchecked"
block|}
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|shouldNotAddBusBeanIfBeanAlreadySent
parameter_list|()
block|{
name|when
argument_list|(
name|processBean
operator|.
name|getBean
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|busBean
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|processBean
operator|.
name|getAnnotated
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|annotated
argument_list|)
expr_stmt|;
name|Class
name|cls
init|=
name|Bus
operator|.
name|class
decl_stmt|;
name|when
argument_list|(
name|busBean
operator|.
name|getBeanClass
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|cls
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|busBean
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|CdiBusBean
operator|.
name|CXF
argument_list|)
expr_stmt|;
name|extension
operator|.
name|collect
argument_list|(
name|processBean
argument_list|)
expr_stmt|;
name|extension
operator|.
name|injectBus
argument_list|(
name|event
argument_list|,
name|beanManager
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|event
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|addBean
argument_list|(
name|any
argument_list|(
name|CdiBusBean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|shouldAddApplicationBeanWhenResourcesProvided
parameter_list|()
block|{
name|when
argument_list|(
name|processBean
operator|.
name|getBean
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|busBean
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|processBean
operator|.
name|getAnnotated
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|annotated
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|annotated
operator|.
name|isAnnotationPresent
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|extension
operator|.
name|collect
argument_list|(
name|processBean
argument_list|)
expr_stmt|;
name|extension
operator|.
name|injectBus
argument_list|(
name|event
argument_list|,
name|beanManager
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|event
argument_list|)
operator|.
name|addBean
argument_list|(
name|any
argument_list|(
name|DefaultApplicationBean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

