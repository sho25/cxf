begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|cxf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|ResourceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionRequestInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ManagedConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_comment
comment|//import org.apache.cxf.BusFactory;
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|BundleUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|resourceadapter
operator|.
name|AbstractManagedConnectionFactoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|resourceadapter
operator|.
name|AbstractManagedConnectionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|resourceadapter
operator|.
name|ResourceAdapterInternalException
import|;
end_import

begin_class
specifier|public
class|class
name|ManagedConnectionFactoryImpl
extends|extends
name|AbstractManagedConnectionFactoryImpl
implements|implements
name|CXFManagedConnectionFactory
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|ManagedConnectionFactoryImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ResourceBundle
name|BUNDLE
init|=
name|BundleUtils
operator|.
name|getBundle
argument_list|(
name|ManagedConnectionFactoryImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|JCABusFactory
name|jcaBusFactory
decl_stmt|;
specifier|public
name|ManagedConnectionFactoryImpl
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"ManagedConnectionFactoryImpl constructed without props by appserver..."
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ManagedConnectionFactoryImpl
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
name|super
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"ManagedConnectionFactoryImpl constructed with props by appserver. props = "
operator|+
name|props
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setLogLevel
parameter_list|(
name|String
name|logLevel
parameter_list|)
block|{
name|setProperty
argument_list|(
name|LOG_LEVEL
argument_list|,
name|logLevel
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEJBServicePropertiesURL
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setProperty
argument_list|(
name|EJB_SERVICE_PROPERTIES_URL
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMonitorEJBServiceProperties
parameter_list|(
name|Boolean
name|monitor
parameter_list|)
block|{
name|setProperty
argument_list|(
name|MONITOR_EJB_SERVICE_PROPERTIES
argument_list|,
name|monitor
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEJBServicePropertiesPollInterval
parameter_list|(
name|Integer
name|pollInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
name|MONITOR_POLL_INTERVAL
argument_list|,
name|pollInterval
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getLogLevel
parameter_list|()
block|{
return|return
name|getPluginProps
argument_list|()
operator|.
name|getProperty
argument_list|(
name|LOG_LEVEL
argument_list|)
return|;
block|}
specifier|public
name|String
name|getEJBServicePropertiesURL
parameter_list|()
block|{
return|return
name|getPluginProps
argument_list|()
operator|.
name|getProperty
argument_list|(
name|EJB_SERVICE_PROPERTIES_URL
argument_list|)
return|;
block|}
specifier|public
name|Boolean
name|getMonitorEJBServiceProperties
parameter_list|()
block|{
return|return
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getPluginProps
argument_list|()
operator|.
name|getProperty
argument_list|(
name|MONITOR_EJB_SERVICE_PROPERTIES
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Integer
name|getEJBServicePropertiesPollInterval
parameter_list|()
block|{
return|return
operator|new
name|Integer
argument_list|(
name|getPluginProps
argument_list|()
operator|.
name|getProperty
argument_list|(
name|MONITOR_POLL_INTERVAL
argument_list|,
name|DEFAULT_MONITOR_POLL_INTERVAL
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|URL
name|getEJBServicePropertiesURLInstance
parameter_list|()
throws|throws
name|ResourceException
block|{
return|return
name|getPropsURL
argument_list|(
name|getEJBServicePropertiesURL
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|String
name|getEJBServantBaseURL
parameter_list|()
throws|throws
name|ResourceException
block|{
return|return
name|getPluginProps
argument_list|()
operator|.
name|getProperty
argument_list|(
name|EJB_SERVANT_BASE_URL
argument_list|)
return|;
block|}
specifier|public
name|void
name|setEJBServantBaseURL
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|ResourceException
block|{
name|setProperty
argument_list|(
name|EJB_SERVANT_BASE_URL
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
comment|// compliance: WL9 checks
comment|// need to ensure multiple instances with same config properties are equal
comment|// multiple instances with same config do not make sense to me
specifier|protected
name|void
name|validateReference
parameter_list|(
name|AbstractManagedConnectionImpl
name|conn
parameter_list|,
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
name|subj
parameter_list|)
block|{     }
specifier|public
name|Object
name|createConnectionFactory
parameter_list|()
throws|throws
name|ResourceException
block|{
throw|throw
operator|new
name|ResourceAdapterInternalException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"NON_MANAGED_CONNECTION_IS_NOT_SUPPORTED"
argument_list|,
name|BUNDLE
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
specifier|public
name|Object
name|createConnectionFactory
parameter_list|(
name|ConnectionManager
name|connMgr
parameter_list|)
throws|throws
name|ResourceException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"connManager="
operator|+
name|connMgr
argument_list|)
expr_stmt|;
if|if
condition|(
name|connMgr
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ResourceAdapterInternalException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"NON_MANAGED_CONNECTION_IS_NOT_SUPPORTED"
argument_list|,
name|BUNDLE
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
name|init
argument_list|(
name|connMgr
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|fine
argument_list|(
literal|"Setting AppServer classloader in jcaBusFactory. "
operator|+
name|connMgr
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|ConnectionFactoryImpl
argument_list|(
name|this
argument_list|,
name|connMgr
argument_list|)
return|;
block|}
specifier|public
name|ManagedConnection
name|createManagedConnection
parameter_list|(
name|Subject
name|subject
parameter_list|,
name|ConnectionRequestInfo
name|connReqInfo
parameter_list|)
throws|throws
name|ResourceException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"create connection, subject="
operator|+
name|subject
operator|+
literal|" connReqInfo="
operator|+
name|connReqInfo
argument_list|)
expr_stmt|;
name|init
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|ManagedConnection
operator|)
operator|new
name|ManagedConnectionImpl
argument_list|(
name|this
argument_list|,
name|connReqInfo
argument_list|,
name|subject
argument_list|)
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ResourceAdapterInternalException
block|{     }
specifier|protected
specifier|synchronized
name|void
name|init
parameter_list|(
name|ClassLoader
name|appserverClassLoader
parameter_list|)
throws|throws
name|ResourceException
block|{
if|if
condition|(
name|jcaBusFactory
operator|==
literal|null
condition|)
block|{
name|jcaBusFactory
operator|=
operator|new
name|JCABusFactory
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|jcaBusFactory
operator|.
name|create
argument_list|(
name|appserverClassLoader
argument_list|,
name|getBootstrapContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
return|return
operator|(
name|jcaBusFactory
operator|!=
literal|null
operator|)
condition|?
name|jcaBusFactory
operator|.
name|getBus
argument_list|()
else|:
literal|null
return|;
block|}
specifier|protected
name|Object
name|getBootstrapContext
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

