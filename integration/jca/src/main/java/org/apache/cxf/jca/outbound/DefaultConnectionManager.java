begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|outbound
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|ResourceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionEventListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionRequestInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ManagedConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ManagedConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_comment
comment|/**  * Default Connection Manager which does not support connection pool.    * Connection will be destroyed upon closing by application.  */
end_comment

begin_class
specifier|public
class|class
name|DefaultConnectionManager
implements|implements
name|ConnectionManager
implements|,
name|ConnectionEventListener
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|8931949400870739450L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|DefaultConnectionManager
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/* -------------------- ConnectionManager Methods ----------------------------      */
specifier|public
name|Object
name|allocateConnection
parameter_list|(
name|ManagedConnectionFactory
name|mcf
parameter_list|,
name|ConnectionRequestInfo
name|cxRequestInfo
parameter_list|)
throws|throws
name|ResourceException
block|{
if|if
condition|(
name|LOG
operator|.
name|isLoggable
argument_list|(
name|Level
operator|.
name|FINEST
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|finest
argument_list|(
literal|"allocateConnection cxRequestInfo = "
operator|+
name|cxRequestInfo
argument_list|)
expr_stmt|;
block|}
name|ManagedConnection
name|mc
init|=
name|mcf
operator|.
name|createManagedConnection
argument_list|(
literal|null
argument_list|,
name|cxRequestInfo
argument_list|)
decl_stmt|;
name|mc
operator|.
name|addConnectionEventListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
name|mc
operator|.
name|getConnection
argument_list|(
literal|null
argument_list|,
name|cxRequestInfo
argument_list|)
return|;
block|}
comment|/* -------------------- ConnectionEventListener Methods -----------------------      */
specifier|public
name|void
name|connectionClosed
parameter_list|(
name|ConnectionEvent
name|event
parameter_list|)
block|{
try|try
block|{
operator|(
operator|(
name|ManagedConnection
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
literal|"Failed to destroy connection."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|connectionErrorOccurred
parameter_list|(
name|ConnectionEvent
name|event
parameter_list|)
block|{
try|try
block|{
operator|(
operator|(
name|ManagedConnection
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
literal|"Failed to destroy connection."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|localTransactionCommitted
parameter_list|(
name|ConnectionEvent
name|event
parameter_list|)
block|{     }
specifier|public
name|void
name|localTransactionRolledback
parameter_list|(
name|ConnectionEvent
name|event
parameter_list|)
block|{     }
specifier|public
name|void
name|localTransactionStarted
parameter_list|(
name|ConnectionEvent
name|event
parameter_list|)
block|{     }
block|}
end_class

end_unit

