begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|classloader
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLStreamHandler
import|;
end_import

begin_class
specifier|public
class|class
name|Handler
extends|extends
name|URLStreamHandler
block|{
specifier|public
name|URLConnection
name|openConnection
parameter_list|(
name|URL
name|someUrl
parameter_list|)
block|{
return|return
operator|new
name|HandlerUrlConnection
argument_list|(
name|someUrl
argument_list|)
return|;
block|}
class|class
name|HandlerUrlConnection
extends|extends
name|URLConnection
block|{
name|HandlerUrlConnection
parameter_list|(
name|URL
name|someUrl
parameter_list|)
block|{
name|super
argument_list|(
name|someUrl
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|connect
parameter_list|()
block|{         }
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|byte
index|[]
name|bytes
init|=
name|PlugInClassLoaderHelper
operator|.
name|getResourceAsBytes
argument_list|(
name|url
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|bytes
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
return|;
block|}
throw|throw
operator|new
name|java
operator|.
name|io
operator|.
name|IOException
argument_list|(
name|url
operator|.
name|getPath
argument_list|()
operator|+
literal|" not found"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

