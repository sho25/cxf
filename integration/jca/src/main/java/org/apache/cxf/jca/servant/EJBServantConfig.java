begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|servant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_class
specifier|public
class|class
name|EJBServantConfig
block|{
specifier|private
name|String
name|jndiName
decl_stmt|;
specifier|private
name|QName
name|serviceName
decl_stmt|;
specifier|private
name|String
name|wsdlURL
decl_stmt|;
specifier|public
name|EJBServantConfig
parameter_list|(
name|String
name|jndiName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|jndiName
operator|=
name|jndiName
expr_stmt|;
name|StringTokenizer
name|st
init|=
operator|new
name|StringTokenizer
argument_list|(
name|value
argument_list|,
literal|"@"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|theValue
init|=
name|st
operator|.
name|nextToken
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"@"
operator|.
name|equals
argument_list|(
name|theValue
argument_list|)
condition|)
block|{
if|if
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|this
operator|.
name|wsdlURL
operator|=
name|st
operator|.
name|nextToken
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|this
operator|.
name|serviceName
operator|=
name|getServiceName
argument_list|(
name|theValue
argument_list|)
expr_stmt|;
if|if
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
operator|&&
literal|"@"
operator|.
name|equals
argument_list|(
name|st
operator|.
name|nextToken
argument_list|()
argument_list|)
operator|&&
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|this
operator|.
name|wsdlURL
operator|=
name|st
operator|.
name|nextToken
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|String
name|getJNDIName
parameter_list|()
block|{
return|return
name|jndiName
return|;
block|}
specifier|public
name|void
name|setJndiName
parameter_list|(
name|String
name|jndiName
parameter_list|)
block|{
name|this
operator|.
name|jndiName
operator|=
name|jndiName
expr_stmt|;
block|}
specifier|public
name|QName
name|getServiceName
parameter_list|()
block|{
return|return
name|serviceName
return|;
block|}
specifier|public
name|void
name|setServiceName
parameter_list|(
name|QName
name|serviceName
parameter_list|)
block|{
name|this
operator|.
name|serviceName
operator|=
name|serviceName
expr_stmt|;
block|}
specifier|public
name|String
name|getWsdlURL
parameter_list|()
block|{
return|return
name|wsdlURL
return|;
block|}
specifier|public
name|void
name|setWsdlURL
parameter_list|(
name|String
name|wsdlURL
parameter_list|)
block|{
name|this
operator|.
name|wsdlURL
operator|=
name|wsdlURL
expr_stmt|;
block|}
specifier|private
name|QName
name|getServiceName
parameter_list|(
name|String
name|sname
parameter_list|)
block|{
name|StringTokenizer
name|st
init|=
operator|new
name|StringTokenizer
argument_list|(
name|sname
argument_list|,
literal|"}"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
literal|""
decl_stmt|;
name|String
name|localpart
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|value
init|=
name|st
operator|.
name|nextToken
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|.
name|startsWith
argument_list|(
literal|"{"
argument_list|)
condition|)
block|{
name|namespace
operator|=
name|value
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|localpart
operator|=
name|value
expr_stmt|;
block|}
block|}
if|if
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|localpart
operator|=
name|st
operator|.
name|nextToken
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|QName
argument_list|(
name|namespace
argument_list|,
name|localpart
argument_list|)
return|;
block|}
block|}
end_class

end_unit

