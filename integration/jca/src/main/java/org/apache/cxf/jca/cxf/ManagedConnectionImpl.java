begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|cxf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|NotSupportedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|ResourceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionRequestInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|LocalTransaction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ManagedConnectionMetaData
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAResource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|BundleUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|connector
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|resourceadapter
operator|.
name|AbstractManagedConnectionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|resourceadapter
operator|.
name|ResourceAdapterInternalException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|cxf
operator|.
name|handlers
operator|.
name|InvocationHandlerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|ManagedConnectionImpl
extends|extends
name|AbstractManagedConnectionImpl
implements|implements
name|CXFManagedConnection
implements|,
name|Connection
block|{
specifier|private
specifier|static
specifier|final
name|ResourceBundle
name|BUNDLE
init|=
name|BundleUtils
operator|.
name|getBundle
argument_list|(
name|ConnectionFactoryImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|InvocationHandlerFactory
name|handlerFactory
decl_stmt|;
specifier|private
name|Object
name|cxfService
decl_stmt|;
specifier|private
name|boolean
name|connectionHandleActive
decl_stmt|;
specifier|public
name|ManagedConnectionImpl
parameter_list|(
name|ManagedConnectionFactoryImpl
name|managedFactory
parameter_list|,
name|ConnectionRequestInfo
name|crInfo
parameter_list|,
name|Subject
name|subject
parameter_list|)
throws|throws
name|ResourceException
block|{
name|super
argument_list|(
name|managedFactory
argument_list|,
name|crInfo
argument_list|,
name|subject
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|associateConnection
parameter_list|(
name|Object
name|connection
parameter_list|)
throws|throws
name|ResourceException
block|{
try|try
block|{
name|CXFInvocationHandler
name|handler
init|=
operator|(
name|CXFInvocationHandler
operator|)
name|Proxy
operator|.
name|getInvocationHandler
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|Object
name|managedConnection
init|=
name|handler
operator|.
name|getData
argument_list|()
operator|.
name|getManagedConnection
argument_list|()
decl_stmt|;
if|if
condition|(
name|managedConnection
operator|!=
name|this
condition|)
block|{
name|handler
operator|.
name|getData
argument_list|()
operator|.
name|setManagedConnection
argument_list|(
name|this
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ManagedConnectionImpl
operator|)
name|managedConnection
operator|)
operator|.
name|disassociateConnectionHandle
argument_list|(
name|connection
argument_list|)
expr_stmt|;
if|if
condition|(
name|getCXFService
argument_list|()
operator|==
literal|null
condition|)
block|{
comment|// Very unlikely as THIS
comment|// managed connection is
comment|// already involved in a transaction.
name|cxfService
operator|=
name|connection
expr_stmt|;
name|connectionHandleActive
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|ResourceAdapterInternalException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"ASSOCIATED_ERROR"
argument_list|,
name|BUNDLE
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|public
name|CXFManagedConnectionFactory
name|getManagedConnectionFactory
parameter_list|()
block|{
return|return
operator|(
name|ManagedConnectionFactoryImpl
operator|)
name|theManagedConnectionFactory
argument_list|()
return|;
block|}
specifier|public
name|Object
name|getCXFService
parameter_list|()
block|{
return|return
name|cxfService
return|;
block|}
specifier|private
name|void
name|initializeCXFConnection
parameter_list|(
name|ConnectionRequestInfo
name|crInfo
parameter_list|,
name|Subject
name|subject
parameter_list|)
throws|throws
name|ResourceException
block|{
name|this
operator|.
name|crinfo
operator|=
name|crInfo
expr_stmt|;
name|this
operator|.
name|subject
operator|=
name|subject
expr_stmt|;
name|cxfService
operator|=
name|getCXFConnection
argument_list|(
name|subject
argument_list|,
name|crInfo
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|getConnection
parameter_list|(
name|Subject
name|subject
parameter_list|,
name|ConnectionRequestInfo
name|crInfo
parameter_list|)
throws|throws
name|ResourceException
block|{
name|Object
name|connection
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|getCXFService
argument_list|()
operator|==
literal|null
condition|)
block|{
name|initializeCXFConnection
argument_list|(
name|crInfo
argument_list|,
name|subject
argument_list|)
expr_stmt|;
name|connection
operator|=
name|getCXFService
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|connectionHandleActive
operator|&&
name|this
operator|.
name|crinfo
operator|.
name|equals
argument_list|(
name|crInfo
argument_list|)
condition|)
block|{
name|connection
operator|=
name|getCXFService
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|connection
operator|=
name|getCXFConnection
argument_list|(
name|subject
argument_list|,
name|crInfo
argument_list|)
expr_stmt|;
block|}
block|}
name|connectionHandleActive
operator|=
literal|true
expr_stmt|;
return|return
name|connection
return|;
block|}
specifier|public
specifier|synchronized
name|Object
name|getCXFConnection
parameter_list|(
name|Subject
name|subject
parameter_list|,
name|ConnectionRequestInfo
name|crInfo
parameter_list|)
throws|throws
name|ResourceException
block|{
name|CXFConnectionRequestInfo
name|requestInfo
init|=
operator|(
name|CXFConnectionRequestInfo
operator|)
name|crInfo
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|serviceInterface
init|=
name|requestInfo
operator|.
name|getInterface
argument_list|()
decl_stmt|;
name|ClassLoader
name|orig
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
try|try
block|{
name|ClientProxyFactoryBean
name|factoryBean
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isJaxWsServiceInterface
argument_list|(
name|serviceInterface
argument_list|)
condition|)
block|{
name|factoryBean
operator|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|factoryBean
operator|=
operator|new
name|ClientProxyFactoryBean
argument_list|()
expr_stmt|;
block|}
name|factoryBean
operator|.
name|setServiceClass
argument_list|(
name|serviceInterface
argument_list|)
expr_stmt|;
if|if
condition|(
name|requestInfo
operator|.
name|getServiceName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|factoryBean
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setServiceName
argument_list|(
name|requestInfo
operator|.
name|getServiceName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|requestInfo
operator|.
name|getPortName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|factoryBean
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setEndpointName
argument_list|(
name|requestInfo
operator|.
name|getPortName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|requestInfo
operator|.
name|getWsdlLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|factoryBean
operator|.
name|getServiceFactory
argument_list|()
operator|.
name|setWsdlURL
argument_list|(
name|requestInfo
operator|.
name|getWsdlLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|requestInfo
operator|.
name|getAddress
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|factoryBean
operator|.
name|setAddress
argument_list|(
name|requestInfo
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Object
name|obj
init|=
name|factoryBean
operator|.
name|create
argument_list|()
decl_stmt|;
name|setSubject
argument_list|(
name|subject
argument_list|)
expr_stmt|;
return|return
name|createConnectionProxy
argument_list|(
name|obj
argument_list|,
name|requestInfo
argument_list|,
name|subject
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|WebServiceException
name|wse
parameter_list|)
block|{
throw|throw
operator|new
name|ResourceAdapterInternalException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"FAILED_TO_GET_CXF_CONNECTION"
argument_list|,
name|BUNDLE
argument_list|,
name|requestInfo
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|wse
argument_list|)
throw|;
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|orig
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|ManagedConnectionMetaData
name|getMetaData
parameter_list|()
throws|throws
name|ResourceException
block|{
return|return
operator|new
name|CXFManagedConnectionMetaData
argument_list|()
return|;
block|}
specifier|private
name|boolean
name|isJaxWsServiceInterface
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
if|if
condition|(
name|cls
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|null
operator|!=
name|cls
operator|.
name|getAnnotation
argument_list|(
name|WebService
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isBound
parameter_list|()
block|{
return|return
name|getCXFService
argument_list|()
operator|!=
literal|null
return|;
block|}
comment|// Compliance: WL9 checks
comment|// implemention of Connection method - never used as real Connection impl is
comment|// a java.lang.Proxy
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|ResourceException
block|{
comment|//TODO
block|}
name|void
name|disassociateConnectionHandle
parameter_list|(
name|Object
name|handle
parameter_list|)
block|{
if|if
condition|(
name|cxfService
operator|==
name|handle
condition|)
block|{
name|connectionHandleActive
operator|=
literal|false
expr_stmt|;
name|cxfService
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|private
name|Object
name|createConnectionProxy
parameter_list|(
name|Object
name|obj
parameter_list|,
name|CXFConnectionRequestInfo
name|cri
parameter_list|,
name|Subject
name|subject
parameter_list|)
throws|throws
name|ResourceException
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|classes
index|[]
init|=
block|{
name|Connection
operator|.
name|class
block|,
name|BindingProvider
operator|.
name|class
block|,
name|cri
operator|.
name|getInterface
argument_list|()
block|}
decl_stmt|;
return|return
name|Proxy
operator|.
name|newProxyInstance
argument_list|(
name|cri
operator|.
name|getInterface
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|,
name|classes
argument_list|,
name|createInvocationHandler
argument_list|(
name|obj
argument_list|,
name|subject
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|InvocationHandler
name|createInvocationHandler
parameter_list|(
name|Object
name|obj
parameter_list|,
name|Subject
name|subject
parameter_list|)
throws|throws
name|ResourceException
block|{
return|return
name|getHandlerFactory
argument_list|()
operator|.
name|createHandlers
argument_list|(
name|obj
argument_list|,
name|subject
argument_list|)
return|;
block|}
specifier|private
name|InvocationHandlerFactory
name|getHandlerFactory
parameter_list|()
throws|throws
name|ResourceException
block|{
if|if
condition|(
name|handlerFactory
operator|==
literal|null
condition|)
block|{
name|handlerFactory
operator|=
operator|new
name|InvocationHandlerFactory
argument_list|(
name|getBus
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
return|return
name|handlerFactory
return|;
block|}
specifier|private
name|Bus
name|getBus
parameter_list|()
block|{
return|return
operator|(
operator|(
name|ManagedConnectionFactoryImpl
operator|)
name|getManagedConnectionFactory
argument_list|()
operator|)
operator|.
name|getBus
argument_list|()
return|;
block|}
specifier|public
name|void
name|close
parameter_list|(
name|Object
name|closingHandle
parameter_list|)
throws|throws
name|ResourceException
block|{
if|if
condition|(
name|closingHandle
operator|==
name|cxfService
condition|)
block|{
name|connectionHandleActive
operator|=
literal|false
expr_stmt|;
block|}
name|super
operator|.
name|close
argument_list|(
name|closingHandle
argument_list|)
expr_stmt|;
block|}
comment|// beging chucked from the pool
specifier|public
name|void
name|destroy
parameter_list|()
throws|throws
name|ResourceException
block|{
name|connectionHandleActive
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|cxfService
operator|=
literal|null
expr_stmt|;
name|super
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
specifier|public
name|CXFTransaction
name|getCXFTransaction
parameter_list|()
block|{
comment|//TODO should throw the exception
return|return
literal|null
return|;
block|}
specifier|public
name|XAResource
name|getXAResource
parameter_list|()
throws|throws
name|ResourceException
block|{
throw|throw
operator|new
name|NotSupportedException
argument_list|()
throw|;
block|}
specifier|public
name|LocalTransaction
name|getLocalTransaction
parameter_list|()
throws|throws
name|ResourceException
block|{
throw|throw
operator|new
name|NotSupportedException
argument_list|()
throw|;
block|}
block|}
end_class

end_unit

