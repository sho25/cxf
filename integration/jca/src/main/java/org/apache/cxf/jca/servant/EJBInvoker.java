begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|servant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|EJBHome
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|invoker
operator|.
name|AbstractInvoker
import|;
end_import

begin_class
specifier|public
class|class
name|EJBInvoker
extends|extends
name|AbstractInvoker
block|{
specifier|private
specifier|static
specifier|final
name|Object
index|[]
name|EMPTY_OBJECT
init|=
operator|new
name|Object
index|[
literal|0
index|]
decl_stmt|;
specifier|private
name|EJBHome
name|home
decl_stmt|;
specifier|private
name|Method
name|createMethod
decl_stmt|;
specifier|public
name|EJBInvoker
parameter_list|(
name|EJBHome
name|home
parameter_list|)
block|{
name|this
operator|.
name|home
operator|=
name|home
expr_stmt|;
try|try
block|{
if|if
condition|(
operator|!
name|home
operator|.
name|getEJBMetaData
argument_list|()
operator|.
name|isSession
argument_list|()
operator|||
operator|!
name|home
operator|.
name|getEJBMetaData
argument_list|()
operator|.
name|isStatelessSession
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"home must be for a stateless session bean"
argument_list|)
throw|;
block|}
name|createMethod
operator|=
name|home
operator|.
name|getClass
argument_list|()
operator|.
name|getMethod
argument_list|(
literal|"create"
argument_list|,
operator|new
name|Class
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unable to initialize invoker: "
operator|+
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getServiceObject
parameter_list|(
name|Exchange
name|context
parameter_list|)
block|{
name|Object
name|ejbObject
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ejbObject
operator|=
name|createMethod
operator|.
name|invoke
argument_list|(
name|home
argument_list|,
name|EMPTY_OBJECT
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error in creating EJB Object"
argument_list|)
throw|;
block|}
return|return
name|ejbObject
return|;
block|}
block|}
end_class

end_unit

