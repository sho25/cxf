begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|core
operator|.
name|resourceadapter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|ResourceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionRequestInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|LocalTransaction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_class
specifier|public
class|class
name|DummyManagedConnectionImpl
extends|extends
name|AbstractManagedConnectionImpl
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AbstractManagedConnectionImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|boolean
name|bound
decl_stmt|;
name|Object
name|con
decl_stmt|;
specifier|public
name|DummyManagedConnectionImpl
parameter_list|(
name|AbstractManagedConnectionFactoryImpl
name|managedFactory
parameter_list|,
name|ConnectionRequestInfo
name|crInfo
parameter_list|,
name|Subject
name|subject
parameter_list|)
throws|throws
name|ResourceException
block|{
name|super
argument_list|(
name|managedFactory
argument_list|,
name|crInfo
argument_list|,
name|subject
argument_list|)
expr_stmt|;
comment|// trun off the noise error logger
name|LOG
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|OFF
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|associateConnection
parameter_list|(
name|Object
name|arg0
parameter_list|)
throws|throws
name|ResourceException
block|{     }
specifier|public
name|LocalTransaction
name|getLocalTransaction
parameter_list|()
throws|throws
name|ResourceException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAResource
name|getXAResource
parameter_list|()
throws|throws
name|ResourceException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Object
name|getConnection
parameter_list|(
name|Subject
name|subject
parameter_list|,
name|ConnectionRequestInfo
name|crInfo
parameter_list|)
throws|throws
name|ResourceException
block|{
return|return
name|con
return|;
block|}
specifier|public
name|boolean
name|isBound
parameter_list|()
block|{
return|return
name|bound
return|;
block|}
specifier|public
name|void
name|setBound
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|bound
operator|=
name|b
expr_stmt|;
block|}
comment|// use to indicate invalid
specifier|public
name|void
name|setCon
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|con
operator|=
name|o
expr_stmt|;
block|}
comment|/*     public CXFManagedConnectionFactory getManagedConnectionFactory() {          return (CXFManagedConnectionFactory)theManagedConnectionFactory();     } */
block|}
end_class

end_unit

