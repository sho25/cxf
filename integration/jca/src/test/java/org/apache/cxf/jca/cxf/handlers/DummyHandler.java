begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|cxf
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|cxf
operator|.
name|CXFInvocationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|cxf
operator|.
name|CXFInvocationHandlerData
import|;
end_import

begin_class
specifier|public
class|class
name|DummyHandler
implements|implements
name|CXFInvocationHandler
block|{
name|boolean
name|invokeCalled
decl_stmt|;
specifier|public
name|CXFInvocationHandlerData
name|getData
parameter_list|()
block|{
return|return
operator|new
name|CXFInvocationHandlerDataImpl
argument_list|()
return|;
block|}
comment|// Implementation of java.lang.reflect.InvocationHandler
specifier|public
specifier|final
name|Object
name|invoke
parameter_list|(
specifier|final
name|Object
name|object
parameter_list|,
specifier|final
name|Method
name|method
parameter_list|,
specifier|final
name|Object
index|[]
name|objectArray
parameter_list|)
throws|throws
name|Throwable
block|{
name|invokeCalled
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|setNext
parameter_list|(
name|CXFInvocationHandler
name|next
parameter_list|)
block|{              }
specifier|public
name|CXFInvocationHandler
name|getNext
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

