begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|outbound
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|Greeter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_comment
comment|/**  * Unit test for ManagedConnectionImpl  */
end_comment

begin_class
specifier|public
class|class
name|ManagedConnectionImplTest
block|{
comment|/**      * Verify the connection handle's equals() method      */
annotation|@
name|Test
specifier|public
name|void
name|testHandleEqualsMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|BusFactory
operator|.
name|setDefaultBus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|IMocksControl
name|control
init|=
name|EasyMock
operator|.
name|createNiceControl
argument_list|()
decl_stmt|;
name|ManagedConnectionFactoryImpl
name|mcf
init|=
name|control
operator|.
name|createMock
argument_list|(
name|ManagedConnectionFactoryImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|CXFConnectionSpec
name|cxRequestInfo
init|=
operator|new
name|CXFConnectionSpec
argument_list|()
decl_stmt|;
name|cxRequestInfo
operator|.
name|setWsdlURL
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|cxRequestInfo
operator|.
name|setServiceClass
argument_list|(
name|Greeter
operator|.
name|class
argument_list|)
expr_stmt|;
name|cxRequestInfo
operator|.
name|setEndpointName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"SoapPort"
argument_list|)
argument_list|)
expr_stmt|;
name|cxRequestInfo
operator|.
name|setServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"SOAPService"
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|Subject
name|subject
init|=
operator|new
name|Subject
argument_list|()
decl_stmt|;
name|ManagedConnectionImpl
name|conn
init|=
operator|new
name|ManagedConnectionImpl
argument_list|(
name|mcf
argument_list|,
name|cxRequestInfo
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|Object
name|handle1
init|=
name|conn
operator|.
name|getConnection
argument_list|(
name|subject
argument_list|,
name|cxRequestInfo
argument_list|)
decl_stmt|;
name|Object
name|handle2
init|=
name|conn
operator|.
name|getConnection
argument_list|(
name|subject
argument_list|,
name|cxRequestInfo
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|handle1
argument_list|,
name|handle1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|handle2
argument_list|,
name|handle2
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|handle1
operator|.
name|equals
argument_list|(
name|handle2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

