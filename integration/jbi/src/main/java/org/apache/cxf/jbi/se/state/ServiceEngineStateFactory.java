begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
operator|.
name|state
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|ServiceEngineStateFactory
block|{
specifier|private
specifier|static
name|ServiceEngineStateFactory
name|factory
decl_stmt|;
specifier|private
name|ServiceEngineStateMachine
name|currentState
decl_stmt|;
specifier|private
name|ServiceEngineStateMachine
name|stop
init|=
operator|new
name|ServiceEngineStop
argument_list|()
decl_stmt|;
specifier|private
name|ServiceEngineStateMachine
name|start
init|=
operator|new
name|ServiceEngineStart
argument_list|()
decl_stmt|;
specifier|private
name|ServiceEngineStateMachine
name|shutdown
init|=
operator|new
name|ServiceEngineShutdown
argument_list|()
decl_stmt|;
specifier|private
name|ServiceEngineStateFactory
parameter_list|()
block|{              }
specifier|public
specifier|static
specifier|synchronized
name|ServiceEngineStateFactory
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
name|factory
operator|=
operator|new
name|ServiceEngineStateFactory
argument_list|()
expr_stmt|;
block|}
return|return
name|factory
return|;
block|}
specifier|public
name|ServiceEngineStateMachine
name|getCurrentState
parameter_list|()
block|{
return|return
name|currentState
return|;
block|}
specifier|public
name|void
name|setCurrentState
parameter_list|(
name|ServiceEngineStateMachine
name|state
parameter_list|)
block|{
name|currentState
operator|=
name|state
expr_stmt|;
block|}
specifier|public
name|ServiceEngineStateMachine
name|getShutdownState
parameter_list|()
block|{
return|return
name|shutdown
return|;
block|}
specifier|public
name|ServiceEngineStateMachine
name|getStopState
parameter_list|()
block|{
return|return
name|stop
return|;
block|}
specifier|public
name|ServiceEngineStateMachine
name|getStartState
parameter_list|()
block|{
return|return
name|start
return|;
block|}
block|}
end_class

end_unit

