begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|JBIException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|component
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|component
operator|.
name|ComponentLifeCycle
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|component
operator|.
name|ServiceUnitManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessageExchange
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|servicedesc
operator|.
name|ServiceEndpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|DocumentFragment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
operator|.
name|state
operator|.
name|AbstractServiceEngineStateMachine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
operator|.
name|state
operator|.
name|ServiceEngineStateFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
operator|.
name|state
operator|.
name|ServiceEngineStateMachine
import|;
end_import

begin_comment
comment|/** A JBI component.  Initializes the CXF JBI transport  */
end_comment

begin_class
specifier|public
class|class
name|CXFServiceEngine
implements|implements
name|ComponentLifeCycle
implements|,
name|Component
block|{
specifier|public
specifier|static
specifier|final
name|String
name|JBI_TRANSPORT_ID
init|=
literal|"http://cxf.apache.org/transports/jbi"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|CXFServiceEngine
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ServiceEngineStateFactory
name|stateFactory
init|=
name|ServiceEngineStateFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
specifier|public
name|CXFServiceEngine
parameter_list|()
block|{
name|stateFactory
operator|.
name|setCurrentState
argument_list|(
name|stateFactory
operator|.
name|getShutdownState
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Implementation of javax.jbi.component.ComponentLifeCycle
specifier|public
specifier|final
name|ObjectName
name|getExtensionMBeanName
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
specifier|final
name|void
name|shutDown
parameter_list|()
throws|throws
name|JBIException
block|{
try|try
block|{
name|LOG
operator|.
name|info
argument_list|(
operator|new
name|Message
argument_list|(
literal|"SE.SHUTDOWN"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|stateFactory
operator|.
name|getCurrentState
argument_list|()
operator|.
name|changeState
argument_list|(
name|ServiceEngineStateMachine
operator|.
name|SEOperation
operator|.
name|shutdown
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|JBIException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|final
name|void
name|init
parameter_list|(
name|ComponentContext
name|componentContext
parameter_list|)
throws|throws
name|JBIException
block|{
try|try
block|{
name|stateFactory
operator|.
name|getCurrentState
argument_list|()
operator|.
name|changeState
argument_list|(
name|ServiceEngineStateMachine
operator|.
name|SEOperation
operator|.
name|init
argument_list|,
name|componentContext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
operator|new
name|Message
argument_list|(
literal|"SE.FAILED.INIT.BUS"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|JBIException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|final
name|void
name|start
parameter_list|()
throws|throws
name|JBIException
block|{
try|try
block|{
name|LOG
operator|.
name|info
argument_list|(
operator|new
name|Message
argument_list|(
literal|"SE.STARTUP"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|stateFactory
operator|.
name|getCurrentState
argument_list|()
operator|.
name|changeState
argument_list|(
name|ServiceEngineStateMachine
operator|.
name|SEOperation
operator|.
name|start
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|JBIException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|final
name|void
name|stop
parameter_list|()
throws|throws
name|JBIException
block|{
try|try
block|{
name|LOG
operator|.
name|info
argument_list|(
operator|new
name|Message
argument_list|(
literal|"SE.STOP"
argument_list|,
name|LOG
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|stateFactory
operator|.
name|getCurrentState
argument_list|()
operator|.
name|changeState
argument_list|(
name|ServiceEngineStateMachine
operator|.
name|SEOperation
operator|.
name|stop
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|SEVERE
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|JBIException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
comment|// Implementation of javax.jbi.component.Component
specifier|public
specifier|final
name|ComponentLifeCycle
name|getLifeCycle
parameter_list|()
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"CXFServiceEngine returning life cycle"
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|ServiceUnitManager
name|getServiceUnitManager
parameter_list|()
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"CXFServiceEngine return service unit manager"
argument_list|)
expr_stmt|;
return|return
name|AbstractServiceEngineStateMachine
operator|.
name|getSUManager
argument_list|()
return|;
block|}
specifier|public
specifier|final
name|Document
name|getServiceDescription
parameter_list|(
specifier|final
name|ServiceEndpoint
name|serviceEndpoint
parameter_list|)
block|{
name|Document
name|doc
init|=
name|AbstractServiceEngineStateMachine
operator|.
name|getSUManager
argument_list|()
operator|.
name|getServiceDescription
argument_list|(
name|serviceEndpoint
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|fine
argument_list|(
literal|"CXFServiceEngine returning service description: "
operator|+
name|doc
argument_list|)
expr_stmt|;
return|return
name|doc
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isExchangeWithConsumerOkay
parameter_list|(
specifier|final
name|ServiceEndpoint
name|ep
parameter_list|,
specifier|final
name|MessageExchange
name|exchg
parameter_list|)
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"isExchangeWithConsumerOkay: endpoint: "
operator|+
name|ep
operator|+
literal|" exchange: "
operator|+
name|exchg
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isExchangeWithProviderOkay
parameter_list|(
specifier|final
name|ServiceEndpoint
name|ep
parameter_list|,
specifier|final
name|MessageExchange
name|exchng
parameter_list|)
block|{
name|LOG
operator|.
name|fine
argument_list|(
literal|"isExchangeWithConsumerOkay: endpoint: "
operator|+
name|ep
operator|+
literal|" exchange: "
operator|+
name|exchng
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
specifier|final
name|ServiceEndpoint
name|resolveEndpointReference
parameter_list|(
specifier|final
name|DocumentFragment
name|documentFragment
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

