begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
operator|.
name|state
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|JBIException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jbi
operator|.
name|se
operator|.
name|state
operator|.
name|ServiceEngineStateMachine
operator|.
name|SEOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ServiceEngineStartTest
extends|extends
name|Assert
block|{
specifier|private
name|ServiceEngineStateFactory
name|stateFactory
decl_stmt|;
specifier|private
name|ServiceEngineStateMachine
name|start
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|stateFactory
operator|=
name|ServiceEngineStateFactory
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|start
operator|=
name|stateFactory
operator|.
name|getStartState
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStopOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|start
operator|.
name|changeState
argument_list|(
name|SEOperation
operator|.
name|stop
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|stateFactory
operator|.
name|getCurrentState
argument_list|()
operator|instanceof
name|ServiceEngineStop
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStartOperation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|start
operator|.
name|changeState
argument_list|(
name|SEOperation
operator|.
name|start
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JBIException
name|e
parameter_list|)
block|{
return|return;
block|}
name|fail
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitOperation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|start
operator|.
name|changeState
argument_list|(
name|SEOperation
operator|.
name|init
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JBIException
name|e
parameter_list|)
block|{
return|return;
block|}
name|fail
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testShutdownOperation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|start
operator|.
name|changeState
argument_list|(
name|SEOperation
operator|.
name|shutdown
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JBIException
name|e
parameter_list|)
block|{
return|return;
block|}
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

