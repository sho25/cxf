begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|spring
operator|.
name|boot
operator|.
name|autoconfigure
package|;
end_package

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|BeanCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|test
operator|.
name|util
operator|.
name|EnvironmentTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|web
operator|.
name|servlet
operator|.
name|ServletRegistrationBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|mock
operator|.
name|web
operator|.
name|MockServletContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|util
operator|.
name|ReflectionTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|support
operator|.
name|AnnotationConfigWebApplicationContext
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasEntry
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasItem
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * Tests for {@link CxfAutoConfiguration}.  *  * @author Vedran Pavic  */
end_comment

begin_class
specifier|public
class|class
name|CxfAutoConfigurationTests
block|{
annotation|@
name|Rule
specifier|public
name|ExpectedException
name|thrown
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
specifier|private
name|AnnotationConfigWebApplicationContext
name|context
decl_stmt|;
annotation|@
name|After
specifier|public
name|void
name|close
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|context
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|context
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|defaultConfiguration
parameter_list|()
block|{
name|load
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|this
operator|.
name|context
operator|.
name|getBeansOfType
argument_list|(
name|ServletRegistrationBean
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|customPathMustBeginWithASlash
parameter_list|()
block|{
name|this
operator|.
name|thrown
operator|.
name|expect
argument_list|(
name|BeanCreationException
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Path must start with /"
argument_list|)
expr_stmt|;
name|load
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|,
literal|"cxf.path=invalid"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|customPathWithTrailingSlash
parameter_list|()
block|{
name|load
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|,
literal|"cxf.path=/valid/"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|this
operator|.
name|context
operator|.
name|getBean
argument_list|(
name|ServletRegistrationBean
operator|.
name|class
argument_list|)
operator|.
name|getUrlMappings
argument_list|()
argument_list|,
operator|(
name|Matcher
argument_list|<
name|Iterable
argument_list|<
name|?
super|super
name|String
argument_list|>
argument_list|>
operator|)
name|hasItem
argument_list|(
literal|"/valid/*"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|customPath
parameter_list|()
block|{
name|load
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|,
literal|"cxf.path=/valid"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|this
operator|.
name|context
operator|.
name|getBeansOfType
argument_list|(
name|ServletRegistrationBean
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|this
operator|.
name|context
operator|.
name|getBean
argument_list|(
name|ServletRegistrationBean
operator|.
name|class
argument_list|)
operator|.
name|getUrlMappings
argument_list|()
argument_list|,
operator|(
name|Matcher
argument_list|<
name|Iterable
argument_list|<
name|?
super|super
name|String
argument_list|>
argument_list|>
operator|)
name|hasItem
argument_list|(
literal|"/valid/*"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|customLoadOnStartup
parameter_list|()
block|{
name|load
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|,
literal|"cxf.servlet.load-on-startup=1"
argument_list|)
expr_stmt|;
name|ServletRegistrationBean
name|registrationBean
init|=
name|this
operator|.
name|context
operator|.
name|getBean
argument_list|(
name|ServletRegistrationBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|ReflectionTestUtils
operator|.
name|getField
argument_list|(
name|registrationBean
argument_list|,
literal|"loadOnStartup"
argument_list|)
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|customInitParameters
parameter_list|()
block|{
name|load
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|,
literal|"cxf.servlet.init.key1=value1"
argument_list|,
literal|"spring.cxf.servlet.init.key2=value2"
argument_list|)
expr_stmt|;
name|ServletRegistrationBean
name|registrationBean
init|=
name|this
operator|.
name|context
operator|.
name|getBean
argument_list|(
name|ServletRegistrationBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|registrationBean
operator|.
name|getInitParameters
argument_list|()
argument_list|,
name|hasEntry
argument_list|(
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|registrationBean
operator|.
name|getInitParameters
argument_list|()
argument_list|,
name|hasEntry
argument_list|(
literal|"key2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|load
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|config
parameter_list|,
name|String
modifier|...
name|environment
parameter_list|)
block|{
name|AnnotationConfigWebApplicationContext
name|ctx
init|=
operator|new
name|AnnotationConfigWebApplicationContext
argument_list|()
decl_stmt|;
name|ctx
operator|.
name|setServletContext
argument_list|(
operator|new
name|MockServletContext
argument_list|()
argument_list|)
expr_stmt|;
name|EnvironmentTestUtils
operator|.
name|addEnvironment
argument_list|(
name|ctx
argument_list|,
name|environment
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|register
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|refresh
argument_list|()
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|ctx
expr_stmt|;
block|}
block|}
end_class

end_unit

