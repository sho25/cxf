begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|spring
operator|.
name|boot
operator|.
name|autoconfigure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|spring
operator|.
name|SpringComponentScanServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|spring
operator|.
name|SpringJaxrsClassesScanServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
operator|.
name|CXFServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|AutoConfigureAfter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnMissingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnWebApplication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|web
operator|.
name|EmbeddedServletContainerAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|EnableConfigurationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|web
operator|.
name|servlet
operator|.
name|ServletRegistrationBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Import
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|ImportResource
import|;
end_import

begin_comment
comment|/**  * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration} for Apache CXF.  *  * @author Vedran Pavic  */
end_comment

begin_class
annotation|@
name|Configuration
annotation|@
name|ConditionalOnWebApplication
annotation|@
name|ConditionalOnClass
argument_list|(
block|{
name|SpringBus
operator|.
name|class
block|,
name|CXFServlet
operator|.
name|class
block|}
argument_list|)
annotation|@
name|EnableConfigurationProperties
argument_list|(
name|CxfProperties
operator|.
name|class
argument_list|)
annotation|@
name|AutoConfigureAfter
argument_list|(
name|EmbeddedServletContainerAutoConfiguration
operator|.
name|class
argument_list|)
specifier|public
class|class
name|CxfAutoConfiguration
block|{
annotation|@
name|Autowired
specifier|private
name|CxfProperties
name|properties
decl_stmt|;
annotation|@
name|Bean
annotation|@
name|ConditionalOnMissingBean
argument_list|(
name|name
operator|=
literal|"cxfServletRegistration"
argument_list|)
specifier|public
name|ServletRegistrationBean
name|cxfServletRegistration
parameter_list|()
block|{
name|String
name|path
init|=
name|this
operator|.
name|properties
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|String
name|urlMapping
init|=
name|path
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|?
name|path
operator|+
literal|"*"
else|:
name|path
operator|+
literal|"/*"
decl_stmt|;
name|ServletRegistrationBean
name|registration
init|=
operator|new
name|ServletRegistrationBean
argument_list|(
operator|new
name|CXFServlet
argument_list|()
argument_list|,
name|urlMapping
argument_list|)
decl_stmt|;
name|CxfProperties
operator|.
name|Servlet
name|servletProperties
init|=
name|this
operator|.
name|properties
operator|.
name|getServlet
argument_list|()
decl_stmt|;
name|registration
operator|.
name|setLoadOnStartup
argument_list|(
name|servletProperties
operator|.
name|getLoadOnStartup
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|servletProperties
operator|.
name|getInit
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|registration
operator|.
name|addInitParameter
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|registration
return|;
block|}
annotation|@
name|Configuration
annotation|@
name|ConditionalOnMissingBean
argument_list|(
name|SpringBus
operator|.
name|class
argument_list|)
annotation|@
name|ImportResource
argument_list|(
literal|"classpath:META-INF/cxf/cxf.xml"
argument_list|)
specifier|protected
specifier|static
class|class
name|SpringBusConfiguration
block|{      }
annotation|@
name|Configuration
annotation|@
name|ConditionalOnClass
argument_list|(
name|JAXRSServerFactoryBean
operator|.
name|class
argument_list|)
annotation|@
name|ConditionalOnExpression
argument_list|(
literal|"'${cxf.jaxrs.component-scan}'=='true'&& '${cxf.jaxrs.classes-scan}'!='true'"
argument_list|)
annotation|@
name|Import
argument_list|(
name|SpringComponentScanServer
operator|.
name|class
argument_list|)
specifier|protected
specifier|static
class|class
name|JaxRsComponentConfiguration
block|{      }
annotation|@
name|Configuration
annotation|@
name|ConditionalOnClass
argument_list|(
name|JAXRSServerFactoryBean
operator|.
name|class
argument_list|)
annotation|@
name|ConditionalOnExpression
argument_list|(
literal|"'${cxf.jaxrs.classes-scan}'=='true'&& '${cxf.jaxrs.component-scan}'!='true'"
argument_list|)
annotation|@
name|Import
argument_list|(
name|SpringJaxrsClassesScanServer
operator|.
name|class
argument_list|)
specifier|protected
specifier|static
class|class
name|JaxRsClassesConfiguration
block|{      }
block|}
end_class

end_unit

