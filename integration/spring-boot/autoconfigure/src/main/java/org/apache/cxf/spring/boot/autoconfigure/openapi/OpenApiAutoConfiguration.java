begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|spring
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|openapi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|openapi
operator|.
name|OpenApiCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|openapi
operator|.
name|OpenApiFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|spring
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|CxfAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|AutoConfigureAfter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnMissingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  * Auto-configure the OpenApiCustomizer in case the Spring Boot application  * uses OpenApiFeature. The actual injection happens after OpenApiFeature bean's  * initialization phase.  *  */
end_comment

begin_class
annotation|@
name|Configuration
annotation|@
name|ConditionalOnClass
argument_list|(
name|OpenApiFeature
operator|.
name|class
argument_list|)
annotation|@
name|AutoConfigureAfter
argument_list|(
name|CxfAutoConfiguration
operator|.
name|class
argument_list|)
specifier|public
class|class
name|OpenApiAutoConfiguration
block|{
annotation|@
name|Bean
annotation|@
name|ConditionalOnMissingBean
specifier|public
name|OpenApiCustomizer
name|openApiCustomizer
parameter_list|()
block|{
specifier|final
name|OpenApiCustomizer
name|customizer
init|=
operator|new
name|OpenApiCustomizer
argument_list|()
decl_stmt|;
name|customizer
operator|.
name|setDynamicBasePath
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|customizer
return|;
block|}
annotation|@
name|Bean
specifier|public
name|OpenApiFeatureBeanPostProcessor
name|openApiFeatureBeanPostProcessor
parameter_list|()
block|{
return|return
operator|new
name|OpenApiFeatureBeanPostProcessor
argument_list|()
return|;
block|}
block|}
end_class

end_unit

