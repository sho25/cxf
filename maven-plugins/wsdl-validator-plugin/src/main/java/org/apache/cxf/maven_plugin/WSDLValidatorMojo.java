begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|maven_plugin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|toolspec
operator|.
name|ToolSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|validator
operator|.
name|WSDLValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|AbstractMojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_comment
comment|/**  * @goal wsdlvalidator  * @description CXF WSDL Validation  * @threadSafe  */
end_comment

begin_class
specifier|public
class|class
name|WSDLValidatorMojo
extends|extends
name|AbstractMojo
block|{
comment|/**      * @parameter      */
specifier|private
name|Boolean
name|verbose
decl_stmt|;
comment|/**      * @parameter      */
specifier|private
name|Boolean
name|quiet
decl_stmt|;
comment|/**      * @parameter expression="${cxf.wsdlRoot}" default-value="${basedir}/src/main/resources/wsdl"      */
specifier|private
name|File
name|wsdlRoot
decl_stmt|;
comment|/**      * @parameter expression="${cxf.testWsdlRoot}" default-value="${basedir}/src/test/resources/wsdl"      */
specifier|private
name|File
name|testWsdlRoot
decl_stmt|;
comment|/**      * Directory in which the "DONE" markers are saved that       * @parameter expression="${cxf.markerDirectory}"       *            default-value="${project.build.directory}/cxf-wsdl-validator-markers"      */
specifier|private
name|File
name|markerDirectory
decl_stmt|;
comment|/**      * A list of wsdl files to include. Can contain ant-style wildcards and double wildcards. Defaults to      * *.wsdl      *       * @parameter      */
specifier|private
name|String
name|includes
index|[]
decl_stmt|;
comment|/**      * A list of wsdl files to exclude. Can contain ant-style wildcards and double wildcards.      *       * @parameter      */
specifier|private
name|String
name|excludes
index|[]
decl_stmt|;
specifier|private
name|String
name|getIncludeExcludeString
parameter_list|(
name|String
index|[]
name|arr
parameter_list|)
block|{
if|if
condition|(
name|arr
operator|==
literal|null
condition|)
block|{
return|return
literal|""
return|;
block|}
name|StringBuilder
name|str
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|arr
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|s
range|:
name|arr
control|)
block|{
if|if
condition|(
name|str
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|str
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
name|str
operator|.
name|append
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|str
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|List
argument_list|<
name|File
argument_list|>
name|getWsdlFiles
parameter_list|(
name|File
name|dir
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|exList
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|excludes
operator|!=
literal|null
condition|)
block|{
name|exList
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|excludes
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|exList
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
operator|.
name|getDefaultExcludes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|inc
init|=
name|getIncludeExcludeString
argument_list|(
name|includes
argument_list|)
decl_stmt|;
name|String
name|ex
init|=
name|getIncludeExcludeString
argument_list|(
name|exList
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|exList
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|?
argument_list|>
name|newfiles
init|=
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
operator|.
name|getFiles
argument_list|(
name|dir
argument_list|,
name|inc
argument_list|,
name|ex
argument_list|)
decl_stmt|;
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
name|newfiles
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|exc
parameter_list|)
block|{
throw|throw
operator|new
name|MojoExecutionException
argument_list|(
name|exc
operator|.
name|getMessage
argument_list|()
argument_list|,
name|exc
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|processWsdl
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
comment|// If URL to WSDL, replace ? and& since they're invalid chars for file names
name|File
name|doneFile
init|=
operator|new
name|File
argument_list|(
name|markerDirectory
argument_list|,
literal|"."
operator|+
name|file
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'?'
argument_list|,
literal|'_'
argument_list|)
operator|.
name|replace
argument_list|(
literal|'&'
argument_list|,
literal|'_'
argument_list|)
operator|+
literal|".DONE"
argument_list|)
decl_stmt|;
name|boolean
name|doWork
init|=
literal|false
decl_stmt|;
if|if
condition|(
operator|!
name|doneFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|doWork
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|file
operator|.
name|lastModified
argument_list|()
operator|>
name|doneFile
operator|.
name|lastModified
argument_list|()
condition|)
block|{
name|doWork
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|doWork
condition|)
block|{
name|doneFile
operator|.
name|delete
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|// verbose arg
if|if
condition|(
name|verbose
operator|!=
literal|null
operator|&&
name|verbose
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
literal|"-verbose"
argument_list|)
expr_stmt|;
block|}
comment|// quiet arg
if|if
condition|(
name|quiet
operator|!=
literal|null
operator|&&
name|quiet
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
literal|"-quiet"
argument_list|)
expr_stmt|;
block|}
name|getLog
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Calling wsdlvalidator with args: "
operator|+
name|list
argument_list|)
expr_stmt|;
try|try
block|{
name|list
operator|.
name|add
argument_list|(
name|file
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|pargs
init|=
name|list
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|list
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|InputStream
name|toolspecStream
init|=
name|WSDLValidator
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"wsdlvalidator.xml"
argument_list|)
decl_stmt|;
name|ToolSpec
name|spec
init|=
operator|new
name|ToolSpec
argument_list|(
name|toolspecStream
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|toolspecStream
operator|.
name|close
argument_list|()
expr_stmt|;
name|WSDLValidator
name|validator
init|=
operator|new
name|WSDLValidator
argument_list|(
name|spec
argument_list|)
decl_stmt|;
name|validator
operator|.
name|setArguments
argument_list|(
name|pargs
argument_list|)
expr_stmt|;
name|boolean
name|ok
init|=
name|validator
operator|.
name|executeForMaven
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ok
condition|)
block|{
throw|throw
operator|new
name|MojoExecutionException
argument_list|(
literal|"WSDL failed validation: "
operator|+
name|file
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|doneFile
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|MojoExecutionException
argument_list|(
name|file
operator|.
name|getName
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|MojoExecutionException
block|{
if|if
condition|(
name|includes
operator|==
literal|null
condition|)
block|{
name|includes
operator|=
operator|new
name|String
index|[]
block|{
literal|"*.wsdl"
block|}
expr_stmt|;
block|}
name|markerDirectory
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|wsdls
init|=
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|wsdlRoot
operator|!=
literal|null
operator|&&
name|wsdlRoot
operator|.
name|exists
argument_list|()
condition|)
block|{
name|wsdls
operator|.
name|addAll
argument_list|(
name|getWsdlFiles
argument_list|(
name|wsdlRoot
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|testWsdlRoot
operator|!=
literal|null
operator|&&
name|testWsdlRoot
operator|.
name|exists
argument_list|()
condition|)
block|{
name|wsdls
operator|.
name|addAll
argument_list|(
name|getWsdlFiles
argument_list|(
name|testWsdlRoot
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|File
name|wsdl
range|:
name|wsdls
control|)
block|{
name|processWsdl
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

