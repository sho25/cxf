begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|maven_plugin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|BindingFileHelper
block|{
specifier|static
specifier|final
name|String
name|LOCATION_ATTR_NAME
init|=
literal|"wsdlLocation"
decl_stmt|;
specifier|private
name|BindingFileHelper
parameter_list|()
block|{     }
specifier|static
name|Document
name|readDocument
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|Exception
block|{
name|DocumentBuilderFactory
name|dbf
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|DocumentBuilder
name|db
init|=
name|dbf
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|db
operator|.
name|parse
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|normalize
argument_list|()
expr_stmt|;
return|return
name|doc
return|;
block|}
comment|/**      * Reads bindingFile from given stream, sets the attribute wsdlLocation on the top element bindings to the      * given wsdlLocation and writes the resulting binding file to outBindingFile      *       * @param bindingFileStream      * @param wsdlLocation      * @param outBindingFile      * @throws Exception      */
specifier|public
specifier|static
name|boolean
name|setWsdlLocationAndWrite
parameter_list|(
name|InputStream
name|bindingFileStream
parameter_list|,
name|URI
name|wsdlLocation
parameter_list|,
name|File
name|outBindingFile
parameter_list|)
throws|throws
name|Exception
block|{
name|Document
name|doc
init|=
name|readDocument
argument_list|(
name|bindingFileStream
argument_list|)
decl_stmt|;
comment|// Find and set wsdlLocation
name|Element
name|bindings
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|String
name|oldLocation
init|=
name|bindings
operator|.
name|getAttribute
argument_list|(
name|LOCATION_ATTR_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldLocation
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|oldLocation
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|bindings
operator|.
name|setAttribute
argument_list|(
name|LOCATION_ATTR_NAME
argument_list|,
name|wsdlLocation
operator|.
name|toURL
argument_list|()
operator|.
name|toExternalForm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Save to outBindingFile
name|TransformerFactory
name|transformerFactory
init|=
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|Transformer
name|transformer
init|=
name|transformerFactory
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
name|transformer
operator|.
name|setOutputProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|DOMSource
name|source
init|=
operator|new
name|DOMSource
argument_list|(
name|doc
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|outBindingFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|outBindingFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
name|FileOutputStream
name|fos
init|=
operator|new
name|FileOutputStream
argument_list|(
name|outBindingFile
argument_list|)
decl_stmt|;
name|StreamResult
name|result
init|=
operator|new
name|StreamResult
argument_list|(
name|fos
argument_list|)
decl_stmt|;
name|transformer
operator|.
name|transform
argument_list|(
name|source
argument_list|,
name|result
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|static
name|void
name|setWsdlLocationInBindingsIfNotSet
parameter_list|(
name|File
name|baseDir
parameter_list|,
name|File
name|outDir
parameter_list|,
name|WsdlOption
name|o
parameter_list|,
name|Log
name|log
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
try|try
block|{
name|String
index|[]
name|bindingFiles
init|=
name|o
operator|.
name|getBindingFiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|bindingFiles
operator|.
name|length
condition|;
name|c
operator|++
control|)
block|{
name|String
name|bindingFilePath
init|=
name|bindingFiles
index|[
name|c
index|]
decl_stmt|;
name|File
name|bindingFile
init|=
operator|new
name|File
argument_list|(
name|bindingFilePath
argument_list|)
decl_stmt|;
name|File
name|outFile
init|=
operator|new
name|File
argument_list|(
name|outDir
argument_list|,
literal|""
operator|+
name|c
operator|+
literal|"-"
operator|+
name|bindingFile
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|URI
name|wsdlLocation
init|=
name|o
operator|.
name|getWsdlURI
argument_list|(
name|baseDir
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|FileInputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|bindingFile
argument_list|)
decl_stmt|;
name|boolean
name|wasSet
init|=
name|setWsdlLocationAndWrite
argument_list|(
name|is
argument_list|,
name|wsdlLocation
argument_list|,
name|outFile
argument_list|)
decl_stmt|;
if|if
condition|(
name|log
operator|!=
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Checked binding file "
operator|+
name|bindingFilePath
operator|+
literal|" "
operator|+
name|wasSet
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|wasSet
condition|)
block|{
name|bindingFiles
index|[
name|c
index|]
operator|=
name|outFile
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|MojoExecutionException
argument_list|(
literal|"Error setting wsdlLocation in binding file"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

