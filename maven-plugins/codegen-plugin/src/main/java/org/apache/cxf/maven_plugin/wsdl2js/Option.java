begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|maven_plugin
operator|.
name|wsdl2js
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_class
specifier|public
class|class
name|Option
block|{
comment|/**      * Since an arbitrary URI can't be an XML element name,      * these pairs are used to specify a mapping from URI      * to prefix.      */
specifier|public
specifier|static
class|class
name|UriPrefixPair
block|{
comment|/**          * The namespace URI.          */
name|String
name|uri
decl_stmt|;
comment|/**          * The identifier prefix.          */
name|String
name|prefix
decl_stmt|;
comment|/**          * @return the uri          */
specifier|public
name|String
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
comment|/**          * Set the URI.          * @param uri the uri.          */
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
comment|/**          * @return the prefix.          */
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
comment|/**          * Set the prefix.          * @param prefix the prefix.          */
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
block|}
comment|/**      * mappings from namespace URIs to javascript identifier prefixes.      */
name|UriPrefixPair
index|[]
name|packagePrefixes
decl_stmt|;
comment|/**      * OASIS catalog file for use when reading the WSDL.      */
name|File
name|catalog
decl_stmt|;
comment|/**      * Destination directory for the output.      */
name|File
name|output
decl_stmt|;
comment|/**      * Whether to validate the WSDL.      */
name|String
name|validate
decl_stmt|;
comment|/**      * The wsdl version.      */
name|String
name|wsdlVersion
decl_stmt|;
comment|/**      * A set of dependent files used to detect that the generator must process WSDL, even      * if generator marker files are up to date.      */
name|File
name|dependencies
index|[]
decl_stmt|;
specifier|public
name|Option
parameter_list|()
block|{     }
specifier|public
name|void
name|merge
parameter_list|(
name|Option
name|other
parameter_list|)
block|{
if|if
condition|(
name|catalog
operator|==
literal|null
condition|)
block|{
name|catalog
operator|=
name|other
operator|.
name|getCatalog
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|output
operator|==
literal|null
condition|)
block|{
name|output
operator|=
name|other
operator|.
name|getOutput
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|validate
operator|==
literal|null
condition|)
block|{
name|validate
operator|=
name|other
operator|.
name|getValidate
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|wsdlVersion
operator|==
literal|null
condition|)
block|{
name|wsdlVersion
operator|=
name|other
operator|.
name|getWsdlVersion
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * @return mappings from namespace URI to javascript name prefix.      */
specifier|public
name|UriPrefixPair
index|[]
name|getPackagePrefixes
parameter_list|()
block|{
return|return
name|packagePrefixes
return|;
block|}
comment|/**      * Set the mappings from namespace URI to Javascript name prefixes.      * @param packagePrefixes      */
specifier|public
name|void
name|setPackagePrefixes
parameter_list|(
name|UriPrefixPair
index|[]
name|packagePrefixes
parameter_list|)
block|{
name|this
operator|.
name|packagePrefixes
operator|=
name|packagePrefixes
expr_stmt|;
block|}
comment|/**      * @return catalog used to resolve XML URIs in the wsdl.      */
specifier|public
name|File
name|getCatalog
parameter_list|()
block|{
return|return
name|catalog
return|;
block|}
comment|/**      * Set catalog used to resolve XML URIs in the wsdl.      * @param catalog catalog.      */
specifier|public
name|void
name|setCatalog
parameter_list|(
name|File
name|catalog
parameter_list|)
block|{
name|this
operator|.
name|catalog
operator|=
name|catalog
expr_stmt|;
block|}
comment|/**      * @return output directory. Default is set      * at the plugin level.      */
specifier|public
name|File
name|getOutput
parameter_list|()
block|{
return|return
name|output
return|;
block|}
comment|/**      * Set the output directory.      * @param output output directory.      */
specifier|public
name|void
name|setOutput
parameter_list|(
name|File
name|output
parameter_list|)
block|{
name|this
operator|.
name|output
operator|=
name|output
expr_stmt|;
block|}
comment|/**      * @return Validating the WSDL?      */
specifier|public
name|String
name|getValidate
parameter_list|()
block|{
return|return
name|validate
return|;
block|}
comment|/**      * Control WSDL validation.      * @param validate true or all to validate.      */
specifier|public
name|void
name|setValidate
parameter_list|(
name|String
name|validate
parameter_list|)
block|{
name|this
operator|.
name|validate
operator|=
name|validate
expr_stmt|;
block|}
specifier|public
name|File
name|getOutputDir
parameter_list|()
block|{
return|return
name|output
return|;
block|}
specifier|public
name|void
name|setOutputDir
parameter_list|(
name|File
name|outputDir
parameter_list|)
block|{
name|output
operator|=
name|outputDir
expr_stmt|;
block|}
specifier|public
name|String
name|getWsdlVersion
parameter_list|()
block|{
return|return
name|wsdlVersion
return|;
block|}
specifier|public
name|void
name|setWsdlVersion
parameter_list|(
name|String
name|wsdlVersion
parameter_list|)
block|{
name|this
operator|.
name|wsdlVersion
operator|=
name|wsdlVersion
expr_stmt|;
block|}
specifier|public
name|File
index|[]
name|getDependencies
parameter_list|()
block|{
return|return
name|dependencies
return|;
block|}
specifier|public
name|void
name|setDependencies
parameter_list|(
name|File
index|[]
name|dependencies
parameter_list|)
block|{
name|this
operator|.
name|dependencies
operator|=
name|dependencies
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"Option [packagePrefixes=%s, catalog=%s, output=%s, "
operator|+
literal|" validate=%s, wsdlVersion=%s, dependencies=%s]"
argument_list|,
name|Arrays
operator|.
name|toString
argument_list|(
name|packagePrefixes
argument_list|)
argument_list|,
name|catalog
argument_list|,
name|output
argument_list|,
name|validate
argument_list|,
name|wsdlVersion
argument_list|,
name|Arrays
operator|.
name|toString
argument_list|(
name|dependencies
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

