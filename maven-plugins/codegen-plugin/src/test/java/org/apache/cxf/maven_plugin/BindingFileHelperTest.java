begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|maven_plugin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_class
specifier|public
class|class
name|BindingFileHelperTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|File
name|OUTFILE
init|=
operator|new
name|File
argument_list|(
literal|"target/test-data/testbinding.xml"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_WSDL_URL
init|=
literal|"http://testwsdl"
decl_stmt|;
specifier|public
name|void
name|testBindingWithWsdlLocation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|OUTFILE
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Do not fail if delete fails
block|}
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/bindingWithWsdlLocation.xml"
argument_list|)
decl_stmt|;
name|boolean
name|wasSet
init|=
name|BindingFileHelper
operator|.
name|setWsdlLocationAndWrite
argument_list|(
name|is
argument_list|,
operator|new
name|URI
argument_list|(
name|TEST_WSDL_URL
argument_list|)
argument_list|,
name|OUTFILE
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"This binding file should not be changed"
argument_list|,
name|wasSet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|OUTFILE
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBindingWithoutWsdlLocation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|OUTFILE
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Do not fail if delete fails
block|}
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/bindingWithoutWsdlLocation.xml"
argument_list|)
decl_stmt|;
name|BindingFileHelper
operator|.
name|setWsdlLocationAndWrite
argument_list|(
name|is
argument_list|,
operator|new
name|URI
argument_list|(
name|TEST_WSDL_URL
argument_list|)
argument_list|,
name|OUTFILE
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|BindingFileHelper
operator|.
name|readDocument
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|OUTFILE
argument_list|)
argument_list|)
decl_stmt|;
name|Element
name|bindings
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|String
name|location
init|=
name|bindings
operator|.
name|getAttribute
argument_list|(
name|BindingFileHelper
operator|.
name|LOCATION_ATTR_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TEST_WSDL_URL
argument_list|,
name|location
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetBindingForWsdlOption
parameter_list|()
throws|throws
name|MojoExecutionException
block|{
name|WsdlOption
name|o
init|=
operator|new
name|WsdlOption
argument_list|()
decl_stmt|;
name|o
operator|.
name|setWsdl
argument_list|(
literal|"test.wsdl"
argument_list|)
expr_stmt|;
name|File
name|baseDir
init|=
operator|new
name|File
argument_list|(
literal|"."
argument_list|)
decl_stmt|;
name|File
name|tempDir
init|=
operator|new
name|File
argument_list|(
name|baseDir
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tempbindings"
argument_list|)
decl_stmt|;
name|File
name|bindingFile
init|=
operator|new
name|File
argument_list|(
name|baseDir
argument_list|,
literal|"src/test/resources/bindingWithoutWsdlLocation.xml"
argument_list|)
decl_stmt|;
name|o
operator|.
name|setBindingFiles
argument_list|(
operator|new
name|String
index|[]
block|{
name|bindingFile
operator|.
name|getAbsolutePath
argument_list|()
block|}
argument_list|)
expr_stmt|;
name|BindingFileHelper
operator|.
name|setWsdlLocationInBindingsIfNotSet
argument_list|(
name|baseDir
argument_list|,
name|tempDir
argument_list|,
name|o
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|bindingFilePath
init|=
name|o
operator|.
name|getBindingFiles
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|File
name|expectedBindingFile
init|=
operator|new
name|File
argument_list|(
name|tempDir
argument_list|,
literal|"0-bindingWithoutWsdlLocation.xml"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Binding file should be the temp file"
argument_list|,
name|expectedBindingFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|bindingFilePath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

