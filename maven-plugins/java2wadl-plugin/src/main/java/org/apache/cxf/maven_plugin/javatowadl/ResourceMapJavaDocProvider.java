begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|maven_plugin
operator|.
name|javatowadl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|ClassResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|OperationResourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|model
operator|.
name|doc
operator|.
name|DocumentationProvider
import|;
end_import

begin_class
specifier|public
class|class
name|ResourceMapJavaDocProvider
implements|implements
name|DocumentationProvider
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|ResourceMapJavaDocProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Properties
name|dumpedDocFile
decl_stmt|;
specifier|public
name|ResourceMapJavaDocProvider
parameter_list|(
name|String
name|targetFolder
parameter_list|)
block|{
name|dumpedDocFile
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
name|Files
operator|.
name|newInputStream
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|targetFolder
operator|+
literal|"/site/apidocs/dumpFile.properties"
argument_list|)
argument_list|)
init|)
block|{
name|dumpedDocFile
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warning
argument_list|(
literal|"can't load dumped Documentation file"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getClassDoc
parameter_list|(
name|ClassResourceInfo
name|cri
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|annotatedClass
init|=
name|getPathAnnotatedClass
argument_list|(
name|cri
operator|.
name|getServiceClass
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|dumpedDocFile
operator|.
name|getProperty
argument_list|(
name|annotatedClass
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMethodDoc
parameter_list|(
name|OperationResourceInfo
name|ori
parameter_list|)
block|{
name|Method
name|method
init|=
name|ori
operator|.
name|getAnnotatedMethod
argument_list|()
operator|==
literal|null
condition|?
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
else|:
name|ori
operator|.
name|getAnnotatedMethod
argument_list|()
decl_stmt|;
name|String
name|methodKey
init|=
name|method
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|method
operator|.
name|getName
argument_list|()
decl_stmt|;
return|return
name|dumpedDocFile
operator|.
name|getProperty
argument_list|(
name|methodKey
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMethodResponseDoc
parameter_list|(
name|OperationResourceInfo
name|ori
parameter_list|)
block|{
name|Method
name|method
init|=
name|ori
operator|.
name|getAnnotatedMethod
argument_list|()
operator|==
literal|null
condition|?
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
else|:
name|ori
operator|.
name|getAnnotatedMethod
argument_list|()
decl_stmt|;
name|String
name|methodResponseKey
init|=
name|method
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
literal|"returnCommentTag"
decl_stmt|;
return|return
name|dumpedDocFile
operator|.
name|getProperty
argument_list|(
name|methodResponseKey
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMethodParameterDoc
parameter_list|(
name|OperationResourceInfo
name|ori
parameter_list|,
name|int
name|paramIndex
parameter_list|)
block|{
name|Method
name|method
init|=
name|ori
operator|.
name|getAnnotatedMethod
argument_list|()
operator|==
literal|null
condition|?
name|ori
operator|.
name|getMethodToInvoke
argument_list|()
else|:
name|ori
operator|.
name|getAnnotatedMethod
argument_list|()
decl_stmt|;
name|String
name|methodParamKey
init|=
name|method
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|".paramCommentTag."
operator|+
name|paramIndex
decl_stmt|;
return|return
name|dumpedDocFile
operator|.
name|getProperty
argument_list|(
name|methodParamKey
argument_list|)
return|;
block|}
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|getPathAnnotatedClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|cls
parameter_list|)
block|{
if|if
condition|(
name|cls
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
return|return
name|cls
return|;
block|}
if|if
condition|(
name|cls
operator|.
name|getSuperclass
argument_list|()
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
return|return
name|cls
operator|.
name|getSuperclass
argument_list|()
return|;
block|}
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|i
range|:
name|cls
operator|.
name|getInterfaces
argument_list|()
control|)
block|{
if|if
condition|(
name|i
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
operator|!=
literal|null
condition|)
block|{
return|return
name|i
return|;
block|}
block|}
return|return
name|cls
return|;
block|}
block|}
end_class

end_unit

