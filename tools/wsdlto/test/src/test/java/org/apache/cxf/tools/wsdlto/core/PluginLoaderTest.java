begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|plugin
operator|.
name|DataBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|plugin
operator|.
name|FrontEnd
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|plugin
operator|.
name|Generator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|plugin
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|PluginLoaderTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
specifier|public
name|void
name|testLoadPlugins
parameter_list|()
throws|throws
name|Exception
block|{
name|PluginLoader
name|loader
init|=
name|PluginLoader
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|loader
operator|.
name|getPlugins
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Plugin
name|plugin
init|=
name|getPlugin
argument_list|(
name|loader
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|plugin
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|FrontEnd
argument_list|>
name|frontends
init|=
name|loader
operator|.
name|getFrontEnds
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|frontends
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|frontends
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FrontEnd
name|frontend
init|=
name|getFrontEnd
argument_list|(
name|frontends
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"jaxws"
argument_list|,
name|frontend
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.tools.wsdlto.frontend.jaxws"
argument_list|,
name|frontend
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JAXWSProfile"
argument_list|,
name|frontend
operator|.
name|getProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|frontend
operator|.
name|getGenerators
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|frontend
operator|.
name|getGenerators
argument_list|()
operator|.
name|getGenerator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AntGenerator"
argument_list|,
name|getGenerator
argument_list|(
name|frontend
argument_list|,
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JAXWSContainer"
argument_list|,
name|frontend
operator|.
name|getContainer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jaxws-toolspec.xml"
argument_list|,
name|frontend
operator|.
name|getContainer
argument_list|()
operator|.
name|getToolspec
argument_list|()
argument_list|)
expr_stmt|;
name|loader
operator|.
name|getFrontEndProfile
argument_list|(
literal|"jaxws"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|DataBinding
argument_list|>
name|databindings
init|=
name|loader
operator|.
name|getDataBindings
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|databindings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|databindings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DataBinding
name|databinding
init|=
name|databindings
operator|.
name|get
argument_list|(
literal|"jaxb"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|databinding
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jaxb"
argument_list|,
name|databinding
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.tools.wsdlto.databinding.jaxb"
argument_list|,
name|databinding
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JAXBDataBinding"
argument_list|,
name|databinding
operator|.
name|getProfile
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|String
name|getLogMessage
parameter_list|(
name|String
name|key
parameter_list|,
name|Object
modifier|...
name|params
parameter_list|)
block|{
return|return
operator|new
name|Message
argument_list|(
name|key
argument_list|,
name|PluginLoader
operator|.
name|LOG
argument_list|,
name|params
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|protected
name|Generator
name|getGenerator
parameter_list|(
name|FrontEnd
name|frontend
parameter_list|,
name|int
name|index
parameter_list|)
block|{
return|return
name|frontend
operator|.
name|getGenerators
argument_list|()
operator|.
name|getGenerator
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|protected
name|FrontEnd
name|getFrontEnd
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|FrontEnd
argument_list|>
name|frontends
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|int
name|size
init|=
name|frontends
operator|.
name|size
argument_list|()
decl_stmt|;
return|return
name|frontends
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|FrontEnd
index|[
name|size
index|]
argument_list|)
index|[
name|index
index|]
return|;
block|}
specifier|protected
name|DataBinding
name|getDataBinding
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|DataBinding
argument_list|>
name|databindings
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|int
name|size
init|=
name|databindings
operator|.
name|size
argument_list|()
decl_stmt|;
return|return
name|databindings
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|DataBinding
index|[
name|size
index|]
argument_list|)
index|[
name|index
index|]
return|;
block|}
specifier|protected
name|Plugin
name|getPlugin
parameter_list|(
name|PluginLoader
name|loader
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|int
name|size
init|=
name|loader
operator|.
name|getPlugins
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
return|return
name|loader
operator|.
name|getPlugins
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|Plugin
index|[
name|size
index|]
argument_list|)
index|[
name|index
index|]
return|;
block|}
block|}
end_class

end_unit

