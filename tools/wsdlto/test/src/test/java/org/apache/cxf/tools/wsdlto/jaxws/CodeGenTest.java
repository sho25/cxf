begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Modifier
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|ParameterizedType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|HandlerChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|Oneway
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RequestWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|ResponseWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|WebFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ProcessorTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|AnnotationUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|core
operator|.
name|DataBindingProfile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|core
operator|.
name|FrontEndProfile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|core
operator|.
name|PluginLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|JAXWSContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CodeGenTest
extends|extends
name|ProcessorTestBase
block|{
specifier|private
name|JAXWSContainer
name|processor
decl_stmt|;
specifier|private
name|ClassLoader
name|classLoader
decl_stmt|;
specifier|private
name|String
name|origCP
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|origCP
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.class.path"
argument_list|)
expr_stmt|;
name|File
name|classFile
init|=
operator|new
name|java
operator|.
name|io
operator|.
name|File
argument_list|(
name|output
operator|.
name|getCanonicalPath
argument_list|()
operator|+
literal|"/classes"
argument_list|)
decl_stmt|;
name|classFile
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"java.class.path"
argument_list|,
name|getClassPath
argument_list|()
operator|+
name|classFile
operator|.
name|getCanonicalPath
argument_list|()
operator|+
name|File
operator|.
name|separatorChar
argument_list|)
expr_stmt|;
name|classLoader
operator|=
name|AnnotationUtil
operator|.
name|getClassLoader
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
name|ToolConstants
operator|.
name|CFG_COMPILE
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_CLASSDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
operator|+
literal|"/classes"
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|FrontEndProfile
operator|.
name|class
argument_list|,
name|PluginLoader
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrontEndProfile
argument_list|(
literal|"jaxws"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|DataBindingProfile
operator|.
name|class
argument_list|,
name|PluginLoader
operator|.
name|getInstance
argument_list|()
operator|.
name|getDataBindingProfile
argument_list|(
literal|"jaxb"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_IMPL
argument_list|,
literal|"impl"
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|processor
operator|=
operator|new
name|JAXWSContainer
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"java.class.path"
argument_list|,
name|origCP
argument_list|)
expr_stmt|;
name|processor
operator|=
literal|null
expr_stmt|;
name|env
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderFromAnotherMessage1
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/pizza.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_EXTRA_SOAPHEADER
argument_list|,
literal|"TRUE"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"com.mypizzaco.pizza.PizzaPortType"
argument_list|)
decl_stmt|;
name|Method
name|meths
index|[]
init|=
name|clz
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"orderPizzaBroken"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
literal|"OrderPizza"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://mypizzaco.com/pizza/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OrderPizza"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"CallerIDHeader"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://mypizzaco.com/pizza/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"callerID"
argument_list|,
name|parm
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CallerIDHeader"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"No WebParam found!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
literal|"orderPizza"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
literal|"OrderPizza"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://mypizzaco.com/pizza/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OrderPizza"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"CallerIDHeader"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://mypizzaco.com/pizza/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"callerID"
argument_list|,
name|parm
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CallerIDHeader"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"No WebParam found!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderFromAnotherMessage2
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/pizza.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"com.mypizzaco.pizza.PizzaPortType"
argument_list|)
decl_stmt|;
name|Method
name|meths
index|[]
init|=
name|clz
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"orderPizzaBroken"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
literal|"OrderPizza"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://mypizzaco.com/pizza/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OrderPizza"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"CallerIDHeader"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"If the exsh turned off, should not generate this parameter"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"No WebParam found!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderFromAnotherMessage3
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/pizza.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_EXTRA_SOAPHEADER
argument_list|,
literal|"FALSE"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"com.mypizzaco.pizza.PizzaPortType"
argument_list|)
decl_stmt|;
name|Method
name|meths
index|[]
init|=
name|clz
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"orderPizzaBroken"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
literal|"OrderPizza"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://mypizzaco.com/pizza/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OrderPizza"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"CallerIDHeader"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"If the exsh turned off, should not generate this parameter"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"No WebParam found!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderFromAnotherMessage4
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/pizza_wrapped.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_EXTRA_SOAPHEADER
argument_list|,
literal|"TRUE"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.pizza_wrapped.Pizza"
argument_list|)
decl_stmt|;
name|Method
name|meths
index|[]
init|=
name|clz
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"orderPizza"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
name|i
index|]
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
literal|"Toppings"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://cxf.apache.org/pizza_wrapped/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"CallerIDHeader"
operator|.
name|equals
argument_list|(
name|parm
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"http://cxf.apache.org/pizza_wrapped/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"No WebParam found!"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeaderFromAnotherMessage5
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/OutOfBandHeaderBug.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_EXTRA_SOAPHEADER
argument_list|,
literal|"TRUE"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.bugs.oobh.LoginInterface"
argument_list|)
decl_stmt|;
name|Method
name|meths
index|[]
init|=
name|clz
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"login"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|m
operator|.
name|getReturnType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|m
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Holder
operator|.
name|class
argument_list|,
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Holder
operator|.
name|class
argument_list|,
name|m
operator|.
name|getParameterTypes
argument_list|()
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRPCLit
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_rpc_lit.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|helloworldsoaphttp
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world_rpclit"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|helloworldsoaphttp
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|types
init|=
operator|new
name|File
argument_list|(
name|helloworldsoaphttp
argument_list|,
literal|"types"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|helloworldsoaphttp
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|types
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|length
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_rpclit.GreeterRPCLit"
argument_list|)
decl_stmt|;
name|javax
operator|.
name|jws
operator|.
name|WebService
name|ws
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|javax
operator|.
name|jws
operator|.
name|WebService
operator|.
name|class
argument_list|)
decl_stmt|;
name|SOAPBinding
name|soapBindingAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|SOAPBinding
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"LITERAL"
argument_list|,
name|soapBindingAnno
operator|.
name|use
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RPC"
argument_list|,
name|soapBindingAnno
operator|.
name|style
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Generate operation error"
argument_list|,
literal|3
argument_list|,
name|clz
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|paraClass
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_rpclit.types.MyComplexStruct"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"sendReceiveData"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|paraClass
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"MyComplexStruct"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|clz
operator|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_rpclit.GreeterRPCLitImpl"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|clz
argument_list|)
expr_stmt|;
name|ws
operator|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|javax
operator|.
name|jws
operator|.
name|WebService
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ws
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Webservice annotation wsdlLocation should begin with file"
argument_list|,
name|ws
operator|.
name|wsdlLocation
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"file"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_rpclit.GreeterRPCLit"
argument_list|,
name|ws
operator|.
name|endpointInterface
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"GreeterRPCLit"
argument_list|,
name|ws
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAsynMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_async.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|async
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world_async_soap_http"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|async
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|async
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_async_soap_http.GreeterAsync"
argument_list|)
decl_stmt|;
name|Method
name|method1
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"greetMeSometimeAsync"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|,
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|AsyncHandler
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|WebMethod
name|webMethodAnno1
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method1
argument_list|,
name|WebMethod
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|method1
operator|.
name|getName
argument_list|()
operator|+
literal|"()"
operator|+
literal|" Annotation : WebMethod.operationName "
argument_list|,
literal|"greetMeSometime"
argument_list|,
name|webMethodAnno1
operator|.
name|operationName
argument_list|()
argument_list|)
expr_stmt|;
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
name|method2
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"greetMeSometimeAsync"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|WebMethod
name|webMethodAnno2
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method2
argument_list|,
name|WebMethod
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|method2
operator|.
name|getName
argument_list|()
operator|+
literal|"()"
operator|+
literal|" Annotation : WebMethod.operationName "
argument_list|,
literal|"greetMeSometime"
argument_list|,
name|webMethodAnno2
operator|.
name|operationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloWorldSoap12
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_soap12.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|helloworldsoaphttp
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world_soap12_http"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|helloworldsoaphttp
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|types
init|=
operator|new
name|File
argument_list|(
name|helloworldsoaphttp
argument_list|,
literal|"types"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|helloworldsoaphttp
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|types
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap12_http.Greeter"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"class "
operator|+
name|clz
operator|.
name|getName
argument_list|()
operator|+
literal|" modifier is not public"
argument_list|,
name|Modifier
operator|.
name|isPublic
argument_list|(
name|clz
operator|.
name|getModifiers
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"class "
operator|+
name|clz
operator|.
name|getName
argument_list|()
operator|+
literal|" modifier is interface"
argument_list|,
name|Modifier
operator|.
name|isInterface
argument_list|(
name|clz
operator|.
name|getModifiers
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|WebService
name|webServiceAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|WebService
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Greeter"
argument_list|,
name|webServiceAnn
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"sayHi"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|WebMethod
name|webMethodAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebMethod
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|"()"
operator|+
literal|" Annotation : WebMethod.operationName "
argument_list|,
literal|"sayHi"
argument_list|,
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|RequestWrapper
name|requestWrapperAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|RequestWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap12_http.types.SayHi"
argument_list|,
name|requestWrapperAnn
operator|.
name|className
argument_list|()
argument_list|)
expr_stmt|;
name|ResponseWrapper
name|resposneWrapperAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|ResponseWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sayHiResponse"
argument_list|,
name|resposneWrapperAnn
operator|.
name|localName
argument_list|()
argument_list|)
expr_stmt|;
name|WebResult
name|webResultAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"responseType"
argument_list|,
name|webResultAnno
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"pingMe"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
expr_stmt|;
name|webMethodAnno
operator|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebMethod
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|"()"
operator|+
literal|" Annotation : WebMethod.operationName "
argument_list|,
literal|"pingMe"
argument_list|,
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Class
index|[]
name|exceptionCls
init|=
name|method
operator|.
name|getExceptionTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exceptionCls
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap12_http.PingMeFault"
argument_list|,
name|exceptionCls
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloWorld
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|helloworldsoaphttp
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world_soap_http"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|helloworldsoaphttp
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|types
init|=
operator|new
name|File
argument_list|(
name|helloworldsoaphttp
argument_list|,
literal|"types"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|helloworldsoaphttp
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|types
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap_http.Greeter"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"class "
operator|+
name|clz
operator|.
name|getName
argument_list|()
operator|+
literal|" modifier is not public"
argument_list|,
name|Modifier
operator|.
name|isPublic
argument_list|(
name|clz
operator|.
name|getModifiers
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"class "
operator|+
name|clz
operator|.
name|getName
argument_list|()
operator|+
literal|" modifier is interface"
argument_list|,
name|Modifier
operator|.
name|isInterface
argument_list|(
name|clz
operator|.
name|getModifiers
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|WebService
name|webServiceAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|WebService
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Greeter"
argument_list|,
name|webServiceAnn
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"sayHi"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|WebMethod
name|webMethodAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebMethod
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|"()"
operator|+
literal|" Annotation : WebMethod.operationName "
argument_list|,
literal|"sayHi"
argument_list|,
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|RequestWrapper
name|requestWrapperAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|RequestWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap_http.types.SayHi"
argument_list|,
name|requestWrapperAnn
operator|.
name|className
argument_list|()
argument_list|)
expr_stmt|;
name|ResponseWrapper
name|resposneWrapperAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|ResponseWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sayHiResponse"
argument_list|,
name|resposneWrapperAnn
operator|.
name|localName
argument_list|()
argument_list|)
expr_stmt|;
name|WebResult
name|webResultAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"responseType"
argument_list|,
name|webResultAnno
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"greetMe"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"String"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|WebParam
name|webParamAnn
init|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"requestType"
argument_list|)
decl_stmt|;
comment|//if is wrapped, tns should be empty
name|assertEquals
argument_list|(
literal|"http://cxf.apache.org/w2j/hello_world_soap_http/types"
argument_list|,
name|webParamAnn
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
comment|//assertEquals("", webParamAnn.targetNamespace());
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"greetMeOneWay"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|Oneway
name|oneWayAnn
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|Oneway
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"OneWay Annotation is not generated"
argument_list|,
name|oneWayAnn
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"void"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"greetMeSometime"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"String"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"testDocLitFault"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"void"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Exception class is not generated "
argument_list|,
literal|2
argument_list|,
name|method
operator|.
name|getExceptionTypes
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"testDocLitBare"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|webResultAnno
operator|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebResult
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"out"
argument_list|,
name|webResultAnno
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|SOAPBinding
name|soapBindingAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|SOAPBinding
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|soapBindingAnno
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|BARE
argument_list|,
name|soapBindingAnno
operator|.
name|parameterStyle
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BareDocumentResponse"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHelloWorldWithDummyPlugin
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify passing space seperated xjc args direct to xjc will load,
comment|// configure and invoke an xjc plugin
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_XJC_ARGS
argument_list|,
literal|"-"
operator|+
name|DummyXjcPlugin
operator|.
name|XDUMMY_XJC_PLUGIN
operator|+
literal|",-"
operator|+
name|DummyXjcPlugin
operator|.
name|XDUMMY_XJC_PLUGIN
operator|+
literal|":arg"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|helloworldsoaphttp
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world_soap_http"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|helloworldsoaphttp
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|types
init|=
operator|new
name|File
argument_list|(
name|helloworldsoaphttp
argument_list|,
literal|"types"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|helloworldsoaphttp
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|types
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap_http.types.SayHi"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"dummy"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"method declared on SayHi"
argument_list|,
name|method
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|equals
argument_list|(
name|clz
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidXjcArgDummyPluginUsage
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_XJC_ARGS
argument_list|,
literal|"-"
operator|+
name|DummyXjcPlugin
operator|.
name|XDUMMY_XJC_PLUGIN
operator|+
literal|",-"
operator|+
name|DummyXjcPlugin
operator|.
name|XDUMMY_XJC_PLUGIN
operator|+
literal|":some_rubbish_argument"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|String
name|msg
init|=
literal|null
decl_stmt|;
try|try
block|{
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expect a ToolException on invalid xjc argument"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ToolException
name|expected
parameter_list|)
block|{
name|msg
operator|=
name|expected
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|":some_rubbish_argument is present in :"
operator|+
name|msg
argument_list|,
name|msg
operator|.
name|indexOf
argument_list|(
literal|":some_rubbish_argument"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Dummy plugin usage string present in :"
operator|+
name|msg
argument_list|,
name|msg
operator|.
name|indexOf
argument_list|(
name|DummyXjcPlugin
operator|.
name|DUMMY_ARG
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testXjcMinusXArgGivesPluginUsage
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_XJC_ARGS
argument_list|,
literal|"-X"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|String
name|msg
init|=
literal|null
decl_stmt|;
try|try
block|{
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expect a ToolException on invalid xjc argument"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ToolException
name|expected
parameter_list|)
block|{
name|msg
operator|=
name|expected
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Dummy plugin usage string present in :"
operator|+
name|msg
argument_list|,
name|msg
operator|.
name|indexOf
argument_list|(
name|DummyXjcPlugin
operator|.
name|DUMMY_ARG
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No BadParameter in msg:"
operator|+
name|msg
argument_list|,
name|msg
operator|.
name|indexOf
argument_list|(
literal|"Bad"
argument_list|)
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDocLitHolder
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/mapping-doc-literal.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|mapping
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"mapping"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mapping
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|mapping
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.mapping.SomethingServer"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"doSomething"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|int
operator|.
name|class
block|,
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
operator|.
name|class
block|,
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"boolean"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|WebParam
name|webParamAnno
init|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"y"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"INOUT"
argument_list|,
name|webParamAnno
operator|.
name|mode
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|webParamAnno
operator|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"z"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OUT"
argument_list|,
name|webParamAnno
operator|.
name|mode
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSchemaImport
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_schema_import.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|w2j
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|File
name|helloworldsoaphttp
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world_soap_http"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|helloworldsoaphttp
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|types
init|=
operator|new
name|File
argument_list|(
name|helloworldsoaphttp
argument_list|,
literal|"types"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|types
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|files
operator|=
name|helloworldsoaphttp
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|types
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|length
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|File
name|schemaImport
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"schema_import"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|schemaImport
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|files
operator|=
name|schemaImport
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.schema_import.Greeter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|clz
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"pingMe"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"void"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Exception class is not generated "
argument_list|,
literal|1
argument_list|,
name|method
operator|.
name|getExceptionTypes
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionNameCollision
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/InvoiceServer.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|invoiceserver
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"invoiceserver"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|invoiceserver
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|invoice
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"invoice"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|invoice
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|exceptionCollision
init|=
operator|new
name|File
argument_list|(
name|invoiceserver
argument_list|,
literal|"NoSuchCustomerFault_Exception.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exceptionCollision
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|invoiceserver
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|invoice
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|length
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.invoiceserver.InvoiceServer"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|clz
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"getInvoicesForCustomer"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|,
name|String
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"NoSuchCustomerFault_Exception"
argument_list|,
name|method
operator|.
name|getExceptionTypes
argument_list|()
index|[
literal|0
index|]
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAllNameCollision
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_collision.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_PACKAGENAME
argument_list|,
literal|"org.apache"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|apache
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|File
name|typeCollision
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"Greeter_Type.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|typeCollision
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|exceptionCollision
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"Greeter_Exception.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exceptionCollision
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|serviceCollision
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"Greeter_Service.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|serviceCollision
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.Greeter"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"SEI class Greeter modifier should be interface"
argument_list|,
name|clz
operator|.
name|isInterface
argument_list|()
argument_list|)
expr_stmt|;
name|clz
operator|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.Greeter_Exception"
argument_list|)
expr_stmt|;
name|clz
operator|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.Greeter_Service"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testImportNameCollision
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/helloworld-portname_servicename.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|setPackageName
argument_list|(
literal|"org.apache"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|apache
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|File
name|serviceCollision
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"HelloWorldServiceImpl_Service.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|serviceCollision
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.HelloWorldServiceImpl"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"SEI class HelloWorldServiceImpl modifier should be interface"
argument_list|,
name|clz
operator|.
name|isInterface
argument_list|()
argument_list|)
expr_stmt|;
name|clz
operator|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.HelloWorldServiceImpl_Service"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSoapHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/soap_header.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_PACKAGENAME
argument_list|,
literal|"org.apache"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|apache
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.HeaderTester"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|clz
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|SOAPBinding
name|soapBindingAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|SOAPBinding
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BARE"
argument_list|,
name|soapBindingAnno
operator|.
name|parameterStyle
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LITERAL"
argument_list|,
name|soapBindingAnno
operator|.
name|use
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DOCUMENT"
argument_list|,
name|soapBindingAnno
operator|.
name|style
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|para
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.InoutHeader"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"inoutHeader"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|para
block|,
name|Holder
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|soapBindingAnno
operator|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|SOAPBinding
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|soapBindingAnno
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|BARE
argument_list|,
name|soapBindingAnno
operator|.
name|parameterStyle
argument_list|()
argument_list|)
expr_stmt|;
name|WebParam
name|webParamAnno
init|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"SOAPHeaderInfo"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"INOUT"
argument_list|,
name|webParamAnno
operator|.
name|mode
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|webParamAnno
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"header_info"
argument_list|,
name|webParamAnno
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHolderHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_holder.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_holder.Greeter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|clz
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|SOAPBinding
name|soapBindingAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|SOAPBinding
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BARE"
argument_list|,
name|soapBindingAnno
operator|.
name|parameterStyle
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LITERAL"
argument_list|,
name|soapBindingAnno
operator|.
name|use
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DOCUMENT"
argument_list|,
name|soapBindingAnno
operator|.
name|style
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|para
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_holder.types.GreetMe"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"sayHi"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Holder
operator|.
name|class
block|,
name|para
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"GreetMeResponse"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|WebParam
name|webParamAnno
init|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"greetMe"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|webParamAnno
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
name|webParamAnno
operator|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"sayHi"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INOUT"
argument_list|,
name|webParamAnno
operator|.
name|mode
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWSAddress
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|addNamespacePackageMap
argument_list|(
literal|"http://cxf.apache.org/w2j/hello_world_soap_http"
argument_list|,
literal|"ws.address"
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/ws_address_binding.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_addr.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|ws
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"ws"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ws
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|address
init|=
operator|new
name|File
argument_list|(
name|ws
argument_list|,
literal|"address"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|address
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|address
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|address
operator|.
name|listFiles
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|6
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|File
name|handlerConfig
init|=
operator|new
name|File
argument_list|(
name|address
argument_list|,
literal|"Greeter_handler.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|handlerConfig
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"ws.address.Greeter"
argument_list|)
decl_stmt|;
name|HandlerChain
name|handlerChainAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|HandlerChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Greeter_handler.xml"
argument_list|,
name|handlerChainAnno
operator|.
name|file
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Handler chain xml generate fail!"
argument_list|,
name|classLoader
operator|.
name|getResource
argument_list|(
literal|"ws/address/Greeter_handler.xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testVoidInOutMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/interoptestdoclit.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|soapinterop
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"soapinterop"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|soapinterop
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|wsdlinterop
init|=
operator|new
name|File
argument_list|(
name|soapinterop
argument_list|,
literal|"wsdlinteroptestdoclit"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|wsdlinterop
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|xsd
init|=
operator|new
name|File
argument_list|(
name|soapinterop
argument_list|,
literal|"xsd"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|xsd
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|wsdlinterop
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|files
operator|=
name|xsd
operator|.
name|listFiles
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.soapinterop.wsdlinteroptestdoclit.WSDLInteropTestDocLitPortType"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"echoVoid"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|WebMethod
name|webMethodAnno
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebMethod
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|"()"
operator|+
literal|" Annotation : WebMethod.operationName "
argument_list|,
literal|"echoVoid"
argument_list|,
name|webMethodAnno
operator|.
name|operationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWsdlImport
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_wsdl_import.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cxf
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"cxf"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cxf
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|w2j
init|=
operator|new
name|File
argument_list|(
name|cxf
argument_list|,
literal|"w2j"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w2j
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|helloWorld
init|=
operator|new
name|File
argument_list|(
name|w2j
argument_list|,
literal|"hello_world"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|helloWorld
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world.Greeter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|clz
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"pingMe"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"void"
argument_list|,
name|method
operator|.
name|getReturnType
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Exception class is not generated "
argument_list|,
literal|1
argument_list|,
name|method
operator|.
name|getExceptionTypes
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.w2j.hello_world.messages.PingMeFault"
argument_list|,
name|method
operator|.
name|getExceptionTypes
argument_list|()
index|[
literal|0
index|]
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWebFault
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/InvoiceServer-issue305570.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|invoiceserver
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"invoiceserver"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|invoiceserver
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|invoice
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"invoice"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|invoice
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.invoiceserver.NoSuchCustomerFault"
argument_list|)
decl_stmt|;
name|WebFault
name|webFault
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|clz
argument_list|,
name|WebFault
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"WebFault annotaion name attribute error"
argument_list|,
literal|"NoSuchCustomer"
argument_list|,
name|webFault
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultiSchemaParsing
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/multi_schema.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|tempuri
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"tempuri"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|tempuri
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|header
init|=
operator|new
name|File
argument_list|(
name|tempuri
argument_list|,
literal|"header"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|header
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
index|[]
name|files
init|=
name|header
operator|.
name|listFiles
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultParameterOrder
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/bug161/header2.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.header2.Header2Test"
argument_list|)
decl_stmt|;
name|Class
name|header
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.header2.Header"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"headerMethod"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Holder
operator|.
name|class
block|,
name|header
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"method should be generated"
argument_list|,
name|method
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSupportXMLBindingBare
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/xml_http_bare.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.xml_http_bare.GreetingPortType"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"sayHello"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sayHello is not be generated"
argument_list|,
name|method
argument_list|)
expr_stmt|;
name|SOAPBinding
name|soapBindingAnn
init|=
operator|(
name|SOAPBinding
operator|)
name|clz
operator|.
name|getAnnotation
argument_list|(
name|SOAPBinding
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|soapBindingAnn
operator|.
name|parameterStyle
argument_list|()
argument_list|,
name|SOAPBinding
operator|.
name|ParameterStyle
operator|.
name|BARE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSupportXMLBindingWrapped
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/xml_http_wrapped.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.xml_http_wrapped.GreetingPortType"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"sayHello"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sayHello is not be generated"
argument_list|,
name|method
argument_list|)
expr_stmt|;
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RequestWrapper
name|reqAnno
init|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RequestWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"WrapperBean Annotation could not be found"
argument_list|,
name|reqAnno
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRouterWSDL
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/router.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_doc_lit.Greeter"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"greetMe"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"greetMe is not be generated"
argument_list|,
name|method
argument_list|)
expr_stmt|;
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RequestWrapper
name|reqAnno
init|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|RequestWrapper
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"WrapperBean Annotation could not be found"
argument_list|,
name|reqAnno
argument_list|)
expr_stmt|;
name|clz
operator|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.hwrouter.HTTPSoapServiceDestination"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"HTTPSoapServiceDestination is not be generated"
argument_list|,
name|clz
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWSDLContainsJavaKeywords
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_with_keywords_operation.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap_http.Greeter"
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|sayHi
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap_http.types.SayHi"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"_do"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|sayHi
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"method which name contains java keywords is not be generated"
argument_list|,
name|method
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidMepOperation
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/invalid_mep.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|String
name|expectedMsg
init|=
literal|"Invalid WSDL, Operation notify in PortType "
operator|+
literal|"{http://services.medial.com.br/echo}EchoNotification not request-response or one-way"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Invalid wsdl should be diagnosed"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
name|expectedMsg
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWSDLWithEnumType
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_with_enum_type.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_soap_http.types.ActionType"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Enum class could not be found"
argument_list|,
name|clz
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSWAMime
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/swa-mime.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/swa-mime-binding.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.swa.SwAServiceInterface"
argument_list|)
decl_stmt|;
name|Method
name|method1
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"echoData"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
operator|.
name|class
block|,
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"method echoData can not be found"
argument_list|,
name|method1
argument_list|)
expr_stmt|;
name|Type
index|[]
name|types
init|=
name|method1
operator|.
name|getGenericParameterTypes
argument_list|()
decl_stmt|;
name|ParameterizedType
name|paraType
init|=
operator|(
name|ParameterizedType
operator|)
name|types
index|[
literal|1
index|]
decl_stmt|;
name|Class
name|typeClass
init|=
operator|(
name|Class
operator|)
name|paraType
operator|.
name|getActualTypeArguments
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"javax.activation.DataHandler"
argument_list|,
name|typeClass
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRPCHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/soapheader_rpc.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
name|cls
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.header_test.rpc.TestRPCHeader"
argument_list|)
decl_stmt|;
name|Method
name|meths
index|[]
init|=
name|cls
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"testHeader1"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
index|[
literal|1
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|annotations
index|[
literal|1
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
literal|1
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/header_test/rpc/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"inHeader"
argument_list|,
name|parm
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"headerMessage"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|Method
name|m
range|:
name|meths
control|)
block|{
if|if
condition|(
literal|"testInOutHeader"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Annotation
name|annotations
index|[]
index|[]
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotations
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
index|[
literal|1
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|annotations
index|[
literal|1
index|]
index|[
literal|0
index|]
operator|instanceof
name|WebParam
argument_list|)
expr_stmt|;
name|WebParam
name|parm
init|=
operator|(
name|WebParam
operator|)
name|annotations
index|[
literal|1
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/header_test/rpc/types"
argument_list|,
name|parm
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"inOutHeader"
argument_list|,
name|parm
operator|.
name|partName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"headerMessage"
argument_list|,
name|parm
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parm
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRefTNS
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/locator.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|File
name|org
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|org
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|apache
init|=
operator|new
name|File
argument_list|(
name|org
argument_list|,
literal|"apache"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|apache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|locator
init|=
operator|new
name|File
argument_list|(
name|apache
argument_list|,
literal|"locator"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|locator
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|locatorService
init|=
operator|new
name|File
argument_list|(
name|locator
argument_list|,
literal|"LocatorService.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|locatorService
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clz
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.locator.LocatorService"
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|paraClass
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.locator.types.QueryEndpoints"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"queryEndpoints"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|paraClass
block|}
argument_list|)
decl_stmt|;
name|WebResult
name|webRes
init|=
name|AnnotationUtil
operator|.
name|getPrivMethodAnnotation
argument_list|(
name|method
argument_list|,
name|WebResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/locator/types"
argument_list|,
name|webRes
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"queryEndpointsResponse"
argument_list|,
name|webRes
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|WebParam
name|webParamAnn
init|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"queryEndpoints"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/locator/types"
argument_list|,
name|webParamAnn
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|=
name|clz
operator|.
name|getMethod
argument_list|(
literal|"deregisterPeerManager"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|webParamAnn
operator|=
name|AnnotationUtil
operator|.
name|getWebParam
argument_list|(
name|method
argument_list|,
literal|"node_id"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|webParamAnn
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWebFaultAnnotaion
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/jms_test_rpc_fault.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_SERVICENAME
argument_list|,
literal|"HelloWorldService"
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
name|cls
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.w2j.hello_world_jms.BadRecordLitFault"
argument_list|)
decl_stmt|;
name|WebFault
name|webFault
init|=
name|AnnotationUtil
operator|.
name|getPrivClassAnnotation
argument_list|(
name|cls
argument_list|,
name|WebFault
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema"
argument_list|,
name|webFault
operator|.
name|targetNamespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWsdlWithInvalidSchema
parameter_list|()
block|{
try|try
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world_with_invalid_schema.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_VALIDATE_WSDL
argument_list|,
name|ToolConstants
operator|.
name|CFG_VALIDATE_WSDL
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Jaxb databinding can not find the schema error "
argument_list|,
name|e
operator|.
name|getLocalizedMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|" cos-st-restricts.1.1: "
operator|+
literal|"The type 'TpAny' is atomic"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGlobalBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/cust.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|greeter
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org/apache/cxf/w2j/hello_world_soap_http/Greeter.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|output
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|contents
init|=
name|FileUtils
operator|.
name|getStringFromFile
argument_list|(
name|greeter
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|contents
operator|.
name|indexOf
argument_list|(
literal|"SOAPBinding.ParameterStyle.BARE"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|contents
operator|.
name|indexOf
argument_list|(
literal|"@ResponseWrapper"
argument_list|)
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testXmlSeeAlso
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/cardealer.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|sei
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"type_substitution/server/CarDealer.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|output
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|contents
init|=
name|FileUtils
operator|.
name|getStringFromFile
argument_list|(
name|sei
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|contents
operator|.
name|indexOf
argument_list|(
literal|"@XmlSeeAlso({ObjectFactory.class})"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWSAction
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/wsdl_addr.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|sei
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"com/example/AddNumbersPortType.java"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|sei
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|contents
init|=
name|FileUtils
operator|.
name|getStringFromFile
argument_list|(
name|sei
argument_list|)
operator|.
name|replace
argument_list|(
literal|"  "
argument_list|,
literal|" "
argument_list|)
decl_stmt|;
name|String
name|expected
init|=
literal|"@Action(input = \"3in\", output = \"3out\", "
operator|+
literal|"fault = {@FaultAction(className = AddNumbersFault_Exception.class, value = \"3fault\")})"
decl_stmt|;
name|assertTrue
argument_list|(
name|contents
operator|.
name|indexOf
argument_list|(
literal|"import javax.xml.ws.Action;"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|contents
operator|.
name|indexOf
argument_list|(
literal|"import javax.xml.ws.FaultAction;"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|contents
operator|.
name|indexOf
argument_list|(
name|expected
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrongTNS
parameter_list|()
block|{
try|try
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/wrong_tns.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"The targetNamespce is not valid"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|": is not a valid char in the targetNamespace"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testW3CEPR
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/w3c-epr.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|sei
init|=
name|this
operator|.
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.w3c.epr.AddNumbersPortType"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|sei
operator|.
name|getMethod
argument_list|(
literal|"addNumbers"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
operator|.
name|class
block|}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"wsdl2java does not map w3c:EndpointReferenceType to javax.xml.ws.EndpointReference"
argument_list|,
name|method
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHandlerAnnotation
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/cxf-1344/handlerbinding.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/cxf-1344/handlerbinding.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGenerateXmlListAnno
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/cxf-1354/string_array_test.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
name|sei
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.stringarray.StringListTest"
argument_list|)
decl_stmt|;
name|Method
name|method
init|=
name|sei
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"@XmlList is not generated for method"
argument_list|,
name|method
operator|.
name|getAnnotation
argument_list|(
name|XmlList
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|xmlListGenerated
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Annotation
name|ann
range|:
name|method
operator|.
name|getParameterAnnotations
argument_list|()
index|[
literal|0
index|]
control|)
block|{
if|if
condition|(
name|ann
operator|instanceof
name|XmlList
condition|)
block|{
name|xmlListGenerated
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
literal|"@XmlList is not generated for paramter"
argument_list|,
name|xmlListGenerated
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWrapperWithWildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|env
operator|.
name|put
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wsdl2java_wsdl/cxf-1404/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|processor
operator|.
name|setContext
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|processor
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Class
name|sei
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
literal|"org.apache.cxf.cxf1404.hello_world_soap_http.Greeter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|sei
operator|.
name|getMethods
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Void
operator|.
name|TYPE
operator|.
name|equals
argument_list|(
name|sei
operator|.
name|getMethods
argument_list|()
index|[
literal|0
index|]
operator|.
name|getReturnType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

