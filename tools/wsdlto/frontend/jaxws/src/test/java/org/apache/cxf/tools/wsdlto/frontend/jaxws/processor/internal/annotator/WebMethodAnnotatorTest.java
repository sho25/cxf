begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|processor
operator|.
name|internal
operator|.
name|annotator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotationElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|WebMethodAnnotatorTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testAddWebMethodAnnotation
parameter_list|()
throws|throws
name|Exception
block|{
name|JavaMethod
name|method
init|=
operator|new
name|JavaMethod
argument_list|()
decl_stmt|;
name|method
operator|.
name|setName
argument_list|(
literal|"echoFoo"
argument_list|)
expr_stmt|;
name|method
operator|.
name|setOperationName
argument_list|(
literal|"echoFoo"
argument_list|)
expr_stmt|;
name|method
operator|.
name|annotate
argument_list|(
operator|new
name|WebMethodAnnotator
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|JAnnotation
argument_list|>
name|annotations
init|=
name|method
operator|.
name|getAnnotationMap
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|annotations
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"WebMethod"
argument_list|,
name|annotations
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddWebResultAnnotation
parameter_list|()
throws|throws
name|Exception
block|{
name|JavaMethod
name|method
init|=
operator|new
name|JavaMethod
argument_list|()
decl_stmt|;
name|method
operator|.
name|annotate
argument_list|(
operator|new
name|WebResultAnnotator
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|JAnnotation
argument_list|>
name|annotations
init|=
name|method
operator|.
name|getAnnotationMap
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|annotations
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|annotations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"WebResult"
argument_list|,
name|annotations
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|JAnnotation
name|resultAnnotation
init|=
name|annotations
operator|.
name|get
argument_list|(
literal|"WebResult"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"@WebResult(name = \"return\")"
argument_list|,
name|resultAnnotation
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|JAnnotationElement
argument_list|>
name|elements
init|=
name|resultAnnotation
operator|.
name|getElements
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|elements
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|elements
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"name"
argument_list|,
name|elements
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"return"
argument_list|,
name|elements
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

