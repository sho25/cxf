begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|processor
operator|.
name|internal
operator|.
name|annotator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotationElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|WebParamAnnotatorTest
extends|extends
name|Assert
block|{
name|JavaMethod
name|method
decl_stmt|;
name|JavaParameter
name|parameter
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|method
operator|=
operator|new
name|JavaMethod
argument_list|()
expr_stmt|;
name|parameter
operator|=
operator|new
name|JavaParameter
argument_list|()
expr_stmt|;
name|parameter
operator|.
name|setMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|init
parameter_list|(
name|JavaMethod
name|m
parameter_list|,
name|JavaParameter
name|param
parameter_list|,
name|SOAPBinding
operator|.
name|Style
name|style
parameter_list|,
name|boolean
name|wrapper
parameter_list|)
block|{
name|m
operator|.
name|setSoapStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|m
operator|.
name|setWrapperStyle
argument_list|(
name|wrapper
argument_list|)
expr_stmt|;
name|param
operator|.
name|setName
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|param
operator|.
name|setTargetNamespace
argument_list|(
literal|"http://apache.org/cxf"
argument_list|)
expr_stmt|;
name|param
operator|.
name|setQName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/cxf"
argument_list|,
literal|"x"
argument_list|)
argument_list|)
expr_stmt|;
name|param
operator|.
name|setPartName
argument_list|(
literal|"y"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnnotateDOCWrapped
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|(
name|method
argument_list|,
name|parameter
argument_list|,
name|SOAPBinding
operator|.
name|Style
operator|.
name|DOCUMENT
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|parameter
operator|.
name|annotate
argument_list|(
operator|new
name|WebParamAnnotator
argument_list|()
argument_list|)
expr_stmt|;
name|JAnnotation
name|annotation
init|=
name|parameter
operator|.
name|getAnnotation
argument_list|(
literal|"WebParam"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"@WebParam(name = \"x\", targetNamespace = \"http://apache.org/cxf\")"
argument_list|,
name|annotation
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|JAnnotationElement
argument_list|>
name|elements
init|=
name|annotation
operator|.
name|getElements
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|elements
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://apache.org/cxf"
argument_list|,
name|elements
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x"
argument_list|,
name|elements
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnnotateDOCBare
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|(
name|method
argument_list|,
name|parameter
argument_list|,
name|SOAPBinding
operator|.
name|Style
operator|.
name|DOCUMENT
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|parameter
operator|.
name|annotate
argument_list|(
operator|new
name|WebParamAnnotator
argument_list|()
argument_list|)
expr_stmt|;
name|JAnnotation
name|annotation
init|=
name|parameter
operator|.
name|getAnnotation
argument_list|(
literal|"WebParam"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"@WebParam(partName = \"y\", name = \"x\", "
operator|+
literal|"targetNamespace = \"http://apache.org/cxf\")"
argument_list|,
name|annotation
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|JAnnotationElement
argument_list|>
name|elements
init|=
name|annotation
operator|.
name|getElements
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|elements
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnnotateRPC
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|(
name|method
argument_list|,
name|parameter
argument_list|,
name|SOAPBinding
operator|.
name|Style
operator|.
name|RPC
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|parameter
operator|.
name|annotate
argument_list|(
operator|new
name|WebParamAnnotator
argument_list|()
argument_list|)
expr_stmt|;
name|JAnnotation
name|annotation
init|=
name|parameter
operator|.
name|getAnnotation
argument_list|(
literal|"WebParam"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|annotation
operator|.
name|getElements
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"@WebParam(partName = \"y\", name = \"y\")"
argument_list|,
name|annotation
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

