begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|processor
operator|.
name|internal
operator|.
name|annotator
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|Annotator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotationElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaAnnotatable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaType
import|;
end_import

begin_class
specifier|public
class|class
name|WebParamAnnotator
implements|implements
name|Annotator
block|{
name|boolean
name|forceHeader
decl_stmt|;
specifier|public
name|WebParamAnnotator
parameter_list|()
block|{     }
specifier|public
name|WebParamAnnotator
parameter_list|(
name|boolean
name|head
parameter_list|)
block|{
name|forceHeader
operator|=
name|head
expr_stmt|;
block|}
specifier|public
name|void
name|annotate
parameter_list|(
name|JavaAnnotatable
name|ja
parameter_list|)
block|{
name|JavaParameter
name|parameter
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ja
operator|instanceof
name|JavaParameter
condition|)
block|{
name|parameter
operator|=
operator|(
name|JavaParameter
operator|)
name|ja
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"WebParamAnnotator only annotate the JavaParameter"
argument_list|)
throw|;
block|}
name|JavaMethod
name|method
init|=
name|parameter
operator|.
name|getMethod
argument_list|()
decl_stmt|;
if|if
condition|(
name|method
operator|.
name|hasParameter
argument_list|(
name|parameter
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|JavaParameter
name|paramInList
init|=
name|method
operator|.
name|getParameter
argument_list|(
name|parameter
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|paramInList
operator|.
name|isIN
argument_list|()
operator|&&
name|parameter
operator|.
name|isOUT
argument_list|()
condition|)
block|{
name|parameter
operator|.
name|setStyle
argument_list|(
name|JavaType
operator|.
name|Style
operator|.
name|INOUT
argument_list|)
expr_stmt|;
block|}
block|}
name|JAnnotation
name|webParamAnnotation
init|=
operator|new
name|JAnnotation
argument_list|(
name|WebParam
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|parameter
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|targetNamespace
init|=
name|method
operator|.
name|getInterface
argument_list|()
operator|.
name|getNamespace
argument_list|()
decl_stmt|;
name|String
name|partName
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|method
operator|.
name|getSoapStyle
argument_list|()
operator|==
name|SOAPBinding
operator|.
name|Style
operator|.
name|DOCUMENT
operator|||
name|parameter
operator|.
name|isHeader
argument_list|()
condition|)
block|{
name|targetNamespace
operator|=
name|parameter
operator|.
name|getTargetNamespace
argument_list|()
expr_stmt|;
if|if
condition|(
name|parameter
operator|.
name|getQName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|name
operator|=
name|parameter
operator|.
name|getQName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|method
operator|.
name|isWrapperStyle
argument_list|()
condition|)
block|{
name|partName
operator|=
name|parameter
operator|.
name|getPartName
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|method
operator|.
name|getSoapStyle
argument_list|()
operator|==
name|SOAPBinding
operator|.
name|Style
operator|.
name|RPC
condition|)
block|{
name|name
operator|=
name|parameter
operator|.
name|getPartName
argument_list|()
expr_stmt|;
name|partName
operator|=
name|parameter
operator|.
name|getPartName
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|partName
operator|!=
literal|null
condition|)
block|{
name|webParamAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"partName"
argument_list|,
name|partName
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|parameter
operator|.
name|getStyle
argument_list|()
operator|==
name|JavaType
operator|.
name|Style
operator|.
name|OUT
condition|)
block|{
name|webParamAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"mode"
argument_list|,
name|WebParam
operator|.
name|Mode
operator|.
name|OUT
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|parameter
operator|.
name|getStyle
argument_list|()
operator|==
name|JavaType
operator|.
name|Style
operator|.
name|INOUT
condition|)
block|{
name|webParamAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"mode"
argument_list|,
name|WebParam
operator|.
name|Mode
operator|.
name|INOUT
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|webParamAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"name"
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|targetNamespace
operator|&&
operator|(
name|method
operator|.
name|getSoapStyle
argument_list|()
operator|==
name|SOAPBinding
operator|.
name|Style
operator|.
name|DOCUMENT
operator|||
name|parameter
operator|.
name|isHeader
argument_list|()
operator|)
condition|)
block|{
name|webParamAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"targetNamespace"
argument_list|,
name|targetNamespace
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|importClz
range|:
name|webParamAnnotation
operator|.
name|getImports
argument_list|()
control|)
block|{
name|parameter
operator|.
name|getMethod
argument_list|()
operator|.
name|getInterface
argument_list|()
operator|.
name|addImport
argument_list|(
name|importClz
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|forceHeader
condition|)
block|{
name|webParamAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"header"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|parameter
operator|.
name|addAnnotation
argument_list|(
literal|"WebParam"
argument_list|,
name|webParamAnnotation
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

