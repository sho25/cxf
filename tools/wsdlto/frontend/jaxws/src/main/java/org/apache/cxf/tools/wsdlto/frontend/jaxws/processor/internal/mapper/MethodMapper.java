begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|processor
operator|.
name|internal
operator|.
name|mapper
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|OperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|OperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|customization
operator|.
name|JAXWSBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|processor
operator|.
name|internal
operator|.
name|ProcessorUtil
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|MethodMapper
block|{
specifier|public
name|JavaMethod
name|map
parameter_list|(
name|OperationInfo
name|operation
parameter_list|)
block|{
name|JavaMethod
name|method
init|=
operator|new
name|JavaMethod
argument_list|()
decl_stmt|;
comment|// set default Document Bare style
name|method
operator|.
name|setSoapStyle
argument_list|(
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Style
operator|.
name|DOCUMENT
argument_list|)
expr_stmt|;
name|String
name|operationName
init|=
name|operation
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
decl_stmt|;
name|method
operator|.
name|setName
argument_list|(
name|ProcessorUtil
operator|.
name|mangleNameToVariableName
argument_list|(
name|operationName
argument_list|)
argument_list|)
expr_stmt|;
name|method
operator|.
name|setOperationName
argument_list|(
name|operationName
argument_list|)
expr_stmt|;
name|JAXWSBinding
name|opBinding
init|=
name|operation
operator|.
name|getExtensor
argument_list|(
name|JAXWSBinding
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|opBinding
operator|!=
literal|null
operator|&&
name|opBinding
operator|.
name|getMethodName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|method
operator|.
name|setName
argument_list|(
name|opBinding
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|opBinding
operator|!=
literal|null
operator|&&
name|opBinding
operator|.
name|getMethodJavaDoc
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|method
operator|.
name|setJavaDoc
argument_list|(
name|opBinding
operator|.
name|getMethodJavaDoc
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|operation
operator|.
name|isOneWay
argument_list|()
condition|)
block|{
name|method
operator|.
name|setStyle
argument_list|(
name|OperationType
operator|.
name|ONE_WAY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|method
operator|.
name|setStyle
argument_list|(
name|OperationType
operator|.
name|REQUEST_RESPONSE
argument_list|)
expr_stmt|;
block|}
name|method
operator|.
name|setWrapperStyle
argument_list|(
name|operation
operator|.
name|isUnwrappedCapable
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|method
return|;
block|}
block|}
end_class

end_unit

