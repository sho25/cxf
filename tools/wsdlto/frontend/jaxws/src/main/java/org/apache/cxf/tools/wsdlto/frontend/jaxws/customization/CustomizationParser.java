begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|customization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Attr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NamedNodeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|catalog
operator|.
name|OASISCatalogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|DOMUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|MapNamespaceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|XMLUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|resource
operator|.
name|URIResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|URIParserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|frontend
operator|.
name|jaxws
operator|.
name|processor
operator|.
name|internal
operator|.
name|ProcessorUtil
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|CustomizationParser
block|{
comment|// For WSDL1.1
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|CustomizationParser
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ToolContext
name|env
decl_stmt|;
comment|// map for jaxws binding and wsdl element
specifier|private
specifier|final
name|Map
argument_list|<
name|Element
argument_list|,
name|Element
argument_list|>
name|jaxwsBindingsMap
init|=
operator|new
name|HashMap
argument_list|<
name|Element
argument_list|,
name|Element
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|InputSource
argument_list|>
name|jaxbBindings
init|=
operator|new
name|ArrayList
argument_list|<
name|InputSource
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Element
argument_list|>
name|customizedElements
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Element
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Element
name|handlerChains
decl_stmt|;
specifier|private
name|Element
name|wsdlNode
decl_stmt|;
specifier|private
name|String
name|wsdlURL
decl_stmt|;
specifier|private
name|CustomNodeSelector
name|nodeSelector
init|=
operator|new
name|CustomNodeSelector
argument_list|()
decl_stmt|;
specifier|public
name|CustomizationParser
parameter_list|()
block|{
name|jaxwsBindingsMap
operator|.
name|clear
argument_list|()
expr_stmt|;
name|jaxbBindings
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Element
name|getHandlerChains
parameter_list|()
block|{
return|return
name|this
operator|.
name|handlerChains
return|;
block|}
specifier|public
name|void
name|parse
parameter_list|(
name|ToolContext
name|pe
parameter_list|)
block|{
name|this
operator|.
name|env
operator|=
name|pe
expr_stmt|;
name|String
index|[]
name|bindingFiles
decl_stmt|;
try|try
block|{
name|wsdlURL
operator|=
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
operator|(
name|String
operator|)
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_WSDLURL
argument_list|)
argument_list|)
expr_stmt|;
name|wsdlNode
operator|=
name|getTargetNode
argument_list|(
name|this
operator|.
name|wsdlURL
argument_list|)
expr_stmt|;
if|if
condition|(
name|wsdlNode
operator|==
literal|null
operator|&&
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_CATALOG
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|wsdlNode
operator|=
name|resolveNodeByCatalog
argument_list|(
name|wsdlURL
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|wsdlNode
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"MISSING_WSDL"
argument_list|,
name|LOG
argument_list|,
name|wsdlURL
argument_list|)
argument_list|)
throw|;
block|}
name|customizedElements
operator|.
name|put
argument_list|(
name|wsdlURL
operator|.
name|toString
argument_list|()
argument_list|,
name|wsdlNode
argument_list|)
expr_stmt|;
name|bindingFiles
operator|=
operator|(
name|String
index|[]
operator|)
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_BINDING
argument_list|)
expr_stmt|;
if|if
condition|(
name|bindingFiles
operator|==
literal|null
condition|)
block|{
return|return;
block|}
block|}
catch|catch
parameter_list|(
name|ClassCastException
name|e
parameter_list|)
block|{
name|bindingFiles
operator|=
operator|new
name|String
index|[
literal|1
index|]
expr_stmt|;
name|bindingFiles
index|[
literal|0
index|]
operator|=
operator|(
name|String
operator|)
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_BINDING
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bindingFiles
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|addBinding
argument_list|(
name|bindingFiles
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|xse
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"STAX_PARSER_ERROR"
argument_list|,
name|LOG
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|xse
argument_list|)
throw|;
block|}
block|}
for|for
control|(
name|Element
name|element
range|:
name|jaxwsBindingsMap
operator|.
name|keySet
argument_list|()
control|)
block|{
name|nodeSelector
operator|.
name|addNamespaces
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|Element
name|oldTargetNode
init|=
name|jaxwsBindingsMap
operator|.
name|get
argument_list|(
name|element
argument_list|)
decl_stmt|;
name|Element
name|targetNode
init|=
name|oldTargetNode
decl_stmt|;
name|internalizeBinding
argument_list|(
name|element
argument_list|,
name|targetNode
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|String
name|uri
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"wsdlLocation"
argument_list|)
decl_stmt|;
name|customizedElements
operator|.
name|put
argument_list|(
name|uri
argument_list|,
name|targetNode
argument_list|)
expr_stmt|;
name|updateJaxwsBindingMapValue
argument_list|(
name|targetNode
argument_list|)
expr_stmt|;
block|}
name|buildHandlerChains
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Element
name|getTargetNode
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
name|wsdlURL
argument_list|)
operator|&&
name|wsdlNode
operator|!=
literal|null
condition|)
block|{
return|return
name|wsdlNode
return|;
block|}
name|Document
name|doc
init|=
literal|null
decl_stmt|;
name|InputStream
name|ins
init|=
literal|null
decl_stmt|;
try|try
block|{
name|URIResolver
name|resolver
init|=
operator|new
name|URIResolver
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|ins
operator|=
name|resolver
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e1
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|ins
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
try|try
block|{
name|doc
operator|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
name|ins
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setDocumentURI
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"CAN_NOT_READ_AS_ELEMENT"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|uri
block|}
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
block|{
return|return
name|doc
operator|.
name|getDocumentElement
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|updateJaxwsBindingMapValue
parameter_list|(
name|Element
name|value
parameter_list|)
block|{
name|String
name|baseURI
init|=
name|value
operator|.
name|getBaseURI
argument_list|()
decl_stmt|;
for|for
control|(
name|Element
name|ele
range|:
name|jaxwsBindingsMap
operator|.
name|keySet
argument_list|()
control|)
block|{
name|String
name|uri
init|=
name|jaxwsBindingsMap
operator|.
name|get
argument_list|(
name|ele
argument_list|)
operator|.
name|getBaseURI
argument_list|()
decl_stmt|;
if|if
condition|(
name|uri
operator|!=
literal|null
operator|&&
name|uri
operator|.
name|equals
argument_list|(
name|baseURI
argument_list|)
condition|)
block|{
name|jaxwsBindingsMap
operator|.
name|put
argument_list|(
name|ele
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|buildHandlerChains
parameter_list|()
block|{
for|for
control|(
name|Element
name|jaxwsBinding
range|:
name|jaxwsBindingsMap
operator|.
name|keySet
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|elemList
init|=
name|DOMUtils
operator|.
name|findAllElementsByTagNameNS
argument_list|(
name|jaxwsBinding
argument_list|,
name|ToolConstants
operator|.
name|HANDLER_CHAINS_URI
argument_list|,
name|ToolConstants
operator|.
name|HANDLER_CHAINS
argument_list|)
decl_stmt|;
if|if
condition|(
name|elemList
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
continue|continue;
block|}
comment|// take the first one, anyway its 1 handler-config per customization
name|this
operator|.
name|handlerChains
operator|=
name|elemList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
specifier|private
name|Node
index|[]
name|getAnnotationNodes
parameter_list|(
specifier|final
name|Node
name|node
parameter_list|)
block|{
name|Node
index|[]
name|nodes
init|=
operator|new
name|Node
index|[
literal|2
index|]
decl_stmt|;
name|Node
name|annotationNode
init|=
name|node
operator|.
name|getFirstChild
argument_list|()
decl_stmt|;
while|while
condition|(
name|annotationNode
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"annotation"
operator|.
name|equals
argument_list|(
name|annotationNode
operator|.
name|getLocalName
argument_list|()
argument_list|)
operator|&&
name|ToolConstants
operator|.
name|SCHEMA_URI
operator|.
name|equals
argument_list|(
name|annotationNode
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
break|break;
block|}
name|annotationNode
operator|=
name|annotationNode
operator|.
name|getNextSibling
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|annotationNode
operator|==
literal|null
condition|)
block|{
name|annotationNode
operator|=
name|node
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createElementNS
argument_list|(
name|ToolConstants
operator|.
name|SCHEMA_URI
argument_list|,
literal|"annotation"
argument_list|)
expr_stmt|;
block|}
name|nodes
index|[
literal|0
index|]
operator|=
name|annotationNode
expr_stmt|;
name|Node
name|appinfoNode
init|=
name|annotationNode
operator|.
name|getFirstChild
argument_list|()
decl_stmt|;
while|while
condition|(
name|appinfoNode
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"appinfo"
operator|.
name|equals
argument_list|(
name|appinfoNode
operator|.
name|getLocalName
argument_list|()
argument_list|)
operator|&&
name|ToolConstants
operator|.
name|SCHEMA_URI
operator|.
name|equals
argument_list|(
name|appinfoNode
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
break|break;
block|}
name|appinfoNode
operator|=
name|appinfoNode
operator|.
name|getNextSibling
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|appinfoNode
operator|==
literal|null
condition|)
block|{
name|appinfoNode
operator|=
name|node
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createElementNS
argument_list|(
name|ToolConstants
operator|.
name|SCHEMA_URI
argument_list|,
literal|"appinfo"
argument_list|)
expr_stmt|;
name|annotationNode
operator|.
name|appendChild
argument_list|(
name|appinfoNode
argument_list|)
expr_stmt|;
block|}
name|nodes
index|[
literal|1
index|]
operator|=
name|appinfoNode
expr_stmt|;
return|return
name|nodes
return|;
block|}
specifier|private
name|void
name|appendJaxbVersion
parameter_list|(
specifier|final
name|Element
name|schemaElement
parameter_list|)
block|{
name|String
name|jaxbPrefix
init|=
name|schemaElement
operator|.
name|lookupPrefix
argument_list|(
name|ToolConstants
operator|.
name|NS_JAXB_BINDINGS
argument_list|)
decl_stmt|;
if|if
condition|(
name|jaxbPrefix
operator|==
literal|null
condition|)
block|{
name|schemaElement
operator|.
name|setAttribute
argument_list|(
literal|"xmlns:jaxb"
argument_list|,
name|ToolConstants
operator|.
name|NS_JAXB_BINDINGS
argument_list|)
expr_stmt|;
name|schemaElement
operator|.
name|setAttribute
argument_list|(
literal|"jaxb:version"
argument_list|,
literal|"2.0"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|copyAllJaxbDeclarations
parameter_list|(
specifier|final
name|Node
name|schemaNode
parameter_list|,
specifier|final
name|Element
name|jaxwsBindingNode
parameter_list|)
block|{
name|appendJaxbVersion
argument_list|(
operator|(
name|Element
operator|)
name|schemaNode
argument_list|)
expr_stmt|;
name|Node
index|[]
name|embededNodes
init|=
name|getAnnotationNodes
argument_list|(
name|schemaNode
argument_list|)
decl_stmt|;
name|Node
name|annotationNode
init|=
name|embededNodes
index|[
literal|0
index|]
decl_stmt|;
name|Node
name|appinfoNode
init|=
name|embededNodes
index|[
literal|1
index|]
decl_stmt|;
for|for
control|(
name|Node
name|childNode
init|=
name|jaxwsBindingNode
operator|.
name|getFirstChild
argument_list|()
init|;
name|childNode
operator|!=
literal|null
condition|;
name|childNode
operator|=
name|childNode
operator|.
name|getNextSibling
argument_list|()
control|)
block|{
name|copyJaxbAttributes
argument_list|(
name|childNode
argument_list|,
operator|(
name|Element
operator|)
name|schemaNode
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isJaxbBindings
argument_list|(
name|childNode
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|Element
name|childEl
init|=
operator|(
name|Element
operator|)
name|childNode
decl_stmt|;
if|if
condition|(
name|isJaxbBindingsElement
argument_list|(
name|childEl
argument_list|)
condition|)
block|{
name|NodeList
name|nlist
init|=
name|nodeSelector
operator|.
name|queryNodes
argument_list|(
name|schemaNode
argument_list|,
name|childEl
operator|.
name|getAttribute
argument_list|(
literal|"node"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nlist
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|node
init|=
name|nlist
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|copyAllJaxbDeclarations
argument_list|(
name|node
argument_list|,
name|childEl
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Element
name|cloneNode
init|=
operator|(
name|Element
operator|)
name|ProcessorUtil
operator|.
name|cloneNode
argument_list|(
name|schemaNode
operator|.
name|getOwnerDocument
argument_list|()
argument_list|,
name|childEl
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|NamedNodeMap
name|atts
init|=
name|cloneNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|atts
operator|.
name|getLength
argument_list|()
condition|;
name|x
operator|++
control|)
block|{
name|Attr
name|attr
init|=
operator|(
name|Attr
operator|)
name|atts
operator|.
name|item
argument_list|(
name|x
argument_list|)
decl_stmt|;
if|if
condition|(
name|ToolConstants
operator|.
name|NS_JAXB_BINDINGS
operator|.
name|equals
argument_list|(
name|attr
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
name|cloneNode
operator|.
name|removeAttributeNode
argument_list|(
name|attr
argument_list|)
expr_stmt|;
name|atts
operator|=
name|cloneNode
operator|.
name|getAttributes
argument_list|()
expr_stmt|;
name|x
operator|=
operator|-
literal|1
expr_stmt|;
block|}
block|}
name|appinfoNode
operator|.
name|appendChild
argument_list|(
name|cloneNode
argument_list|)
expr_stmt|;
name|childNode
operator|=
name|childNode
operator|.
name|getNextSibling
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|schemaNode
operator|.
name|getFirstChild
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|schemaNode
operator|.
name|insertBefore
argument_list|(
name|annotationNode
argument_list|,
name|schemaNode
operator|.
name|getFirstChild
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|schemaNode
operator|.
name|appendChild
argument_list|(
name|annotationNode
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|copyJaxbAttributes
parameter_list|(
name|Node
name|childNode
parameter_list|,
name|Element
name|schemaNode
parameter_list|)
block|{
if|if
condition|(
name|childNode
operator|instanceof
name|Element
condition|)
block|{
name|Element
name|el
init|=
operator|(
name|Element
operator|)
name|childNode
decl_stmt|;
if|if
condition|(
name|el
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|copyJaxbAttributes
argument_list|(
name|el
operator|.
name|getParentNode
argument_list|()
argument_list|,
name|schemaNode
argument_list|)
expr_stmt|;
block|}
name|NamedNodeMap
name|atts
init|=
name|el
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|atts
operator|.
name|getLength
argument_list|()
condition|;
name|x
operator|++
control|)
block|{
name|Attr
name|attr
init|=
operator|(
name|Attr
operator|)
name|atts
operator|.
name|item
argument_list|(
name|x
argument_list|)
decl_stmt|;
if|if
condition|(
name|ToolConstants
operator|.
name|NS_JAXB_BINDINGS
operator|.
name|equals
argument_list|(
name|attr
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
name|Attr
name|attrnew
init|=
name|schemaNode
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createAttributeNS
argument_list|(
name|attr
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|attr
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|attrnew
operator|.
name|setValue
argument_list|(
name|attr
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|schemaNode
operator|.
name|setAttributeNodeNS
argument_list|(
name|attrnew
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"extensionBindingPrefixes"
operator|.
name|equals
argument_list|(
name|attr
operator|.
name|getLocalName
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|pfxs
init|=
name|attr
operator|.
name|getValue
argument_list|()
decl_stmt|;
while|while
condition|(
name|pfxs
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|String
name|pfx
init|=
name|pfxs
decl_stmt|;
name|int
name|idx
init|=
name|pfx
operator|.
name|indexOf
argument_list|(
literal|','
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|!=
operator|-
literal|1
condition|)
block|{
name|pfxs
operator|=
name|pfxs
operator|.
name|substring
argument_list|(
name|idx
operator|+
literal|1
argument_list|)
expr_stmt|;
name|pfx
operator|=
name|pfx
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|idx
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|pfxs
operator|=
literal|""
expr_stmt|;
block|}
name|String
name|ns
init|=
name|el
operator|.
name|lookupNamespaceURI
argument_list|(
name|pfx
argument_list|)
decl_stmt|;
name|schemaNode
operator|.
name|setAttribute
argument_list|(
literal|"xmlns:"
operator|+
name|pfx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
specifier|protected
name|void
name|internalizeBinding
parameter_list|(
name|Element
name|bindings
parameter_list|,
name|Element
name|targetNode
parameter_list|,
name|String
name|expression
parameter_list|)
block|{
if|if
condition|(
name|bindings
operator|.
name|getAttributeNode
argument_list|(
literal|"wsdlLocation"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|expression
operator|=
literal|"/"
expr_stmt|;
block|}
if|if
condition|(
name|isGlobaleBindings
argument_list|(
name|bindings
argument_list|)
condition|)
block|{
name|nodeSelector
operator|.
name|addNamespaces
argument_list|(
name|wsdlNode
argument_list|)
expr_stmt|;
if|if
condition|(
name|targetNode
operator|!=
name|wsdlNode
condition|)
block|{
name|nodeSelector
operator|.
name|addNamespaces
argument_list|(
name|targetNode
argument_list|)
expr_stmt|;
block|}
name|copyBindingsToWsdl
argument_list|(
name|targetNode
argument_list|,
name|bindings
argument_list|,
name|nodeSelector
operator|.
name|getNamespaceContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isJAXWSBindings
argument_list|(
name|bindings
argument_list|)
operator|&&
name|bindings
operator|.
name|getAttributeNode
argument_list|(
literal|"node"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|expression
operator|=
name|expression
operator|+
literal|"/"
operator|+
name|bindings
operator|.
name|getAttribute
argument_list|(
literal|"node"
argument_list|)
expr_stmt|;
name|nodeSelector
operator|.
name|addNamespaces
argument_list|(
name|bindings
argument_list|)
expr_stmt|;
name|NodeList
name|nodeList
init|=
name|nodeSelector
operator|.
name|queryNodes
argument_list|(
name|targetNode
argument_list|,
name|expression
argument_list|)
decl_stmt|;
if|if
condition|(
name|nodeList
operator|==
literal|null
operator|||
name|nodeList
operator|.
name|getLength
argument_list|()
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
operator|new
name|Message
argument_list|(
literal|"NODE_NOT_EXISTS"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|expression
block|}
argument_list|)
argument_list|)
throw|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nodeList
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|node
init|=
name|nodeList
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasJaxbBindingDeclaration
argument_list|(
name|bindings
argument_list|)
condition|)
block|{
name|copyAllJaxbDeclarations
argument_list|(
name|node
argument_list|,
name|bindings
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|copyBindingsToWsdl
argument_list|(
name|node
argument_list|,
name|bindings
argument_list|,
name|nodeSelector
operator|.
name|getNamespaceContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|Element
index|[]
name|children
init|=
name|getChildElements
argument_list|(
name|bindings
argument_list|,
name|ToolConstants
operator|.
name|NS_JAXWS_BINDINGS
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|child
range|:
name|children
control|)
block|{
name|internalizeBinding
argument_list|(
name|child
argument_list|,
name|targetNode
argument_list|,
name|expression
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|copyBindingsToWsdl
parameter_list|(
name|Node
name|node
parameter_list|,
name|Node
name|bindings
parameter_list|,
name|MapNamespaceContext
name|ctx
parameter_list|)
block|{
if|if
condition|(
name|bindings
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|ToolConstants
operator|.
name|JAXWS_BINDINGS
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
name|bindings
operator|.
name|setPrefix
argument_list|(
literal|"jaxws"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ent
range|:
name|ctx
operator|.
name|getUsedNamespaces
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|node
operator|.
name|lookupNamespaceURI
argument_list|(
name|ent
operator|.
name|getKey
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
block|{
name|node
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"xmlns:"
operator|+
name|ent
operator|.
name|getKey
argument_list|()
argument_list|,
name|ent
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|Element
name|element
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|bindings
argument_list|)
decl_stmt|;
while|while
condition|(
name|element
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|element
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|ToolConstants
operator|.
name|JAXWS_BINDINGS
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
name|element
operator|.
name|setPrefix
argument_list|(
literal|"jaxws"
argument_list|)
expr_stmt|;
block|}
name|element
operator|=
name|DOMUtils
operator|.
name|getNextElement
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
name|Node
name|cloneNode
init|=
name|ProcessorUtil
operator|.
name|cloneNode
argument_list|(
name|node
operator|.
name|getOwnerDocument
argument_list|()
argument_list|,
name|bindings
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Node
name|firstChild
init|=
name|DOMUtils
operator|.
name|getChild
argument_list|(
name|node
argument_list|,
literal|"jaxws:bindings"
argument_list|)
decl_stmt|;
if|if
condition|(
name|firstChild
operator|==
literal|null
operator|&&
name|cloneNode
operator|.
name|getNodeName
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"bindings"
argument_list|)
operator|==
operator|-
literal|1
condition|)
block|{
name|wsdlNode
operator|.
name|setAttribute
argument_list|(
literal|"xmlns:jaxws"
argument_list|,
name|ToolConstants
operator|.
name|JAXWS_BINDINGS
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|jaxwsBindingElement
init|=
name|node
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createElement
argument_list|(
literal|"jaxws:bindings"
argument_list|)
decl_stmt|;
name|node
operator|.
name|appendChild
argument_list|(
name|jaxwsBindingElement
argument_list|)
expr_stmt|;
name|firstChild
operator|=
name|jaxwsBindingElement
expr_stmt|;
block|}
if|if
condition|(
name|firstChild
operator|==
literal|null
operator|&&
name|cloneNode
operator|.
name|getNodeName
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"bindings"
argument_list|)
operator|>
operator|-
literal|1
condition|)
block|{
name|firstChild
operator|=
name|node
expr_stmt|;
if|if
condition|(
name|wsdlNode
operator|.
name|getAttributeNode
argument_list|(
literal|"xmls:jaxws"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|wsdlNode
operator|.
name|setAttribute
argument_list|(
literal|"xmlns:jaxws"
argument_list|,
name|ToolConstants
operator|.
name|JAXWS_BINDINGS
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|Element
name|cloneEle
init|=
operator|(
name|Element
operator|)
name|cloneNode
decl_stmt|;
name|cloneEle
operator|.
name|removeAttribute
argument_list|(
literal|"node"
argument_list|)
expr_stmt|;
name|Element
name|elem
init|=
name|DOMUtils
operator|.
name|getFirstElement
argument_list|(
name|cloneNode
argument_list|)
decl_stmt|;
while|while
condition|(
name|elem
operator|!=
literal|null
condition|)
block|{
name|Node
name|attrNode
init|=
name|elem
operator|.
name|getAttributeNode
argument_list|(
literal|"node"
argument_list|)
decl_stmt|;
if|if
condition|(
name|attrNode
operator|!=
literal|null
condition|)
block|{
name|cloneNode
operator|.
name|removeChild
argument_list|(
name|elem
argument_list|)
expr_stmt|;
block|}
name|elem
operator|=
name|DOMUtils
operator|.
name|getNextElement
argument_list|(
name|elem
argument_list|)
expr_stmt|;
block|}
name|firstChild
operator|.
name|appendChild
argument_list|(
name|cloneNode
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|isGlobaleBindings
parameter_list|(
name|Element
name|binding
parameter_list|)
block|{
name|boolean
name|globleNode
init|=
name|binding
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|ToolConstants
operator|.
name|NS_JAXWS_BINDINGS
argument_list|)
operator|&&
name|binding
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"package"
argument_list|)
operator|||
name|binding
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"enableAsyncMapping"
argument_list|)
operator|||
name|binding
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"enableAdditionalSOAPHeaderMapping"
argument_list|)
operator|||
name|binding
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"enableWrapperStyle"
argument_list|)
operator|||
name|binding
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"enableMIMEContent"
argument_list|)
decl_stmt|;
name|Node
name|parentNode
init|=
name|binding
operator|.
name|getParentNode
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentNode
operator|instanceof
name|Element
condition|)
block|{
name|Element
name|ele
init|=
operator|(
name|Element
operator|)
name|parentNode
decl_stmt|;
if|if
condition|(
name|ele
operator|.
name|getAttributeNode
argument_list|(
literal|"wsdlLocation"
argument_list|)
operator|!=
literal|null
operator|&&
name|globleNode
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|Element
index|[]
name|getChildElements
parameter_list|(
name|Element
name|parent
parameter_list|,
name|String
name|nsUri
parameter_list|)
block|{
name|List
argument_list|<
name|Element
argument_list|>
name|a
init|=
operator|new
name|ArrayList
argument_list|<
name|Element
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Node
name|item
init|=
name|parent
operator|.
name|getFirstChild
argument_list|()
init|;
name|item
operator|!=
literal|null
condition|;
name|item
operator|=
name|item
operator|.
name|getNextSibling
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
operator|(
name|item
operator|instanceof
name|Element
operator|)
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|nsUri
operator|.
name|equals
argument_list|(
name|item
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
condition|)
block|{
name|a
operator|.
name|add
argument_list|(
operator|(
name|Element
operator|)
name|item
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|(
name|Element
index|[]
operator|)
name|a
operator|.
name|toArray
argument_list|(
operator|new
name|Element
index|[
name|a
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
specifier|private
name|void
name|addBinding
parameter_list|(
name|String
name|bindingFile
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|Element
name|root
init|=
literal|null
decl_stmt|;
try|try
block|{
name|URIResolver
name|resolver
init|=
operator|new
name|URIResolver
argument_list|(
name|bindingFile
argument_list|)
decl_stmt|;
name|root
operator|=
name|DOMUtils
operator|.
name|readXml
argument_list|(
name|resolver
operator|.
name|getInputStream
argument_list|()
argument_list|)
operator|.
name|getDocumentElement
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"CAN_NOT_READ_AS_ELEMENT"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|bindingFile
block|}
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e1
argument_list|)
throw|;
block|}
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|toNextTag
argument_list|(
name|reader
argument_list|)
expr_stmt|;
if|if
condition|(
name|isValidJaxwsBindingFile
argument_list|(
name|bindingFile
argument_list|,
name|reader
argument_list|)
condition|)
block|{
name|String
name|wsdlLocation
init|=
name|root
operator|.
name|getAttribute
argument_list|(
literal|"wsdlLocation"
argument_list|)
decl_stmt|;
name|Element
name|targetNode
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|wsdlLocation
argument_list|)
condition|)
block|{
name|String
name|wsdlURI
init|=
name|getAbsoluteURI
argument_list|(
name|wsdlLocation
argument_list|,
name|bindingFile
argument_list|)
decl_stmt|;
name|targetNode
operator|=
name|getTargetNode
argument_list|(
name|wsdlURI
argument_list|)
expr_stmt|;
name|String
name|resolvedLoc
init|=
name|wsdlURI
decl_stmt|;
if|if
condition|(
name|targetNode
operator|==
literal|null
operator|&&
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_CATALOG
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|resolvedLoc
operator|=
name|resolveByCatalog
argument_list|(
name|wsdlURI
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|targetNode
operator|=
name|getTargetNode
argument_list|(
name|resolvedLoc
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|targetNode
operator|==
literal|null
condition|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"POINT_TO_WSDL_DOES_NOT_EXIST"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|bindingFile
block|,
name|resolvedLoc
block|}
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
name|root
operator|.
name|setAttribute
argument_list|(
literal|"wsdlLocation"
argument_list|,
name|wsdlURI
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|targetNode
operator|=
name|wsdlNode
expr_stmt|;
name|root
operator|.
name|setAttribute
argument_list|(
literal|"wsdlLocation"
argument_list|,
name|wsdlURL
argument_list|)
expr_stmt|;
block|}
name|jaxwsBindingsMap
operator|.
name|put
argument_list|(
name|root
argument_list|,
name|targetNode
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|isValidJaxbBindingFile
argument_list|(
name|reader
argument_list|)
condition|)
block|{
name|String
name|schemaLocation
init|=
name|root
operator|.
name|getAttribute
argument_list|(
literal|"schemaLocation"
argument_list|)
decl_stmt|;
name|String
name|resolvedSchemaLocation
init|=
name|resolveByCatalog
argument_list|(
name|schemaLocation
argument_list|)
decl_stmt|;
if|if
condition|(
name|resolvedSchemaLocation
operator|!=
literal|null
condition|)
block|{
name|InputSource
name|tmpIns
init|=
literal|null
decl_stmt|;
try|try
block|{
name|tmpIns
operator|=
name|convertToTmpInputSource
argument_list|(
name|root
argument_list|,
name|resolvedSchemaLocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"FAILED_TO_ADD_SCHEMALOCATION"
argument_list|,
name|LOG
argument_list|,
name|bindingFile
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e1
argument_list|)
throw|;
block|}
name|jaxbBindings
operator|.
name|add
argument_list|(
name|tmpIns
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|jaxbBindings
operator|.
name|add
argument_list|(
operator|new
name|InputSource
argument_list|(
name|bindingFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|String
name|getAbsoluteURI
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|bindingFile
parameter_list|)
block|{
name|URI
name|locURI
init|=
literal|null
decl_stmt|;
try|try
block|{
name|locURI
operator|=
operator|new
name|URI
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"BINDING_LOC_ERROR"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|uri
block|}
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
name|locURI
operator|.
name|isAbsolute
argument_list|()
condition|)
block|{
try|try
block|{
name|String
name|base
init|=
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
name|bindingFile
argument_list|)
decl_stmt|;
name|URI
name|baseURI
init|=
operator|new
name|URI
argument_list|(
name|base
argument_list|)
decl_stmt|;
name|locURI
operator|=
name|baseURI
operator|.
name|resolve
argument_list|(
name|locURI
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"NOT_URI"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|bindingFile
block|}
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|locURI
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|Element
name|resolveNodeByCatalog
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|String
name|resolvedLocation
init|=
name|resolveByCatalog
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|getTargetNode
argument_list|(
name|resolvedLocation
argument_list|)
return|;
block|}
specifier|private
name|String
name|resolveByCatalog
parameter_list|(
name|String
name|url
parameter_list|)
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|Bus
name|bus
init|=
operator|(
name|Bus
operator|)
name|env
operator|.
name|get
argument_list|(
name|Bus
operator|.
name|class
argument_list|)
decl_stmt|;
name|OASISCatalogManager
name|catalogResolver
init|=
name|OASISCatalogManager
operator|.
name|getCatalogManager
argument_list|(
name|bus
argument_list|)
decl_stmt|;
if|if
condition|(
name|catalogResolver
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
name|resolvedLocation
decl_stmt|;
try|try
block|{
name|resolvedLocation
operator|=
name|catalogResolver
operator|.
name|resolveSystem
argument_list|(
name|url
argument_list|)
expr_stmt|;
if|if
condition|(
name|resolvedLocation
operator|==
literal|null
condition|)
block|{
name|resolvedLocation
operator|=
name|catalogResolver
operator|.
name|resolveURI
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"FAILED_RESOLVE_CATALOG"
argument_list|,
name|LOG
argument_list|,
name|url
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e1
argument_list|)
throw|;
block|}
return|return
name|resolvedLocation
return|;
block|}
specifier|private
name|InputSource
name|convertToTmpInputSource
parameter_list|(
name|Element
name|ele
parameter_list|,
name|String
name|schemaLoc
parameter_list|)
throws|throws
name|Exception
block|{
name|InputSource
name|result
init|=
literal|null
decl_stmt|;
name|ele
operator|.
name|setAttribute
argument_list|(
literal|"schemaLocation"
argument_list|,
name|schemaLoc
argument_list|)
expr_stmt|;
name|File
name|tmpFile
init|=
name|FileUtils
operator|.
name|createTempFile
argument_list|(
literal|"jaxbbinding"
argument_list|,
literal|".xml"
argument_list|)
decl_stmt|;
name|XMLUtils
operator|.
name|writeTo
argument_list|(
name|ele
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|tmpFile
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
operator|new
name|InputSource
argument_list|(
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
name|tmpFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|tmpFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|boolean
name|isValidJaxbBindingFile
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|)
block|{
if|if
condition|(
name|ToolConstants
operator|.
name|JAXB_BINDINGS
operator|.
name|equals
argument_list|(
name|reader
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|boolean
name|isValidJaxwsBindingFile
parameter_list|(
name|String
name|bindingLocation
parameter_list|,
name|XMLStreamReader
name|reader
parameter_list|)
block|{
if|if
condition|(
name|ToolConstants
operator|.
name|JAXWS_BINDINGS
operator|.
name|equals
argument_list|(
name|reader
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
comment|// Comment this check , by default wsdlLocation value will be the
comment|// user input wsdl url
comment|/*              * String wsdlLocation = reader.getAttributeValue(null,              * "wsdlLocation"); if (!StringUtils.isEmpty(wsdlLocation)) { return              * true; }              */
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|protected
name|void
name|setWSDLNode
parameter_list|(
specifier|final
name|Element
name|node
parameter_list|)
block|{
name|this
operator|.
name|wsdlNode
operator|=
name|node
expr_stmt|;
block|}
specifier|public
name|Node
name|getWSDLNode
parameter_list|()
block|{
return|return
name|this
operator|.
name|wsdlNode
return|;
block|}
specifier|private
name|boolean
name|isJAXWSBindings
parameter_list|(
name|Node
name|bindings
parameter_list|)
block|{
return|return
name|ToolConstants
operator|.
name|NS_JAXWS_BINDINGS
operator|.
name|equals
argument_list|(
name|bindings
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
operator|&&
literal|"bindings"
operator|.
name|equals
argument_list|(
name|bindings
operator|.
name|getLocalName
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|isJaxbBindings
parameter_list|(
name|Node
name|bindings
parameter_list|)
block|{
return|return
name|ToolConstants
operator|.
name|NS_JAXB_BINDINGS
operator|.
name|equals
argument_list|(
name|bindings
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|isJaxbBindingsElement
parameter_list|(
name|Node
name|bindings
parameter_list|)
block|{
return|return
literal|"bindings"
operator|.
name|equals
argument_list|(
name|bindings
operator|.
name|getLocalName
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|hasJaxbBindingDeclaration
parameter_list|(
name|Node
name|bindings
parameter_list|)
block|{
for|for
control|(
name|Node
name|childNode
init|=
name|bindings
operator|.
name|getFirstChild
argument_list|()
init|;
name|childNode
operator|!=
literal|null
condition|;
name|childNode
operator|=
name|childNode
operator|.
name|getNextSibling
argument_list|()
control|)
block|{
if|if
condition|(
name|isJaxbBindings
argument_list|(
name|childNode
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Element
argument_list|>
name|getCustomizedWSDLElements
parameter_list|()
block|{
return|return
name|this
operator|.
name|customizedElements
return|;
block|}
specifier|public
name|List
argument_list|<
name|InputSource
argument_list|>
name|getJaxbBindings
parameter_list|()
block|{
return|return
name|this
operator|.
name|jaxbBindings
return|;
block|}
specifier|public
specifier|static
name|JAXWSBinding
name|mergeJawsBinding
parameter_list|(
name|JAXWSBinding
name|binding1
parameter_list|,
name|JAXWSBinding
name|binding2
parameter_list|)
block|{
if|if
condition|(
name|binding1
operator|!=
literal|null
operator|&&
name|binding2
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|binding2
operator|.
name|isEnableAsyncMapping
argument_list|()
condition|)
block|{
name|binding1
operator|.
name|setEnableAsyncMapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|binding2
operator|.
name|isEnableWrapperStyle
argument_list|()
condition|)
block|{
name|binding1
operator|.
name|setEnableWrapperStyle
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|binding2
operator|.
name|isEnableMime
argument_list|()
condition|)
block|{
name|binding1
operator|.
name|setEnableMime
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|binding2
operator|.
name|getJaxwsClass
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|binding1
operator|.
name|setJaxwsClass
argument_list|(
name|binding2
operator|.
name|getJaxwsClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|binding2
operator|.
name|getJaxwsParas
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|binding1
operator|.
name|setJaxwsParas
argument_list|(
name|binding2
operator|.
name|getJaxwsParas
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|binding1
return|;
block|}
return|return
name|binding1
operator|==
literal|null
condition|?
name|binding2
else|:
name|binding1
return|;
block|}
block|}
end_class

end_unit

