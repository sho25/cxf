begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|DatatypeConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|FrontEndGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|VelocityGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|ClassCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|FileWriterUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|OutputStreamCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|version
operator|.
name|Version
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractGenerator
implements|implements
name|FrontEndGenerator
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|AbstractGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|ToolContext
name|env
decl_stmt|;
specifier|protected
name|String
name|name
decl_stmt|;
specifier|protected
name|VelocityGenerator
name|velocity
init|=
operator|new
name|VelocityGenerator
argument_list|(
literal|false
argument_list|)
decl_stmt|;
specifier|public
name|AbstractGenerator
parameter_list|()
block|{     }
specifier|protected
name|void
name|doWrite
parameter_list|(
name|String
name|templateName
parameter_list|,
name|Writer
name|outputs
parameter_list|)
throws|throws
name|ToolException
block|{
if|if
condition|(
name|outputs
operator|!=
literal|null
condition|)
block|{
name|velocity
operator|.
name|doWrite
argument_list|(
name|templateName
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|boolean
name|isCollision
parameter_list|(
name|String
name|packageName
parameter_list|,
name|String
name|filename
parameter_list|)
throws|throws
name|ToolException
block|{
return|return
name|isCollision
argument_list|(
name|packageName
argument_list|,
name|filename
argument_list|,
literal|".java"
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|isCollision
parameter_list|(
name|String
name|packageName
parameter_list|,
name|String
name|filename
parameter_list|,
name|String
name|ext
parameter_list|)
throws|throws
name|ToolException
block|{
if|if
condition|(
name|env
operator|.
name|optionSet
argument_list|(
name|ToolConstants
operator|.
name|CFG_GEN_OVERWRITE
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|FileWriterUtil
name|fw
init|=
operator|new
name|FileWriterUtil
argument_list|(
operator|(
name|String
operator|)
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|fw
operator|.
name|isCollision
argument_list|(
name|packageName
argument_list|,
name|filename
operator|+
name|ext
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|wantToKeep
parameter_list|()
block|{
return|return
name|env
operator|.
name|optionSet
argument_list|(
name|ToolConstants
operator|.
name|CFG_GEN_NEW_ONLY
argument_list|)
return|;
block|}
specifier|protected
name|Writer
name|parseOutputName
parameter_list|(
name|String
name|packageName
parameter_list|,
name|String
name|filename
parameter_list|,
name|String
name|ext
parameter_list|)
throws|throws
name|ToolException
block|{
name|FileWriterUtil
name|fw
init|=
literal|null
decl_stmt|;
name|Writer
name|writer
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|wantToKeep
argument_list|()
operator|&&
name|isCollision
argument_list|(
name|packageName
argument_list|,
name|filename
argument_list|,
name|ext
argument_list|)
condition|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"SKIP_GEN"
argument_list|,
name|LOG
argument_list|,
name|packageName
operator|+
literal|"."
operator|+
name|filename
operator|+
name|ext
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
name|msg
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|fw
operator|=
operator|new
name|FileWriterUtil
argument_list|(
name|getOutputDir
argument_list|()
argument_list|,
name|env
operator|.
name|get
argument_list|(
name|OutputStreamCreator
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
literal|".java"
operator|.
name|equals
argument_list|(
name|ext
argument_list|)
condition|)
block|{
name|writer
operator|=
name|fw
operator|.
name|getWriter
argument_list|(
name|packageName
argument_list|,
name|filename
operator|+
name|ext
argument_list|,
operator|(
name|String
operator|)
name|getEnvironment
argument_list|()
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_ENCODING
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|=
name|fw
operator|.
name|getWriter
argument_list|(
name|packageName
argument_list|,
name|filename
operator|+
name|ext
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"FAIL_TO_WRITE_FILE"
argument_list|,
name|LOG
argument_list|,
name|packageName
operator|+
literal|"."
operator|+
name|filename
operator|+
name|ext
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
return|return
name|writer
return|;
block|}
specifier|public
specifier|abstract
name|void
name|register
parameter_list|(
name|ClassCollector
name|collector
parameter_list|,
name|String
name|packageName
parameter_list|,
name|String
name|fileName
parameter_list|)
function_decl|;
specifier|protected
name|Writer
name|parseOutputName
parameter_list|(
name|String
name|packageName
parameter_list|,
name|String
name|filename
parameter_list|)
throws|throws
name|ToolException
block|{
name|register
argument_list|(
name|env
operator|.
name|get
argument_list|(
name|ClassCollector
operator|.
name|class
argument_list|)
argument_list|,
name|packageName
argument_list|,
name|filename
argument_list|)
expr_stmt|;
return|return
name|parseOutputName
argument_list|(
name|packageName
argument_list|,
name|filename
argument_list|,
literal|".java"
argument_list|)
return|;
block|}
specifier|protected
name|void
name|setAttributes
parameter_list|(
name|String
name|n
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|velocity
operator|.
name|setAttributes
argument_list|(
name|n
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setCommonAttributes
parameter_list|()
block|{
comment|// Set generated date in ISO-8601 format, as is required for the date attribute for @Generated
comment|// annotation.
name|setAttributes
argument_list|(
literal|"currentdate"
argument_list|,
name|DatatypeConverter
operator|.
name|printDateTime
argument_list|(
name|Calendar
operator|.
name|getInstance
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|setAttributes
argument_list|(
literal|"version"
argument_list|,
name|Version
operator|.
name|getCurrentVersion
argument_list|()
argument_list|)
expr_stmt|;
name|setAttributes
argument_list|(
literal|"fullversion"
argument_list|,
name|Version
operator|.
name|getCompleteVersionString
argument_list|()
argument_list|)
expr_stmt|;
name|setAttributes
argument_list|(
literal|"name"
argument_list|,
name|Version
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setAttributes
argument_list|(
literal|"markGenerated"
argument_list|,
name|env
operator|.
name|optionSet
argument_list|(
name|ToolConstants
operator|.
name|CFG_MARK_GENERATED
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|env
operator|.
name|optionSet
argument_list|(
name|ToolConstants
operator|.
name|CFG_FRONTEND
argument_list|)
condition|)
block|{
name|setAttributes
argument_list|(
literal|"frontend"
argument_list|,
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_FRONTEND
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|env
operator|.
name|optionSet
argument_list|(
name|ToolConstants
operator|.
name|CFG_DATABINDING
argument_list|)
condition|)
block|{
name|setAttributes
argument_list|(
literal|"databinding"
argument_list|,
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_DATABINDING
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|clearAttributes
parameter_list|()
block|{
name|velocity
operator|.
name|clearAttributes
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setEnvironment
parameter_list|(
name|ToolContext
name|penv
parameter_list|)
block|{
name|this
operator|.
name|env
operator|=
name|penv
expr_stmt|;
block|}
specifier|public
name|ToolContext
name|getEnvironment
parameter_list|()
block|{
return|return
name|this
operator|.
name|env
return|;
block|}
specifier|public
name|String
name|getOutputDir
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|env
operator|.
name|get
argument_list|(
name|ToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|)
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|this
operator|.
name|name
return|;
block|}
block|}
end_class

end_unit

