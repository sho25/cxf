begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wadlto
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|codegen
operator|.
name|SourceGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|AbstractCXFToolContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ClassUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|toolspec
operator|.
name|ToolSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|toolspec
operator|.
name|parser
operator|.
name|BadUsageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|URIParserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wadlto
operator|.
name|WadlToolConstants
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSContainer
extends|extends
name|AbstractCXFToolContainer
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TOOL_NAME
init|=
literal|"wadl2java"
decl_stmt|;
specifier|public
name|JAXRSContainer
parameter_list|(
name|ToolSpec
name|toolspec
parameter_list|)
throws|throws
name|Exception
block|{
name|super
argument_list|(
name|TOOL_NAME
argument_list|,
name|toolspec
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|ToolException
block|{
if|if
condition|(
name|hasInfoOption
argument_list|()
condition|)
block|{
return|return;
block|}
name|buildToolContext
argument_list|()
expr_stmt|;
name|processWadl
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|execute
parameter_list|(
name|boolean
name|exitOnFinish
parameter_list|)
throws|throws
name|ToolException
block|{
try|try
block|{
if|if
condition|(
name|getArgument
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|execute
argument_list|(
name|exitOnFinish
argument_list|)
expr_stmt|;
block|}
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ToolException
name|ex
parameter_list|)
block|{
if|if
condition|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|BadUsageException
condition|)
block|{
name|printUsageException
argument_list|(
name|TOOL_NAME
argument_list|,
operator|(
name|BadUsageException
operator|)
name|ex
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
throw|throw
name|ex
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|buildToolContext
parameter_list|()
block|{
name|getContext
argument_list|()
expr_stmt|;
if|if
condition|(
name|context
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|)
operator|==
literal|null
condition|)
block|{
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
literal|"."
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|processWadl
parameter_list|()
block|{
name|File
name|outDir
init|=
operator|new
name|File
argument_list|(
operator|(
name|String
operator|)
name|context
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|wadl
init|=
name|readWadl
argument_list|()
decl_stmt|;
name|SourceGenerator
name|sg
init|=
operator|new
name|SourceGenerator
argument_list|()
decl_stmt|;
name|boolean
name|isInterface
init|=
name|context
operator|.
name|optionSet
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_INTERFACE
argument_list|)
decl_stmt|;
name|boolean
name|isServer
init|=
name|context
operator|.
name|optionSet
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_SERVER
argument_list|)
decl_stmt|;
if|if
condition|(
name|isServer
condition|)
block|{
name|sg
operator|.
name|setGenerateInterfaces
argument_list|(
name|isInterface
argument_list|)
expr_stmt|;
name|sg
operator|.
name|setGenerateImplementation
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|// generate
name|String
name|codeType
init|=
name|context
operator|.
name|optionSet
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_TYPES
argument_list|)
condition|?
name|SourceGenerator
operator|.
name|CODE_TYPE_GRAMMAR
else|:
name|SourceGenerator
operator|.
name|CODE_TYPE_PROXY
decl_stmt|;
name|sg
operator|.
name|generateSource
argument_list|(
name|wadl
argument_list|,
name|outDir
argument_list|,
name|codeType
argument_list|)
expr_stmt|;
comment|// compile
if|if
condition|(
name|context
operator|.
name|optionSet
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|)
condition|)
block|{
operator|new
name|ClassUtils
argument_list|()
operator|.
name|compile
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|String
name|readWadl
parameter_list|()
block|{
name|String
name|wadlURL
init|=
operator|(
name|String
operator|)
name|context
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|)
decl_stmt|;
name|wadlURL
operator|=
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
name|wadlURL
argument_list|)
expr_stmt|;
try|try
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|wadlURL
argument_list|)
decl_stmt|;
return|return
name|IOUtils
operator|.
name|toString
argument_list|(
name|url
operator|.
name|openStream
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

