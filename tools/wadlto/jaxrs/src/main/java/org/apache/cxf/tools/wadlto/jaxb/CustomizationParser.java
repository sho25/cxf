begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wadlto
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|catalog
operator|.
name|OASISCatalogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|catalog
operator|.
name|OASISCatalogManagerHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|i18n
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|URIParserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|resource
operator|.
name|URIResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|JAXBUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wadlto
operator|.
name|WadlToolConstants
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|CustomizationParser
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|CustomizationParser
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|InputSource
argument_list|>
name|jaxbBindings
init|=
operator|new
name|ArrayList
argument_list|<
name|InputSource
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|InputSource
argument_list|>
name|packageFiles
init|=
operator|new
name|ArrayList
argument_list|<
name|InputSource
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|compilerArgs
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Bus
name|bus
decl_stmt|;
specifier|private
name|String
name|wadlPath
decl_stmt|;
specifier|public
name|CustomizationParser
parameter_list|(
name|ToolContext
name|env
parameter_list|)
block|{
name|bus
operator|=
name|env
operator|.
name|get
argument_list|(
name|Bus
operator|.
name|class
argument_list|)
expr_stmt|;
name|wadlPath
operator|=
operator|(
name|String
operator|)
name|env
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|parse
parameter_list|(
name|ToolContext
name|env
parameter_list|)
block|{
comment|// JAXB schema customizations
name|String
index|[]
name|bindingFiles
init|=
name|getBindingFiles
argument_list|(
name|env
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bindingFiles
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|addBinding
argument_list|(
name|bindingFiles
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|xse
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"STAX_PARSER_ERROR"
argument_list|,
name|LOG
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|xse
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|env
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_NO_ADDRESS_BINDING
argument_list|)
operator|==
literal|null
condition|)
block|{
comment|//hard code to enable jaxb extensions
name|compilerArgs
operator|.
name|add
argument_list|(
literal|"-extension"
argument_list|)
expr_stmt|;
name|String
name|name
init|=
literal|"/org/apache/cxf/tools/common/jaxb/W3CEPRJaxbBinding.xml"
decl_stmt|;
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|jaxb
operator|.
name|JAXBUtils
operator|.
name|isJAXB22
argument_list|()
condition|)
block|{
name|name
operator|=
literal|"/org/apache/cxf/tools/common/jaxb/W3CEPRJaxbBinding_jaxb22.xml"
expr_stmt|;
block|}
name|URL
name|bindingFileUrl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|InputSource
name|ins
init|=
operator|new
name|InputSource
argument_list|(
name|bindingFileUrl
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|jaxbBindings
operator|.
name|add
argument_list|(
name|ins
argument_list|)
expr_stmt|;
block|}
comment|//pass additional JAXB compiler arguments
name|Object
name|jaxbCompilerArgs
init|=
name|env
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_XJC_ARGS
argument_list|)
decl_stmt|;
if|if
condition|(
name|jaxbCompilerArgs
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|jaxbArgs
init|=
name|jaxbCompilerArgs
operator|instanceof
name|String
condition|?
operator|new
name|String
index|[]
block|{
operator|(
name|String
operator|)
name|jaxbCompilerArgs
block|}
else|:
operator|(
name|String
index|[]
operator|)
name|jaxbCompilerArgs
decl_stmt|;
name|compilerArgs
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|jaxbArgs
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Schema Namespace to Package customizations
for|for
control|(
name|String
name|ns
range|:
name|env
operator|.
name|getNamespacePackageMap
argument_list|()
operator|.
name|keySet
argument_list|()
control|)
block|{
name|File
name|file
init|=
name|JAXBUtils
operator|.
name|getPackageMappingSchemaBindingFile
argument_list|(
name|ns
argument_list|,
name|env
operator|.
name|mapPackageName
argument_list|(
name|ns
argument_list|)
argument_list|)
decl_stmt|;
name|packageFiles
operator|.
name|add
argument_list|(
operator|new
name|InputSource
argument_list|(
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|addBinding
parameter_list|(
name|String
name|bindingFile
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|Element
name|root
init|=
literal|null
decl_stmt|;
try|try
block|{
name|URIResolver
name|resolver
init|=
operator|new
name|URIResolver
argument_list|(
name|bindingFile
argument_list|)
decl_stmt|;
name|root
operator|=
name|StaxUtils
operator|.
name|read
argument_list|(
name|resolver
operator|.
name|getInputStream
argument_list|()
argument_list|)
operator|.
name|getDocumentElement
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"CAN_NOT_READ_AS_ELEMENT"
argument_list|,
name|LOG
argument_list|,
operator|new
name|Object
index|[]
block|{
name|bindingFile
block|}
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e1
argument_list|)
throw|;
block|}
name|XMLStreamReader
name|reader
init|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|toNextTag
argument_list|(
name|reader
argument_list|)
expr_stmt|;
if|if
condition|(
name|isValidJaxbBindingFile
argument_list|(
name|reader
argument_list|)
condition|)
block|{
name|String
name|schemaLocation
init|=
name|root
operator|.
name|getAttribute
argument_list|(
literal|"schemaLocation"
argument_list|)
decl_stmt|;
name|String
name|resolvedSchemaLocation
init|=
name|resolveByCatalog
argument_list|(
name|schemaLocation
argument_list|)
decl_stmt|;
if|if
condition|(
name|resolvedSchemaLocation
operator|==
literal|null
condition|)
block|{
name|resolvedSchemaLocation
operator|=
name|schemaLocation
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|?
name|wadlPath
else|:
name|getBaseWadlPath
argument_list|()
operator|+
name|schemaLocation
expr_stmt|;
block|}
name|InputSource
name|tmpIns
init|=
literal|null
decl_stmt|;
try|try
block|{
name|tmpIns
operator|=
name|convertToTmpInputSource
argument_list|(
name|root
argument_list|,
name|resolvedSchemaLocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"FAILED_TO_ADD_SCHEMALOCATION"
argument_list|,
name|LOG
argument_list|,
name|bindingFile
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e1
argument_list|)
throw|;
block|}
name|jaxbBindings
operator|.
name|add
argument_list|(
name|tmpIns
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getBaseWadlPath
parameter_list|()
block|{
name|int
name|lastSep
init|=
name|wadlPath
operator|.
name|lastIndexOf
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
return|return
name|lastSep
operator|!=
operator|-
literal|1
condition|?
name|wadlPath
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|lastSep
operator|+
literal|1
argument_list|)
else|:
name|wadlPath
return|;
block|}
specifier|private
name|InputSource
name|convertToTmpInputSource
parameter_list|(
name|Element
name|ele
parameter_list|,
name|String
name|schemaLoc
parameter_list|)
throws|throws
name|Exception
block|{
name|InputSource
name|result
init|=
literal|null
decl_stmt|;
name|ele
operator|.
name|setAttribute
argument_list|(
literal|"schemaLocation"
argument_list|,
name|schemaLoc
argument_list|)
expr_stmt|;
name|File
name|tmpFile
init|=
name|FileUtils
operator|.
name|createTempFile
argument_list|(
literal|"jaxbbinding"
argument_list|,
literal|".xml"
argument_list|)
decl_stmt|;
name|StaxUtils
operator|.
name|writeTo
argument_list|(
name|ele
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|tmpFile
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
operator|new
name|InputSource
argument_list|(
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
name|tmpFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|tmpFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|String
name|resolveByCatalog
parameter_list|(
name|String
name|url
parameter_list|)
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|OASISCatalogManager
name|catalogResolver
init|=
name|OASISCatalogManager
operator|.
name|getCatalogManager
argument_list|(
name|bus
argument_list|)
decl_stmt|;
try|try
block|{
return|return
operator|new
name|OASISCatalogManagerHelper
argument_list|()
operator|.
name|resolve
argument_list|(
name|catalogResolver
argument_list|,
name|url
argument_list|,
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
name|Message
name|msg
init|=
operator|new
name|Message
argument_list|(
literal|"FAILED_RESOLVE_CATALOG"
argument_list|,
name|LOG
argument_list|,
name|url
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|msg
argument_list|,
name|e1
argument_list|)
throw|;
block|}
block|}
specifier|private
name|boolean
name|isValidJaxbBindingFile
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|)
block|{
if|if
condition|(
name|ToolConstants
operator|.
name|JAXB_BINDINGS
operator|.
name|equals
argument_list|(
name|reader
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|String
index|[]
name|getBindingFiles
parameter_list|(
name|ToolContext
name|env
parameter_list|)
block|{
name|Object
name|files
init|=
name|env
operator|.
name|get
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_BINDING
argument_list|)
decl_stmt|;
if|if
condition|(
name|files
operator|!=
literal|null
condition|)
block|{
return|return
name|files
operator|instanceof
name|String
condition|?
operator|new
name|String
index|[]
block|{
operator|(
name|String
operator|)
name|files
block|}
else|:
operator|(
name|String
index|[]
operator|)
name|files
return|;
block|}
else|else
block|{
return|return
operator|new
name|String
index|[]
block|{}
return|;
block|}
block|}
specifier|public
name|List
argument_list|<
name|InputSource
argument_list|>
name|getJaxbBindings
parameter_list|()
block|{
return|return
name|this
operator|.
name|jaxbBindings
return|;
block|}
specifier|public
name|List
argument_list|<
name|InputSource
argument_list|>
name|getSchemaPackageFiles
parameter_list|()
block|{
return|return
name|this
operator|.
name|packageFiles
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getCompilerArgs
parameter_list|()
block|{
return|return
name|this
operator|.
name|compilerArgs
return|;
block|}
block|}
end_class

end_unit

