begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wadlto
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLClassLoader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|Valid
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|Oneway
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|Multipart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ProcessorTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|ClassCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wadlto
operator|.
name|WadlToolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JAXRSContainerTest
extends|extends
name|ProcessorTestBase
block|{
annotation|@
name|Test
specifier|public
name|void
name|testNoTargetNamespace
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/resourceSchemaNoTargetNamespace.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_SCHEMA_PACKAGENAME
argument_list|,
literal|"=custom"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\.class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application"
operator|+
literal|".Resource.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"custom"
operator|+
literal|".TestCompositeObject.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"custom"
operator|+
literal|".ObjectFactory.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfaces
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_MEDIA_TYPE_MAP
argument_list|,
literal|"application/xml=javax.xml.transform.Source"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_MEDIA_TYPE_MAP
argument_list|,
literal|"multipart/form-data=org.apache.cxf.jaxrs.ext.multipart.MultipartBody"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_NO_VOID_FOR_EMPTY_RESPONSES
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_GENERATE_RESPONSE_IF_HEADERS_SET
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_GENERATE_RESPONSE_FOR_METHODS
argument_list|,
literal|"getName"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInheritParameters
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/test.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_SCHEMA_TYPE_MAP
argument_list|,
literal|"{http://www.w3.org/2001/XMLSchema}anyType="
operator|+
literal|"java.io.InputStream"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_INHERIT_PARAMS
argument_list|,
literal|"last"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_CREATE_JAVA_DOCS
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOnewayMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|String
name|onewayMethod
init|=
literal|"deleteRepository"
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/test.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_ONEWAY
argument_list|,
name|onewayMethod
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|ClassCollector
name|cc
init|=
name|context
operator|.
name|get
argument_list|(
name|ClassCollector
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cc
operator|.
name|getServiceClassNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|URLClassLoader
name|loader
init|=
operator|new
name|URLClassLoader
argument_list|(
operator|new
name|URL
index|[]
block|{
name|output
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
block|}
argument_list|)
init|)
block|{
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|generatedClass
init|=
name|loader
operator|.
name|loadClass
argument_list|(
name|cc
operator|.
name|getServiceClassNames
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|Method
name|m
init|=
name|generatedClass
operator|.
name|getMethod
argument_list|(
name|onewayMethod
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|Oneway
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfacesMultipleInXmlReps
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_MULTIPLE_XML_REPS
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfacesWithBinding
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/jaxbBinding.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfacesWithJaxbClassNameSuffix
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_JAXB_CLASS_NAME_SUFFIX
argument_list|,
literal|"DTO"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/jaxbSchemaBindings.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|schemafiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"java"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|schemafiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|doVerifyTypesWithSuffix
argument_list|(
name|schemafiles
argument_list|,
literal|"superbooks"
argument_list|,
literal|"java"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|classfiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|classfiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|doVerifyTypesWithSuffix
argument_list|(
name|classfiles
argument_list|,
literal|"superbooks"
argument_list|,
literal|"class"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithImportedSchema
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstoreImport.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithImportedSchemaWithParentRefs
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/sub/bookstoreImport.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithMultipleInlinedSchemas
parameter_list|()
block|{
name|doTestInlinedSchemasWithImport
argument_list|(
literal|"/wadl/bookstoreMultipleSchemas.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithInlinedSchemaAndImport
parameter_list|()
block|{
name|doTestInlinedSchemasWithImport
argument_list|(
literal|"/wadl/bookstoreInlinedSchemaWithImport.xml"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestInlinedSchemasWithImport
parameter_list|(
name|String
name|loc
parameter_list|)
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
name|loc
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
operator|+
literal|".BookStore.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
operator|+
literal|".PATCH.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superbooks"
operator|+
literal|".Book.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superbooks"
operator|+
literal|".ObjectFactory.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superbooks"
operator|+
literal|".package-info.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superchapters"
operator|+
literal|".Chapter.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superchapters"
operator|+
literal|".ObjectFactory.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superchapters"
operator|+
literal|".package-info.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResourceWithEPR
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/resourceWithEPR.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_SCHEMA_TYPE_MAP
argument_list|,
literal|"{http://www.w3.org/2001/XMLSchema}date=javax.xml.datatype.XMLGregorianCalendar"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application"
operator|+
literal|".BookstoreResource.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superbooks"
operator|+
literal|".Book.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superbooks"
operator|+
literal|".ObjectFactory.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"superbooks"
operator|+
literal|".package-info.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResourceWithEPRNoSchemaGen
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/resourceWithEPR.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_SCHEMA_TYPE_MAP
argument_list|,
literal|"{http://www.w3.org/2005/08/addressing}EndpointReferenceType="
operator|+
literal|"javax.xml.ws.wsaddressing.W3CEndpointReference"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_NO_ADDRESS_BINDING
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_NO_TYPES
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application"
operator|+
literal|".BookstoreResource.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQueryMultipartParam
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/testQueryMultipartParam.wadl"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application.Test1.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application.Test2.class"
argument_list|)
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|ClassLoader
name|loader
init|=
operator|new
name|URLClassLoader
argument_list|(
operator|new
name|URL
index|[]
block|{
name|output
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
block|}
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|test1
init|=
name|loader
operator|.
name|loadClass
argument_list|(
literal|"application.Test1"
argument_list|)
decl_stmt|;
name|Method
index|[]
name|test1Methods
init|=
name|test1
operator|.
name|getDeclaredMethods
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|test1Methods
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getAnnotations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getAnnotation
argument_list|(
name|PUT
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Consumes
name|consumes1
init|=
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getAnnotation
argument_list|(
name|Consumes
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|consumes1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|consumes1
operator|.
name|value
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"multipart/mixed"
argument_list|,
name|consumes1
operator|.
name|value
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"put"
argument_list|,
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|paramTypes
init|=
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getParameterTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|paramTypes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Annotation
index|[]
index|[]
name|paramAnns
init|=
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|class
argument_list|,
name|paramTypes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|QueryParam
name|test1QueryParam1
init|=
operator|(
name|QueryParam
operator|)
name|paramAnns
index|[
literal|0
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"standalone"
argument_list|,
name|test1QueryParam1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|paramTypes
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns
index|[
literal|1
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|Multipart
name|test1MultipartParam1
init|=
operator|(
name|Multipart
operator|)
name|paramAnns
index|[
literal|1
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"action"
argument_list|,
name|test1MultipartParam1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|test1MultipartParam1
operator|.
name|required
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|paramTypes
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns
index|[
literal|2
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|Multipart
name|test1MultipartParam2
init|=
operator|(
name|Multipart
operator|)
name|paramAnns
index|[
literal|2
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"sources"
argument_list|,
name|test1MultipartParam2
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|test1MultipartParam2
operator|.
name|required
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|test2
init|=
name|loader
operator|.
name|loadClass
argument_list|(
literal|"application.Test2"
argument_list|)
decl_stmt|;
name|Method
index|[]
name|test2Methods
init|=
name|test2
operator|.
name|getDeclaredMethods
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|test2Methods
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|test2Methods
index|[
literal|0
index|]
operator|.
name|getAnnotations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|test2Methods
index|[
literal|0
index|]
operator|.
name|getAnnotation
argument_list|(
name|PUT
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Consumes
name|consumes2
init|=
name|test2Methods
index|[
literal|0
index|]
operator|.
name|getAnnotation
argument_list|(
name|Consumes
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|consumes2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|consumes2
operator|.
name|value
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/json"
argument_list|,
name|consumes2
operator|.
name|value
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"put"
argument_list|,
name|test2Methods
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|paramTypes2
init|=
name|test2Methods
index|[
literal|0
index|]
operator|.
name|getParameterTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paramTypes2
operator|.
name|length
argument_list|)
expr_stmt|;
name|Annotation
index|[]
index|[]
name|paramAnns2
init|=
name|test2Methods
index|[
literal|0
index|]
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|boolean
operator|.
name|class
argument_list|,
name|paramTypes2
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns2
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|QueryParam
name|test2QueryParam1
init|=
operator|(
name|QueryParam
operator|)
name|paramAnns2
index|[
literal|0
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"snapshot"
argument_list|,
name|test2QueryParam1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|paramTypes2
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|paramAnns2
index|[
literal|1
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComplexPath
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/testComplexPath.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application.Resource.class"
argument_list|)
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|ClassLoader
name|loader
init|=
operator|new
name|URLClassLoader
argument_list|(
operator|new
name|URL
index|[]
block|{
name|output
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
block|}
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|test1
init|=
name|loader
operator|.
name|loadClass
argument_list|(
literal|"application.Resource"
argument_list|)
decl_stmt|;
name|Method
index|[]
name|test1Methods
init|=
name|test1
operator|.
name|getDeclaredMethods
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|test1Methods
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getAnnotations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"getGetaddmethod2"
operator|.
name|equals
argument_list|(
name|test1Methods
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Method
name|tmp
init|=
name|test1Methods
index|[
literal|0
index|]
decl_stmt|;
name|test1Methods
index|[
literal|0
index|]
operator|=
name|test1Methods
index|[
literal|1
index|]
expr_stmt|;
name|test1Methods
index|[
literal|1
index|]
operator|=
name|tmp
expr_stmt|;
block|}
name|checkComplexPathMethod
argument_list|(
name|test1Methods
index|[
literal|0
index|]
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|checkComplexPathMethod
argument_list|(
name|test1Methods
index|[
literal|1
index|]
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkComplexPathMethod
parameter_list|(
name|Method
name|m
parameter_list|,
name|String
name|suffix
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|GET
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|path
init|=
name|m
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/get-add-method"
argument_list|,
name|path
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getGetaddmethod"
operator|+
name|suffix
argument_list|,
name|m
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|paramTypes
init|=
name|m
operator|.
name|getParameterTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramTypes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Annotation
index|[]
index|[]
name|paramAnns
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|paramTypes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|PathParam
name|methodPathParam1
init|=
operator|(
name|PathParam
operator|)
name|paramAnns
index|[
literal|0
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|methodPathParam1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBeanValidation
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/resourceSameTargetNsSchemas.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_BEAN_VALIDATION
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
literal|"application.Resource.class"
argument_list|)
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|ClassLoader
name|loader
init|=
operator|new
name|URLClassLoader
argument_list|(
operator|new
name|URL
index|[]
block|{
name|output
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
block|}
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|test1
init|=
name|loader
operator|.
name|loadClass
argument_list|(
literal|"application.Resource"
argument_list|)
decl_stmt|;
name|Method
index|[]
name|test1Methods
init|=
name|test1
operator|.
name|getDeclaredMethods
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|test1Methods
operator|.
name|length
argument_list|)
expr_stmt|;
name|Method
name|m
init|=
name|test1Methods
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|m
operator|.
name|getAnnotations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|Valid
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|Consumes
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|Produces
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|m
operator|.
name|getAnnotation
argument_list|(
name|PUT
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|paramTypes
init|=
name|m
operator|.
name|getParameterTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paramTypes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Annotation
index|[]
index|[]
name|paramAnns
init|=
name|m
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|paramTypes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns
index|[
literal|0
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|PathParam
name|methodPathParam1
init|=
operator|(
name|PathParam
operator|)
name|paramAnns
index|[
literal|0
index|]
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|methodPathParam1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paramAnns
index|[
literal|1
index|]
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|paramAnns
index|[
literal|1
index|]
index|[
literal|0
index|]
operator|instanceof
name|Valid
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithImportedSchemaAndResourceSet
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstoreResourceRef.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithImportedSchemaAndBinding
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstoreImport.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_BINDING
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/jaxbBindingWithSchemaLoc.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithImportedSchemaAndCatalog
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstoreImportCatalog.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_CATALOG
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/jax-rs-catalog.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenNoIds
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/singleResource.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_RESOURCENAME
argument_list|,
literal|"CustomResource"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_GENERATE_ENUMS
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|javaFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"java"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|javaFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.CustomResource.java"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.Theid.java"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|classFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|classFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.CustomResource.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.Theid.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenNoIds2
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/multipleResources.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|javaFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"java"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|javaFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.BookstoreResource.java"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.BooksResource.java"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|classFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|classFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.BookstoreResource.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.BooksResource.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenNoIds3
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/resourcesNoId.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_INHERIT_PARAMS
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|javaFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"java"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|javaFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.TestRsResource.java"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|classFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|classFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.TestRsResource.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeTwoSchemasSameTargetNs
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/resourceSameTargetNsSchemas.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|javaFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"java"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|javaFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.Resource.java"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"com.example.test.ObjectFactory.java"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"com.example.test.package-info.java"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"com.example.test.TestCompositeObject.java"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|classFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|classFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.Resource.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"com.example.test.ObjectFactory.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"com.example.test.package-info.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"com.example.test.TestCompositeObject.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenWithResourceSet
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/singleResourceWithRefs.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_RESOURCENAME
argument_list|,
literal|"CustomResource"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|javaFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"java"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|javaFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|javaFiles
argument_list|,
literal|"application.CustomResource.java"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|classFiles
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
literal|"class"
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|classFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|classFiles
argument_list|,
literal|"application.CustomResource.class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfacesCustomPackage
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_PACKAGENAME
argument_list|,
literal|"custom.books"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"custom.books"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"custom.books"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfacesCustomPackageForResourcesAndSchemas
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_PACKAGENAME
argument_list|,
literal|"custom.books.service"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_SCHEMA_PACKAGENAME
argument_list|,
literal|"http://superbooks=custom.books.schema"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"custom.books.schema"
argument_list|,
literal|"custom.books.service"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"custom.books.schema"
argument_list|,
literal|"custom.books.service"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenImpl
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_IMPL
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenInterfaceAndImpl
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_INTERFACE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_IMPL
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_COMPILE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"java"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|14
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyFiles
argument_list|(
literal|"class"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|"superbooks"
argument_list|,
literal|"org.apache.cxf.jaxrs.model.wadl"
argument_list|,
literal|14
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCodeGenTypesOnly
parameter_list|()
block|{
try|try
block|{
name|JAXRSContainer
name|container
init|=
operator|new
name|JAXRSContainer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|ToolContext
name|context
init|=
operator|new
name|ToolContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_OUTPUTDIR
argument_list|,
name|output
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_WADLURL
argument_list|,
name|getLocation
argument_list|(
literal|"/wadl/bookstore.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
name|WadlToolConstants
operator|.
name|CFG_TYPES
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|container
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|container
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|output
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|verifyTypes
argument_list|(
literal|"superbooks"
argument_list|,
literal|"java"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|verifyFiles
parameter_list|(
name|String
name|ext
parameter_list|,
name|boolean
name|subresourceExpected
parameter_list|,
name|boolean
name|interfacesAndImpl
parameter_list|,
name|String
name|schemaPackage
parameter_list|,
name|String
name|resourcePackage
parameter_list|,
name|int
name|expectedCount
parameter_list|)
block|{
name|verifyFiles
argument_list|(
name|ext
argument_list|,
name|subresourceExpected
argument_list|,
name|interfacesAndImpl
argument_list|,
name|schemaPackage
argument_list|,
name|resourcePackage
argument_list|,
name|expectedCount
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyFiles
parameter_list|(
name|String
name|ext
parameter_list|,
name|boolean
name|subresourceExpected
parameter_list|,
name|boolean
name|interfacesAndImpl
parameter_list|,
name|String
name|schemaPackage
parameter_list|,
name|String
name|resourcePackage
parameter_list|,
name|int
name|expectedCount
parameter_list|,
name|boolean
name|enumTypeExpected
parameter_list|)
block|{
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
name|ext
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|int
name|offset
init|=
name|enumTypeExpected
condition|?
literal|1
else|:
literal|2
decl_stmt|;
name|int
name|size
init|=
name|interfacesAndImpl
condition|?
name|expectedCount
else|:
name|expectedCount
operator|-
name|offset
decl_stmt|;
if|if
condition|(
operator|!
name|subresourceExpected
condition|)
block|{
name|size
operator|--
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|size
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|doVerifyTypes
argument_list|(
name|files
argument_list|,
name|schemaPackage
argument_list|,
name|ext
argument_list|)
expr_stmt|;
if|if
condition|(
name|subresourceExpected
condition|)
block|{
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|resourcePackage
operator|+
literal|".FormInterface."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|resourcePackage
operator|+
literal|".FormInterface2."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|resourcePackage
operator|+
literal|".BookStore."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|interfacesAndImpl
condition|)
block|{
if|if
condition|(
name|subresourceExpected
condition|)
block|{
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|resourcePackage
operator|+
literal|".FormInterfaceImpl."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|resourcePackage
operator|+
literal|".FormInterface2Impl."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|resourcePackage
operator|+
literal|".BookStoreImpl."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|verifyTypes
parameter_list|(
name|String
name|schemaPackage
parameter_list|,
name|String
name|ext
parameter_list|,
name|boolean
name|enumTypeExpected
parameter_list|)
block|{
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|FileUtils
operator|.
name|getFilesRecurse
argument_list|(
name|output
argument_list|,
literal|".+\\."
operator|+
name|ext
operator|+
literal|"$"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|enumTypeExpected
condition|?
literal|6
else|:
literal|5
argument_list|,
name|files
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|doVerifyTypes
argument_list|(
name|files
argument_list|,
name|schemaPackage
argument_list|,
name|ext
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doVerifyTypes
parameter_list|(
name|List
argument_list|<
name|File
argument_list|>
name|files
parameter_list|,
name|String
name|schemaPackage
parameter_list|,
name|String
name|ext
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".Book."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".TheBook2."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".Chapter."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".ObjectFactory."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".package-info."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doVerifyTypesWithSuffix
parameter_list|(
name|List
argument_list|<
name|File
argument_list|>
name|files
parameter_list|,
name|String
name|schemaPackage
parameter_list|,
name|String
name|ext
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".BookDTO."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".TheBook2DTO."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".ChapterDTO."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".ObjectFactory."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkContains
argument_list|(
name|files
argument_list|,
name|schemaPackage
operator|+
literal|".package-info."
operator|+
name|ext
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|checkContains
parameter_list|(
name|List
argument_list|<
name|File
argument_list|>
name|clsFiles
parameter_list|,
name|String
name|name
parameter_list|)
block|{
for|for
control|(
name|File
name|f
range|:
name|clsFiles
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getAbsolutePath
argument_list|()
operator|.
name|replace
argument_list|(
name|File
operator|.
name|separatorChar
argument_list|,
literal|'.'
argument_list|)
operator|.
name|endsWith
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|protected
name|String
name|getLocation
parameter_list|(
name|String
name|wsdlFile
parameter_list|)
throws|throws
name|URISyntaxException
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|wsdlFile
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

