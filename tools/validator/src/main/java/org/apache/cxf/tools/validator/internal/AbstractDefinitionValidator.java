begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|validator
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|validator
operator|.
name|AbstractValidator
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractDefinitionValidator
extends|extends
name|AbstractValidator
block|{
specifier|protected
specifier|final
name|Definition
name|def
decl_stmt|;
specifier|protected
name|ToolContext
name|env
decl_stmt|;
specifier|private
specifier|final
name|Bus
name|bus
decl_stmt|;
specifier|public
name|AbstractDefinitionValidator
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|def
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|bus
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|AbstractDefinitionValidator
parameter_list|(
specifier|final
name|Definition
name|definition
parameter_list|)
block|{
name|this
argument_list|(
name|definition
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AbstractDefinitionValidator
parameter_list|(
specifier|final
name|Definition
name|definition
parameter_list|,
specifier|final
name|Bus
name|b
parameter_list|)
block|{
name|this
argument_list|(
name|definition
argument_list|,
literal|null
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AbstractDefinitionValidator
parameter_list|(
specifier|final
name|Definition
name|definition
parameter_list|,
specifier|final
name|ToolContext
name|pEnv
parameter_list|,
specifier|final
name|Bus
name|b
parameter_list|)
block|{
name|this
operator|.
name|def
operator|=
name|definition
expr_stmt|;
name|this
operator|.
name|env
operator|=
name|pEnv
expr_stmt|;
name|this
operator|.
name|bus
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|void
name|addError
parameter_list|(
name|Location
name|loc
parameter_list|,
name|String
name|msg
parameter_list|)
block|{
name|String
name|errMsg
init|=
name|loc
operator|!=
literal|null
condition|?
literal|"line "
operator|+
name|loc
operator|.
name|getLineNumber
argument_list|()
operator|+
literal|" of "
else|:
literal|""
decl_stmt|;
name|errMsg
operator|=
name|errMsg
operator|+
name|def
operator|.
name|getDocumentBaseURI
argument_list|()
operator|+
literal|" "
operator|+
name|msg
expr_stmt|;
name|addErrorMessage
argument_list|(
name|errMsg
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Bus
name|getBus
parameter_list|()
block|{
return|return
name|this
operator|.
name|bus
return|;
block|}
block|}
end_class

end_unit

