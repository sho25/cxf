begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|validator
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLEventReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLInputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|events
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|events
operator|.
name|Namespace
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|events
operator|.
name|StartElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|events
operator|.
name|XMLEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|XMLUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|URIParserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLConstants
import|;
end_import

begin_class
specifier|public
class|class
name|Stax2DOM
block|{
specifier|private
name|Element
name|currentElement
decl_stmt|;
specifier|private
name|Document
name|doc
decl_stmt|;
specifier|private
name|XMLInputFactory
name|factory
decl_stmt|;
specifier|private
name|XMLEventReader
name|reader
decl_stmt|;
specifier|public
name|Stax2DOM
parameter_list|()
block|{     }
specifier|private
name|void
name|init
parameter_list|()
block|{
try|try
block|{
name|factory
operator|=
name|XMLInputFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
name|factory
operator|.
name|setProperty
argument_list|(
name|XMLInputFactory
operator|.
name|IS_NAMESPACE_AWARE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|String
name|wsdl
parameter_list|)
throws|throws
name|ToolException
block|{
try|try
block|{
name|URI
name|wsdlURI
init|=
operator|new
name|URI
argument_list|(
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
name|wsdl
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|wsdlURI
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"http"
argument_list|)
condition|)
block|{
return|return
name|getDocument
argument_list|(
name|wsdlURI
operator|.
name|toURL
argument_list|()
argument_list|)
return|;
block|}
return|return
name|getDocument
argument_list|(
name|wsdlURI
operator|.
name|toURL
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|URL
name|url
parameter_list|)
throws|throws
name|ToolException
block|{
if|if
condition|(
name|reader
operator|==
literal|null
condition|)
block|{
name|init
argument_list|()
expr_stmt|;
try|try
block|{
name|reader
operator|=
name|factory
operator|.
name|createXMLEventReader
argument_list|(
name|url
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|fe
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
literal|"Cannot get the wsdl "
operator|+
name|url
argument_list|,
name|fe
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|ioe
argument_list|)
throw|;
block|}
block|}
return|return
name|getDocument
argument_list|(
name|reader
argument_list|,
name|url
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|File
name|wsdl
parameter_list|)
throws|throws
name|ToolException
block|{
if|if
condition|(
name|reader
operator|==
literal|null
condition|)
block|{
name|init
argument_list|()
expr_stmt|;
try|try
block|{
name|reader
operator|=
name|factory
operator|.
name|createXMLEventReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|wsdl
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|fe
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
literal|"Cannot get the wsdl "
operator|+
name|wsdl
argument_list|,
name|fe
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|getDocument
argument_list|(
name|reader
argument_list|,
name|wsdl
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|XMLEventReader
name|xmlEventReader
parameter_list|)
throws|throws
name|ToolException
block|{
return|return
name|getDocument
argument_list|(
name|xmlEventReader
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|XMLEventReader
name|xmlEventReader
parameter_list|,
name|String
name|wsdlurl
parameter_list|)
throws|throws
name|ToolException
block|{
try|try
block|{
name|doc
operator|=
name|XMLUtils
operator|.
name|newDocument
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|doc
operator|.
name|setDocumentURI
argument_list|(
name|wsdlurl
argument_list|)
expr_stmt|;
name|currentElement
operator|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
expr_stmt|;
while|while
condition|(
name|xmlEventReader
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|XMLEvent
name|xmleve
init|=
operator|(
name|XMLEvent
operator|)
name|xmlEventReader
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|xmleve
operator|.
name|getEventType
argument_list|()
operator|==
name|XMLStreamConstants
operator|.
name|END_ELEMENT
condition|)
block|{
name|endElement
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|xmleve
operator|.
name|getEventType
argument_list|()
operator|==
name|XMLStreamConstants
operator|.
name|START_ELEMENT
condition|)
block|{
name|startElement
argument_list|(
operator|(
name|StartElement
operator|)
name|xmleve
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|doc
return|;
block|}
specifier|public
name|void
name|startElement
parameter_list|(
name|StartElement
name|ele
parameter_list|)
block|{
name|Element
name|element
init|=
literal|null
decl_stmt|;
name|element
operator|=
name|doc
operator|.
name|createElementNS
argument_list|(
name|ele
operator|.
name|getName
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|ele
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|ite
init|=
name|ele
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Attribute
name|attr
init|=
operator|(
name|Attribute
operator|)
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
name|element
operator|.
name|setAttribute
argument_list|(
name|attr
operator|.
name|getName
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|attr
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|xmlns
init|=
literal|"http://schemas.xmlsoap.org/wsdl/"
decl_stmt|;
name|ite
operator|=
name|ele
operator|.
name|getNamespaces
argument_list|()
expr_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Namespace
name|ns
init|=
operator|(
name|Namespace
operator|)
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|name
init|=
name|ns
operator|.
name|getPrefix
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|element
operator|.
name|setAttributeNS
argument_list|(
name|xmlns
argument_list|,
name|name
argument_list|,
name|ns
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xmlns
operator|=
name|ns
operator|.
name|getNamespaceURI
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|currentElement
operator|==
literal|null
condition|)
block|{
name|doc
operator|.
name|appendChild
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|currentElement
operator|.
name|appendChild
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
name|currentElement
operator|=
name|element
expr_stmt|;
name|element
operator|.
name|setUserData
argument_list|(
name|WSDLConstants
operator|.
name|NODE_LOCATION
argument_list|,
name|ele
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|endElement
parameter_list|()
block|{
name|Node
name|node
init|=
name|currentElement
operator|.
name|getParentNode
argument_list|()
decl_stmt|;
if|if
condition|(
name|node
operator|instanceof
name|Document
condition|)
block|{
name|currentElement
operator|=
operator|(
operator|(
name|Document
operator|)
name|node
operator|)
operator|.
name|getDocumentElement
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|currentElement
operator|=
operator|(
name|Element
operator|)
name|currentElement
operator|.
name|getParentNode
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

