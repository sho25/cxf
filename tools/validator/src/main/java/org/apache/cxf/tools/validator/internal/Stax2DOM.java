begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|validator
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|URIParserUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_class
specifier|public
class|class
name|Stax2DOM
block|{
specifier|static
specifier|final
name|String
name|XML_NS
init|=
literal|"http://www.w3.org/2000/xmlns/"
decl_stmt|;
specifier|public
name|Stax2DOM
parameter_list|()
block|{     }
specifier|public
name|Document
name|getDocument
parameter_list|(
name|String
name|wsdl
parameter_list|)
throws|throws
name|ToolException
block|{
try|try
block|{
name|URI
name|wsdlURI
init|=
operator|new
name|URI
argument_list|(
name|URIParserUtil
operator|.
name|getAbsoluteURI
argument_list|(
name|wsdl
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|wsdlURI
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"http"
argument_list|)
condition|)
block|{
return|return
name|getDocument
argument_list|(
name|wsdlURI
operator|.
name|toURL
argument_list|()
argument_list|)
return|;
block|}
return|return
name|getDocument
argument_list|(
name|wsdlURI
operator|.
name|toURL
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ToolException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|URL
name|url
parameter_list|)
throws|throws
name|ToolException
block|{
name|XMLStreamReader
name|reader
init|=
literal|null
decl_stmt|;
try|try
init|(
name|InputStream
name|input
init|=
name|url
operator|.
name|openStream
argument_list|()
init|)
block|{
name|StreamSource
name|src
init|=
operator|new
name|StreamSource
argument_list|(
name|input
argument_list|,
name|url
operator|.
name|toExternalForm
argument_list|()
argument_list|)
decl_stmt|;
name|reader
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|src
argument_list|)
expr_stmt|;
return|return
name|StaxUtils
operator|.
name|read
argument_list|(
name|reader
argument_list|,
literal|true
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
try|try
block|{
name|StaxUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|e1
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e1
argument_list|)
throw|;
block|}
block|}
block|}
specifier|public
name|Document
name|getDocument
parameter_list|(
name|File
name|wsdl
parameter_list|)
throws|throws
name|ToolException
block|{
name|XMLStreamReader
name|reader
init|=
literal|null
decl_stmt|;
try|try
block|{
name|StreamSource
name|source
init|=
operator|new
name|StreamSource
argument_list|(
name|wsdl
argument_list|)
decl_stmt|;
name|reader
operator|=
name|StaxUtils
operator|.
name|createXMLStreamReader
argument_list|(
name|source
argument_list|)
expr_stmt|;
return|return
name|StaxUtils
operator|.
name|read
argument_list|(
name|reader
argument_list|,
literal|true
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
try|try
block|{
if|if
condition|(
name|reader
operator|!=
literal|null
condition|)
block|{
try|try
block|{
comment|//on woodstox, calling closeCompletely will allow any
comment|//cached things like dtds and such to be completely
comment|//closed and cleaned up.
name|reader
operator|.
name|getClass
argument_list|()
operator|.
name|getMethod
argument_list|(
literal|"closeCompletely"
argument_list|)
operator|.
name|invoke
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|//ignore
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|XMLStreamException
name|e
parameter_list|)
block|{
comment|// throw or change do nothing.
throw|throw
operator|new
name|ToolException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

