begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|validator
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|Stax2DOMTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|wsdlFile
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/validator_wsdl/jms_test.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Stax2DOM
argument_list|()
operator|.
name|getDocument
argument_list|(
name|wsdlFile
argument_list|)
decl_stmt|;
name|assertDocumentContent
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertDocumentContent
parameter_list|(
name|Document
name|doc
parameter_list|)
block|{
name|String
name|content
init|=
name|StaxUtils
operator|.
name|toString
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|content
argument_list|,
name|content
operator|.
name|indexOf
argument_list|(
literal|"xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\""
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|content
argument_list|,
name|content
operator|.
name|indexOf
argument_list|(
literal|"xmlns:x1=\"http://cxf.apache.org/hello_world_jms/types\""
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDocumentURL
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|tempFile
init|=
name|createTempWsdlFile
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Stax2DOM
argument_list|()
operator|.
name|getDocument
argument_list|(
name|tempFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
decl_stmt|;
name|assertDocumentContent
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|assertDelete
argument_list|(
name|tempFile
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDocumentString
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|tempFile
init|=
name|createTempWsdlFile
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Stax2DOM
argument_list|()
operator|.
name|getDocument
argument_list|(
name|tempFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertDocumentContent
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|assertDelete
argument_list|(
name|tempFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertDelete
parameter_list|(
name|File
name|tempFile
parameter_list|)
block|{
name|boolean
name|deleted
init|=
name|tempFile
operator|.
name|delete
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|deleted
condition|)
block|{
name|tempFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"Stax2DOM left the input stream open, file cannot be deleted: "
operator|+
name|tempFile
argument_list|,
name|deleted
argument_list|)
expr_stmt|;
block|}
specifier|public
name|File
name|createTempWsdlFile
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|File
name|wsdlFile
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/validator_wsdl/jms_test.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|tempFile
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"Stax2DOMTest"
argument_list|,
literal|".wsdl"
argument_list|)
decl_stmt|;
try|try
init|(
name|FileOutputStream
name|output
init|=
operator|new
name|FileOutputStream
argument_list|(
name|tempFile
argument_list|)
init|)
block|{
name|IOUtils
operator|.
name|copyAndCloseInput
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|wsdlFile
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
return|return
name|tempFile
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDocumentFile
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|tempFile
init|=
name|createTempWsdlFile
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Stax2DOM
argument_list|()
operator|.
name|getDocument
argument_list|(
name|tempFile
argument_list|)
decl_stmt|;
name|assertDocumentContent
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|assertDelete
argument_list|(
name|tempFile
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

