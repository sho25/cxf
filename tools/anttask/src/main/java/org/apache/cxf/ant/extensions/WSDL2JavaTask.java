begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ant
operator|.
name|extensions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|wsdlto
operator|.
name|WSDLToJava
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|AntClassLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|DirectoryScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Execute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|LogStreamHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|types
operator|.
name|FileSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|types
operator|.
name|Path
import|;
end_import

begin_comment
comment|/**  * Ant task for wsdl2java  */
end_comment

begin_class
specifier|public
class|class
name|WSDL2JavaTask
extends|extends
name|CxfAntTask
block|{
comment|/*       * For reference, here's the usage message from the command-line.      *  wsdl2java -fe<frontend name>*       *  -db<data binding name>*       *  -wv<[wsdl version]>*       *  -p<[wsdl namespace =]Package Name>*       *  -sn<service-name> -b<binding-name>*       *  -catalog<catalog-file-name>       *  -d<output-directory>       *  -compile -classdir<compile-classes-directory>       *  -impl -server -client -all       *  -defaultValues<=class name for DefaultValueProvider>       *  -ant       *  -nexclude<schema namespace [= java packagename]>*       *  -exsh<enable extended soap header message binding (true, false)>       *  -dns<Default value is true>       *  -dex<Default value is true> -validate -keep       *  -wsdlLocation<wsdlLocation attribute> -xjc<xjc arguments>       *  -noAddressBinding -h -v -verbose -quiet<wsdlurl>       */
specifier|private
name|String
name|wsdlLocation
decl_stmt|;
specifier|private
name|String
name|wsdl
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|File
argument_list|>
name|bindingFiles
init|=
operator|new
name|HashSet
argument_list|<
name|File
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|setWsdlLocation
parameter_list|(
name|String
name|w
parameter_list|)
block|{
name|wsdlLocation
operator|=
name|w
expr_stmt|;
block|}
specifier|public
name|void
name|setWsdl
parameter_list|(
name|String
name|w
parameter_list|)
block|{
name|wsdl
operator|=
name|w
expr_stmt|;
block|}
specifier|public
name|void
name|addConfiguredBinding
parameter_list|(
name|FileSet
name|fs
parameter_list|)
block|{
name|DirectoryScanner
name|ds
init|=
name|fs
operator|.
name|getDirectoryScanner
argument_list|(
name|getProject
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|includedFiles
init|=
name|ds
operator|.
name|getIncludedFiles
argument_list|()
decl_stmt|;
name|File
name|baseDir
init|=
name|ds
operator|.
name|getBasedir
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|includedFiles
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|bindingFiles
operator|.
name|add
argument_list|(
operator|new
name|File
argument_list|(
name|baseDir
argument_list|,
name|includedFiles
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|BuildException
block|{
name|buildCommandLine
argument_list|()
expr_stmt|;
name|LogStreamHandler
name|log
init|=
operator|new
name|LogStreamHandler
argument_list|(
name|this
argument_list|,
name|Project
operator|.
name|MSG_INFO
argument_list|,
name|Project
operator|.
name|MSG_WARN
argument_list|)
decl_stmt|;
name|Execute
name|exe
init|=
operator|new
name|Execute
argument_list|(
name|log
argument_list|)
decl_stmt|;
name|exe
operator|.
name|setAntRun
argument_list|(
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|exe
operator|.
name|setCommandline
argument_list|(
name|cmd
operator|.
name|getCommandline
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|int
name|rc
init|=
name|exe
operator|.
name|execute
argument_list|()
decl_stmt|;
if|if
condition|(
name|exe
operator|.
name|killedProcess
argument_list|()
operator|||
name|rc
operator|!=
literal|0
condition|)
block|{
throw|throw
operator|new
name|BuildException
argument_list|(
literal|"wsdl2java failed"
argument_list|,
name|getLocation
argument_list|()
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BuildException
argument_list|(
name|e
argument_list|,
name|getLocation
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|buildCommandLine
parameter_list|()
block|{
name|ClassLoader
name|loader
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
decl_stmt|;
name|Path
name|classpath
init|=
operator|new
name|Path
argument_list|(
name|getProject
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|loader
operator|instanceof
name|AntClassLoader
condition|)
block|{
name|classpath
operator|=
operator|new
name|Path
argument_list|(
name|getProject
argument_list|()
argument_list|,
operator|(
operator|(
name|AntClassLoader
operator|)
name|loader
operator|)
operator|.
name|getClasspath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|cmd
operator|.
name|createClasspath
argument_list|(
name|getProject
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
name|classpath
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|createVmArgument
argument_list|()
operator|.
name|setLine
argument_list|(
literal|"-Djava.util.logging.config.file="
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|setClassname
argument_list|(
name|WSDLToJava
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|classesDir
operator|&&
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|classesDir
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"-classdir"
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setFile
argument_list|(
name|classesDir
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"-compile"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|sourcesDir
operator|&&
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|sourcesDir
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"-d"
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setFile
argument_list|(
name|sourcesDir
argument_list|)
expr_stmt|;
block|}
comment|// verbose option
if|if
condition|(
name|verbose
condition|)
block|{
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"-verbose"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|bindingFiles
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|File
name|b
range|:
name|bindingFiles
control|)
block|{
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"-b"
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setFile
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|wsdlLocation
argument_list|)
condition|)
block|{
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"-wsdlLocation"
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
block|}
comment|// wsdl
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|wsdl
argument_list|)
condition|)
block|{
name|cmd
operator|.
name|createArgument
argument_list|()
operator|.
name|setValue
argument_list|(
name|wsdl
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

