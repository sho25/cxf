begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|fortest
operator|.
name|cxf523
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_class
specifier|public
class|class
name|Operation0ResponseType
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TARGET_NAMESPACE
init|=
literal|"http://www.iona.com/db_service"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|QNAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://www.iona.com/db_service"
argument_list|,
literal|"operation0ResponseType"
argument_list|)
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|owner
decl_stmt|;
specifier|private
name|String
name|species
decl_stmt|;
specifier|private
name|String
name|sex
decl_stmt|;
specifier|private
name|Calendar
name|birth
decl_stmt|;
specifier|private
name|Calendar
name|death
decl_stmt|;
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|val
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|String
name|getOwner
parameter_list|()
block|{
return|return
name|owner
return|;
block|}
specifier|public
name|void
name|setOwner
parameter_list|(
name|String
name|val
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|String
name|getSpecies
parameter_list|()
block|{
return|return
name|species
return|;
block|}
specifier|public
name|void
name|setSpecies
parameter_list|(
name|String
name|val
parameter_list|)
block|{
name|this
operator|.
name|species
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|String
name|getSex
parameter_list|()
block|{
return|return
name|sex
return|;
block|}
specifier|public
name|void
name|setSex
parameter_list|(
name|String
name|val
parameter_list|)
block|{
name|this
operator|.
name|sex
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|Calendar
name|getBirth
parameter_list|()
block|{
return|return
name|birth
return|;
block|}
specifier|public
name|void
name|setBirth
parameter_list|(
name|Calendar
name|val
parameter_list|)
block|{
name|this
operator|.
name|birth
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|Calendar
name|getDeath
parameter_list|()
block|{
return|return
name|death
return|;
block|}
specifier|public
name|void
name|setDeath
parameter_list|(
name|Calendar
name|val
parameter_list|)
block|{
name|this
operator|.
name|death
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|QName
name|getQName
parameter_list|()
block|{
return|return
name|QNAME
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|(
literal|128
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"name : "
operator|+
name|name
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|owner
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"owner : "
operator|+
name|owner
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|species
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"species : "
operator|+
name|species
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sex
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"sex : "
operator|+
name|sex
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|birth
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"birth : "
operator|+
name|birth
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|death
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"death : "
operator|+
name|death
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
return|return
name|buffer
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

