begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|generator
operator|.
name|wsdl11
operator|.
name|annotator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttachmentRef
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlMimeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlJavaTypeAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|Annotator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JAnnotationElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaAnnotatable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaField
import|;
end_import

begin_class
specifier|public
class|class
name|WrapperBeanFieldAnnotator
implements|implements
name|Annotator
block|{
specifier|public
name|void
name|annotate
parameter_list|(
specifier|final
name|JavaAnnotatable
name|field
parameter_list|)
block|{
name|JavaField
name|jField
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|field
operator|instanceof
name|JavaField
condition|)
block|{
name|jField
operator|=
operator|(
name|JavaField
operator|)
name|field
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"WrapperBeanFiledAnnotator expect JavaField as input"
argument_list|)
throw|;
block|}
name|String
name|rawName
init|=
name|jField
operator|.
name|getRawName
argument_list|()
decl_stmt|;
name|JAnnotation
name|xmlElementAnnotation
init|=
operator|new
name|JAnnotation
argument_list|(
name|XmlElement
operator|.
name|class
argument_list|)
decl_stmt|;
name|xmlElementAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"name"
argument_list|,
name|rawName
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|jField
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
condition|)
block|{
name|xmlElementAnnotation
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"namespace"
argument_list|,
name|jField
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|jField
operator|.
name|addAnnotation
argument_list|(
name|xmlElementAnnotation
argument_list|)
expr_stmt|;
for|for
control|(
name|Annotation
name|ann
range|:
name|jField
operator|.
name|getJaxbAnnotaions
argument_list|()
control|)
block|{
if|if
condition|(
name|ann
operator|instanceof
name|XmlMimeType
condition|)
block|{
name|JAnnotation
name|mimeAnno
init|=
operator|new
name|JAnnotation
argument_list|(
name|XmlMimeType
operator|.
name|class
argument_list|)
decl_stmt|;
name|mimeAnno
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"value"
argument_list|,
operator|(
operator|(
name|XmlMimeType
operator|)
name|ann
operator|)
operator|.
name|value
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|jField
operator|.
name|addAnnotation
argument_list|(
name|mimeAnno
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ann
operator|instanceof
name|XmlJavaTypeAdapter
condition|)
block|{
name|JAnnotation
name|jaxbAnn
init|=
operator|new
name|JAnnotation
argument_list|(
name|XmlJavaTypeAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
name|jaxbAnn
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"value"
argument_list|,
operator|(
operator|(
name|XmlJavaTypeAdapter
operator|)
name|ann
operator|)
operator|.
name|value
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|jaxbAnn
operator|.
name|addElement
argument_list|(
operator|new
name|JAnnotationElement
argument_list|(
literal|"type"
argument_list|,
operator|(
operator|(
name|XmlJavaTypeAdapter
operator|)
name|ann
operator|)
operator|.
name|type
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|jField
operator|.
name|addAnnotation
argument_list|(
name|jaxbAnn
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ann
operator|instanceof
name|XmlAttachmentRef
condition|)
block|{
name|JAnnotation
name|jaxbAnn
init|=
operator|new
name|JAnnotation
argument_list|(
name|XmlAttachmentRef
operator|.
name|class
argument_list|)
decl_stmt|;
name|jField
operator|.
name|addAnnotation
argument_list|(
name|jaxbAnn
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ann
operator|instanceof
name|XmlList
condition|)
block|{
name|JAnnotation
name|jaxbAnn
init|=
operator|new
name|JAnnotation
argument_list|(
name|XmlList
operator|.
name|class
argument_list|)
decl_stmt|;
name|jField
operator|.
name|addAnnotation
argument_list|(
name|jaxbAnn
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

