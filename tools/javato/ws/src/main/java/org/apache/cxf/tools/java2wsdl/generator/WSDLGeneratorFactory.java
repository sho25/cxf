begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|generator
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|WSDLConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolException
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|WSDLGeneratorFactory
block|{
specifier|private
name|WSDLConstants
operator|.
name|WSDLVersion
name|wsdlVersion
decl_stmt|;
specifier|public
name|WSDLGeneratorFactory
parameter_list|()
block|{     }
specifier|public
name|void
name|setWSDLVersion
parameter_list|(
name|WSDLConstants
operator|.
name|WSDLVersion
name|v
parameter_list|)
block|{
name|this
operator|.
name|wsdlVersion
operator|=
name|v
expr_stmt|;
block|}
specifier|protected
name|String
name|getGeneratorClassName
parameter_list|()
block|{
name|String
name|pkgName
init|=
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|pkgName
operator|+
literal|"."
operator|+
name|wsdlVersion
operator|.
name|toString
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|"."
operator|+
name|wsdlVersion
operator|+
literal|"Generator"
return|;
block|}
specifier|public
name|AbstractGenerator
argument_list|<
name|?
argument_list|>
name|newGenerator
parameter_list|()
block|{
name|AbstractGenerator
argument_list|<
name|?
argument_list|>
name|generator
init|=
literal|null
decl_stmt|;
name|String
name|clzName
init|=
name|getGeneratorClassName
argument_list|()
decl_stmt|;
try|try
block|{
name|generator
operator|=
operator|(
name|AbstractGenerator
argument_list|<
name|?
argument_list|>
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|clzName
argument_list|)
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ToolException
argument_list|(
literal|"Can not find the Generator for: "
operator|+
name|clzName
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|generator
return|;
block|}
block|}
end_class

end_unit

