begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|processor
operator|.
name|internal
operator|.
name|jaxws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|Oneway
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttachmentRef
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlMimeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|adapters
operator|.
name|XmlJavaTypeAdapter
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|WrapperUtil
block|{
specifier|private
name|WrapperUtil
parameter_list|()
block|{     }
specifier|public
specifier|static
name|boolean
name|isWrapperClassExists
parameter_list|(
name|Method
name|method
parameter_list|)
block|{
name|Wrapper
name|requestWrapper
init|=
operator|new
name|RequestWrapper
argument_list|()
decl_stmt|;
name|requestWrapper
operator|.
name|setMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
try|try
block|{
name|requestWrapper
operator|.
name|getWrapperClass
argument_list|()
expr_stmt|;
name|boolean
name|isOneWay
init|=
name|method
operator|.
name|isAnnotationPresent
argument_list|(
name|Oneway
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|isOneWay
condition|)
block|{
name|Wrapper
name|responseWrapper
init|=
operator|new
name|ResponseWrapper
argument_list|()
decl_stmt|;
name|responseWrapper
operator|.
name|setMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|responseWrapper
operator|.
name|getWrapperClass
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|Annotation
argument_list|>
name|getJaxbAnnotations
parameter_list|(
name|Method
name|method
parameter_list|)
block|{
name|List
argument_list|<
name|Annotation
argument_list|>
name|jaxbAnnotation
init|=
operator|new
name|ArrayList
argument_list|<
name|Annotation
argument_list|>
argument_list|()
decl_stmt|;
name|Annotation
name|ann
init|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|XmlAttachmentRef
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|ann
operator|!=
literal|null
condition|)
block|{
name|jaxbAnnotation
operator|.
name|add
argument_list|(
name|ann
argument_list|)
expr_stmt|;
block|}
name|ann
operator|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|XmlMimeType
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|ann
operator|!=
literal|null
condition|)
block|{
name|jaxbAnnotation
operator|.
name|add
argument_list|(
name|ann
argument_list|)
expr_stmt|;
block|}
name|ann
operator|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|XmlJavaTypeAdapter
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|ann
operator|!=
literal|null
condition|)
block|{
name|jaxbAnnotation
operator|.
name|add
argument_list|(
name|ann
argument_list|)
expr_stmt|;
block|}
name|ann
operator|=
name|method
operator|.
name|getAnnotation
argument_list|(
name|XmlList
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|ann
operator|!=
literal|null
condition|)
block|{
name|jaxbAnnotation
operator|.
name|add
argument_list|(
name|ann
argument_list|)
expr_stmt|;
block|}
return|return
name|jaxbAnnotation
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|Annotation
argument_list|>
name|getJaxbAnnotations
parameter_list|(
name|Method
name|method
parameter_list|,
name|int
name|idx
parameter_list|)
block|{
name|List
argument_list|<
name|Annotation
argument_list|>
name|jaxbAnnotation
init|=
operator|new
name|ArrayList
argument_list|<
name|Annotation
argument_list|>
argument_list|()
decl_stmt|;
name|Annotation
index|[]
index|[]
name|anns
init|=
name|method
operator|.
name|getParameterAnnotations
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|method
operator|.
name|getParameterTypes
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
name|idx
condition|)
block|{
for|for
control|(
name|Annotation
name|ann
range|:
name|anns
index|[
name|i
index|]
control|)
block|{
if|if
condition|(
name|ann
operator|.
name|annotationType
argument_list|()
operator|==
name|XmlAttachmentRef
operator|.
name|class
operator|||
name|ann
operator|.
name|annotationType
argument_list|()
operator|==
name|XmlMimeType
operator|.
name|class
operator|||
name|ann
operator|.
name|annotationType
argument_list|()
operator|==
name|XmlJavaTypeAdapter
operator|.
name|class
operator|||
name|ann
operator|.
name|annotationType
argument_list|()
operator|==
name|XmlList
operator|.
name|class
operator|||
name|ann
operator|.
name|annotationType
argument_list|()
operator|==
name|XmlElement
operator|.
name|class
condition|)
block|{
name|jaxbAnnotation
operator|.
name|add
argument_list|(
name|ann
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
return|return
name|jaxbAnnotation
return|;
block|}
block|}
end_class

end_unit

