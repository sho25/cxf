begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|generator
operator|.
name|wsdl11
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|OperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|SchemaInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|VelocityGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|generator
operator|.
name|AbstractGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|FileWriterUtil
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|DateTypeCustomGenerator
extends|extends
name|AbstractGenerator
argument_list|<
name|File
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEMPLATE_BASE
init|=
literal|"org/apache/cxf/tools/java2wsdl/generator/wsdl11/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEMPLATE_EXT
init|=
name|TEMPLATE_BASE
operator|+
literal|"date_type_cust.vm"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEMPLATE_EMB
init|=
name|TEMPLATE_BASE
operator|+
literal|"date_type_cust_embed.vm"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DATE_ADAPTER
init|=
literal|"org.apache.cxf.tools.common.DataTypeAdapter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CALENDAR_ADAPTER
init|=
literal|"javax.xml.bind.DatatypeConverter"
decl_stmt|;
specifier|private
name|String
name|wsdlName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|schemaFiles
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|addSchemaFiles
parameter_list|(
specifier|final
name|Collection
argument_list|<
name|String
argument_list|>
name|s
parameter_list|)
block|{
name|this
operator|.
name|schemaFiles
operator|.
name|addAll
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setWSDLName
parameter_list|(
specifier|final
name|String
name|ws
parameter_list|)
block|{
name|this
operator|.
name|wsdlName
operator|=
name|ws
expr_stmt|;
block|}
specifier|private
name|String
name|getTemplate
parameter_list|()
block|{
if|if
condition|(
name|allowImports
argument_list|()
condition|)
block|{
return|return
name|TEMPLATE_EXT
return|;
block|}
return|return
name|TEMPLATE_EMB
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getSchemaNamespaces
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|ns
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|SchemaInfo
name|schema
range|:
name|getServiceModel
argument_list|()
operator|.
name|getSchemas
argument_list|()
control|)
block|{
name|ns
operator|.
name|add
argument_list|(
name|schema
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|ns
return|;
block|}
specifier|public
name|File
name|generate
parameter_list|(
name|File
name|outputdir
parameter_list|)
block|{
name|Class
name|dateType
init|=
name|getDateType
argument_list|()
decl_stmt|;
name|File
name|xjb
init|=
name|getJAXBCustFile
argument_list|(
name|outputdir
argument_list|)
decl_stmt|;
if|if
condition|(
name|dateType
operator|!=
literal|null
condition|)
block|{
name|VelocityGenerator
name|generator
init|=
operator|new
name|VelocityGenerator
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|generator
operator|.
name|setCommonAttributes
argument_list|()
expr_stmt|;
name|generator
operator|.
name|setAttributes
argument_list|(
literal|"parseMethod"
argument_list|,
name|getAdapterMethod
argument_list|(
name|dateType
argument_list|,
literal|".parseDateTime"
argument_list|)
argument_list|)
expr_stmt|;
name|generator
operator|.
name|setAttributes
argument_list|(
literal|"printMethod"
argument_list|,
name|getAdapterMethod
argument_list|(
name|dateType
argument_list|,
literal|".printDateTime"
argument_list|)
argument_list|)
expr_stmt|;
name|generator
operator|.
name|setAttributes
argument_list|(
literal|"datetype"
argument_list|,
name|dateType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|allowImports
argument_list|()
condition|)
block|{
if|if
condition|(
name|schemaFiles
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
name|generator
operator|.
name|setAttributes
argument_list|(
literal|"schemaFiles"
argument_list|,
name|schemaFiles
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|generator
operator|.
name|setAttributes
argument_list|(
literal|"wsdlName"
argument_list|,
name|wsdlName
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|ns
init|=
name|getSchemaNamespaces
argument_list|()
decl_stmt|;
if|if
condition|(
name|ns
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
name|generator
operator|.
name|setAttributes
argument_list|(
literal|"targetNamespaces"
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|generator
operator|.
name|doWrite
argument_list|(
name|getTemplate
argument_list|()
argument_list|,
name|FileWriterUtil
operator|.
name|getWriter
argument_list|(
name|xjb
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|generator
operator|.
name|clearAttributes
argument_list|()
expr_stmt|;
block|}
return|return
name|xjb
return|;
block|}
specifier|protected
name|File
name|getJAXBCustFile
parameter_list|(
name|File
name|outputdir
parameter_list|)
block|{
return|return
operator|new
name|File
argument_list|(
name|outputdir
argument_list|,
name|wsdlName
operator|+
literal|".xjb"
argument_list|)
return|;
block|}
specifier|protected
name|String
name|getAdapterMethod
parameter_list|(
specifier|final
name|Class
name|clz
parameter_list|,
specifier|final
name|String
name|methodName
parameter_list|)
block|{
if|if
condition|(
name|clz
operator|==
name|Date
operator|.
name|class
condition|)
block|{
return|return
name|DATE_ADAPTER
operator|+
name|methodName
return|;
block|}
return|return
name|CALENDAR_ADAPTER
operator|+
name|methodName
return|;
block|}
specifier|protected
name|Class
name|getDateType
parameter_list|()
block|{
if|if
condition|(
name|getServiceModel
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
for|for
control|(
name|OperationInfo
name|op
range|:
name|getServiceModel
argument_list|()
operator|.
name|getInterface
argument_list|()
operator|.
name|getOperations
argument_list|()
control|)
block|{
name|Method
name|m
init|=
operator|(
name|Method
operator|)
name|op
operator|.
name|getProperty
argument_list|(
literal|"operation.method"
argument_list|)
decl_stmt|;
for|for
control|(
name|Class
name|clz
range|:
name|m
operator|.
name|getParameterTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|clz
operator|==
name|Date
operator|.
name|class
operator|||
name|clz
operator|==
name|Calendar
operator|.
name|class
condition|)
block|{
return|return
name|clz
return|;
block|}
block|}
if|if
condition|(
name|m
operator|.
name|getReturnType
argument_list|()
operator|==
name|Date
operator|.
name|class
operator|||
name|m
operator|.
name|getReturnType
argument_list|()
operator|==
name|Calendar
operator|.
name|class
condition|)
block|{
return|return
name|m
operator|.
name|getReturnType
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

