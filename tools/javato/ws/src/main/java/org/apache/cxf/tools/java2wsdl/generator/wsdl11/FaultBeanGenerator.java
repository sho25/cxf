begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|generator
operator|.
name|wsdl11
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|RemoteException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|ServerException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Fault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|PackageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|OperationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|service
operator|.
name|model
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ToolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
operator|.
name|JavaClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|java2wsdl
operator|.
name|processor
operator|.
name|internal
operator|.
name|jaxws
operator|.
name|FaultBean
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|FaultBeanGenerator
extends|extends
name|BeanGenerator
block|{
specifier|private
name|String
name|getSEIPackage
parameter_list|(
specifier|final
name|Method
name|method
parameter_list|)
block|{
name|String
name|pkg
init|=
name|PackageUtils
operator|.
name|getPackageName
argument_list|(
name|method
operator|.
name|getDeclaringClass
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pkg
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
name|ToolConstants
operator|.
name|DEFAULT_PACKAGE_NAME
return|;
block|}
else|else
block|{
return|return
name|pkg
return|;
block|}
block|}
specifier|protected
name|Collection
argument_list|<
name|JavaClass
argument_list|>
name|generateBeanClasses
parameter_list|(
specifier|final
name|ServiceInfo
name|serviceInfo
parameter_list|)
block|{
name|Set
argument_list|<
name|Class
argument_list|>
name|exceptionClasses
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|seiPackageName
init|=
literal|null
decl_stmt|;
for|for
control|(
name|OperationInfo
name|op
range|:
name|serviceInfo
operator|.
name|getInterface
argument_list|()
operator|.
name|getOperations
argument_list|()
control|)
block|{
name|Method
name|method
init|=
operator|(
name|Method
operator|)
name|op
operator|.
name|getProperty
argument_list|(
literal|"operation.method"
argument_list|)
decl_stmt|;
name|exceptionClasses
operator|.
name|addAll
argument_list|(
name|getExceptionClasses
argument_list|(
name|method
argument_list|)
argument_list|)
expr_stmt|;
name|seiPackageName
operator|=
name|getSEIPackage
argument_list|(
name|method
argument_list|)
expr_stmt|;
block|}
name|Collection
argument_list|<
name|JavaClass
argument_list|>
name|faultBeanClasses
init|=
operator|new
name|HashSet
argument_list|<
name|JavaClass
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|defaultPackage
init|=
name|seiPackageName
operator|+
literal|".jaxws"
decl_stmt|;
name|FaultBean
name|bean
init|=
operator|new
name|FaultBean
argument_list|()
decl_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|clz
range|:
name|exceptionClasses
control|)
block|{
if|if
condition|(
operator|!
name|bean
operator|.
name|faultBeanExists
argument_list|(
name|clz
argument_list|)
condition|)
block|{
name|faultBeanClasses
operator|.
name|add
argument_list|(
name|bean
operator|.
name|transform
argument_list|(
name|clz
argument_list|,
name|defaultPackage
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|faultBeanClasses
return|;
block|}
specifier|protected
name|Set
argument_list|<
name|Class
argument_list|>
name|getExceptionClasses
parameter_list|(
specifier|final
name|Method
name|method
parameter_list|)
block|{
name|Set
argument_list|<
name|Class
argument_list|>
name|exps
init|=
operator|new
name|HashSet
argument_list|<
name|Class
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|exceptionClasses
init|=
name|method
operator|.
name|getExceptionTypes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|exceptionClasses
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|boolean
name|exclude
init|=
literal|false
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|exClazz
init|=
name|exceptionClasses
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|exClazz
operator|.
name|equals
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
operator|||
name|Fault
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|exClazz
argument_list|)
operator|||
name|exClazz
operator|.
name|equals
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|||
name|exClazz
operator|.
name|equals
argument_list|(
name|Throwable
operator|.
name|class
argument_list|)
operator|||
name|exClazz
operator|.
name|equals
argument_list|(
name|RemoteException
operator|.
name|class
argument_list|)
operator|||
name|exClazz
operator|.
name|equals
argument_list|(
name|ServerException
operator|.
name|class
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|Method
index|[]
name|expMethods
init|=
name|exClazz
operator|.
name|getMethods
argument_list|()
decl_stmt|;
for|for
control|(
name|Method
name|expMethod
range|:
name|expMethods
control|)
block|{
if|if
condition|(
literal|"getFaultInfo"
operator|.
name|equals
argument_list|(
name|expMethod
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|exclude
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|exclude
condition|)
block|{
continue|continue;
block|}
name|exps
operator|.
name|add
argument_list|(
name|exClazz
argument_list|)
expr_stmt|;
block|}
return|return
name|exps
return|;
block|}
block|}
end_class

end_unit

