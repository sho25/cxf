begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|DatatypeConverter
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|DataTypeAdapter
block|{
specifier|private
name|DataTypeAdapter
parameter_list|()
block|{     }
specifier|public
specifier|static
name|Date
name|parseDate
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|DatatypeConverter
operator|.
name|parseDate
argument_list|(
name|s
argument_list|)
operator|.
name|getTime
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|String
name|printDate
parameter_list|(
name|Date
name|dt
parameter_list|)
block|{
name|Calendar
name|c
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|c
operator|.
name|setTime
argument_list|(
name|dt
argument_list|)
expr_stmt|;
return|return
name|DatatypeConverter
operator|.
name|printDate
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Date
name|parseTime
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|DatatypeConverter
operator|.
name|parseTime
argument_list|(
name|s
argument_list|)
operator|.
name|getTime
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|String
name|printTime
parameter_list|(
name|Date
name|dt
parameter_list|)
block|{
name|Calendar
name|c
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|c
operator|.
name|setTime
argument_list|(
name|dt
argument_list|)
expr_stmt|;
return|return
name|DatatypeConverter
operator|.
name|printTime
argument_list|(
name|c
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Date
name|parseDateTime
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|DatatypeConverter
operator|.
name|parseDateTime
argument_list|(
name|s
argument_list|)
operator|.
name|getTime
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|String
name|printDateTime
parameter_list|(
name|Date
name|dt
parameter_list|)
block|{
name|Calendar
name|c
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|c
operator|.
name|setTime
argument_list|(
name|dt
argument_list|)
expr_stmt|;
return|return
name|DatatypeConverter
operator|.
name|printDateTime
argument_list|(
name|c
argument_list|)
return|;
block|}
block|}
end_class

end_unit

