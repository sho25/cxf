begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingFault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingInput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOperation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOutput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Port
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|WSDLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensibilityElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionRegistry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPAddress
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPBinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPBody
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPFault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPHeader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SOAPOperation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap12
operator|.
name|SOAP12Address
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap12
operator|.
name|SOAP12Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap12
operator|.
name|SOAP12Body
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap12
operator|.
name|SOAP12Fault
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap12
operator|.
name|SOAP12Header
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|soap12
operator|.
name|SOAP12Operation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|ExtensionInvocationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SoapAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SoapBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SoapBody
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SoapFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SoapHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|extensions
operator|.
name|soap
operator|.
name|SoapOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|WSDLConstants
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|SOAPBindingUtil
block|{
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|bindingMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
static|static
block|{
name|bindingMap
operator|.
name|put
argument_list|(
literal|"RPC"
argument_list|,
literal|"SOAPBinding.Style.RPC"
argument_list|)
expr_stmt|;
name|bindingMap
operator|.
name|put
argument_list|(
literal|"DOCUMENT"
argument_list|,
literal|"SOAPBinding.Style.DOCUMENT"
argument_list|)
expr_stmt|;
name|bindingMap
operator|.
name|put
argument_list|(
literal|"LITERAL"
argument_list|,
literal|"SOAPBinding.Use.LITERAL"
argument_list|)
expr_stmt|;
name|bindingMap
operator|.
name|put
argument_list|(
literal|"ENCODED"
argument_list|,
literal|"SOAPBinding.Use.ENCODED"
argument_list|)
expr_stmt|;
name|bindingMap
operator|.
name|put
argument_list|(
literal|"BARE"
argument_list|,
literal|"SOAPBinding.ParameterStyle.BARE"
argument_list|)
expr_stmt|;
name|bindingMap
operator|.
name|put
argument_list|(
literal|"WRAPPED"
argument_list|,
literal|"SOAPBinding.ParameterStyle.WRAPPED"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SOAPBindingUtil
parameter_list|()
block|{     }
specifier|public
specifier|static
name|String
name|getBindingAnnotation
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|bindingMap
operator|.
name|get
argument_list|(
name|key
operator|.
name|toUpperCase
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|T
name|getProxy
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|cls
parameter_list|,
name|Object
name|obj
parameter_list|)
block|{
name|InvocationHandler
name|ih
init|=
operator|new
name|ExtensionInvocationHandler
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|Object
name|proxy
init|=
name|Proxy
operator|.
name|newProxyInstance
argument_list|(
name|cls
operator|.
name|getClassLoader
argument_list|()
argument_list|,
operator|new
name|Class
index|[]
block|{
name|cls
block|}
argument_list|,
name|ih
argument_list|)
decl_stmt|;
return|return
name|cls
operator|.
name|cast
argument_list|(
name|proxy
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPBinding
parameter_list|(
name|Binding
name|binding
parameter_list|)
block|{
name|Iterator
name|ite
init|=
name|binding
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPBinding
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
name|String
name|getBindingStyle
parameter_list|(
name|Binding
name|binding
parameter_list|)
block|{
name|Iterator
name|ite
init|=
name|binding
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPBinding
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getSoapBinding
argument_list|(
name|obj
argument_list|)
operator|.
name|getStyle
argument_list|()
return|;
block|}
block|}
return|return
literal|""
return|;
block|}
specifier|public
specifier|static
name|SoapOperation
name|getSoapOperation
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|exts
parameter_list|)
block|{
if|if
condition|(
name|exts
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ExtensibilityElement
name|ext
range|:
name|exts
control|)
block|{
if|if
condition|(
name|isSOAPOperation
argument_list|(
name|ext
argument_list|)
condition|)
block|{
return|return
name|getSoapOperation
argument_list|(
name|ext
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapOperation
name|getSoapOperation
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|isSOAPOperation
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapOperation
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|String
name|getSOAPOperationStyle
parameter_list|(
name|BindingOperation
name|bop
parameter_list|)
block|{
name|String
name|style
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|bop
operator|!=
literal|null
condition|)
block|{
name|Iterator
name|ite
init|=
name|bop
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPOperation
argument_list|(
name|obj
argument_list|)
condition|)
block|{
name|style
operator|=
name|getSoapOperation
argument_list|(
name|obj
argument_list|)
operator|.
name|getStyle
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
return|return
name|style
return|;
block|}
specifier|public
specifier|static
name|SoapBody
name|getBindingInputSOAPBody
parameter_list|(
name|BindingOperation
name|bop
parameter_list|)
block|{
name|BindingInput
name|bindingInput
init|=
name|bop
operator|.
name|getBindingInput
argument_list|()
decl_stmt|;
if|if
condition|(
name|bindingInput
operator|!=
literal|null
condition|)
block|{
name|Iterator
name|ite
init|=
name|bindingInput
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPBody
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getSoapBody
argument_list|(
name|obj
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapBody
name|getBindingOutputSOAPBody
parameter_list|(
name|BindingOperation
name|bop
parameter_list|)
block|{
name|BindingOutput
name|bindingOutput
init|=
name|bop
operator|.
name|getBindingOutput
argument_list|()
decl_stmt|;
if|if
condition|(
name|bindingOutput
operator|!=
literal|null
condition|)
block|{
name|Iterator
name|ite
init|=
name|bindingOutput
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPBody
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getSoapBody
argument_list|(
name|obj
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapBody
name|getSoapBody
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|exts
parameter_list|)
block|{
if|if
condition|(
name|exts
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ExtensibilityElement
name|ext
range|:
name|exts
control|)
block|{
if|if
condition|(
name|isSOAPBody
argument_list|(
name|ext
argument_list|)
condition|)
block|{
return|return
name|getSoapBody
argument_list|(
name|ext
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapBody
name|getSoapBody
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|isSOAPBody
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapBody
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPBody
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|SOAPBody
operator|||
name|obj
operator|instanceof
name|SOAP12Body
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPHeader
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|SOAPHeader
operator|||
name|obj
operator|instanceof
name|SOAP12Header
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|SoapHeader
argument_list|>
name|getSoapHeaders
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|exts
parameter_list|)
block|{
name|List
argument_list|<
name|SoapHeader
argument_list|>
name|headers
init|=
operator|new
name|ArrayList
argument_list|<
name|SoapHeader
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|exts
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ExtensibilityElement
name|ext
range|:
name|exts
control|)
block|{
if|if
condition|(
name|isSOAPHeader
argument_list|(
name|ext
argument_list|)
condition|)
block|{
name|headers
operator|.
name|add
argument_list|(
name|getSoapHeader
argument_list|(
name|ext
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|headers
return|;
block|}
specifier|public
specifier|static
name|SoapHeader
name|getSoapHeader
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|isSOAPHeader
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapHeader
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapAddress
name|getSoapAddress
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|isSOAPAddress
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapAddress
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPAddress
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|SOAPAddress
operator|||
name|obj
operator|instanceof
name|SOAP12Address
return|;
block|}
specifier|public
specifier|static
name|SoapHeader
name|getBindingInputSOAPHeader
parameter_list|(
name|BindingOperation
name|bop
parameter_list|)
block|{
name|BindingInput
name|bindingInput
init|=
name|bop
operator|.
name|getBindingInput
argument_list|()
decl_stmt|;
if|if
condition|(
name|bindingInput
operator|!=
literal|null
condition|)
block|{
name|Iterator
name|ite
init|=
name|bindingInput
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPHeader
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapHeader
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapHeader
name|getBindingOutputSOAPHeader
parameter_list|(
name|BindingOperation
name|bop
parameter_list|)
block|{
name|BindingOutput
name|bindingOutput
init|=
name|bop
operator|.
name|getBindingOutput
argument_list|()
decl_stmt|;
if|if
condition|(
name|bindingOutput
operator|!=
literal|null
condition|)
block|{
name|Iterator
name|ite
init|=
name|bindingOutput
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPHeader
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapHeader
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapBinding
name|getSoapBinding
parameter_list|(
name|List
argument_list|<
name|ExtensibilityElement
argument_list|>
name|exts
parameter_list|)
block|{
for|for
control|(
name|ExtensibilityElement
name|ext
range|:
name|exts
control|)
block|{
if|if
condition|(
name|isSOAPBinding
argument_list|(
name|ext
argument_list|)
condition|)
block|{
return|return
name|getSoapBinding
argument_list|(
name|ext
argument_list|)
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|SoapBinding
name|getSoapBinding
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|isSOAPBinding
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapBinding
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPBinding
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|SOAPBinding
operator|||
name|obj
operator|instanceof
name|SOAP12Binding
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
name|List
argument_list|<
name|SoapFault
argument_list|>
name|getBindingOperationSoapFaults
parameter_list|(
name|BindingOperation
name|bop
parameter_list|)
block|{
name|List
argument_list|<
name|SoapFault
argument_list|>
name|faults
init|=
operator|new
name|ArrayList
argument_list|<
name|SoapFault
argument_list|>
argument_list|()
decl_stmt|;
name|Map
name|bindingFaults
init|=
name|bop
operator|.
name|getBindingFaults
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|obj
range|:
name|bindingFaults
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|BindingFault
operator|)
condition|)
block|{
continue|continue;
block|}
name|BindingFault
name|faultElement
init|=
operator|(
name|BindingFault
operator|)
name|obj
decl_stmt|;
name|Iterator
name|ite
init|=
name|faultElement
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SoapFault
name|fault
init|=
name|getSoapFault
argument_list|(
name|ite
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|fault
operator|!=
literal|null
condition|)
block|{
name|faults
operator|.
name|add
argument_list|(
name|fault
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|faults
return|;
block|}
specifier|public
specifier|static
name|SoapFault
name|getSoapFault
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|isSOAPFault
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|getProxy
argument_list|(
name|SoapFault
operator|.
name|class
argument_list|,
name|obj
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isMixedStyle
parameter_list|(
name|Binding
name|binding
parameter_list|)
block|{
name|Iterator
name|ite
init|=
name|binding
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|bindingStyle
init|=
literal|""
decl_stmt|;
name|String
name|previousOpStyle
init|=
literal|""
decl_stmt|;
name|String
name|style
init|=
literal|""
decl_stmt|;
while|while
condition|(
name|ite
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPBinding
argument_list|(
name|obj
argument_list|)
condition|)
block|{
name|SoapBinding
name|soapBinding
init|=
name|getSoapBinding
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|bindingStyle
operator|=
name|soapBinding
operator|.
name|getStyle
argument_list|()
expr_stmt|;
if|if
condition|(
name|bindingStyle
operator|==
literal|null
condition|)
block|{
name|bindingStyle
operator|=
literal|""
expr_stmt|;
block|}
block|}
block|}
name|Iterator
name|ite2
init|=
name|binding
operator|.
name|getBindingOperations
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite2
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|BindingOperation
name|bop
init|=
operator|(
name|BindingOperation
operator|)
name|ite2
operator|.
name|next
argument_list|()
decl_stmt|;
name|Iterator
name|ite3
init|=
name|bop
operator|.
name|getExtensibilityElements
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|ite3
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|ite3
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAPOperation
argument_list|(
name|obj
argument_list|)
condition|)
block|{
name|SoapOperation
name|soapOperation
init|=
name|getSoapOperation
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|style
operator|=
name|soapOperation
operator|.
name|getStyle
argument_list|()
expr_stmt|;
if|if
condition|(
name|style
operator|==
literal|null
condition|)
block|{
name|style
operator|=
literal|""
expr_stmt|;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|bindingStyle
argument_list|)
operator|&&
literal|""
operator|.
name|equals
argument_list|(
name|previousOpStyle
argument_list|)
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|bindingStyle
argument_list|)
operator|&&
name|previousOpStyle
operator|.
name|equalsIgnoreCase
argument_list|(
name|style
argument_list|)
condition|)
block|{
name|previousOpStyle
operator|=
name|style
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|bindingStyle
argument_list|)
operator|&&
literal|""
operator|.
name|equals
argument_list|(
name|previousOpStyle
argument_list|)
operator|&&
name|bindingStyle
operator|.
name|equalsIgnoreCase
argument_list|(
name|style
argument_list|)
operator|||
name|bindingStyle
operator|.
name|equalsIgnoreCase
argument_list|(
name|previousOpStyle
argument_list|)
operator|&&
name|bindingStyle
operator|.
name|equalsIgnoreCase
argument_list|(
name|style
argument_list|)
condition|)
block|{
name|previousOpStyle
operator|=
name|style
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|bindingStyle
argument_list|)
operator|&&
literal|""
operator|.
name|equals
argument_list|(
name|style
argument_list|)
operator|&&
literal|""
operator|.
name|equals
argument_list|(
name|previousOpStyle
argument_list|)
condition|)
block|{
continue|continue;
block|}
else|else
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
name|String
name|getCanonicalBindingStyle
parameter_list|(
name|Binding
name|binding
parameter_list|)
block|{
name|String
name|bindingStyle
init|=
name|getBindingStyle
argument_list|(
name|binding
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|bindingStyle
argument_list|)
condition|)
block|{
return|return
name|bindingStyle
return|;
block|}
for|for
control|(
name|Iterator
name|ite2
init|=
name|binding
operator|.
name|getBindingOperations
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|ite2
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|BindingOperation
name|bindingOp
init|=
operator|(
name|BindingOperation
operator|)
name|ite2
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|bopStyle
init|=
name|getSOAPOperationStyle
argument_list|(
name|bindingOp
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|bopStyle
argument_list|)
condition|)
block|{
return|return
name|bopStyle
return|;
block|}
block|}
return|return
literal|""
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPOperation
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|SOAPOperation
operator|||
name|obj
operator|instanceof
name|SOAP12Operation
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isSOAPFault
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|SOAPFault
operator|||
name|obj
operator|instanceof
name|SOAP12Fault
return|;
block|}
specifier|public
specifier|static
name|SoapAddress
name|createSoapAddress
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
throws|throws
name|WSDLException
block|{
name|ExtensibilityElement
name|extElement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isSOAP12
condition|)
block|{
name|extElement
operator|=
operator|(
name|SOAP12Address
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|Port
operator|.
name|class
argument_list|,
name|WSDLConstants
operator|.
name|QNAME_SOAP12_BINDING_ADDRESS
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|extElement
operator|=
operator|(
name|SOAPAddress
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|Port
operator|.
name|class
argument_list|,
name|WSDLConstants
operator|.
name|QNAME_SOAP_BINDING_ADDRESS
argument_list|)
expr_stmt|;
block|}
return|return
name|getSoapAddress
argument_list|(
name|extElement
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SoapBody
name|createSoapBody
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|,
name|Class
name|clz
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
throws|throws
name|WSDLException
block|{
name|ExtensibilityElement
name|extElement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isSOAP12
condition|)
block|{
name|extElement
operator|=
operator|(
name|SOAP12Body
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|clz
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|,
literal|"body"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|extElement
operator|=
operator|(
name|SOAPBody
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|clz
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|,
literal|"body"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|getSoapBody
argument_list|(
name|extElement
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SoapBinding
name|createSoapBinding
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
throws|throws
name|WSDLException
block|{
name|ExtensibilityElement
name|extElement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isSOAP12
condition|)
block|{
name|extElement
operator|=
operator|(
name|SOAP12Binding
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|Binding
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|,
literal|"binding"
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|SOAP12Binding
operator|)
name|extElement
operator|)
operator|.
name|setTransportURI
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12_HTTP_TRANSPORT
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|extElement
operator|=
operator|(
name|SOAPBinding
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|Binding
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|,
literal|"binding"
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|SOAPBinding
operator|)
name|extElement
operator|)
operator|.
name|setTransportURI
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11_HTTP_TRANSPORT
argument_list|)
expr_stmt|;
block|}
return|return
name|getSoapBinding
argument_list|(
name|extElement
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SoapOperation
name|createSoapOperation
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
throws|throws
name|WSDLException
block|{
name|ExtensibilityElement
name|extElement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isSOAP12
condition|)
block|{
name|extElement
operator|=
operator|(
name|SOAP12Operation
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|BindingOperation
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|,
literal|"operation"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|extElement
operator|=
operator|(
name|SOAPOperation
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|BindingOperation
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|,
literal|"operation"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|getSoapOperation
argument_list|(
name|extElement
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SoapFault
name|createSoapFault
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
throws|throws
name|WSDLException
block|{
name|ExtensibilityElement
name|extElement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isSOAP12
condition|)
block|{
name|extElement
operator|=
operator|(
name|SOAP12Fault
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|BindingFault
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|,
literal|"fault"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|extElement
operator|=
operator|(
name|SOAPFault
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|BindingFault
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|,
literal|"fault"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|getSoapFault
argument_list|(
name|extElement
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|SoapHeader
name|createSoapHeader
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|,
name|Class
name|clz
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
throws|throws
name|WSDLException
block|{
name|ExtensibilityElement
name|extElement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isSOAP12
condition|)
block|{
name|extElement
operator|=
operator|(
name|SOAP12Header
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|clz
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|,
literal|"header"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|extElement
operator|=
operator|(
name|SOAPHeader
operator|)
name|extReg
operator|.
name|createExtension
argument_list|(
name|clz
argument_list|,
operator|new
name|QName
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|,
literal|"header"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|getSoapHeader
argument_list|(
name|extElement
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|addSOAPNamespace
parameter_list|(
name|Definition
name|definition
parameter_list|,
name|boolean
name|isSOAP12
parameter_list|)
block|{
name|Map
name|namespaces
init|=
name|definition
operator|.
name|getNamespaces
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSOAP12
operator|&&
operator|!
name|namespaces
operator|.
name|values
argument_list|()
operator|.
name|contains
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|)
condition|)
block|{
name|definition
operator|.
name|addNamespace
argument_list|(
literal|"soap12"
argument_list|,
name|WSDLConstants
operator|.
name|NS_SOAP12
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|namespaces
operator|.
name|values
argument_list|()
operator|.
name|contains
argument_list|(
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|)
condition|)
block|{
name|definition
operator|.
name|addNamespace
argument_list|(
literal|"soap"
argument_list|,
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Style
name|getSoapStyle
parameter_list|(
name|String
name|soapStyle
parameter_list|)
block|{
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|soapStyle
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
elseif|else
if|if
condition|(
literal|"RPC"
operator|.
name|equalsIgnoreCase
argument_list|(
name|soapStyle
argument_list|)
condition|)
block|{
return|return
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Style
operator|.
name|RPC
return|;
block|}
else|else
block|{
return|return
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Style
operator|.
name|DOCUMENT
return|;
block|}
block|}
specifier|public
specifier|static
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Use
name|getSoapUse
parameter_list|(
name|String
name|soapUse
parameter_list|)
block|{
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|soapUse
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
elseif|else
if|if
condition|(
literal|"ENCODED"
operator|.
name|equalsIgnoreCase
argument_list|(
name|soapUse
argument_list|)
condition|)
block|{
return|return
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Use
operator|.
name|ENCODED
return|;
block|}
else|else
block|{
return|return
name|javax
operator|.
name|jws
operator|.
name|soap
operator|.
name|SOAPBinding
operator|.
name|Use
operator|.
name|LITERAL
return|;
block|}
block|}
block|}
end_class

end_unit

