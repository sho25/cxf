begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_class
specifier|public
class|class
name|JavaClass
extends|extends
name|JavaInterface
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|JavaField
argument_list|>
name|jfield
init|=
operator|new
name|ArrayList
argument_list|<
name|JavaField
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|JavaClass
parameter_list|()
block|{     }
specifier|public
name|JavaClass
parameter_list|(
name|JavaModel
name|model
parameter_list|)
block|{
name|super
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addField
parameter_list|(
name|JavaField
name|f
parameter_list|)
block|{
name|this
operator|.
name|jfield
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|JavaField
argument_list|>
name|getFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|jfield
return|;
block|}
specifier|public
name|JavaMethod
name|appendGetter
parameter_list|(
name|JavaField
name|field
parameter_list|)
block|{
name|String
name|getterName
init|=
literal|"get"
operator|+
name|StringUtils
operator|.
name|capitalize
argument_list|(
name|field
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|JavaMethod
name|jMethod
init|=
operator|new
name|JavaMethod
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|jMethod
operator|.
name|setName
argument_list|(
name|getterName
argument_list|)
expr_stmt|;
name|jMethod
operator|.
name|setReturn
argument_list|(
operator|new
name|JavaReturn
argument_list|(
name|field
operator|.
name|getParaName
argument_list|()
argument_list|,
name|field
operator|.
name|getType
argument_list|()
argument_list|,
name|field
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|JavaCodeBlock
name|block
init|=
operator|new
name|JavaCodeBlock
argument_list|()
decl_stmt|;
name|JavaExpression
name|exp
init|=
operator|new
name|JavaExpression
argument_list|()
decl_stmt|;
name|exp
operator|.
name|setValue
argument_list|(
literal|"return this."
operator|+
name|field
operator|.
name|getParaName
argument_list|()
argument_list|)
expr_stmt|;
name|block
operator|.
name|getExpressions
argument_list|()
operator|.
name|add
argument_list|(
name|exp
argument_list|)
expr_stmt|;
name|jMethod
operator|.
name|setJavaCodeBlock
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|addMethod
argument_list|(
name|jMethod
argument_list|)
expr_stmt|;
return|return
name|jMethod
return|;
block|}
specifier|public
name|JavaMethod
name|appendSetter
parameter_list|(
name|JavaField
name|field
parameter_list|)
block|{
name|String
name|setterName
init|=
literal|"set"
operator|+
name|StringUtils
operator|.
name|capitalize
argument_list|(
name|field
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|JavaMethod
name|jMethod
init|=
operator|new
name|JavaMethod
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|jMethod
operator|.
name|setReturn
argument_list|(
operator|new
name|JavaReturn
argument_list|(
literal|"return"
argument_list|,
literal|"void"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|paramName
init|=
name|getSetterParamName
argument_list|(
name|field
operator|.
name|getParaName
argument_list|()
argument_list|)
decl_stmt|;
name|jMethod
operator|.
name|addParameter
argument_list|(
operator|new
name|JavaParameter
argument_list|(
name|paramName
argument_list|,
name|field
operator|.
name|getType
argument_list|()
argument_list|,
name|field
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|JavaCodeBlock
name|block
init|=
operator|new
name|JavaCodeBlock
argument_list|()
decl_stmt|;
name|JavaExpression
name|exp
init|=
operator|new
name|JavaExpression
argument_list|()
decl_stmt|;
name|exp
operator|.
name|setValue
argument_list|(
literal|"this."
operator|+
name|field
operator|.
name|getParaName
argument_list|()
operator|+
literal|" = "
operator|+
name|paramName
argument_list|)
expr_stmt|;
name|block
operator|.
name|getExpressions
argument_list|()
operator|.
name|add
argument_list|(
name|exp
argument_list|)
expr_stmt|;
name|jMethod
operator|.
name|setJavaCodeBlock
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|jMethod
operator|.
name|setName
argument_list|(
name|setterName
argument_list|)
expr_stmt|;
name|addMethod
argument_list|(
name|jMethod
argument_list|)
expr_stmt|;
return|return
name|jMethod
return|;
block|}
specifier|private
name|String
name|getSetterParamName
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
return|return
literal|"new"
operator|+
name|StringUtils
operator|.
name|capitalize
argument_list|(
name|fieldName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

