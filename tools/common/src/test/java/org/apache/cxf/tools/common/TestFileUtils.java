begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|TestFileUtils
block|{
specifier|private
name|TestFileUtils
parameter_list|()
block|{     }
specifier|public
specifier|static
name|String
name|getStringFromFile
parameter_list|(
name|File
name|location
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|InputStream
name|is
init|=
name|Files
operator|.
name|newInputStream
argument_list|(
name|location
operator|.
name|toPath
argument_list|()
argument_list|)
init|)
block|{
return|return
name|getStringFromStream
argument_list|(
name|is
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|String
name|getStringFromStream
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|normalizeCRLF
argument_list|(
name|is
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|String
name|normalizeCRLF
parameter_list|(
name|InputStream
name|instream
parameter_list|)
throws|throws
name|IOException
block|{
name|BufferedReader
name|in
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|instream
argument_list|)
argument_list|)
decl_stmt|;
name|StringBuilder
name|result
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|String
name|line
init|=
name|in
operator|.
name|readLine
argument_list|()
decl_stmt|;
while|while
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|token
range|:
name|line
operator|.
name|split
argument_list|(
literal|"\\s"
argument_list|)
control|)
block|{
name|result
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
operator|.
name|append
argument_list|(
name|token
argument_list|)
expr_stmt|;
block|}
name|line
operator|=
name|in
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
name|String
name|rtn
init|=
name|result
operator|.
name|toString
argument_list|()
decl_stmt|;
name|rtn
operator|=
name|ignoreTokens
argument_list|(
name|rtn
argument_list|,
literal|"<!--"
argument_list|,
literal|"-->"
argument_list|)
expr_stmt|;
name|rtn
operator|=
name|ignoreTokens
argument_list|(
name|rtn
argument_list|,
literal|"/*"
argument_list|,
literal|"*/"
argument_list|)
expr_stmt|;
return|return
name|rtn
return|;
block|}
specifier|private
specifier|static
name|String
name|ignoreTokens
parameter_list|(
specifier|final
name|String
name|contents
parameter_list|,
specifier|final
name|String
name|startToken
parameter_list|,
specifier|final
name|String
name|endToken
parameter_list|)
block|{
name|String
name|rtn
init|=
name|contents
decl_stmt|;
name|int
name|headerIndexStart
init|=
name|rtn
operator|.
name|indexOf
argument_list|(
name|startToken
argument_list|)
decl_stmt|;
name|int
name|headerIndexEnd
init|=
name|rtn
operator|.
name|indexOf
argument_list|(
name|endToken
argument_list|)
decl_stmt|;
if|if
condition|(
name|headerIndexStart
operator|!=
operator|-
literal|1
operator|&&
name|headerIndexEnd
operator|!=
operator|-
literal|1
operator|&&
name|headerIndexStart
operator|<
name|headerIndexEnd
condition|)
block|{
name|rtn
operator|=
name|rtn
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|headerIndexStart
operator|-
literal|1
argument_list|)
operator|+
name|rtn
operator|.
name|substring
argument_list|(
name|headerIndexEnd
operator|+
name|endToken
operator|.
name|length
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|rtn
return|;
block|}
block|}
end_class

end_unit

