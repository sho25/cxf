begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|processors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|processors
operator|.
name|wsdl
operator|.
name|WSDLToIDLAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|WSDLToIDLGenerationTest
extends|extends
name|Assert
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|START_COMMENT
init|=
literal|"/*"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|END_COMMENT
init|=
literal|"*/"
decl_stmt|;
name|WSDLToIDLAction
name|idlgen
decl_stmt|;
name|ByteArrayOutputStream
name|idloutput
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"WSDLTOIDLGeneration"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|idlgen
operator|=
operator|new
name|WSDLToIDLAction
argument_list|()
expr_stmt|;
name|idloutput
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"WSDLTOIDLGeneration"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkIDLStrings
parameter_list|(
name|byte
index|[]
name|orig
parameter_list|,
name|byte
index|[]
name|generated
parameter_list|)
throws|throws
name|Exception
block|{
name|BufferedReader
name|origReader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|orig
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|genReader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|generated
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|sorig
init|=
name|origReader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|String
name|sgen
init|=
name|genReader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|boolean
name|origComment
init|=
literal|false
decl_stmt|;
name|boolean
name|genComment
init|=
literal|false
decl_stmt|;
while|while
condition|(
name|sorig
operator|!=
literal|null
operator|&&
name|sgen
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|sorig
operator|.
name|trim
argument_list|()
operator|.
name|startsWith
argument_list|(
name|START_COMMENT
argument_list|)
condition|)
block|{
name|origComment
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|sgen
operator|.
name|trim
argument_list|()
operator|.
name|startsWith
argument_list|(
name|START_COMMENT
argument_list|)
condition|)
block|{
name|genComment
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|!
name|origComment
operator|)
operator|&&
operator|(
operator|!
name|genComment
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
name|sorig
argument_list|,
name|sgen
argument_list|)
expr_stmt|;
name|sgen
operator|=
name|genReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
name|sorig
operator|=
name|origReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sorig
operator|!=
literal|null
operator|&&
name|sgen
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|sorig
operator|.
name|trim
argument_list|()
operator|.
name|endsWith
argument_list|(
name|END_COMMENT
argument_list|)
condition|)
block|{
name|origComment
operator|=
literal|false
expr_stmt|;
name|sorig
operator|=
name|origReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sgen
operator|.
name|trim
argument_list|()
operator|.
name|endsWith
argument_list|(
name|END_COMMENT
argument_list|)
condition|)
block|{
name|genComment
operator|=
literal|false
expr_stmt|;
name|sgen
operator|=
name|genReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|genComment
condition|)
block|{
name|sgen
operator|=
name|genReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|origComment
condition|)
block|{
name|sorig
operator|=
name|origReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|byte
index|[]
name|inputStreamToBytes
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
literal|1024
argument_list|)
decl_stmt|;
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|len
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|in
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|out
operator|.
name|toByteArray
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOnewayGeneration
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/oneway.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BaseCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"oneway.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_oneway.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStringtypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/stringtypes.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BasePortTypeCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"stringtypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_stringtypes.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"stringtypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntegertypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/integertypes.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BasePortTypeCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"integertypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_integertypes.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"integertypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUniontypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/uniontypes.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"Test.MultiPartCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"uniontypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_uniontypes.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"uniontypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultUniontypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/defaultuniontypes.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"Test.MultiPartCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"defaultuniontypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_defaultuniontypes.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"defaultuniontypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExceptionIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/exceptions.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TestException.ExceptionTestCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"exceptiontypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_exceptions.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"exceptiontypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStructIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/struct.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"StructTestCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"structtypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_struct.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"structtypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSequenceIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/sequencetype.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"IACC.ServerCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"sequencetypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_sequencetype.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"sequencetypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArrayIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/array.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"XCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"arraytypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_array.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"arraytypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnumIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/enum.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BVOIPCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"enumtype.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_enum.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"enumtype.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContentIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/content.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"ContentCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"contenttype.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_content.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"contenttype.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAllTypeIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/alltype.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BaseCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"alltype.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_alltype.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"alltype.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFixedTypeIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/fixed.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"YCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"fixed.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_fixed.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"fixed.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnonFixedTypeIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/anonfixed.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"XCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"anonfixed.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_anonfixed.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"anonfixed.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnyTypeIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/any.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"anyInterfaceCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"any.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_any.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"any.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTypeInheritanceIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/TypeInheritance.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TypeInheritanceInterfaceCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"typeInheritance.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_typeInheritance.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"typeInheritance.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNillableIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/nillable.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"NillableCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"nillable.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_nillable.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"nillable.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTypedefIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/typedef.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"XCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"typedef.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_typedef.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"typedef.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNestedIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/nested.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TypeInheritanceCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"nested.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_nested.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"nested.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNestedDerivedTypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/nested-derivedtypes.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"DerivedTypesCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"nested-derivedtypes.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_nested-derivedtypes.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"nested-derivedtypes.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNestedComplexTypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/nested_complex.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"XCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"nested_complex.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_nested_complex.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"nested_complex.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNestedInterfaceTypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/nested_interfaces.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"C.C1CORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"nested_interfaces.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_nested_interfaces.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"nested_interfaces.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDateTimeTypesIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/datetime.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BaseCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"datetime.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_datetime.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"datetime.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWsaddressingServerIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/wsaddressing_server.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TestServerCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"wsaddress_server.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_wsaddressing_server.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"wsaddressing_server.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWsaddressingAccountIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/wsaddressing_account.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"AccountCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"wsaddress_account.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_wsaddressing_account.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"wsaddressing_account.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWsaddressingBankIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/wsaddressing_bank.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"BankCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"wsaddress_bank.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_wsaddressing_bank.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"wsaddressing_bank.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultipleBindingIdlgen
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/multiplebinding.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"multiplebinding.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setGenerateAllBindings
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_multiplebinding.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
try|try
block|{
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
comment|// The ibm jdk SOMTIMES outputs the idl modules in a different order
comment|// (still valid idl).
name|origstream
operator|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_multiplebinding_ibmjdk.idl"
argument_list|)
expr_stmt|;
name|orig
operator|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
expr_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"multiplebinding.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComplextypeDerivedSimpletype
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/complex_types.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TypeTestCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"complex_types.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_complex_types.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"complex_types.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCorbaExceptionComplexType
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/databaseService.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"DatabaseCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"databaseService.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_databaseService.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"databaseService.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCorbaRecursiveStructs
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|URI
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/recursivestruct.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TestInterfaceCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"recursivestruct.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_recursivestruct.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"recursivestruct.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCoraRecursiveUnion
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|URI
name|fileName
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idlgen/recursiveunion.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
decl_stmt|;
name|idlgen
operator|.
name|setWsdlFile
argument_list|(
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setBindingName
argument_list|(
literal|"TestInterfaceCORBABinding"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setOutputFile
argument_list|(
literal|"recursiveunion.idl"
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|setPrintWriter
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|idloutput
argument_list|)
argument_list|)
expr_stmt|;
name|idlgen
operator|.
name|generateIDL
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InputStream
name|origstream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/idlgen/expected_recursiveunion.idl"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|orig
init|=
name|inputStreamToBytes
argument_list|(
name|origstream
argument_list|)
decl_stmt|;
name|checkIDLStrings
argument_list|(
name|orig
argument_list|,
name|idloutput
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
operator|new
name|File
argument_list|(
literal|"recursiveunion.idl"
argument_list|)
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

