begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLInputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|common
operator|.
name|ToolCorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|common
operator|.
name|ToolTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|utils
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|utils
operator|.
name|WSDLGenerationTester
import|;
end_import

begin_class
specifier|public
class|class
name|IDLToWSDLTest
extends|extends
name|ToolTestBase
block|{
specifier|private
specifier|static
name|StringBuffer
name|usageBuf
decl_stmt|;
specifier|private
specifier|static
name|int
name|noError
decl_stmt|;
specifier|private
specifier|static
name|int
name|error
init|=
operator|-
literal|1
decl_stmt|;
name|ByteArrayOutputStream
name|bout
decl_stmt|;
name|PrintStream
name|newOut
decl_stmt|;
specifier|private
name|File
name|output
decl_stmt|;
specifier|private
name|WSDLGenerationTester
name|wsdlGenTester
decl_stmt|;
specifier|public
name|IDLToWSDLTest
parameter_list|()
block|{
name|wsdlGenTester
operator|=
operator|new
name|WSDLGenerationTester
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
try|try
block|{
name|TestUtils
name|utils
init|=
operator|new
name|TestUtils
argument_list|(
name|IDLToWSDL
operator|.
name|TOOL_NAME
argument_list|,
name|IDLToWSDL
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/toolspecs/idl2wsdl.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|usageBuf
operator|=
operator|new
name|StringBuffer
argument_list|(
name|utils
operator|.
name|getUsage
argument_list|()
argument_list|)
expr_stmt|;
name|bout
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|newOut
operator|=
operator|new
name|PrintStream
argument_list|(
name|bout
argument_list|)
expr_stmt|;
name|System
operator|.
name|setOut
argument_list|(
name|newOut
argument_list|)
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
name|newOut
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// complete
block|}
try|try
block|{
name|output
operator|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"."
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
name|output
operator|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"generated-wsdl"
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|mkDir
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// complete
block|}
block|}
specifier|private
name|void
name|deleteDir
parameter_list|(
name|File
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|removeDir
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
try|try
block|{
name|deleteDir
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|//ignore
block|}
name|output
operator|=
literal|null
expr_stmt|;
block|}
specifier|private
name|int
name|execute
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|IDLToWSDL
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
return|return
name|error
return|;
block|}
return|return
name|noError
return|;
block|}
specifier|private
name|void
name|checkStrings
parameter_list|(
name|byte
name|orig
index|[]
parameter_list|,
name|byte
name|generated
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
name|BufferedReader
name|origReader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|orig
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|genReader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|generated
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|sorig
init|=
name|origReader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|String
name|sgen
init|=
name|genReader
operator|.
name|readLine
argument_list|()
decl_stmt|;
while|while
condition|(
name|sorig
operator|!=
literal|null
operator|&&
name|sgen
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|sorig
operator|.
name|equals
argument_list|(
name|sgen
argument_list|)
condition|)
block|{
comment|//assertEquals(sorig, sgen);
comment|//sorig = origReader.readLine();
name|sgen
operator|=
name|genReader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|sorig
argument_list|,
name|sgen
argument_list|)
expr_stmt|;
name|sorig
operator|=
literal|null
expr_stmt|;
name|sgen
operator|=
literal|null
expr_stmt|;
break|break;
block|}
block|}
name|origReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|genReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testNoArgs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|cmdArgs
init|=
block|{}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|cmdArgs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|error
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|StringBuilder
name|strBuf
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|strBuf
operator|.
name|append
argument_list|(
literal|"Missing argument: idl\n\n"
argument_list|)
expr_stmt|;
name|strBuf
operator|.
name|append
argument_list|(
name|usageBuf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|checkStrings
argument_list|(
name|strBuf
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|,
name|bout
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDetailOutput
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-?"
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bout
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testVersionOutput
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-v"
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bout
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHelpOutput
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bout
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBase64SequenceOctetMappingOption
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestSequenceOctetMappingOption
argument_list|(
name|ToolCorbaConstants
operator|.
name|CFG_SEQUENCE_OCTET_TYPE_BASE64BINARY
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHexBinarySequenceOctetMappingOption
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestSequenceOctetMappingOption
argument_list|(
name|ToolCorbaConstants
operator|.
name|CFG_SEQUENCE_OCTET_TYPE_HEXBINARY
argument_list|)
expr_stmt|;
block|}
comment|// test "-s base64Binary" and "-s hexBinary" options
specifier|public
name|void
name|doTestSequenceOctetMappingOption
parameter_list|(
name|String
name|encoding
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/sequence_octet.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"sequence_octet.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_"
operator|+
name|encoding
operator|+
literal|"_sequence_octet.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-s"
block|,
name|encoding
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doTestGeneratedWsdl
parameter_list|(
name|File
name|expected
parameter_list|,
name|File
name|actual
parameter_list|)
throws|throws
name|FileNotFoundException
throws|,
name|XMLStreamException
throws|,
name|Exception
block|{
comment|//For testing, esp. in AIX, we need to write out both the defn& schema to see if it matches
name|File
name|expectedWsdlFile
init|=
name|wsdlGenTester
operator|.
name|writeDefinition
argument_list|(
name|output
argument_list|,
name|expected
argument_list|)
decl_stmt|;
name|File
name|actualWsdlFile
init|=
name|wsdlGenTester
operator|.
name|writeDefinition
argument_list|(
name|output
argument_list|,
name|actual
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStream
name|actualFileStream
init|=
operator|new
name|FileInputStream
argument_list|(
name|actualWsdlFile
argument_list|)
init|;
name|InputStream
name|expectedFileStream
operator|=
operator|new
name|FileInputStream
argument_list|(
name|expectedWsdlFile
argument_list|)
init|)
block|{
name|XMLInputFactory
name|factory
init|=
name|XMLInputFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|XMLStreamReader
name|actualStream
init|=
name|factory
operator|.
name|createXMLStreamReader
argument_list|(
name|actualFileStream
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|expectedStream
init|=
name|factory
operator|.
name|createXMLStreamReader
argument_list|(
name|expectedFileStream
argument_list|)
decl_stmt|;
name|wsdlGenTester
operator|.
name|compare
argument_list|(
name|expectedStream
argument_list|,
name|actualStream
argument_list|)
expr_stmt|;
block|}
block|}
comment|// test "-x<schema-namespace>"
specifier|public
name|void
name|testSchemaNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/HelloWorld.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"HelloWorld.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_HelloWorld_schema_namespace.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-x"
block|,
literal|"http://cxf.apache.org/foobar/schema"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
comment|// test "-f<corba-address-file>"
specifier|public
name|void
name|testCorbaAddressFile
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/HelloWorld.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"HelloWorld.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_HelloWorld_corba_address_file.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
comment|// create temporary file containing ior
name|File
name|addressFile
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"HelloWorld.idl"
argument_list|)
decl_stmt|;
name|FileWriter
name|addressFileWriter
init|=
operator|new
name|FileWriter
argument_list|(
name|addressFile
argument_list|)
decl_stmt|;
name|addressFileWriter
operator|.
name|write
argument_list|(
literal|"IOR:010000001400000049444c3a48656c6c6f576f726c64493a312e300002"
operator|+
literal|"0000000000000080000000010101001e0000006d766573636f76692e6475"
operator|+
literal|"626c696e2e656d65612e696f6e612e636f6d0022064d0000003a5c6d7665"
operator|+
literal|"73636f76692e6475626c696e2e656d65612e696f6e612e636f6d3a48656c"
operator|+
literal|"6c6f576f726c642f48656c6c6f576f726c643a6d61726b65723a3a49523a"
operator|+
literal|"48656c6c6f576f726c644900000000000000000100000018000000010000"
operator|+
literal|"0001000000000000000800000001000000305f5449"
argument_list|)
expr_stmt|;
name|addressFileWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|addressFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|addressFile
operator|.
name|toString
argument_list|()
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
comment|// test "-t<corba-type-map target-namespace>"
specifier|public
name|void
name|testCorbaTypeMapTargetNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/sequence_octet.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"sequence_octet.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_sequence_octet_corba_typemap_tns.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-t"
block|,
literal|"http://cxf.apache.org/foobar/typemap"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
comment|// test "-b Treat bounded strings as unbounded."
specifier|public
name|void
name|testTreatBoundedStringsAsUnbounded
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/String.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"String.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_String_unbounded.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-b"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
comment|//  test "-b Treat bounded strings as unbounded."
specifier|public
name|void
name|testTreatBoundedAnonStringsAsUnbounded
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/Anonstring.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"Anonstring.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_Anonstring_unbounded.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-b"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testExceptionsWithSchemasInDifferentNS
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/Exception.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"Exception.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_Exception_DiffNS.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-x"
block|,
literal|"http://cxf.apache.org/bindings/corba/idl/Exception/types"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOutputWSDLFileName
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/HelloWorld.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"ArtixHelloWorld.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_HelloWorld.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-ow"
block|,
literal|"ArtixHelloWorld.wsdl"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testMultipleIncludes
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/Parent.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"Parent.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_Parent.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|include0Dir
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|include1Dir
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/subdir1"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|include2Dir
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/subdir2"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-ow"
block|,
literal|"Parent.wsdl"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
literal|"-I"
block|,
name|include0Dir
operator|.
name|toString
argument_list|()
block|,
literal|"-I"
block|,
name|include1Dir
operator|.
name|toString
argument_list|()
block|,
literal|"-I"
block|,
name|include2Dir
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testExternalInterfaceRef
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/ExternalInterfaceRef.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"ExternalInterfaceRef.wsdl"
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_ExternalInterfaceRef.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|include1Dir
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-ow"
block|,
literal|"ExternalInterfaceRef.wsdl"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
literal|"-I"
block|,
name|include1Dir
operator|.
name|toString
argument_list|()
block|,
literal|"-verbose"
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDuplicateTypeGeneration
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/duplicateAttribute.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|expected
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/expected_duplicateAttribute.wsdl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-ow"
block|,
literal|"duplicateAttribute.wsdl"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
literal|"-verbose"
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|int
name|exc
init|=
name|execute
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|File
name|actual
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"duplicateAttribute.wsdl"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IDLToWSDL Failed"
argument_list|,
name|noError
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|doTestGeneratedWsdl
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUndefinedTypeRef
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/ReferUndefinedType.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|include1Dir
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-ow"
block|,
literal|"ExternalInterfaceRef.wsdl"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
literal|"-I"
block|,
name|include1Dir
operator|.
name|toString
argument_list|()
block|,
literal|"-verbose"
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
try|try
block|{
name|IDLToWSDL
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should throw a RuntimeException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"can't resolve type for const myConst"
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testCXF4541
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/missing_struct_member.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-mns[org::bash=http://www.bash.org]"
block|,
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|IDLToWSDL
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|File
name|fs
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"org_bash.xsd"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|getName
argument_list|()
operator|+
literal|" was not created."
argument_list|,
name|fs
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|NodeList
name|l
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getElementsByTagNameNS
argument_list|(
literal|"http://www.w3.org/2001/XMLSchema"
argument_list|,
literal|"element"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|l
operator|.
name|getLength
argument_list|()
condition|;
name|x
operator|++
control|)
block|{
name|Element
name|el
init|=
operator|(
name|Element
operator|)
name|l
operator|.
name|item
argument_list|(
name|x
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"bar"
operator|.
name|equals
argument_list|(
name|el
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
operator|&&
name|el
operator|.
name|getAttribute
argument_list|(
literal|"type"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"string"
argument_list|)
condition|)
block|{
return|return;
block|}
block|}
name|fail
argument_list|(
literal|"Did not find foo element"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCXF3329
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/CXF3329.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|IDLToWSDL
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|File
name|fs
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"CXF3329.wsdl"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|getName
argument_list|()
operator|+
literal|" was not created."
argument_list|,
name|fs
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|s
init|=
name|StaxUtils
operator|.
name|toString
argument_list|(
name|doc
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|s
operator|.
name|contains
argument_list|(
literal|"name=\"myStruct\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCXF5340
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|input
init|=
operator|new
name|File
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/idl/CXF5340.idl"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-o"
block|,
name|output
operator|.
name|toString
argument_list|()
block|,
literal|"-verbose"
block|,
literal|"-qualified"
block|,
name|input
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|IDLToWSDL
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|File
name|fs
init|=
operator|new
name|File
argument_list|(
name|output
argument_list|,
literal|"CXF5340.wsdl"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|getName
argument_list|()
operator|+
literal|" was not created."
argument_list|,
name|fs
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|corbaNs
init|=
literal|"http://cxf.apache.org/bindings/corba"
decl_stmt|;
name|Document
name|doc
init|=
name|StaxUtils
operator|.
name|read
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
comment|// const with value "local"
name|NodeList
name|nl
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getElementsByTagNameNS
argument_list|(
name|corbaNs
argument_list|,
literal|"const"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nl
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|c
init|=
operator|(
name|Element
operator|)
name|nl
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"repro.NOT_CONN_LOCAL"
argument_list|,
name|c
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"local"
argument_list|,
name|c
operator|.
name|getAttribute
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unsigned long case
name|nl
operator|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getElementsByTagNameNS
argument_list|(
name|corbaNs
argument_list|,
literal|"exception"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nl
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|exception
init|=
operator|(
name|Element
operator|)
name|nl
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|nl
operator|=
name|exception
operator|.
name|getElementsByTagNameNS
argument_list|(
name|corbaNs
argument_list|,
literal|"member"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nl
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|number
init|=
operator|(
name|Element
operator|)
name|nl
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ulong"
argument_list|,
name|number
operator|.
name|getAttribute
argument_list|(
literal|"idltype"
argument_list|)
operator|.
name|split
argument_list|(
literal|":"
argument_list|)
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"m_number"
argument_list|,
name|number
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|Element
name|message
init|=
operator|(
name|Element
operator|)
name|nl
operator|.
name|item
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"string"
argument_list|,
name|message
operator|.
name|getAttribute
argument_list|(
literal|"idltype"
argument_list|)
operator|.
name|split
argument_list|(
literal|":"
argument_list|)
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"m_message"
argument_list|,
name|message
operator|.
name|getAttribute
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

