begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|processors
operator|.
name|idl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|BindingOperation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Import
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Port
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Types
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|WSDLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|ExtensionRegistry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|schema
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|extensions
operator|.
name|schema
operator|.
name|SchemaImport
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|factory
operator|.
name|WSDLFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|AddressType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|BindingType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|OperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|TypeMappingType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|WSDLConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|helpers
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsdl
operator|.
name|JAXBExtensionHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaImport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaObjectCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|constants
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|utils
operator|.
name|NamespaceMap
import|;
end_import

begin_class
specifier|public
class|class
name|WSDLSchemaManager
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Definition
argument_list|>
name|defns
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|XmlSchema
argument_list|>
name|schemas
decl_stmt|;
name|Map
argument_list|<
name|File
argument_list|,
name|Definition
argument_list|>
name|importedDefns
decl_stmt|;
name|Map
argument_list|<
name|File
argument_list|,
name|XmlSchema
argument_list|>
name|importedSchemas
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|XmlSchema
argument_list|>
name|defnSchemas
decl_stmt|;
name|boolean
name|ignoreImports
decl_stmt|;
class|class
name|DeferredSchemaAttachment
block|{
name|Definition
name|defn
decl_stmt|;
name|XmlSchema
name|schema
decl_stmt|;
name|boolean
name|isGenerated
decl_stmt|;
block|}
name|List
argument_list|<
name|DeferredSchemaAttachment
argument_list|>
name|deferredAttachments
decl_stmt|;
specifier|public
name|WSDLSchemaManager
parameter_list|()
block|{
name|defns
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Definition
argument_list|>
argument_list|()
expr_stmt|;
name|schemas
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|XmlSchema
argument_list|>
argument_list|()
expr_stmt|;
name|importedDefns
operator|=
operator|new
name|HashMap
argument_list|<
name|File
argument_list|,
name|Definition
argument_list|>
argument_list|()
expr_stmt|;
name|importedSchemas
operator|=
operator|new
name|HashMap
argument_list|<
name|File
argument_list|,
name|XmlSchema
argument_list|>
argument_list|()
expr_stmt|;
name|defnSchemas
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|XmlSchema
argument_list|>
argument_list|()
expr_stmt|;
name|deferredAttachments
operator|=
operator|new
name|ArrayList
argument_list|<
name|DeferredSchemaAttachment
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Definition
name|createWSDLDefinition
parameter_list|(
name|String
name|tns
parameter_list|)
throws|throws
name|WSDLException
throws|,
name|JAXBException
block|{
name|WSDLFactory
name|wsdlFactory
init|=
name|WSDLFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|Definition
name|wsdlDefinition
init|=
name|wsdlFactory
operator|.
name|newDefinition
argument_list|()
decl_stmt|;
name|wsdlDefinition
operator|.
name|setTargetNamespace
argument_list|(
name|tns
argument_list|)
expr_stmt|;
name|wsdlDefinition
operator|.
name|addNamespace
argument_list|(
literal|"wsdl"
argument_list|,
literal|"http://schemas.xmlsoap.org/wsdl/"
argument_list|)
expr_stmt|;
name|wsdlDefinition
operator|.
name|addNamespace
argument_list|(
name|WSDLConstants
operator|.
name|NP_SCHEMA_XSD
argument_list|,
name|WSDLConstants
operator|.
name|NS_SCHEMA_XSD
argument_list|)
expr_stmt|;
name|wsdlDefinition
operator|.
name|addNamespace
argument_list|(
name|WSDLConstants
operator|.
name|SOAP11_PREFIX
argument_list|,
name|WSDLConstants
operator|.
name|NS_SOAP11
argument_list|)
expr_stmt|;
name|wsdlDefinition
operator|.
name|addNamespace
argument_list|(
literal|"tns"
argument_list|,
name|tns
argument_list|)
expr_stmt|;
name|wsdlDefinition
operator|.
name|addNamespace
argument_list|(
name|CorbaConstants
operator|.
name|NP_WSDL_CORBA
argument_list|,
name|CorbaConstants
operator|.
name|NU_WSDL_CORBA
argument_list|)
expr_stmt|;
name|addCorbaExtensions
argument_list|(
name|wsdlDefinition
operator|.
name|getExtensionRegistry
argument_list|()
argument_list|)
expr_stmt|;
name|defns
operator|.
name|put
argument_list|(
name|tns
argument_list|,
name|wsdlDefinition
argument_list|)
expr_stmt|;
return|return
name|wsdlDefinition
return|;
block|}
specifier|public
name|void
name|setIgnoreImports
parameter_list|(
name|boolean
name|flag
parameter_list|)
block|{
name|ignoreImports
operator|=
name|flag
expr_stmt|;
block|}
specifier|public
name|Definition
name|getWSDLDefinition
parameter_list|(
name|String
name|ns
parameter_list|)
block|{
return|return
name|defns
operator|.
name|get
argument_list|(
name|ns
argument_list|)
return|;
block|}
specifier|public
name|XmlSchema
name|getXmlSchema
parameter_list|(
name|String
name|ns
parameter_list|)
block|{
return|return
name|schemas
operator|.
name|get
argument_list|(
name|ns
argument_list|)
return|;
block|}
specifier|public
name|XmlSchema
name|createXmlSchema
parameter_list|(
name|String
name|schemans
parameter_list|,
name|XmlSchemaCollection
name|schemaCol
parameter_list|)
block|{
name|XmlSchema
name|xmlSchema
init|=
operator|new
name|XmlSchema
argument_list|(
name|schemans
argument_list|,
name|schemaCol
argument_list|)
decl_stmt|;
name|schemas
operator|.
name|put
argument_list|(
name|schemans
argument_list|,
name|xmlSchema
argument_list|)
expr_stmt|;
return|return
name|xmlSchema
return|;
block|}
specifier|public
name|XmlSchema
name|createXmlSchemaForDefinition
parameter_list|(
name|Definition
name|defn
parameter_list|,
name|String
name|schemans
parameter_list|,
name|XmlSchemaCollection
name|schemaCol
parameter_list|)
block|{
name|XmlSchema
name|xmlSchema
init|=
name|createXmlSchema
argument_list|(
name|schemans
argument_list|,
name|schemaCol
argument_list|)
decl_stmt|;
name|defnSchemas
operator|.
name|put
argument_list|(
name|schemans
argument_list|,
name|xmlSchema
argument_list|)
expr_stmt|;
return|return
name|xmlSchema
return|;
block|}
specifier|public
name|boolean
name|isXmlSchemaInDefinition
parameter_list|(
name|String
name|schemans
parameter_list|)
block|{
return|return
name|defnSchemas
operator|.
name|containsKey
argument_list|(
name|schemans
argument_list|)
return|;
block|}
specifier|public
name|void
name|addWSDLDefinitionNamespace
parameter_list|(
name|Definition
name|defn
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|ns
parameter_list|)
block|{
if|if
condition|(
operator|!
name|defn
operator|.
name|getNamespaces
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|contains
argument_list|(
name|ns
argument_list|)
condition|)
block|{
name|defn
operator|.
name|addNamespace
argument_list|(
name|prefix
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addWSDLDefinitionImport
parameter_list|(
name|Definition
name|rootDefn
parameter_list|,
name|Definition
name|defn
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|fileName
parameter_list|)
block|{
if|if
condition|(
operator|!
name|fileName
operator|.
name|endsWith
argument_list|(
literal|".wsdl"
argument_list|)
condition|)
block|{
name|fileName
operator|=
name|fileName
operator|+
literal|".wsdl"
expr_stmt|;
block|}
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|addWSDLDefinitionImport
argument_list|(
name|rootDefn
argument_list|,
name|defn
argument_list|,
name|prefix
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addWSDLDefinitionImport
parameter_list|(
name|Definition
name|rootDefn
parameter_list|,
name|Definition
name|defn
parameter_list|,
name|String
name|prefix
parameter_list|,
name|File
name|file
parameter_list|)
block|{
if|if
condition|(
name|rootDefn
operator|.
name|getImports
argument_list|()
operator|.
name|get
argument_list|(
name|defn
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
operator|==
literal|null
operator|&&
operator|!
name|file
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|".wsdl"
argument_list|)
condition|)
block|{
comment|// Only import if not already done to prevent multiple imports of the same file
comment|// in the WSDL.  Also watch out for empty fileNames, which by this point in the
comment|// code would show up as ".wsdl".
name|Import
name|importDefn
init|=
name|rootDefn
operator|.
name|createImport
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ignoreImports
condition|)
block|{
name|importDefn
operator|.
name|setLocationURI
argument_list|(
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|importDefn
operator|.
name|setNamespaceURI
argument_list|(
name|defn
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|rootDefn
operator|.
name|addImport
argument_list|(
name|importDefn
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|rootDefn
operator|.
name|getNamespaces
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|contains
argument_list|(
name|defn
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
condition|)
block|{
name|rootDefn
operator|.
name|addNamespace
argument_list|(
name|prefix
argument_list|,
name|defn
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|importedDefns
operator|.
name|containsKey
argument_list|(
name|file
argument_list|)
condition|)
block|{
name|importedDefns
operator|.
name|put
argument_list|(
name|file
argument_list|,
name|defn
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addXmlSchemaImport
parameter_list|(
name|XmlSchema
name|rootSchema
parameter_list|,
name|XmlSchema
name|schema
parameter_list|,
name|String
name|fileName
parameter_list|)
block|{
comment|// We need the file name whether already included or not.
if|if
condition|(
operator|!
name|fileName
operator|.
name|endsWith
argument_list|(
literal|".xsd"
argument_list|)
condition|)
block|{
name|fileName
operator|=
name|fileName
operator|+
literal|".xsd"
expr_stmt|;
block|}
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|addXmlSchemaImport
argument_list|(
name|rootSchema
argument_list|,
name|schema
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addXmlSchemaImport
parameter_list|(
name|XmlSchema
name|rootSchema
parameter_list|,
name|XmlSchema
name|schema
parameter_list|,
name|File
name|file
parameter_list|)
block|{
comment|// Make sure we haven't already imported the schema.
name|String
name|importNamespace
init|=
name|schema
operator|.
name|getTargetNamespace
argument_list|()
decl_stmt|;
name|boolean
name|included
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|rootSchema
operator|.
name|getIncludes
argument_list|()
operator|.
name|getIterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Object
name|o
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|XmlSchemaImport
condition|)
block|{
name|XmlSchemaImport
name|imp
init|=
operator|(
name|XmlSchemaImport
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|imp
operator|.
name|getNamespace
argument_list|()
operator|.
name|equals
argument_list|(
name|importNamespace
argument_list|)
condition|)
block|{
name|included
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|included
condition|)
block|{
name|XmlSchemaImport
name|importSchema
init|=
operator|new
name|XmlSchemaImport
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ignoreImports
condition|)
block|{
name|importSchema
operator|.
name|setSchemaLocation
argument_list|(
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|importSchema
operator|.
name|setNamespace
argument_list|(
name|schema
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|rootSchema
operator|.
name|getItems
argument_list|()
operator|.
name|add
argument_list|(
name|importSchema
argument_list|)
expr_stmt|;
name|rootSchema
operator|.
name|getIncludes
argument_list|()
operator|.
name|add
argument_list|(
name|importSchema
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|importedSchemas
operator|.
name|containsKey
argument_list|(
name|file
argument_list|)
condition|)
block|{
name|importedSchemas
operator|.
name|put
argument_list|(
name|file
argument_list|,
name|schema
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addWSDLSchemaImport
parameter_list|(
name|Definition
name|def
parameter_list|,
name|String
name|tns
parameter_list|,
name|String
name|schemaFileName
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|schemaFileName
operator|.
name|endsWith
argument_list|(
literal|".xsd"
argument_list|)
condition|)
block|{
name|schemaFileName
operator|=
name|schemaFileName
operator|+
literal|".xsd"
expr_stmt|;
block|}
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|schemaFileName
argument_list|)
decl_stmt|;
name|addWSDLSchemaImport
argument_list|(
name|def
argument_list|,
name|tns
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addWSDLSchemaImport
parameter_list|(
name|Definition
name|def
parameter_list|,
name|String
name|tns
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
comment|//REVISIT, check if the wsdl schema already exists.
name|Types
name|types
init|=
name|def
operator|.
name|getTypes
argument_list|()
decl_stmt|;
if|if
condition|(
name|types
operator|==
literal|null
condition|)
block|{
name|types
operator|=
name|def
operator|.
name|createTypes
argument_list|()
expr_stmt|;
name|def
operator|.
name|setTypes
argument_list|(
name|types
argument_list|)
expr_stmt|;
block|}
name|Schema
name|wsdlSchema
init|=
operator|(
name|Schema
operator|)
name|def
operator|.
name|getExtensionRegistry
argument_list|()
operator|.
name|createExtension
argument_list|(
name|Types
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|Constants
operator|.
name|URI_2001_SCHEMA_XSD
argument_list|,
literal|"schema"
argument_list|)
argument_list|)
decl_stmt|;
name|addWSDLSchemaImport
argument_list|(
name|wsdlSchema
argument_list|,
name|tns
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|types
operator|.
name|addExtensibilityElement
argument_list|(
name|wsdlSchema
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addWSDLSchemaImport
parameter_list|(
name|Schema
name|wsdlSchema
parameter_list|,
name|String
name|tns
parameter_list|,
name|File
name|file
parameter_list|)
block|{
if|if
condition|(
operator|!
name|wsdlSchema
operator|.
name|getImports
argument_list|()
operator|.
name|containsKey
argument_list|(
name|tns
argument_list|)
condition|)
block|{
name|SchemaImport
name|schemaimport
init|=
name|wsdlSchema
operator|.
name|createImport
argument_list|()
decl_stmt|;
name|schemaimport
operator|.
name|setNamespaceURI
argument_list|(
name|tns
argument_list|)
expr_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
operator|&&
operator|!
name|ignoreImports
condition|)
block|{
name|schemaimport
operator|.
name|setSchemaLocationURI
argument_list|(
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|wsdlSchema
operator|.
name|addImport
argument_list|(
name|schemaimport
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|addCorbaExtensions
parameter_list|(
name|ExtensionRegistry
name|extReg
parameter_list|)
throws|throws
name|JAXBException
block|{
try|try
block|{
name|JAXBExtensionHelper
operator|.
name|addExtensions
argument_list|(
name|extReg
argument_list|,
name|Binding
operator|.
name|class
argument_list|,
name|BindingType
operator|.
name|class
argument_list|)
expr_stmt|;
name|JAXBExtensionHelper
operator|.
name|addExtensions
argument_list|(
name|extReg
argument_list|,
name|BindingOperation
operator|.
name|class
argument_list|,
name|OperationType
operator|.
name|class
argument_list|)
expr_stmt|;
name|JAXBExtensionHelper
operator|.
name|addExtensions
argument_list|(
name|extReg
argument_list|,
name|Definition
operator|.
name|class
argument_list|,
name|TypeMappingType
operator|.
name|class
argument_list|)
expr_stmt|;
name|JAXBExtensionHelper
operator|.
name|addExtensions
argument_list|(
name|extReg
argument_list|,
name|Port
operator|.
name|class
argument_list|,
name|AddressType
operator|.
name|class
argument_list|)
expr_stmt|;
name|extReg
operator|.
name|mapExtensionTypes
argument_list|(
name|Binding
operator|.
name|class
argument_list|,
name|CorbaConstants
operator|.
name|NE_CORBA_BINDING
argument_list|,
name|BindingType
operator|.
name|class
argument_list|)
expr_stmt|;
name|extReg
operator|.
name|mapExtensionTypes
argument_list|(
name|BindingOperation
operator|.
name|class
argument_list|,
name|CorbaConstants
operator|.
name|NE_CORBA_OPERATION
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|OperationType
operator|.
name|class
argument_list|)
expr_stmt|;
name|extReg
operator|.
name|mapExtensionTypes
argument_list|(
name|Definition
operator|.
name|class
argument_list|,
name|CorbaConstants
operator|.
name|NE_CORBA_TYPEMAPPING
argument_list|,
name|TypeMappingType
operator|.
name|class
argument_list|)
expr_stmt|;
name|extReg
operator|.
name|mapExtensionTypes
argument_list|(
name|Port
operator|.
name|class
argument_list|,
name|CorbaConstants
operator|.
name|NE_CORBA_ADDRESS
argument_list|,
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|AddressType
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|JAXBException
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|deferAttachSchemaToWSDL
parameter_list|(
name|Definition
name|definition
parameter_list|,
name|XmlSchema
name|schema
parameter_list|,
name|boolean
name|isSchemaGenerated
parameter_list|)
throws|throws
name|Exception
block|{
name|DeferredSchemaAttachment
name|attachment
init|=
operator|new
name|DeferredSchemaAttachment
argument_list|()
decl_stmt|;
name|attachment
operator|.
name|defn
operator|=
name|definition
expr_stmt|;
name|attachment
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
name|attachment
operator|.
name|isGenerated
operator|=
name|isSchemaGenerated
expr_stmt|;
name|deferredAttachments
operator|.
name|add
argument_list|(
name|attachment
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|attachDeferredSchemasToWSDL
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|Iterator
argument_list|<
name|DeferredSchemaAttachment
argument_list|>
name|iter
init|=
name|deferredAttachments
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|DeferredSchemaAttachment
name|attachment
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|attachSchemaToWSDL
argument_list|(
name|attachment
operator|.
name|defn
argument_list|,
name|attachment
operator|.
name|schema
argument_list|,
name|attachment
operator|.
name|isGenerated
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|attachSchemaToWSDL
parameter_list|(
name|Definition
name|definition
parameter_list|,
name|XmlSchema
name|schema
parameter_list|,
name|boolean
name|isSchemaGenerated
parameter_list|)
throws|throws
name|Exception
block|{
name|Types
name|types
init|=
name|definition
operator|.
name|getTypes
argument_list|()
decl_stmt|;
if|if
condition|(
name|types
operator|==
literal|null
condition|)
block|{
name|types
operator|=
name|definition
operator|.
name|createTypes
argument_list|()
expr_stmt|;
name|definition
operator|.
name|setTypes
argument_list|(
name|types
argument_list|)
expr_stmt|;
block|}
name|Schema
name|wsdlSchema
init|=
operator|(
name|Schema
operator|)
name|definition
operator|.
name|getExtensionRegistry
argument_list|()
operator|.
name|createExtension
argument_list|(
name|Types
operator|.
name|class
argument_list|,
operator|new
name|QName
argument_list|(
name|Constants
operator|.
name|URI_2001_SCHEMA_XSD
argument_list|,
literal|"schema"
argument_list|)
argument_list|)
decl_stmt|;
comment|// See if a NamespaceMap has already been added to the schema (this can be the case with object
comment|// references.  If so, simply add the XSD URI to the map.  Otherwise, create a new one.
name|NamespaceMap
name|nsMap
init|=
literal|null
decl_stmt|;
try|try
block|{
name|nsMap
operator|=
operator|(
name|NamespaceMap
operator|)
name|schema
operator|.
name|getNamespaceContext
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassCastException
name|ex
parameter_list|)
block|{
comment|// Consume.  This will mean that the context has not been set.
block|}
if|if
condition|(
name|nsMap
operator|==
literal|null
condition|)
block|{
name|nsMap
operator|=
operator|new
name|NamespaceMap
argument_list|()
expr_stmt|;
name|nsMap
operator|.
name|add
argument_list|(
literal|"xs"
argument_list|,
name|Constants
operator|.
name|URI_2001_SCHEMA_XSD
argument_list|)
expr_stmt|;
name|schema
operator|.
name|setNamespaceContext
argument_list|(
name|nsMap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|nsMap
operator|.
name|add
argument_list|(
literal|"xs"
argument_list|,
name|Constants
operator|.
name|URI_2001_SCHEMA_XSD
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isSchemaGenerated
condition|)
block|{
name|nsMap
operator|.
name|add
argument_list|(
literal|"tns"
argument_list|,
name|schema
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
name|el
init|=
name|schema
operator|.
name|getAllSchemas
argument_list|()
index|[
literal|0
index|]
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|wsdlSchema
operator|.
name|setElement
argument_list|(
name|el
argument_list|)
expr_stmt|;
name|XmlSchemaObjectCollection
name|imports
init|=
name|schema
operator|.
name|getIncludes
argument_list|()
decl_stmt|;
for|for
control|(
name|java
operator|.
name|util
operator|.
name|Iterator
argument_list|<
name|XmlSchemaObject
argument_list|>
name|it
init|=
name|CastUtils
operator|.
name|cast
argument_list|(
name|imports
operator|.
name|getIterator
argument_list|()
argument_list|)
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|XmlSchemaImport
name|xmlSchemaImport
init|=
operator|(
name|XmlSchemaImport
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|SchemaImport
name|schemaimport
init|=
name|wsdlSchema
operator|.
name|createImport
argument_list|()
decl_stmt|;
name|schemaimport
operator|.
name|setNamespaceURI
argument_list|(
name|xmlSchemaImport
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|xmlSchemaImport
operator|.
name|getSchemaLocation
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|ignoreImports
condition|)
block|{
name|schemaimport
operator|.
name|setSchemaLocationURI
argument_list|(
name|xmlSchemaImport
operator|.
name|getSchemaLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|wsdlSchema
operator|.
name|addImport
argument_list|(
name|schemaimport
argument_list|)
expr_stmt|;
block|}
name|types
operator|.
name|addExtensibilityElement
argument_list|(
name|wsdlSchema
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TypeMappingType
name|createCorbaTypeMap
parameter_list|(
name|Definition
name|definition
parameter_list|,
name|String
name|corbatypemaptns
parameter_list|)
throws|throws
name|WSDLException
block|{
name|TypeMappingType
name|typeMap
init|=
operator|(
name|TypeMappingType
operator|)
name|definition
operator|.
name|getExtensionRegistry
argument_list|()
operator|.
name|createExtension
argument_list|(
name|Definition
operator|.
name|class
argument_list|,
name|CorbaConstants
operator|.
name|NE_CORBA_TYPEMAPPING
argument_list|)
decl_stmt|;
if|if
condition|(
name|corbatypemaptns
operator|==
literal|null
condition|)
block|{
name|typeMap
operator|.
name|setTargetNamespace
argument_list|(
name|definition
operator|.
name|getTargetNamespace
argument_list|()
operator|+
literal|"/"
operator|+
name|CorbaConstants
operator|.
name|NS_CORBA_TYPEMAP
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|typeMap
operator|.
name|setTargetNamespace
argument_list|(
name|corbatypemaptns
argument_list|)
expr_stmt|;
block|}
name|definition
operator|.
name|addExtensibilityElement
argument_list|(
name|typeMap
argument_list|)
expr_stmt|;
return|return
name|typeMap
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Definition
argument_list|>
name|getWSDLDefinitions
parameter_list|()
block|{
return|return
name|defns
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|XmlSchema
argument_list|>
name|getXmlSchemas
parameter_list|()
block|{
return|return
name|schemas
return|;
block|}
specifier|public
name|Map
argument_list|<
name|File
argument_list|,
name|Definition
argument_list|>
name|getImportedWSDLDefinitions
parameter_list|()
block|{
return|return
name|importedDefns
return|;
block|}
specifier|public
name|Map
argument_list|<
name|File
argument_list|,
name|XmlSchema
argument_list|>
name|getImportedXmlSchemas
parameter_list|()
block|{
return|return
name|importedSchemas
return|;
block|}
specifier|public
name|File
name|getImportedWSDLDefinitionFile
parameter_list|(
name|String
name|ns
parameter_list|)
block|{
for|for
control|(
name|Iterator
argument_list|<
name|File
argument_list|>
name|it
init|=
name|importedDefns
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|File
name|file
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|Definition
name|defn
init|=
name|importedDefns
operator|.
name|get
argument_list|(
name|file
argument_list|)
decl_stmt|;
if|if
condition|(
name|defn
operator|.
name|getTargetNamespace
argument_list|()
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
return|return
name|file
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|File
name|getImportedXmlSchemaFile
parameter_list|(
name|String
name|ns
parameter_list|)
block|{
for|for
control|(
name|Iterator
argument_list|<
name|File
argument_list|>
name|it
init|=
name|importedSchemas
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|File
name|file
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|XmlSchema
name|schema
init|=
name|importedSchemas
operator|.
name|get
argument_list|(
name|file
argument_list|)
decl_stmt|;
if|if
condition|(
name|schema
operator|.
name|getTargetNamespace
argument_list|()
operator|.
name|equals
argument_list|(
name|ns
argument_list|)
condition|)
block|{
return|return
name|file
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

