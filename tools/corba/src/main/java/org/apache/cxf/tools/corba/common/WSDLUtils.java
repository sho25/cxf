begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|WSDLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|wsdl
operator|.
name|xml
operator|.
name|WSDLWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|xmlschema
operator|.
name|SchemaCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|util
operator|.
name|FileWriterUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaExternal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|XmlSchemaForm
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|WSDLUtils
block|{
specifier|private
name|WSDLUtils
parameter_list|()
block|{
comment|//complete
block|}
specifier|public
specifier|static
name|boolean
name|isElementFormQualified
parameter_list|(
name|SchemaCollection
name|schemas
parameter_list|,
name|QName
name|type
parameter_list|)
block|{
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
name|XmlSchema
name|sch
init|=
name|schemas
operator|.
name|getSchemaByTargetNamespace
argument_list|(
name|type
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|sch
operator|!=
literal|null
condition|)
block|{
return|return
name|sch
operator|.
name|getElementFormDefault
argument_list|()
operator|==
name|XmlSchemaForm
operator|.
name|QUALIFIED
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isElementFormQualified
parameter_list|(
name|XmlSchema
name|schema
parameter_list|,
name|QName
name|type
parameter_list|)
block|{
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
name|String
name|uri
init|=
name|type
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
name|schema
operator|.
name|getTargetNamespace
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|schema
operator|.
name|getElementFormDefault
argument_list|()
operator|==
name|XmlSchemaForm
operator|.
name|QUALIFIED
return|;
block|}
for|for
control|(
name|XmlSchemaExternal
name|extSchema
range|:
name|schema
operator|.
name|getExternals
argument_list|()
control|)
block|{
return|return
name|isElementFormQualified
argument_list|(
name|extSchema
operator|.
name|getSchema
argument_list|()
argument_list|,
name|type
argument_list|)
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
name|void
name|writeWSDL
parameter_list|(
name|Definition
name|def
parameter_list|,
name|String
name|outputdir
parameter_list|,
name|String
name|wsdlOutput
parameter_list|)
throws|throws
name|WSDLException
throws|,
name|IOException
block|{
name|FileWriterUtil
name|fw
init|=
operator|new
name|FileWriterUtil
argument_list|(
name|outputdir
argument_list|)
decl_stmt|;
name|Writer
name|outputWriter
init|=
name|fw
operator|.
name|getWriter
argument_list|(
literal|""
argument_list|,
name|wsdlOutput
argument_list|)
decl_stmt|;
name|writeWSDL
argument_list|(
name|def
argument_list|,
name|outputWriter
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeWSDL
parameter_list|(
name|Definition
name|def
parameter_list|,
name|Writer
name|outputWriter
parameter_list|)
throws|throws
name|WSDLException
throws|,
name|IOException
block|{
name|WSDLCorbaFactory
name|wsdlfactory
init|=
name|WSDLCorbaFactory
operator|.
name|newInstance
argument_list|(
literal|"org.apache.cxf.tools.corba.common.WSDLCorbaFactoryImpl"
argument_list|)
decl_stmt|;
name|WSDLWriter
name|writer
init|=
name|wsdlfactory
operator|.
name|newWSDLWriter
argument_list|()
decl_stmt|;
name|writer
operator|.
name|writeWSDL
argument_list|(
name|def
argument_list|,
name|outputWriter
argument_list|)
expr_stmt|;
name|outputWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|outputWriter
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeSchema
parameter_list|(
name|Definition
name|def
parameter_list|,
name|Writer
name|outputWriter
parameter_list|)
throws|throws
name|WSDLException
throws|,
name|IOException
block|{
name|SchemaFactory
name|sfactory
init|=
name|SchemaFactory
operator|.
name|newInstance
argument_list|(
literal|"org.apache.cxf.tools.corba.common.SchemaFactoryImpl"
argument_list|)
decl_stmt|;
name|WSDLWriter
name|swriter
init|=
name|sfactory
operator|.
name|newWSDLWriter
argument_list|()
decl_stmt|;
name|swriter
operator|.
name|writeWSDL
argument_list|(
name|def
argument_list|,
name|outputWriter
argument_list|)
expr_stmt|;
name|outputWriter
operator|.
name|flush
argument_list|()
expr_stmt|;
name|outputWriter
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

