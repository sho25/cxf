begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|corba
operator|.
name|wsdl
operator|.
name|CorbaConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ws
operator|.
name|commons
operator|.
name|schema
operator|.
name|constants
operator|.
name|Constants
import|;
end_import

begin_class
specifier|public
class|class
name|XmlSchemaPrimitiveMap
block|{
specifier|private
name|Map
argument_list|<
name|QName
argument_list|,
name|QName
argument_list|>
name|xmlSchemaPrimitiveMap
decl_stmt|;
specifier|public
name|XmlSchemaPrimitiveMap
parameter_list|()
block|{
name|xmlSchemaPrimitiveMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|initializeMap
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initializeMap
parameter_list|()
block|{
comment|//<base_type_spec>
comment|//<floating_pt_type> - OMG Syntax and semantics - CORBA v3.0
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_FLOAT
argument_list|,
name|Constants
operator|.
name|XSD_FLOAT
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_DOUBLE
argument_list|,
name|Constants
operator|.
name|XSD_DOUBLE
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_LONGDOUBLE
argument_list|,
name|Constants
operator|.
name|XSD_DOUBLE
argument_list|)
expr_stmt|;
comment|//<integer_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_SHORT
argument_list|,
name|Constants
operator|.
name|XSD_SHORT
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_LONG
argument_list|,
name|Constants
operator|.
name|XSD_INT
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_LONGLONG
argument_list|,
name|Constants
operator|.
name|XSD_LONG
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_USHORT
argument_list|,
name|Constants
operator|.
name|XSD_UNSIGNEDSHORT
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_ULONG
argument_list|,
name|Constants
operator|.
name|XSD_UNSIGNEDINT
argument_list|)
expr_stmt|;
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_ULONGLONG
argument_list|,
name|Constants
operator|.
name|XSD_UNSIGNEDLONG
argument_list|)
expr_stmt|;
comment|//<char_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_CHAR
argument_list|,
name|Constants
operator|.
name|XSD_BYTE
argument_list|)
expr_stmt|;
comment|//<wide_char_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_WCHAR
argument_list|,
name|Constants
operator|.
name|XSD_STRING
argument_list|)
expr_stmt|;
comment|//<boolean_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_BOOLEAN
argument_list|,
name|Constants
operator|.
name|XSD_BOOLEAN
argument_list|)
expr_stmt|;
comment|//<octet_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_OCTET
argument_list|,
name|Constants
operator|.
name|XSD_UNSIGNEDBYTE
argument_list|)
expr_stmt|;
comment|//<any_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_ANY
argument_list|,
name|Constants
operator|.
name|XSD_ANYTYPE
argument_list|)
expr_stmt|;
comment|//<object_type>
comment|//<value_base_type>
comment|//<template_type_spec>
comment|//<string_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_STRING
argument_list|,
name|Constants
operator|.
name|XSD_STRING
argument_list|)
expr_stmt|;
comment|//<wide_string_type>
name|xmlSchemaPrimitiveMap
operator|.
name|put
argument_list|(
name|CorbaConstants
operator|.
name|NT_CORBA_WSTRING
argument_list|,
name|Constants
operator|.
name|XSD_STRING
argument_list|)
expr_stmt|;
block|}
specifier|public
name|QName
name|get
parameter_list|(
name|QName
name|key
parameter_list|)
block|{
return|return
name|xmlSchemaPrimitiveMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
block|}
end_class

end_unit

