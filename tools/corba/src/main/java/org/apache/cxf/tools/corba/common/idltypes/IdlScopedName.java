begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|common
operator|.
name|idltypes
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|tools
operator|.
name|corba
operator|.
name|common
operator|.
name|ToolCorbaConstants
import|;
end_import

begin_class
specifier|public
class|class
name|IdlScopedName
block|{
specifier|private
name|String
name|fullName
decl_stmt|;
specifier|private
name|String
name|localName
decl_stmt|;
specifier|private
name|String
name|parentNames
index|[]
decl_stmt|;
name|IdlScopedName
parameter_list|(
name|IdlScopeBase
name|parent
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|parent
operator|!=
literal|null
condition|)
block|{
name|fullName
operator|=
name|parent
operator|.
name|fullName
argument_list|()
operator|+
name|ToolCorbaConstants
operator|.
name|MODULE_SEPARATOR
operator|+
name|name
expr_stmt|;
name|parentNames
operator|=
name|parent
operator|.
name|name
argument_list|()
operator|.
name|parentNames
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fullName
operator|=
operator|new
name|String
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|parentNames
operator|=
literal|null
expr_stmt|;
block|}
name|localName
operator|=
operator|new
name|String
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|String
name|localName
parameter_list|()
block|{
return|return
name|this
operator|.
name|localName
return|;
block|}
name|String
name|fullName
parameter_list|()
block|{
return|return
name|this
operator|.
name|fullName
return|;
block|}
name|String
name|fullName
parameter_list|(
name|IdlScopedName
name|relativeTo
parameter_list|)
block|{
if|if
condition|(
name|relativeTo
operator|==
literal|null
condition|)
block|{
return|return
name|fullName
argument_list|()
return|;
block|}
name|StringBuilder
name|nm
init|=
operator|new
name|StringBuilder
argument_list|(
name|fullName
argument_list|)
decl_stmt|;
name|String
name|rel
init|=
name|relativeTo
operator|.
name|fullName
argument_list|()
operator|+
name|ToolCorbaConstants
operator|.
name|MODULE_SEPARATOR
decl_stmt|;
if|if
condition|(
name|fullName
operator|.
name|indexOf
argument_list|(
name|rel
argument_list|)
operator|==
literal|0
condition|)
block|{
name|nm
operator|.
name|delete
argument_list|(
literal|0
argument_list|,
name|rel
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|nm
operator|.
name|toString
argument_list|()
return|;
block|}
name|String
index|[]
name|parentNames
parameter_list|()
block|{
return|return
name|this
operator|.
name|parentNames
return|;
block|}
block|}
end_class

end_unit

