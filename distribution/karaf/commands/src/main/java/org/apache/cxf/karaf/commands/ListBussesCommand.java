begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|karaf
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|CXFBusImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|OsgiCommandSupport
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"cxf"
argument_list|,
name|name
operator|=
literal|"list-busses"
argument_list|,
name|description
operator|=
literal|"Lists all CXF Busses."
argument_list|)
specifier|public
class|class
name|ListBussesCommand
extends|extends
name|OsgiCommandSupport
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|HEADER_FORMAT
init|=
literal|"%-40s %-20s"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|OUTPUT_FORMAT
init|=
literal|"[%-38s] [%-18s]"
decl_stmt|;
specifier|private
name|CXFController
name|cxfController
decl_stmt|;
specifier|public
name|void
name|setController
parameter_list|(
name|CXFController
name|controller
parameter_list|)
block|{
name|this
operator|.
name|cxfController
operator|=
name|controller
expr_stmt|;
block|}
specifier|protected
name|Object
name|doExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Bus
argument_list|>
name|busses
init|=
name|cxfController
operator|.
name|getBusses
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|HEADER_FORMAT
argument_list|,
literal|"Name"
argument_list|,
literal|"State"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Bus
name|bus
range|:
name|busses
control|)
block|{
name|String
name|state
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|bus
operator|instanceof
name|CXFBusImpl
condition|)
block|{
name|state
operator|=
operator|(
operator|(
name|CXFBusImpl
operator|)
name|bus
operator|)
operator|.
name|getState
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|OUTPUT_FORMAT
argument_list|,
name|bus
operator|.
name|getId
argument_list|()
argument_list|,
name|state
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

