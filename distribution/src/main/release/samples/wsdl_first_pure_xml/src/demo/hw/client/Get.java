begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|hw
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Get
block|{
specifier|private
name|Get
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Sent HTTP GET request to invoke sayHi
name|String
name|target
init|=
literal|"http://localhost:9000/XMLService/XMLPort/sayHi"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|target
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|httpConnection
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|httpConnection
operator|.
name|connect
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Invoking server through HTTP GET to invoke sayHi"
argument_list|)
expr_stmt|;
name|InputStream
name|in
init|=
name|httpConnection
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|StreamSource
name|source
init|=
operator|new
name|StreamSource
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|printSource
argument_list|(
name|source
argument_list|)
expr_stmt|;
comment|// Sent HTTP GET request to invoke greetMe FAULT
name|target
operator|=
literal|"http://localhost:9000/XMLService/XMLPort/greetMe/me/CXF"
expr_stmt|;
name|url
operator|=
operator|new
name|URL
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|httpConnection
operator|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|httpConnection
operator|.
name|connect
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Invoking server through HTTP GET to invoke greetMe"
argument_list|)
expr_stmt|;
try|try
block|{
name|in
operator|=
name|httpConnection
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|source
operator|=
operator|new
name|StreamSource
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|printSource
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"GreetMe Fault: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|InputStream
name|err
init|=
name|httpConnection
operator|.
name|getErrorStream
argument_list|()
decl_stmt|;
name|source
operator|=
operator|new
name|StreamSource
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|printSource
argument_list|(
name|source
argument_list|)
expr_stmt|;
comment|// Sent HTTP GET request to invoke greetMe
name|target
operator|=
literal|"http://localhost:9000/XMLService/XMLPort/greetMe/requestType/CXF"
expr_stmt|;
name|url
operator|=
operator|new
name|URL
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|httpConnection
operator|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|httpConnection
operator|.
name|connect
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Invoking server through HTTP GET to invoke greetMe"
argument_list|)
expr_stmt|;
name|in
operator|=
name|httpConnection
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|source
operator|=
operator|new
name|StreamSource
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|printSource
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|printSource
parameter_list|(
name|Source
name|source
parameter_list|)
block|{
try|try
block|{
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|StreamResult
name|sr
init|=
operator|new
name|StreamResult
argument_list|(
name|bos
argument_list|)
decl_stmt|;
name|Transformer
name|trans
init|=
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
name|Properties
name|oprops
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|oprops
operator|.
name|put
argument_list|(
name|OutputKeys
operator|.
name|OMIT_XML_DECLARATION
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|trans
operator|.
name|setOutputProperties
argument_list|(
name|oprops
argument_list|)
expr_stmt|;
name|trans
operator|.
name|transform
argument_list|(
name|source
argument_list|,
name|sr
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"**** Response ******"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bos
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

