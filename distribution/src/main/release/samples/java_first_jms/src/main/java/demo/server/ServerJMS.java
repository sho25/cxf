begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsServerFactoryBean
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|service
operator|.
name|HelloWorld
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|service
operator|.
name|impl
operator|.
name|HelloWorldImpl
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ServerJMS
block|{
specifier|private
name|ServerJMS
parameter_list|()
block|{
comment|//
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
name|boolean
name|amqBroker
init|=
name|args
operator|.
name|length
operator|>
literal|0
operator|&&
literal|"-activemqbroker"
operator|.
name|equals
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|amqBroker
condition|)
block|{
comment|/*              * The following make it easier to run this against something other than ActiveMQ. You will have              * to get a JMS broker onto the right port of localhost.              */
name|Class
argument_list|<
name|?
argument_list|>
name|brokerClass
init|=
name|ServerJMS
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|loadClass
argument_list|(
literal|"org.apache.activemq.broker.BrokerService"
argument_list|)
decl_stmt|;
if|if
condition|(
name|brokerClass
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ActiveMQ is not in the classpath, cannot launch broker."
argument_list|)
expr_stmt|;
return|return;
block|}
name|Object
name|broker
init|=
name|brokerClass
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|Method
name|addConnectorMethod
init|=
name|brokerClass
operator|.
name|getMethod
argument_list|(
literal|"addConnector"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|addConnectorMethod
operator|.
name|invoke
argument_list|(
name|broker
argument_list|,
literal|"tcp://localhost:61616"
argument_list|)
expr_stmt|;
name|Method
name|startMethod
init|=
name|brokerClass
operator|.
name|getMethod
argument_list|(
literal|"start"
argument_list|)
decl_stmt|;
name|startMethod
operator|.
name|invoke
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
name|Object
name|implementor
init|=
operator|new
name|HelloWorldImpl
argument_list|()
decl_stmt|;
name|JaxWsServerFactoryBean
name|svrFactory
init|=
operator|new
name|JaxWsServerFactoryBean
argument_list|()
decl_stmt|;
name|svrFactory
operator|.
name|setServiceClass
argument_list|(
name|HelloWorld
operator|.
name|class
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|setAddress
argument_list|(
literal|"jms://"
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|setServiceBean
argument_list|(
name|implementor
argument_list|)
expr_stmt|;
name|svrFactory
operator|.
name|create
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Server ready... Press any key to exit"
argument_list|)
expr_stmt|;
name|System
operator|.
name|in
operator|.
name|read
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Server exiting"
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

