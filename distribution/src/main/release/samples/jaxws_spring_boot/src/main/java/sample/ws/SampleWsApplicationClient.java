begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|sample
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Dispatch
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
operator|.
name|Mode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|staxutils
operator|.
name|StaxUtils
import|;
end_import

begin_comment
comment|//CHECKSTYLE:OFF
end_comment

begin_class
specifier|public
class|class
name|SampleWsApplicationClient
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|address
init|=
literal|"http://localhost:8080/Service/Hello"
decl_stmt|;
name|String
name|request
init|=
literal|"<q0:sayHello xmlns:q0=\"http://service.ws.sample/\"><myname>Elan</myname></q0:sayHello>"
decl_stmt|;
name|StreamSource
name|source
init|=
operator|new
name|StreamSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|request
argument_list|)
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
operator|new
name|URL
argument_list|(
name|address
operator|+
literal|"?wsdl"
argument_list|)
argument_list|,
operator|new
name|QName
argument_list|(
literal|"http://service.ws.sample/"
argument_list|,
literal|"HelloService"
argument_list|)
argument_list|)
decl_stmt|;
name|Dispatch
argument_list|<
name|Source
argument_list|>
name|disp
init|=
name|service
operator|.
name|createDispatch
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://service.ws.sample/"
argument_list|,
literal|"HelloPort"
argument_list|)
argument_list|,
name|Source
operator|.
name|class
argument_list|,
name|Mode
operator|.
name|PAYLOAD
argument_list|)
decl_stmt|;
name|Source
name|result
init|=
name|disp
operator|.
name|invoke
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|String
name|resultAsString
init|=
name|StaxUtils
operator|.
name|toString
argument_list|(
name|result
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|resultAsString
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|//CHECKSTYLE:ON
end_comment

end_unit

