begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|cxf
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|cxf
operator|.
name|common
operator|.
name|Bank
import|;
end_import

begin_class
annotation|@
name|javax
operator|.
name|jws
operator|.
name|WebService
argument_list|(
name|portName
operator|=
literal|"BankCORBAPort"
argument_list|,
name|serviceName
operator|=
literal|"BankCORBAService"
argument_list|,
name|targetNamespace
operator|=
literal|"http://cxf.apache.org/schemas/cxf/idl/Bank"
argument_list|,
name|wsdlLocation
operator|=
literal|"classpath:/wsdl/BankWS-corba.wsdl"
argument_list|,
name|endpointInterface
operator|=
literal|"cxf.common.Bank"
argument_list|)
specifier|public
class|class
name|BankImpl
implements|implements
name|Bank
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|W3CEndpointReference
argument_list|>
name|accountList
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|W3CEndpointReference
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Endpoint
argument_list|>
name|endpointList
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Endpoint
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|BankImpl
parameter_list|()
block|{     }
specifier|public
name|W3CEndpointReference
name|createAccount
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called createAccount( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|W3CEndpointReference
name|ref
init|=
literal|null
decl_stmt|;
name|ref
operator|=
name|createAccountReference
argument_list|(
name|accountName
argument_list|)
expr_stmt|;
if|if
condition|(
name|ref
operator|!=
literal|null
condition|)
block|{
name|accountList
operator|.
name|put
argument_list|(
name|accountName
argument_list|,
name|ref
argument_list|)
expr_stmt|;
block|}
return|return
name|ref
return|;
block|}
specifier|public
name|W3CEndpointReference
name|createEprAccount
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called createEprAccount( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|W3CEndpointReference
name|ref
init|=
name|createAccountReference
argument_list|(
name|accountName
argument_list|)
decl_stmt|;
if|if
condition|(
name|ref
operator|!=
literal|null
condition|)
block|{
name|accountList
operator|.
name|put
argument_list|(
name|accountName
argument_list|,
name|ref
argument_list|)
expr_stmt|;
block|}
return|return
name|ref
return|;
block|}
specifier|public
name|W3CEndpointReference
name|getAccount
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called getAccount( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
return|return
name|accountList
operator|.
name|get
argument_list|(
name|accountName
argument_list|)
return|;
block|}
specifier|public
name|W3CEndpointReference
name|getEprAccount
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called getEprAccount( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
return|return
name|accountList
operator|.
name|get
argument_list|(
name|accountName
argument_list|)
return|;
block|}
comment|// TODO: What is the correct implementation for this operation?
specifier|public
name|W3CEndpointReference
name|getAccountEprWithNoUseAttribute
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
comment|// TODO: What is the correct implementation for this operation?
specifier|public
name|void
name|findAccount
parameter_list|(
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Object
argument_list|>
name|accountDetails
parameter_list|)
block|{     }
specifier|public
name|void
name|removeAccount
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called removeAccount( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|accountList
operator|.
name|remove
argument_list|(
name|accountName
argument_list|)
expr_stmt|;
name|Endpoint
name|ep
init|=
name|endpointList
operator|.
name|remove
argument_list|(
name|accountName
argument_list|)
decl_stmt|;
name|ep
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|private
name|W3CEndpointReference
name|createAccountReference
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|String
name|corbaAddress
init|=
literal|"corbaname::localhost:1050#"
operator|+
name|accountName
decl_stmt|;
name|Object
name|account
init|=
operator|new
name|AccountImpl
argument_list|()
decl_stmt|;
name|Endpoint
name|ep
init|=
name|Endpoint
operator|.
name|publish
argument_list|(
name|corbaAddress
argument_list|,
name|account
argument_list|)
decl_stmt|;
name|endpointList
operator|.
name|put
argument_list|(
name|accountName
argument_list|,
name|ep
argument_list|)
expr_stmt|;
return|return
operator|(
name|W3CEndpointReference
operator|)
name|ep
operator|.
name|getEndpointReference
argument_list|(
operator|(
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
index|[]
operator|)
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

