begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|corba
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|corba
operator|.
name|common
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|corba
operator|.
name|common
operator|.
name|AccountHelper
import|;
end_import

begin_import
import|import
name|corba
operator|.
name|common
operator|.
name|BankPOA
import|;
end_import

begin_import
import|import
name|org
operator|.
name|omg
operator|.
name|PortableServer
operator|.
name|POA
import|;
end_import

begin_class
specifier|public
class|class
name|BankImpl
extends|extends
name|BankPOA
block|{
specifier|private
name|POA
name|poa_
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Account
argument_list|>
name|accountList
decl_stmt|;
name|BankImpl
parameter_list|(
name|POA
name|poa
parameter_list|)
block|{
name|poa_
operator|=
name|poa
expr_stmt|;
name|accountList
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Account
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Account
name|create_account
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
if|if
condition|(
name|accountList
operator|.
name|containsKey
argument_list|(
name|accountName
argument_list|)
condition|)
block|{
return|return
name|accountList
operator|.
name|get
argument_list|(
name|accountName
argument_list|)
return|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called create_account( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|AccountImpl
name|accountImpl
init|=
operator|new
name|AccountImpl
argument_list|(
name|poa_
argument_list|)
decl_stmt|;
name|String
name|name
init|=
literal|"Account-"
operator|+
name|accountName
decl_stmt|;
name|byte
index|[]
name|oid
init|=
name|name
operator|.
name|getBytes
argument_list|()
decl_stmt|;
try|try
block|{
name|poa_
operator|.
name|activate_object_with_id
argument_list|(
name|oid
argument_list|,
name|accountImpl
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|//Ignore
block|}
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|obj
init|=
name|poa_
operator|.
name|create_reference_with_id
argument_list|(
name|oid
argument_list|,
name|AccountHelper
operator|.
name|id
argument_list|()
argument_list|)
decl_stmt|;
name|Account
name|account
init|=
name|AccountHelper
operator|.
name|narrow
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|accountList
operator|.
name|put
argument_list|(
name|accountName
argument_list|,
name|account
argument_list|)
expr_stmt|;
return|return
name|account
return|;
block|}
specifier|public
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|create_epr_account
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called create_epr_account( "
operator|+
name|accountName
operator|+
literal|")..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
comment|/*Account_impl accountImpl = new Account_impl(poa_);         Account account = accountImpl._this(orb_);         accountList.put(account_name, account);*/
name|AccountImpl
name|accountImpl
init|=
operator|new
name|AccountImpl
argument_list|(
name|poa_
argument_list|)
decl_stmt|;
name|String
name|name
init|=
literal|"Account-"
operator|+
name|accountName
decl_stmt|;
name|byte
index|[]
name|oid
init|=
name|name
operator|.
name|getBytes
argument_list|()
decl_stmt|;
try|try
block|{
name|poa_
operator|.
name|activate_object_with_id
argument_list|(
name|oid
argument_list|,
name|accountImpl
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|//Ignore
block|}
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|obj
init|=
name|poa_
operator|.
name|create_reference_with_id
argument_list|(
name|oid
argument_list|,
name|AccountHelper
operator|.
name|id
argument_list|()
argument_list|)
decl_stmt|;
name|Account
name|account
init|=
name|AccountHelper
operator|.
name|narrow
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|accountList
operator|.
name|put
argument_list|(
name|accountName
argument_list|,
name|account
argument_list|)
expr_stmt|;
return|return
name|account
return|;
block|}
specifier|public
name|Account
name|get_account
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called get_account( "
operator|+
name|accountName
operator|+
literal|")..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
return|return
name|accountList
operator|.
name|get
argument_list|(
name|accountName
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|get_epr_account
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called get_epr_account( "
operator|+
name|accountName
operator|+
literal|")..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
return|return
name|accountList
operator|.
name|get
argument_list|(
name|accountName
argument_list|)
return|;
block|}
comment|// TODO: What is the correct implementation for this operation?
specifier|public
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|Object
name|get_account_epr_with_no_use_attribute
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called get_epr_with_no_use_attribute( "
operator|+
name|accountName
operator|+
literal|" )..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
comment|// TODO: What is the correct implementation for this operation?
specifier|public
name|void
name|find_account
parameter_list|(
name|org
operator|.
name|omg
operator|.
name|CORBA
operator|.
name|AnyHolder
name|accountDetails
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called find_account (account_details)..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|remove_account
parameter_list|(
name|String
name|accountName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[Bank] Called remove_account ( "
operator|+
name|accountName
operator|+
literal|")..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|accountList
operator|.
name|remove
argument_list|(
name|accountName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|POA
name|_default_POA
parameter_list|()
block|{
return|return
name|poa_
return|;
block|}
block|}
end_class

end_unit

