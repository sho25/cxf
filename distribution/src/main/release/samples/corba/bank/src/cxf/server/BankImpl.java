begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|cxf
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|bank
operator|.
name|common
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|bank
operator|.
name|common
operator|.
name|AccountAlreadyExistsException
import|;
end_import

begin_import
import|import
name|bank
operator|.
name|common
operator|.
name|AccountAlreadyExistsExceptionType
import|;
end_import

begin_import
import|import
name|bank
operator|.
name|common
operator|.
name|AccountNotFoundException
import|;
end_import

begin_import
import|import
name|bank
operator|.
name|common
operator|.
name|AccountNotFoundExceptionType
import|;
end_import

begin_import
import|import
name|bank
operator|.
name|common
operator|.
name|Bank
import|;
end_import

begin_class
annotation|@
name|javax
operator|.
name|jws
operator|.
name|WebService
argument_list|(
name|portName
operator|=
literal|"BankCORBAPort"
argument_list|,
name|serviceName
operator|=
literal|"BankCORBAService"
argument_list|,
name|targetNamespace
operator|=
literal|"http://cxf.apache.org/schemas/cxf/idl/bank"
argument_list|,
name|wsdlLocation
operator|=
literal|"file:../resources/bank.wsdl"
argument_list|,
name|endpointInterface
operator|=
literal|"bank.common.Bank"
argument_list|)
specifier|public
class|class
name|BankImpl
implements|implements
name|Bank
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Account
argument_list|>
name|accounts
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Account
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|boolean
name|createAccount
parameter_list|(
name|String
name|name
parameter_list|,
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
argument_list|<
name|Account
argument_list|>
name|account
parameter_list|)
throws|throws
name|AccountAlreadyExistsException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Creating account: "
operator|+
name|name
argument_list|)
expr_stmt|;
name|boolean
name|result
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|accounts
operator|.
name|get
argument_list|(
name|name
argument_list|)
operator|==
literal|null
condition|)
block|{
name|account
operator|.
name|value
operator|=
operator|new
name|Account
argument_list|()
expr_stmt|;
name|account
operator|.
name|value
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|account
operator|.
name|value
operator|.
name|setBalance
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|accounts
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|account
operator|.
name|value
argument_list|)
expr_stmt|;
name|result
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|AccountAlreadyExistsExceptionType
name|ex
init|=
operator|new
name|AccountAlreadyExistsExceptionType
argument_list|()
decl_stmt|;
name|ex
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|AccountAlreadyExistsException
argument_list|(
literal|"Account Already Exists"
argument_list|,
name|ex
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|Account
name|getAccount
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|AccountNotFoundException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Getting account: "
operator|+
name|name
argument_list|)
expr_stmt|;
name|Account
name|result
init|=
name|accounts
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|AccountNotFoundExceptionType
name|ex
init|=
operator|new
name|AccountNotFoundExceptionType
argument_list|()
decl_stmt|;
name|ex
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|AccountNotFoundException
argument_list|(
literal|"Account Not Found"
argument_list|,
name|ex
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

