begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|sts
operator|.
name|provider
operator|.
name|token
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|DefaultBootstrap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|common
operator|.
name|SAMLVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|common
operator|.
name|impl
operator|.
name|SecureRandomIdentifierGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|common
operator|.
name|xml
operator|.
name|SAMLConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|xml
operator|.
name|security
operator|.
name|x509
operator|.
name|BasicX509Credential
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|xml
operator|.
name|security
operator|.
name|x509
operator|.
name|X509KeyInfoGeneratorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|xml
operator|.
name|signature
operator|.
name|KeyInfo
import|;
end_import

begin_class
specifier|public
class|class
name|Saml1TokenProvider
implements|implements
name|TokenProvider
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|Saml1TokenProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RESPONSE_TOKENTYPE_SAML1
init|=
literal|"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1"
decl_stmt|;
specifier|public
name|String
name|getResponseTokentype
parameter_list|()
block|{
return|return
name|RESPONSE_TOKENTYPE_SAML1
return|;
block|}
specifier|public
name|String
name|getTokenType
parameter_list|()
block|{
return|return
name|SAMLConstants
operator|.
name|SAML1_NS
return|;
block|}
specifier|public
name|Element
name|createToken
parameter_list|(
name|X509Certificate
name|certificate
parameter_list|)
block|{
try|try
block|{
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|subject
init|=
name|createSubjectSAML1
argument_list|(
name|certificate
argument_list|)
decl_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Assertion
name|samlAssertion
init|=
name|createAuthnAssertionSAML1
argument_list|(
name|subject
argument_list|)
decl_stmt|;
return|return
name|SamlUtils
operator|.
name|toDom
argument_list|(
name|samlAssertion
argument_list|)
operator|.
name|getDocumentElement
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenException
argument_list|(
literal|"Can't serialize SAML assertion"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Element
name|createToken
parameter_list|(
name|String
name|username
parameter_list|)
block|{
try|try
block|{
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|subject
init|=
name|createSubjectSAML1
argument_list|(
name|username
argument_list|)
decl_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Assertion
name|samlAssertion
init|=
name|createAuthnAssertionSAML1
argument_list|(
name|subject
argument_list|)
decl_stmt|;
return|return
name|SamlUtils
operator|.
name|toDom
argument_list|(
name|samlAssertion
argument_list|)
operator|.
name|getDocumentElement
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenException
argument_list|(
literal|"Can't serialize SAML assertion"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|getTokenId
parameter_list|(
name|Element
name|token
parameter_list|)
block|{
return|return
name|token
operator|.
name|getAttribute
argument_list|(
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Assertion
operator|.
name|ID_ATTRIB_NAME
argument_list|)
return|;
block|}
specifier|private
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|createSubjectSAML1
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|NameIdentifier
name|nameID
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|NameIdentifierBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|nameID
operator|.
name|setNameIdentifier
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|String
name|format
init|=
literal|"urn:oasis:names:tc:SAML:1.1:nameid-format:transient"
decl_stmt|;
if|if
condition|(
name|format
operator|!=
literal|null
condition|)
block|{
name|nameID
operator|.
name|setFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
block|}
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|subject
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|SubjectBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|setNameIdentifier
argument_list|(
name|nameID
argument_list|)
expr_stmt|;
name|String
name|confirmationString
init|=
literal|"urn:oasis:names:tc:SAML:1.0:cm:bearer"
decl_stmt|;
if|if
condition|(
name|confirmationString
operator|!=
literal|null
condition|)
block|{
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|ConfirmationMethod
name|confirmationMethod
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|ConfirmationMethodBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|confirmationMethod
operator|.
name|setConfirmationMethod
argument_list|(
name|confirmationString
argument_list|)
expr_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|SubjectConfirmation
name|confirmation
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|SubjectConfirmationBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|confirmation
operator|.
name|getConfirmationMethods
argument_list|()
operator|.
name|add
argument_list|(
name|confirmationMethod
argument_list|)
expr_stmt|;
name|subject
operator|.
name|setSubjectConfirmation
argument_list|(
name|confirmation
argument_list|)
expr_stmt|;
block|}
return|return
name|subject
return|;
block|}
specifier|private
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|createSubjectSAML1
parameter_list|(
name|X509Certificate
name|certificate
parameter_list|)
throws|throws
name|Exception
block|{
name|DefaultBootstrap
operator|.
name|bootstrap
argument_list|()
expr_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|NameIdentifier
name|nameID
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|NameIdentifierBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|nameID
operator|.
name|setNameIdentifier
argument_list|(
name|certificate
operator|.
name|getSubjectDN
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|nameID
operator|.
name|setFormat
argument_list|(
literal|"urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
argument_list|)
expr_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|subject
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|SubjectBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|subject
operator|.
name|setNameIdentifier
argument_list|(
name|nameID
argument_list|)
expr_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|ConfirmationMethod
name|confirmationMethod
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|ConfirmationMethodBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|confirmationMethod
operator|.
name|setConfirmationMethod
argument_list|(
literal|"Urn:oasis:names:tc:SAML:1.0:cm:holder-of-key"
argument_list|)
expr_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|SubjectConfirmation
name|confirmation
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|SubjectConfirmationBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|confirmation
operator|.
name|getConfirmationMethods
argument_list|()
operator|.
name|add
argument_list|(
name|confirmationMethod
argument_list|)
expr_stmt|;
name|BasicX509Credential
name|keyInfoCredential
init|=
operator|new
name|BasicX509Credential
argument_list|()
decl_stmt|;
name|keyInfoCredential
operator|.
name|setEntityCertificate
argument_list|(
name|certificate
argument_list|)
expr_stmt|;
name|X509KeyInfoGeneratorFactory
name|kiFactory
init|=
operator|new
name|X509KeyInfoGeneratorFactory
argument_list|()
decl_stmt|;
name|kiFactory
operator|.
name|setEmitPublicKeyValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|KeyInfo
name|keyInfo
init|=
name|kiFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|generate
argument_list|(
name|keyInfoCredential
argument_list|)
decl_stmt|;
name|confirmation
operator|.
name|setKeyInfo
argument_list|(
name|keyInfo
argument_list|)
expr_stmt|;
name|subject
operator|.
name|setSubjectConfirmation
argument_list|(
name|confirmation
argument_list|)
expr_stmt|;
return|return
name|subject
return|;
block|}
specifier|private
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Assertion
name|createAuthnAssertionSAML1
parameter_list|(
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Subject
name|subject
parameter_list|)
block|{
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|AuthenticationStatement
name|authnStatement
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|AuthenticationStatementBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|authnStatement
operator|.
name|setSubject
argument_list|(
name|subject
argument_list|)
expr_stmt|;
comment|// authnStatement.setAuthenticationMethod(strAuthMethod);
name|DateTime
name|now
init|=
operator|new
name|DateTime
argument_list|()
decl_stmt|;
name|authnStatement
operator|.
name|setAuthenticationInstant
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Conditions
name|conditions
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|ConditionsBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
name|conditions
operator|.
name|setNotBefore
argument_list|(
name|now
operator|.
name|minusMillis
argument_list|(
literal|3600000
argument_list|)
argument_list|)
expr_stmt|;
name|conditions
operator|.
name|setNotOnOrAfter
argument_list|(
name|now
operator|.
name|plusMillis
argument_list|(
literal|3600000
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|issuerURL
init|=
literal|"http://www.sopera.de/SAML1"
decl_stmt|;
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|Assertion
name|assertion
init|=
operator|(
operator|new
name|org
operator|.
name|opensaml
operator|.
name|saml1
operator|.
name|core
operator|.
name|impl
operator|.
name|AssertionBuilder
argument_list|()
operator|)
operator|.
name|buildObject
argument_list|()
decl_stmt|;
try|try
block|{
name|SecureRandomIdentifierGenerator
name|generator
init|=
operator|new
name|SecureRandomIdentifierGenerator
argument_list|()
decl_stmt|;
name|assertion
operator|.
name|setID
argument_list|(
name|generator
operator|.
name|generateIdentifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|assertion
operator|.
name|setIssuer
argument_list|(
name|issuerURL
argument_list|)
expr_stmt|;
name|assertion
operator|.
name|setIssueInstant
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|assertion
operator|.
name|setVersion
argument_list|(
name|SAMLVersion
operator|.
name|VERSION_11
argument_list|)
expr_stmt|;
name|assertion
operator|.
name|getAuthenticationStatements
argument_list|()
operator|.
name|add
argument_list|(
name|authnStatement
argument_list|)
expr_stmt|;
comment|// assertion.getAttributeStatements().add(attrStatement);
name|assertion
operator|.
name|setConditions
argument_list|(
name|conditions
argument_list|)
expr_stmt|;
return|return
name|assertion
return|;
block|}
block|}
end_class

end_unit

