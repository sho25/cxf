begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * JBoss, Home of Professional Open Source.  * Copyright 2019, Red Hat, Inc., and individual contributors  * as indicated by the @author tags. See the copyright.txt file in the  * distribution for a full listing of individual contributors.  *  * This is free software; you can redistribute it and/or modify it  * under the terms of the GNU Lesser General Public License as  * published by the Free Software Foundation; either version 2.1 of  * the License, or (at your option) any later version.  *  * This software is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  * Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this software; if not, write to the Free  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.  */
end_comment

begin_package
package|package
name|sample
operator|.
name|ws
operator|.
name|service
package|;
end_package

begin_import
import|import
name|com
operator|.
name|arjuna
operator|.
name|mw
operator|.
name|wst11
operator|.
name|client
operator|.
name|EnabledWSTXHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|jbossts
operator|.
name|txbridge
operator|.
name|outbound
operator|.
name|JaxWSTxOutboundBridgeHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:zfeng@redhat.com">Zheng Feng</a>  */
end_comment

begin_class
specifier|public
class|class
name|SecondClient
block|{
specifier|public
specifier|static
name|SecondServiceAT
name|newInstance
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|wsdlLocation
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:8082/Service/SecondServiceAT?wsdl"
argument_list|)
decl_stmt|;
name|QName
name|serviceName
init|=
operator|new
name|QName
argument_list|(
literal|"http://service.ws.sample"
argument_list|,
literal|"SecondServiceATService"
argument_list|)
decl_stmt|;
name|QName
name|portName
init|=
operator|new
name|QName
argument_list|(
literal|"http://service.ws.sample"
argument_list|,
literal|"SecondServiceAT"
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|Service
operator|.
name|create
argument_list|(
name|wsdlLocation
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|SecondServiceAT
name|client
init|=
name|service
operator|.
name|getPort
argument_list|(
name|portName
argument_list|,
name|SecondServiceAT
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Handler
argument_list|>
name|handlerChain
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|JaxWSTxOutboundBridgeHandler
name|txOutboundBridgeHandler
init|=
operator|new
name|JaxWSTxOutboundBridgeHandler
argument_list|()
decl_stmt|;
name|EnabledWSTXHandler
name|wstxHandler
init|=
operator|new
name|EnabledWSTXHandler
argument_list|()
decl_stmt|;
name|handlerChain
operator|.
name|add
argument_list|(
name|txOutboundBridgeHandler
argument_list|)
expr_stmt|;
name|handlerChain
operator|.
name|add
argument_list|(
name|wstxHandler
argument_list|)
expr_stmt|;
operator|(
operator|(
name|BindingProvider
operator|)
name|client
operator|)
operator|.
name|getBinding
argument_list|()
operator|.
name|setHandlerChain
argument_list|(
name|handlerChain
argument_list|)
expr_stmt|;
return|return
name|client
return|;
block|}
block|}
end_class

end_unit

