begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jms_greeter
operator|.
name|broker
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|artemis
operator|.
name|api
operator|.
name|core
operator|.
name|TransportConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|artemis
operator|.
name|core
operator|.
name|config
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|artemis
operator|.
name|core
operator|.
name|config
operator|.
name|impl
operator|.
name|ConfigurationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|artemis
operator|.
name|core
operator|.
name|remoting
operator|.
name|impl
operator|.
name|invm
operator|.
name|InVMAcceptorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|artemis
operator|.
name|core
operator|.
name|remoting
operator|.
name|impl
operator|.
name|netty
operator|.
name|NettyAcceptorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|artemis
operator|.
name|core
operator|.
name|server
operator|.
name|embedded
operator|.
name|EmbeddedActiveMQ
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|EmbeddedBroker
block|{
specifier|private
name|EmbeddedBroker
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Configuration
name|config
init|=
operator|new
name|ConfigurationImpl
argument_list|()
decl_stmt|;
name|HashSet
argument_list|<
name|TransportConfiguration
argument_list|>
name|transports
init|=
operator|new
name|HashSet
argument_list|<
name|TransportConfiguration
argument_list|>
argument_list|()
decl_stmt|;
name|transports
operator|.
name|add
argument_list|(
operator|new
name|TransportConfiguration
argument_list|(
name|NettyAcceptorFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|transports
operator|.
name|add
argument_list|(
operator|new
name|TransportConfiguration
argument_list|(
name|InVMAcceptorFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAcceptorConfigurations
argument_list|(
name|transports
argument_list|)
expr_stmt|;
name|config
operator|.
name|setBrokerInstance
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/artemis"
argument_list|)
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPersistenceEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|setSecurityEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|setJMXManagementEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|EmbeddedActiveMQ
name|server
init|=
operator|new
name|EmbeddedActiveMQ
argument_list|()
decl_stmt|;
name|server
operator|.
name|setConfiguration
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"JMS broker ready ..."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|125
operator|*
literal|60
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"JMS broker exiting"
argument_list|)
expr_stmt|;
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

