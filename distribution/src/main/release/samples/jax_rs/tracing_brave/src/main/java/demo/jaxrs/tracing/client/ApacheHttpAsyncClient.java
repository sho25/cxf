begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|tracing
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|concurrent
operator|.
name|FutureCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|nio
operator|.
name|client
operator|.
name|CloseableHttpAsyncClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|util
operator|.
name|EntityUtils
import|;
end_import

begin_import
import|import
name|brave
operator|.
name|httpasyncclient
operator|.
name|TracingHttpAsyncClientBuilder
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|jaxrs
operator|.
name|tracing
operator|.
name|server
operator|.
name|CatalogTracing
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ApacheHttpAsyncClient
block|{
specifier|private
name|ApacheHttpAsyncClient
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
specifier|final
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
specifier|final
name|CatalogTracing
name|tracing
init|=
operator|new
name|CatalogTracing
argument_list|(
literal|"catalog-client"
argument_list|)
init|)
block|{
specifier|final
name|CloseableHttpAsyncClient
name|httpclient
init|=
name|TracingHttpAsyncClientBuilder
operator|.
name|create
argument_list|(
name|tracing
operator|.
name|getHttpTracing
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|HttpGet
name|request
init|=
operator|new
name|HttpGet
argument_list|(
literal|"http://localhost:9000/catalog"
argument_list|)
decl_stmt|;
name|request
operator|.
name|setHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|httpclient
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Future
argument_list|<
name|HttpResponse
argument_list|>
name|response
init|=
name|httpclient
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|FutureCallback
argument_list|<
name|HttpResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|completed
parameter_list|(
name|HttpResponse
name|result
parameter_list|)
block|{
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|result
operator|.
name|getEntity
argument_list|()
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|failed
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cancelled
parameter_list|()
block|{                     }
block|}
argument_list|)
decl_stmt|;
name|response
operator|.
name|get
argument_list|(
literal|1000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|httpclient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

