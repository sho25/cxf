begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|server
operator|.
name|socket
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ServerSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|JAXRSServerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|lifecycle
operator|.
name|SingletonResourceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|SparkConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|api
operator|.
name|java
operator|.
name|JavaPairRDD
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|api
operator|.
name|java
operator|.
name|StorageLevels
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|api
operator|.
name|java
operator|.
name|function
operator|.
name|VoidFunction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|streaming
operator|.
name|Durations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|streaming
operator|.
name|api
operator|.
name|java
operator|.
name|JavaDStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|streaming
operator|.
name|api
operator|.
name|java
operator|.
name|JavaPairDStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|streaming
operator|.
name|api
operator|.
name|java
operator|.
name|JavaStreamingContext
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|jaxrs
operator|.
name|server
operator|.
name|SparkUtils
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|jaxrs
operator|.
name|server
operator|.
name|simple
operator|.
name|SparkStreamingListener
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|jaxrs
operator|.
name|server
operator|.
name|simple
operator|.
name|SparkStreamingOutput
import|;
end_import

begin_class
specifier|public
class|class
name|Server
block|{
specifier|protected
name|Server
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|ServerSocket
name|sparkServerSocket
init|=
operator|new
name|ServerSocket
argument_list|(
literal|9999
argument_list|)
decl_stmt|;
name|ServerSocket
name|jaxrsResponseServerSocket
init|=
operator|new
name|ServerSocket
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
name|Socket
name|jaxrsResponseClientSocket
init|=
operator|new
name|Socket
argument_list|(
literal|"localhost"
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|SparkConf
name|sparkConf
init|=
operator|new
name|SparkConf
argument_list|()
operator|.
name|setMaster
argument_list|(
literal|"local[*]"
argument_list|)
operator|.
name|setAppName
argument_list|(
literal|"JAX-RS Spark Socket Connect"
argument_list|)
decl_stmt|;
name|JavaStreamingContext
name|jssc
init|=
operator|new
name|JavaStreamingContext
argument_list|(
name|sparkConf
argument_list|,
name|Durations
operator|.
name|seconds
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|SparkStreamingOutput
name|streamOut
init|=
operator|new
name|SparkStreamingOutput
argument_list|(
name|jssc
argument_list|)
decl_stmt|;
name|SparkStreamingListener
name|sparkListener
init|=
operator|new
name|SparkStreamingListener
argument_list|(
name|streamOut
argument_list|)
decl_stmt|;
name|jssc
operator|.
name|addStreamingListener
argument_list|(
name|sparkListener
argument_list|)
expr_stmt|;
name|JavaDStream
argument_list|<
name|String
argument_list|>
name|receiverStream
init|=
name|jssc
operator|.
name|socketTextStream
argument_list|(
literal|"localhost"
argument_list|,
literal|9999
argument_list|,
name|StorageLevels
operator|.
name|MEMORY_ONLY
argument_list|)
decl_stmt|;
name|JavaPairDStream
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|wordCounts
init|=
name|SparkUtils
operator|.
name|createOutputDStream
argument_list|(
name|receiverStream
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|PrintStream
name|sparkResponseOutputStream
init|=
operator|new
name|PrintStream
argument_list|(
name|jaxrsResponseClientSocket
operator|.
name|getOutputStream
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|wordCounts
operator|.
name|foreachRDD
argument_list|(
operator|new
name|SocketOutputFunction
argument_list|(
name|sparkResponseOutputStream
argument_list|)
argument_list|)
expr_stmt|;
name|jssc
operator|.
name|start
argument_list|()
expr_stmt|;
name|Socket
name|receiverClientSocket
init|=
name|sparkServerSocket
operator|.
name|accept
argument_list|()
decl_stmt|;
name|PrintStream
name|sparkOutputStream
init|=
operator|new
name|PrintStream
argument_list|(
name|receiverClientSocket
operator|.
name|getOutputStream
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|BufferedReader
name|sparkInputStream
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|jaxrsResponseServerSocket
operator|.
name|accept
argument_list|()
operator|.
name|getInputStream
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|JAXRSServerFactoryBean
name|sf
init|=
operator|new
name|JAXRSServerFactoryBean
argument_list|()
decl_stmt|;
name|sf
operator|.
name|setResourceClasses
argument_list|(
name|StreamingService
operator|.
name|class
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setResourceProvider
argument_list|(
name|StreamingService
operator|.
name|class
argument_list|,
operator|new
name|SingletonResourceProvider
argument_list|(
operator|new
name|StreamingService
argument_list|(
name|sparkInputStream
argument_list|,
name|sparkOutputStream
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sf
operator|.
name|setAddress
argument_list|(
literal|"http://localhost:9000/spark"
argument_list|)
expr_stmt|;
name|sf
operator|.
name|create
argument_list|()
expr_stmt|;
name|jssc
operator|.
name|awaitTermination
argument_list|()
expr_stmt|;
name|sparkServerSocket
operator|.
name|close
argument_list|()
expr_stmt|;
name|jaxrsResponseServerSocket
operator|.
name|close
argument_list|()
expr_stmt|;
name|jaxrsResponseClientSocket
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
operator|new
name|Server
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Server ready..."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|60
operator|*
literal|60
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Server exiting"
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|SocketOutputFunction
implements|implements
name|VoidFunction
argument_list|<
name|JavaPairRDD
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|PrintStream
name|streamOut
decl_stmt|;
name|SocketOutputFunction
parameter_list|(
name|PrintStream
name|streamOut
parameter_list|)
block|{
name|this
operator|.
name|streamOut
operator|=
name|streamOut
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|JavaPairRDD
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|rdd
parameter_list|)
block|{
if|if
condition|(
operator|!
name|rdd
operator|.
name|collectAsMap
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
name|jobId
init|=
literal|null
decl_stmt|;
name|PrintStream
name|printStream
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|rdd
operator|.
name|collectAsMap
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|value
init|=
name|entry
operator|.
name|getKey
argument_list|()
operator|+
literal|" : "
operator|+
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|jobId
operator|==
literal|null
condition|)
block|{
name|int
name|index
init|=
name|value
operator|.
name|indexOf
argument_list|(
literal|":"
argument_list|)
decl_stmt|;
name|jobId
operator|=
name|value
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|printStream
operator|=
literal|"oneway"
operator|.
name|equals
argument_list|(
name|jobId
argument_list|)
condition|?
name|System
operator|.
name|out
else|:
name|streamOut
expr_stmt|;
block|}
name|printStream
operator|.
name|println
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|printStream
operator|.
name|println
argument_list|(
name|jobId
operator|+
literal|":"
operator|+
literal|"<batchEnd>"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

