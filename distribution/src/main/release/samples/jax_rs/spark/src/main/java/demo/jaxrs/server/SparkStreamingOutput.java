begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|LinkedBlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|StreamingOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|streaming
operator|.
name|api
operator|.
name|java
operator|.
name|JavaStreamingContext
import|;
end_import

begin_class
specifier|public
class|class
name|SparkStreamingOutput
implements|implements
name|StreamingOutput
block|{
specifier|private
name|BlockingQueue
argument_list|<
name|String
argument_list|>
name|responseQueue
init|=
operator|new
name|LinkedBlockingQueue
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|JavaStreamingContext
name|jssc
decl_stmt|;
specifier|private
specifier|volatile
name|boolean
name|sparkBatchCompleted
decl_stmt|;
specifier|private
specifier|volatile
name|boolean
name|outputWriteDone
decl_stmt|;
specifier|public
name|SparkStreamingOutput
parameter_list|(
name|JavaStreamingContext
name|jssc
parameter_list|)
block|{
name|this
operator|.
name|jssc
operator|=
name|jssc
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
specifier|final
name|OutputStream
name|output
parameter_list|)
throws|throws
name|IOException
throws|,
name|WebApplicationException
block|{
while|while
condition|(
operator|!
name|sparkBatchCompleted
operator|||
operator|!
name|outputWriteDone
operator|||
operator|!
name|responseQueue
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
try|try
block|{
name|String
name|responseEntry
init|=
name|responseQueue
operator|.
name|poll
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
if|if
condition|(
name|responseEntry
operator|!=
literal|null
condition|)
block|{
name|outputWriteDone
operator|=
literal|true
expr_stmt|;
name|output
operator|.
name|write
argument_list|(
name|StringUtils
operator|.
name|toBytesUTF8
argument_list|(
name|responseEntry
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
comment|// continue;
block|}
block|}
name|jssc
operator|.
name|stop
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jssc
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setSparkBatchCompleted
parameter_list|()
block|{
name|this
operator|.
name|sparkBatchCompleted
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|addResponseEntry
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|responseQueue
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

