begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|openapi
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|FormParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HeaderParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|enums
operator|.
name|ParameterIn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|enums
operator|.
name|SchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|headers
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|media
operator|.
name|Content
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|media
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|parameters
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|responses
operator|.
name|APIResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|openapi
operator|.
name|annotations
operator|.
name|responses
operator|.
name|APIResponses
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/sample"
argument_list|)
specifier|public
class|class
name|Sample
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Item
argument_list|>
name|items
decl_stmt|;
specifier|public
name|Sample
parameter_list|()
block|{
name|items
operator|=
name|Collections
operator|.
name|synchronizedMap
argument_list|(
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|Item
argument_list|>
argument_list|(
name|String
operator|.
name|CASE_INSENSITIVE_ORDER
argument_list|)
argument_list|)
expr_stmt|;
name|items
operator|.
name|put
argument_list|(
literal|"Item 1"
argument_list|,
operator|new
name|Item
argument_list|(
literal|"Item 1"
argument_list|,
literal|"Value 1"
argument_list|)
argument_list|)
expr_stmt|;
name|items
operator|.
name|put
argument_list|(
literal|"Item 2"
argument_list|,
operator|new
name|Item
argument_list|(
literal|"Item 2"
argument_list|,
literal|"Value 2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|GET
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Get all items"
argument_list|,
name|description
operator|=
literal|"Get operation with Response and @Default value"
argument_list|)
annotation|@
name|APIResponses
argument_list|(
annotation|@
name|APIResponse
argument_list|(
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|Item
operator|.
name|class
argument_list|,
name|type
operator|=
name|SchemaType
operator|.
name|ARRAY
argument_list|)
argument_list|)
argument_list|,
name|responseCode
operator|=
literal|"200"
argument_list|)
argument_list|)
specifier|public
name|Response
name|getItems
parameter_list|(
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|QueryParam
argument_list|(
literal|"page"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
literal|"1"
argument_list|)
name|int
name|page
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
name|items
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Path
argument_list|(
literal|"/{name}"
argument_list|)
annotation|@
name|GET
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Get item by name"
argument_list|,
name|description
operator|=
literal|"Get operation with type and headers"
argument_list|)
annotation|@
name|APIResponses
argument_list|(
block|{
annotation|@
name|APIResponse
argument_list|(
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|Item
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
name|responseCode
operator|=
literal|"200"
argument_list|)
block|,
annotation|@
name|APIResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|)
block|}
argument_list|)
specifier|public
name|Response
name|getItem
parameter_list|(
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|HeaderParam
argument_list|(
literal|"Accept-Language"
argument_list|)
specifier|final
name|String
name|language
parameter_list|,
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
block|{
return|return
name|items
operator|.
name|containsKey
argument_list|(
name|name
argument_list|)
condition|?
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|entity
argument_list|(
name|items
operator|.
name|get
argument_list|(
name|name
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
else|:
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|NOT_FOUND
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Consumes
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|POST
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Create new item"
argument_list|,
name|description
operator|=
literal|"Post operation with entity in a body"
argument_list|)
annotation|@
name|APIResponses
argument_list|(
annotation|@
name|APIResponse
argument_list|(
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|Item
operator|.
name|class
argument_list|)
argument_list|,
name|mediaType
operator|=
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
argument_list|,
name|headers
operator|=
annotation|@
name|Header
argument_list|(
name|name
operator|=
literal|"Location"
argument_list|)
argument_list|,
name|responseCode
operator|=
literal|"201"
argument_list|)
argument_list|)
specifier|public
name|Response
name|createItem
parameter_list|(
annotation|@
name|Context
specifier|final
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
specifier|final
name|Item
name|item
parameter_list|)
block|{
name|items
operator|.
name|put
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|,
name|item
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|created
argument_list|(
name|uriInfo
operator|.
name|getBaseUriBuilder
argument_list|()
operator|.
name|path
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|entity
argument_list|(
name|item
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Path
argument_list|(
literal|"/{name}"
argument_list|)
annotation|@
name|PUT
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Update an existing new item"
argument_list|,
name|description
operator|=
literal|"Put operation with form parameter"
argument_list|)
annotation|@
name|APIResponse
argument_list|(
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|Item
operator|.
name|class
argument_list|)
argument_list|)
argument_list|,
name|responseCode
operator|=
literal|"200"
argument_list|)
specifier|public
name|Item
name|updateItem
parameter_list|(
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|,
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|FormParam
argument_list|(
literal|"value"
argument_list|)
name|String
name|value
parameter_list|)
block|{
name|Item
name|item
init|=
operator|new
name|Item
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
decl_stmt|;
name|items
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|item
argument_list|)
expr_stmt|;
return|return
name|item
return|;
block|}
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Path
argument_list|(
literal|"/{name}"
argument_list|)
annotation|@
name|DELETE
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Delete an existing new item"
argument_list|,
name|description
operator|=
literal|"Delete operation with implicit header"
argument_list|)
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"Accept-Language"
argument_list|,
name|description
operator|=
literal|"language"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|=
name|ParameterIn
operator|.
name|HEADER
argument_list|)
annotation|@
name|APIResponse
argument_list|(
name|responseCode
operator|=
literal|"204"
argument_list|)
specifier|public
name|void
name|delete
parameter_list|(
annotation|@
name|Parameter
argument_list|(
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
block|{
name|items
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

