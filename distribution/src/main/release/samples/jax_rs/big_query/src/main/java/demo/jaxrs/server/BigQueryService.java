begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|server
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|NotAuthorizedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|ResponseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|common
operator|.
name|IdToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|common
operator|.
name|UserInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oidc
operator|.
name|rp
operator|.
name|OidcClientTokenContext
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/service"
argument_list|)
specifier|public
class|class
name|BigQueryService
block|{
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/bigquery/complete"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml,application/json,text/html"
argument_list|)
specifier|public
name|Response
name|completeBigQuery
parameter_list|(
annotation|@
name|Context
name|OidcClientTokenContext
name|context
parameter_list|)
block|{
comment|// This IdToken check can be skipped and UserInfo checked for null instead
comment|// given that UserInfo can only be obtained if IdToken is valid; shown here
comment|// to demonstrate the properties of OidcClientTokenContext
name|IdToken
name|idToken
init|=
name|context
operator|.
name|getIdToken
argument_list|()
decl_stmt|;
if|if
condition|(
name|idToken
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NotAuthorizedException
argument_list|(
name|Response
operator|.
name|Status
operator|.
name|UNAUTHORIZED
argument_list|)
throw|;
block|}
name|UserInfo
name|userInfo
init|=
name|context
operator|.
name|getUserInfo
argument_list|()
decl_stmt|;
name|ResponseBuilder
name|rb
init|=
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
literal|"application/json"
argument_list|)
decl_stmt|;
name|Response
name|r
init|=
name|rb
operator|.
name|entity
argument_list|(
literal|"{\"email\":\""
operator|+
name|userInfo
operator|.
name|getEmail
argument_list|()
operator|+
literal|"\"}"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|r
return|;
block|}
block|}
end_class

end_unit

