begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|client
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|Base64Utility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpDelete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPut
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpRequestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|InputStreamEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|util
operator|.
name|EntityUtils
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|Client
block|{
specifier|private
name|Client
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|Client
name|c
init|=
operator|new
name|Client
argument_list|()
decl_stmt|;
comment|// 1. get customer info
comment|//
name|c
operator|.
name|getCustomerInfo
argument_list|(
literal|"fred"
argument_list|,
literal|"fred"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|c
operator|.
name|getCustomerInfo
argument_list|(
literal|"fred"
argument_list|,
literal|"fredspassword"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|c
operator|.
name|getCustomerInfo
argument_list|(
literal|"bob"
argument_list|,
literal|"bobspassword"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
comment|// 2. add customer info
comment|//
name|c
operator|.
name|addCustomerInfo
argument_list|(
literal|"fred"
argument_list|,
literal|"fredspassword"
argument_list|)
expr_stmt|;
name|c
operator|.
name|addCustomerInfo
argument_list|(
literal|"bob"
argument_list|,
literal|"bobspassword"
argument_list|)
expr_stmt|;
comment|// 3. update customer info
comment|//
name|c
operator|.
name|updateCustomerInfo
argument_list|(
literal|"fred"
argument_list|,
literal|"fredspassword"
argument_list|)
expr_stmt|;
name|c
operator|.
name|updateCustomerInfo
argument_list|(
literal|"bob"
argument_list|,
literal|"bobspassword"
argument_list|)
expr_stmt|;
comment|// 4. delete customer info
comment|//
name|c
operator|.
name|deleteCustomerInfo
argument_list|(
literal|"bob"
argument_list|,
literal|"bobspassword"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|c
operator|.
name|deleteCustomerInfo
argument_list|(
literal|"fred"
argument_list|,
literal|"fredspassword"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|getCustomerInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|password
parameter_list|,
name|int
name|id
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"HTTP GET to query customer info, user : "
operator|+
name|name
operator|+
literal|", password : "
operator|+
name|password
argument_list|)
expr_stmt|;
name|HttpGet
name|get
init|=
operator|new
name|HttpGet
argument_list|(
literal|"http://localhost:9002/customerservice/customers/"
operator|+
name|id
argument_list|)
decl_stmt|;
name|setMethodHeaders
argument_list|(
name|get
argument_list|,
name|name
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|handleHttpMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addCustomerInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"HTTP POST to add customer info, user : "
operator|+
name|name
operator|+
literal|", password : "
operator|+
name|password
argument_list|)
expr_stmt|;
name|HttpPost
name|post
init|=
operator|new
name|HttpPost
argument_list|(
literal|"http://localhost:9002/customerservice/customers"
argument_list|)
decl_stmt|;
name|setMethodHeaders
argument_list|(
name|post
argument_list|,
name|name
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|HttpEntity
name|entity
init|=
operator|new
name|InputStreamEntity
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"add_customer.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|post
operator|.
name|setEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|handleHttpMethod
argument_list|(
name|post
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateCustomerInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"HTTP PUT to update customer info, user : "
operator|+
name|name
operator|+
literal|", password : "
operator|+
name|password
argument_list|)
expr_stmt|;
name|HttpPut
name|put
init|=
operator|new
name|HttpPut
argument_list|(
literal|"http://localhost:9002/customerservice/customers/123"
argument_list|)
decl_stmt|;
name|setMethodHeaders
argument_list|(
name|put
argument_list|,
name|name
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|HttpEntity
name|entity
init|=
operator|new
name|InputStreamEntity
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"update_customer.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|put
operator|.
name|setEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|handleHttpMethod
argument_list|(
name|put
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|deleteCustomerInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|password
parameter_list|,
name|int
name|id
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"HTTP DELETE to update customer info, user : "
operator|+
name|name
operator|+
literal|", password : "
operator|+
name|password
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Confirming a customer with id "
operator|+
name|id
operator|+
literal|" exists first"
argument_list|)
expr_stmt|;
name|getCustomerInfo
argument_list|(
name|name
argument_list|,
name|password
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Deleting now..."
argument_list|)
expr_stmt|;
name|HttpDelete
name|del
init|=
operator|new
name|HttpDelete
argument_list|(
literal|"http://localhost:9002/customerservice/customers/"
operator|+
name|id
argument_list|)
decl_stmt|;
name|setMethodHeaders
argument_list|(
name|del
argument_list|,
name|name
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|handleHttpMethod
argument_list|(
name|del
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Confirming a customer with id "
operator|+
name|id
operator|+
literal|" does not exist anymore"
argument_list|)
expr_stmt|;
name|getCustomerInfo
argument_list|(
name|name
argument_list|,
name|password
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|handleHttpMethod
parameter_list|(
name|HttpRequestBase
name|httpMethod
parameter_list|)
throws|throws
name|Exception
block|{
name|CloseableHttpClient
name|httpClient
init|=
name|HttpClientBuilder
operator|.
name|create
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|CloseableHttpResponse
name|response
init|=
name|httpClient
operator|.
name|execute
argument_list|(
name|httpMethod
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Response status : "
operator|+
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|Response
operator|.
name|Status
name|status
init|=
name|Response
operator|.
name|Status
operator|.
name|fromStatusCode
argument_list|(
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|status
operator|==
name|Response
operator|.
name|Status
operator|.
name|OK
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
operator|.
name|getEntity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|status
operator|==
name|Response
operator|.
name|Status
operator|.
name|FORBIDDEN
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Authorization failure"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|status
operator|==
name|Response
operator|.
name|Status
operator|.
name|UNAUTHORIZED
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Authentication failure"
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
comment|// release any connection resources used by the method
name|httpMethod
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|setMethodHeaders
parameter_list|(
name|HttpRequestBase
name|httpMethod
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|password
parameter_list|)
block|{
if|if
condition|(
name|httpMethod
operator|instanceof
name|HttpPost
operator|||
name|httpMethod
operator|instanceof
name|HttpPut
condition|)
block|{
name|httpMethod
operator|.
name|addHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
block|}
name|httpMethod
operator|.
name|addHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"application/xml"
argument_list|)
expr_stmt|;
name|httpMethod
operator|.
name|addHeader
argument_list|(
literal|"Authorization"
argument_list|,
literal|"Basic "
operator|+
name|base64Encode
argument_list|(
name|name
operator|+
literal|":"
operator|+
name|password
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|String
name|base64Encode
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|Base64Utility
operator|.
name|encode
argument_list|(
name|value
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

