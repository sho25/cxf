begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|jaxrs
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/customerservice/"
argument_list|)
specifier|public
specifier|abstract
class|class
name|AbstractCustomerServiceSecured
implements|implements
name|CustomerServiceSecured
block|{
specifier|protected
name|long
name|currentId
init|=
literal|123
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|Long
argument_list|,
name|Customer
argument_list|>
name|customers
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Customer
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|Long
argument_list|,
name|Order
argument_list|>
name|orders
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Order
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|AbstractCustomerServiceSecured
parameter_list|()
block|{
name|init
argument_list|()
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}/"
argument_list|)
specifier|public
specifier|abstract
name|Customer
name|getCustomer
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|id
parameter_list|)
function_decl|;
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}"
argument_list|)
specifier|public
specifier|abstract
name|Response
name|updateCustomer
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|Long
name|id
parameter_list|,
name|Customer
name|customer
parameter_list|)
function_decl|;
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/customers/"
argument_list|)
specifier|public
specifier|abstract
name|Response
name|addCustomer
parameter_list|(
name|Customer
name|customer
parameter_list|)
function_decl|;
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}/"
argument_list|)
specifier|public
specifier|abstract
name|Response
name|deleteCustomer
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|id
parameter_list|)
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"/orders/{orderId}/"
argument_list|)
specifier|public
specifier|abstract
name|Order
name|getOrder
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"orderId"
argument_list|)
name|String
name|orderId
parameter_list|)
function_decl|;
specifier|private
name|void
name|init
parameter_list|()
block|{
name|Customer
name|c
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"John"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setId
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|customers
operator|.
name|put
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|Order
name|o
init|=
operator|new
name|Order
argument_list|()
decl_stmt|;
name|o
operator|.
name|setDescription
argument_list|(
literal|"order 223"
argument_list|)
expr_stmt|;
name|o
operator|.
name|setId
argument_list|(
literal|223
argument_list|)
expr_stmt|;
name|orders
operator|.
name|put
argument_list|(
name|o
operator|.
name|getId
argument_list|()
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

