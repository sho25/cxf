begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|demo
operator|.
name|aegis
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLInputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|aegis
operator|.
name|AegisReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|demo
operator|.
name|aegis
operator|.
name|types
operator|.
name|Animal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|demo
operator|.
name|aegis
operator|.
name|types
operator|.
name|Zoo
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|ReadZoo
block|{
specifier|private
name|XMLInputFactory
name|inputFactory
decl_stmt|;
specifier|private
name|String
name|inputPathname
decl_stmt|;
specifier|private
name|ReadZoo
parameter_list|()
block|{
name|inputFactory
operator|=
name|XMLInputFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|go
parameter_list|()
throws|throws
name|Exception
block|{
name|AegisContext
name|context
decl_stmt|;
name|context
operator|=
operator|new
name|AegisContext
argument_list|()
expr_stmt|;
name|Set
argument_list|<
name|Type
argument_list|>
name|rootClasses
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|rootClasses
operator|.
name|add
argument_list|(
name|Zoo
operator|.
name|class
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRootClasses
argument_list|(
name|rootClasses
argument_list|)
expr_stmt|;
name|context
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|AegisReader
argument_list|<
name|XMLStreamReader
argument_list|>
name|reader
init|=
name|context
operator|.
name|createXMLStreamReader
argument_list|()
decl_stmt|;
name|FileInputStream
name|input
init|=
operator|new
name|FileInputStream
argument_list|(
name|inputPathname
argument_list|)
decl_stmt|;
name|XMLStreamReader
name|xmlReader
init|=
name|inputFactory
operator|.
name|createXMLStreamReader
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|Zoo
name|zoo
init|=
operator|(
name|Zoo
operator|)
name|reader
operator|.
name|read
argument_list|(
name|xmlReader
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Name "
operator|+
name|zoo
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Founder "
operator|+
name|zoo
operator|.
name|getFounder
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Animal
argument_list|>
name|e
range|:
name|zoo
operator|.
name|getAnimals
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|" -> "
operator|+
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @param args      * @throws Exception      */
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|ReadZoo
name|rz
init|=
operator|new
name|ReadZoo
argument_list|()
decl_stmt|;
name|rz
operator|.
name|inputPathname
operator|=
name|args
index|[
literal|0
index|]
expr_stmt|;
name|rz
operator|.
name|go
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

