begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|oauth
operator|.
name|server
operator|.
name|controllers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|data
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|provider
operator|.
name|MD5SequenceGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|provider
operator|.
name|OAuthDataProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|utils
operator|.
name|OAuthUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|context
operator|.
name|SecurityContextHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Controller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|bind
operator|.
name|annotation
operator|.
name|ModelAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|bind
operator|.
name|annotation
operator|.
name|RequestMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|ServletContextAware
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|servlet
operator|.
name|ModelAndView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|servlet
operator|.
name|view
operator|.
name|RedirectView
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|oauth
operator|.
name|server
operator|.
name|ClientApp
import|;
end_import

begin_class
annotation|@
name|Controller
specifier|public
class|class
name|ApplicationController
implements|implements
name|ServletContextAware
block|{
specifier|private
name|OAuthDataProvider
name|oauthDataProvider
decl_stmt|;
specifier|private
name|OAuthClientManager
name|clientManager
decl_stmt|;
annotation|@
name|RequestMapping
argument_list|(
literal|"/newClientForm"
argument_list|)
specifier|public
name|ModelAndView
name|handleRequest
parameter_list|(
annotation|@
name|ModelAttribute
argument_list|(
literal|"client"
argument_list|)
name|ClientApp
name|clientApp
parameter_list|)
block|{
return|return
operator|new
name|ModelAndView
argument_list|(
literal|"newClientForm"
argument_list|)
return|;
block|}
annotation|@
name|RequestMapping
argument_list|(
literal|"/registerClient"
argument_list|)
specifier|public
name|ModelAndView
name|registerApp
parameter_list|(
annotation|@
name|ModelAttribute
argument_list|(
literal|"client"
argument_list|)
name|ClientApp
name|clientApp
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|clientApp
operator|.
name|getClientName
argument_list|()
argument_list|)
condition|)
block|{
name|clientApp
operator|.
name|setError
argument_list|(
literal|"Client name field is required!"
argument_list|)
expr_stmt|;
return|return
name|handleInternalRedirect
argument_list|(
name|clientApp
argument_list|)
return|;
block|}
name|MD5SequenceGenerator
name|tokenGen
init|=
operator|new
name|MD5SequenceGenerator
argument_list|()
decl_stmt|;
name|Principal
name|principal
init|=
name|SecurityContextHolder
operator|.
name|getContext
argument_list|()
operator|.
name|getAuthentication
argument_list|()
decl_stmt|;
name|String
name|consumerKey
init|=
name|clientApp
operator|.
name|getConsumerKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|consumerKey
argument_list|)
condition|)
block|{
name|consumerKey
operator|=
name|tokenGen
operator|.
name|generate
argument_list|(
operator|(
name|principal
operator|.
name|getName
argument_list|()
operator|+
name|clientApp
operator|.
name|getClientName
argument_list|()
operator|)
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|secretKey
init|=
name|tokenGen
operator|.
name|generate
argument_list|(
operator|new
name|SecureRandom
argument_list|()
operator|.
name|generateSeed
argument_list|(
literal|20
argument_list|)
argument_list|)
decl_stmt|;
name|Client
name|clientInfo
init|=
operator|new
name|Client
argument_list|(
name|consumerKey
argument_list|,
name|secretKey
argument_list|,
name|clientApp
operator|.
name|getClientName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|clientInfo
operator|.
name|setCallbackURI
argument_list|(
name|clientApp
operator|.
name|getCallbackURL
argument_list|()
argument_list|)
expr_stmt|;
name|clientInfo
operator|.
name|setLoginName
argument_list|(
name|principal
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Client
name|authNInfo
init|=
name|clientManager
operator|.
name|registerNewClient
argument_list|(
name|consumerKey
argument_list|,
name|clientInfo
argument_list|)
decl_stmt|;
if|if
condition|(
name|authNInfo
operator|!=
literal|null
condition|)
block|{
name|clientApp
operator|.
name|setError
argument_list|(
literal|"Client already exists!"
argument_list|)
expr_stmt|;
return|return
name|handleInternalRedirect
argument_list|(
name|clientApp
argument_list|)
return|;
block|}
name|ModelAndView
name|modelAndView
init|=
operator|new
name|ModelAndView
argument_list|(
literal|"clientDetails"
argument_list|)
decl_stmt|;
name|modelAndView
operator|.
name|getModel
argument_list|()
operator|.
name|put
argument_list|(
literal|"clientInfo"
argument_list|,
name|clientInfo
argument_list|)
expr_stmt|;
return|return
name|modelAndView
return|;
block|}
annotation|@
name|RequestMapping
argument_list|(
literal|"/listRegisteredClients"
argument_list|)
specifier|public
name|ModelAndView
name|listRegisteredClients
parameter_list|()
block|{
name|Set
argument_list|<
name|Client
argument_list|>
name|apps
init|=
name|clientManager
operator|.
name|listRegisteredClients
argument_list|()
decl_stmt|;
name|ModelAndView
name|modelAndView
init|=
operator|new
name|ModelAndView
argument_list|(
literal|"registeredClientsList"
argument_list|)
decl_stmt|;
name|modelAndView
operator|.
name|getModelMap
argument_list|()
operator|.
name|put
argument_list|(
literal|"clients"
argument_list|,
name|apps
argument_list|)
expr_stmt|;
return|return
name|modelAndView
return|;
block|}
annotation|@
name|RequestMapping
argument_list|(
literal|"/listAuthorizedClients"
argument_list|)
specifier|public
name|ModelAndView
name|listAuthorizedClients
parameter_list|()
block|{
name|Set
argument_list|<
name|Client
argument_list|>
name|apps
init|=
name|clientManager
operator|.
name|listAuthorizedClients
argument_list|()
decl_stmt|;
name|ModelAndView
name|modelAndView
init|=
operator|new
name|ModelAndView
argument_list|(
literal|"authorizedClientsList"
argument_list|)
decl_stmt|;
name|modelAndView
operator|.
name|getModelMap
argument_list|()
operator|.
name|put
argument_list|(
literal|"clients"
argument_list|,
name|apps
argument_list|)
expr_stmt|;
return|return
name|modelAndView
return|;
block|}
annotation|@
name|RequestMapping
argument_list|(
literal|"/removeClient"
argument_list|)
specifier|public
name|ModelAndView
name|removeClient
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|consumerKey
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"consumerKey"
argument_list|)
decl_stmt|;
name|clientManager
operator|.
name|removeRegisteredClient
argument_list|(
name|consumerKey
argument_list|)
expr_stmt|;
name|ModelAndView
name|modelAndView
init|=
operator|new
name|ModelAndView
argument_list|(
operator|new
name|RedirectView
argument_list|(
literal|"/app/listRegisteredClients"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|modelAndView
return|;
block|}
annotation|@
name|RequestMapping
argument_list|(
literal|"/revokeAccess"
argument_list|)
specifier|public
name|ModelAndView
name|revokeAccess
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|consumerKey
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"consumerKey"
argument_list|)
decl_stmt|;
name|clientManager
operator|.
name|removeAllTokens
argument_list|(
name|consumerKey
argument_list|)
expr_stmt|;
name|ModelAndView
name|modelAndView
init|=
operator|new
name|ModelAndView
argument_list|(
operator|new
name|RedirectView
argument_list|(
literal|"/app/listAuthorizedClients"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|modelAndView
return|;
block|}
annotation|@
name|RequestMapping
argument_list|(
literal|"/displayVerifier"
argument_list|)
specifier|public
name|ModelAndView
name|displayVerifier
parameter_list|()
block|{
return|return
operator|new
name|ModelAndView
argument_list|(
literal|"displayVerifier"
argument_list|)
return|;
block|}
specifier|private
name|ModelAndView
name|handleInternalRedirect
parameter_list|(
name|ClientApp
name|app
parameter_list|)
block|{
name|ModelAndView
name|modelAndView
init|=
operator|new
name|ModelAndView
argument_list|(
literal|"newClientForm"
argument_list|)
decl_stmt|;
name|modelAndView
operator|.
name|getModel
argument_list|()
operator|.
name|put
argument_list|(
literal|"client"
argument_list|,
name|app
argument_list|)
expr_stmt|;
return|return
name|modelAndView
return|;
block|}
specifier|public
name|void
name|setServletContext
parameter_list|(
name|ServletContext
name|servletContext
parameter_list|)
block|{
name|oauthDataProvider
operator|=
name|OAuthUtils
operator|.
name|getOAuthDataProvider
argument_list|(
literal|null
argument_list|,
name|servletContext
argument_list|)
expr_stmt|;
name|clientManager
operator|=
operator|(
name|OAuthClientManager
operator|)
name|oauthDataProvider
expr_stmt|;
block|}
block|}
end_class

end_unit

