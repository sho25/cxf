begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|oauth
operator|.
name|server
operator|.
name|controllers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|data
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rs
operator|.
name|security
operator|.
name|oauth
operator|.
name|data
operator|.
name|Token
import|;
end_import

begin_class
specifier|public
class|class
name|SampleOAuthDataProvider
extends|extends
name|MemoryOAuthDataProvider
implements|implements
name|OAuthClientManager
block|{
specifier|public
name|Client
name|registerNewClient
parameter_list|(
name|String
name|consumerKey
parameter_list|,
name|Client
name|client
parameter_list|)
block|{
name|Client
name|authNInfo
init|=
name|clientAuthInfo
operator|.
name|putIfAbsent
argument_list|(
name|consumerKey
argument_list|,
name|client
argument_list|)
decl_stmt|;
if|if
condition|(
name|authNInfo
operator|==
literal|null
condition|)
block|{
name|userRegisteredClients
operator|.
name|add
argument_list|(
name|consumerKey
argument_list|,
name|consumerKey
argument_list|)
expr_stmt|;
block|}
return|return
name|authNInfo
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Client
argument_list|>
name|listRegisteredClients
parameter_list|()
block|{
name|Set
argument_list|<
name|Client
argument_list|>
name|apps
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|appList
init|=
name|userRegisteredClients
operator|.
name|keySet
argument_list|()
decl_stmt|;
if|if
condition|(
name|appList
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|s
range|:
name|appList
control|)
block|{
name|apps
operator|.
name|add
argument_list|(
name|clientAuthInfo
operator|.
name|get
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|apps
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Client
argument_list|>
name|listAuthorizedClients
parameter_list|()
block|{
name|Set
argument_list|<
name|Client
argument_list|>
name|apps
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|appList
init|=
name|userAuthorizedClients
operator|.
name|keySet
argument_list|()
decl_stmt|;
if|if
condition|(
name|appList
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|s
range|:
name|appList
control|)
block|{
name|apps
operator|.
name|add
argument_list|(
name|clientAuthInfo
operator|.
name|get
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|apps
return|;
block|}
specifier|public
specifier|synchronized
name|void
name|removeRegisteredClient
parameter_list|(
name|String
name|consumerKey
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|registeredApps
init|=
name|this
operator|.
name|userRegisteredClients
operator|.
name|get
argument_list|(
name|consumerKey
argument_list|)
decl_stmt|;
name|this
operator|.
name|clientAuthInfo
operator|.
name|remove
argument_list|(
name|consumerKey
argument_list|)
expr_stmt|;
comment|//remove registered app
name|registeredApps
operator|.
name|remove
argument_list|(
name|consumerKey
argument_list|)
expr_stmt|;
name|this
operator|.
name|userRegisteredClients
operator|.
name|put
argument_list|(
name|consumerKey
argument_list|,
name|registeredApps
argument_list|)
expr_stmt|;
comment|//remove all authorized apps from other clients
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|userAuthorizedClientsSet
range|:
name|userAuthorizedClients
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|principalName
init|=
name|userAuthorizedClientsSet
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|clients
init|=
name|userAuthorizedClientsSet
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|clients
operator|.
name|remove
argument_list|(
name|consumerKey
argument_list|)
expr_stmt|;
name|userAuthorizedClients
operator|.
name|put
argument_list|(
name|principalName
argument_list|,
name|clients
argument_list|)
expr_stmt|;
block|}
comment|//remove access tokens
for|for
control|(
name|Token
name|token
range|:
name|oauthTokens
operator|.
name|values
argument_list|()
control|)
block|{
name|Client
name|authNInfo
init|=
name|token
operator|.
name|getClient
argument_list|()
decl_stmt|;
if|if
condition|(
name|consumerKey
operator|.
name|equals
argument_list|(
name|authNInfo
operator|.
name|getConsumerKey
argument_list|()
argument_list|)
condition|)
block|{
name|oauthTokens
operator|.
name|remove
argument_list|(
name|token
operator|.
name|getTokenKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

