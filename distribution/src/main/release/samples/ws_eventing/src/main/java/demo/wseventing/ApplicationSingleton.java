begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|wseventing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|demo
operator|.
name|wseventing
operator|.
name|eventapi
operator|.
name|CatastrophicEventSinkImpl
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|ApplicationSingleton
block|{
specifier|private
specifier|static
name|ApplicationSingleton
name|instance
decl_stmt|;
specifier|private
name|List
argument_list|<
name|CatastrophicEventSinkImpl
argument_list|>
name|eventSinks
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|ApplicationSingleton
parameter_list|()
block|{     }
specifier|public
specifier|static
name|ApplicationSingleton
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|ApplicationSingleton
argument_list|()
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
specifier|public
name|void
name|createEventSink
parameter_list|(
name|String
name|url
parameter_list|)
block|{
if|if
condition|(
operator|!
name|url
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|url
operator|=
literal|"/"
operator|+
name|url
expr_stmt|;
block|}
name|eventSinks
operator|.
name|add
argument_list|(
operator|new
name|CatastrophicEventSinkImpl
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|CatastrophicEventSinkImpl
argument_list|>
name|getEventSinks
parameter_list|()
block|{
return|return
name|this
operator|.
name|eventSinks
return|;
block|}
specifier|public
name|CatastrophicEventSinkImpl
name|getEventSinkByURL
parameter_list|(
name|String
name|url
parameter_list|)
block|{
for|for
control|(
name|CatastrophicEventSinkImpl
name|eventSink
range|:
name|eventSinks
control|)
block|{
if|if
condition|(
name|eventSink
operator|.
name|getShortURL
argument_list|()
operator|.
name|equals
argument_list|(
name|url
argument_list|)
condition|)
block|{
return|return
name|eventSink
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

