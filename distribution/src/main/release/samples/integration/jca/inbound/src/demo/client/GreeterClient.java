begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|ServiceImpl
import|;
end_import

begin_comment
comment|/**  * validate call to ejb in jboss from command line  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|GreeterClient
block|{
specifier|protected
name|GreeterClient
parameter_list|()
block|{     }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Bus
name|bus
init|=
operator|new
name|SpringBusFactory
argument_list|()
operator|.
name|getDefaultBus
argument_list|()
decl_stmt|;
name|QName
name|serviceQName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"Greeter"
argument_list|)
decl_stmt|;
name|QName
name|portQName
init|=
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"HelloPort"
argument_list|)
decl_stmt|;
name|String
name|bindingId
init|=
literal|"http://schemas.xmlsoap.org/soap/"
decl_stmt|;
name|String
name|hostName
init|=
literal|""
decl_stmt|;
try|try
block|{
name|InetAddress
name|addr
init|=
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
decl_stmt|;
comment|//hostName = addr.getHostName();
name|hostName
operator|=
name|addr
operator|.
name|getCanonicalHostName
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnknownHostException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|String
name|address
init|=
literal|"http://"
operator|+
name|hostName
operator|+
literal|":9999/GreeterBean"
decl_stmt|;
name|ServiceImpl
name|ss
init|=
operator|new
name|ServiceImpl
argument_list|(
name|bus
argument_list|,
literal|null
argument_list|,
name|serviceQName
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ss
operator|.
name|addPort
argument_list|(
name|portQName
argument_list|,
name|bindingId
argument_list|,
name|address
argument_list|)
expr_stmt|;
comment|//Hello port = ss.createPort(portQName, Hello.class);
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|Greeter
name|port
init|=
name|ss
operator|.
name|getPort
argument_list|(
name|portQName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|Greeter
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|response
init|=
name|port
operator|.
name|greetMe
argument_list|(
literal|" CXF"
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|" server return: "
operator|+
name|response
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

