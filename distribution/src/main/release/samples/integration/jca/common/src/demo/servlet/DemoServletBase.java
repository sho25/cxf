begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_comment
comment|/** Abstract base class for demo servlets.  Provides a consistent  *  look&feel for the servlet based demos. Subclasses are only  *  required to display the portions of the page relevant to their  *  demo, minimizing the amount of clutter in the demo code.  *  * The servlet is based on the template method pattern. Subclasses  * are required to implement the<code>writeMainBody</code> method.  * the basic structure of the page is already laid out when this  * method is invoke so there is no need to for&lt;body&gt; or  *&lt;head&gt; type tags.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|DemoServletBase
extends|extends
name|HttpServlet
block|{
specifier|final
name|String
name|pageTitle
decl_stmt|;
specifier|public
name|DemoServletBase
parameter_list|(
name|String
name|pageTitle
parameter_list|)
block|{
name|this
operator|.
name|pageTitle
operator|=
name|pageTitle
expr_stmt|;
block|}
specifier|public
name|void
name|doGet
parameter_list|(
name|HttpServletRequest
name|req
parameter_list|,
name|HttpServletResponse
name|resp
parameter_list|)
block|{
name|PrintWriter
name|writer
init|=
literal|null
decl_stmt|;
try|try
block|{
name|resp
operator|.
name|setContentType
argument_list|(
literal|"text/html"
argument_list|)
expr_stmt|;
name|writer
operator|=
name|resp
operator|.
name|getWriter
argument_list|()
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<html>"
argument_list|)
expr_stmt|;
comment|// write out the page header
name|writeHeader
argument_list|(
name|writer
argument_list|)
expr_stmt|;
comment|// write out the body including displaying
name|writeBody
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</html>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|writer
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|void
name|writeBody
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
literal|"<body  topmargin=\"0\" leftmargin=\"0\" rightmargin=\"0\" margins=\"0\">"
argument_list|)
expr_stmt|;
name|writePageHeader
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<h2><br>&nbsp;&nbsp;"
operator|+
name|pageTitle
operator|+
literal|"</h2>"
argument_list|)
expr_stmt|;
name|writeMainBody
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</td>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</body>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</html>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|writePageHeader
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
literal|"<table width=\"100%\"  height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">"
operator|+
literal|"<TR><td width=\"9%\" height=\"1%\"></td><td width=\"1%\">"
operator|+
literal|"<img src=\"images/spacer.gif\" width=\"2\">"
operator|+
literal|"</td><td width=\"90%\">"
operator|+
literal|"<img src=\"images/cxf_banner.gif\" width=\"350\" height=\"57\"></td></tr>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<TR><td id=\"grey\"><img src=\"images/spacer.gif\" width=\"185\" height=\"1\">"
operator|+
literal|"</td><td id=\"grey\"><img src=\"images/spacer.gif\" width=\"2\" height=\"2\">"
operator|+
literal|"</td><td id=\"grey\"><img src=\"images/spacer.gif\" width=\"300\" height=\"2\"></td>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</tr><TR><td id=\"grey\"><img src=\"images/spacer.gif\" width=\"1\" height=\"1\">"
operator|+
literal|"</td><td id=\"grey\"><img src=\"images/spacer.gif\" width=\"2\" height=\"1\">"
operator|+
literal|"</td><td id=\"blue\">"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|writeHeader
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
literal|"<head>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<link rel=\"stylesheet\" type=\"text/css\" href=\"./cxf_doc.css\"/>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<title>CXF J2EE  Demos</title>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</head>"
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|void
name|writeMainBody
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
function_decl|;
block|}
end_class

end_unit

