begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|demo
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|ResourceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|BindingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|outbound
operator|.
name|CXFConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|outbound
operator|.
name|CXFConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jca
operator|.
name|outbound
operator|.
name|CXFConnectionSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hello_world_soap_http
operator|.
name|Greeter
import|;
end_import

begin_class
specifier|public
class|class
name|HelloWorldServlet
extends|extends
name|DemoServletBase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|EIS_JNDI_NAME
init|=
literal|"java:comp/env/eis/CXFConnectionFactory"
decl_stmt|;
specifier|private
name|String
name|operationName
decl_stmt|;
specifier|private
name|String
name|userName
decl_stmt|;
specifier|public
name|HelloWorldServlet
parameter_list|()
block|{
name|super
argument_list|(
literal|"J2EE Connector Hello World Demo"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|doGet
parameter_list|(
name|HttpServletRequest
name|req
parameter_list|,
name|HttpServletResponse
name|resp
parameter_list|)
block|{
try|try
block|{
name|operationName
operator|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"Operation"
argument_list|)
expr_stmt|;
name|userName
operator|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"User"
argument_list|)
expr_stmt|;
name|super
operator|.
name|doGet
argument_list|(
name|req
argument_list|,
name|resp
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|operationName
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|doPost
parameter_list|(
name|HttpServletRequest
name|req
parameter_list|,
name|HttpServletResponse
name|resp
parameter_list|)
block|{
name|doGet
argument_list|(
name|req
argument_list|,
name|resp
argument_list|)
expr_stmt|;
block|}
comment|/**       * get a connection to the SOAP service      */
specifier|protected
name|CXFConnection
name|getServiceConnection
parameter_list|()
throws|throws
name|NamingException
throws|,
name|ResourceException
block|{
comment|// retrieve the connection factory from JNDI
comment|//
name|Context
name|ctx
init|=
operator|new
name|InitialContext
argument_list|()
decl_stmt|;
name|CXFConnectionFactory
name|factory
init|=
operator|(
name|CXFConnectionFactory
operator|)
name|ctx
operator|.
name|lookup
argument_list|(
name|EIS_JNDI_NAME
argument_list|)
decl_stmt|;
comment|// create the connection
comment|//
name|CXFConnectionSpec
name|spec
init|=
operator|new
name|CXFConnectionSpec
argument_list|()
decl_stmt|;
name|spec
operator|.
name|setWsdlURL
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/wsdl/hello_world.wsdl"
argument_list|)
argument_list|)
expr_stmt|;
name|spec
operator|.
name|setBusConfigURL
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/etc/cxf_client.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|spec
operator|.
name|setServiceName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"SOAPService"
argument_list|)
argument_list|)
expr_stmt|;
name|spec
operator|.
name|setEndpointName
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://apache.org/hello_world_soap_http"
argument_list|,
literal|"SoapPort"
argument_list|)
argument_list|)
expr_stmt|;
name|spec
operator|.
name|setServiceClass
argument_list|(
name|Greeter
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|getConnection
argument_list|(
name|spec
argument_list|)
return|;
block|}
specifier|protected
name|void
name|writeMainBody
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
block|{
name|operationForm
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"&nbsp;&nbsp;"
operator|+
name|getResponseFromWebService
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|operationForm
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
literal|"<TABLE ALIGN=\"center\">"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<FORM ACTION=\"./*.do\" METHOD=GET>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<TR><TD><b>Operation:</b><BR>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<TR><TD>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<INPUT TYPE=RADIO NAME=\"Operation\" VALUE=\"sayHi\""
operator|+
operator|(
literal|"sayHi"
operator|.
name|equals
argument_list|(
name|operationName
argument_list|)
condition|?
literal|" CHECKED "
else|:
literal|""
operator|)
operator|+
literal|"> sayHi<BR>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<TR><TD>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<INPUT TYPE=RADIO NAME=\"Operation\" VALUE=\"greetMe\""
operator|+
operator|(
literal|"greetMe"
operator|.
name|equals
argument_list|(
name|operationName
argument_list|)
condition|?
literal|"  CHECKED "
else|:
literal|""
operator|)
operator|+
literal|"> greetMe "
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<INPUT TYPE=TEXT NAME=\"User\" VALUE=\""
operator|+
operator|(
literal|"greetMe"
operator|.
name|equals
argument_list|(
name|operationName
argument_list|)
condition|?
name|userName
else|:
literal|""
operator|)
operator|+
literal|"\" SIZE=20><BR>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<TR><TD>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"<INPUT TYPE=SUBMIT VALUE=\"Submit\"><BR></p>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</FORM>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"</TABLE>"
argument_list|)
expr_stmt|;
block|}
name|String
name|getResponseFromWebService
parameter_list|()
block|{
name|String
name|responseFromWebService
init|=
literal|"No message sent"
decl_stmt|;
name|CXFConnection
name|connection
init|=
literal|null
decl_stmt|;
try|try
block|{
name|connection
operator|=
name|getServiceConnection
argument_list|()
expr_stmt|;
name|Greeter
name|greeter
init|=
name|connection
operator|.
name|getService
argument_list|(
name|Greeter
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|operationName
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"sayHi"
operator|.
name|equals
argument_list|(
name|operationName
argument_list|)
condition|)
block|{
name|responseFromWebService
operator|=
name|greeter
operator|.
name|sayHi
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"greetMe"
operator|.
name|equals
argument_list|(
name|operationName
argument_list|)
condition|)
block|{
name|responseFromWebService
operator|=
name|greeter
operator|.
name|greetMe
argument_list|(
name|userName
argument_list|)
expr_stmt|;
block|}
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|requestContext
init|=
operator|(
operator|(
name|BindingProvider
operator|)
name|greeter
operator|)
operator|.
name|getRequestContext
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"requestContext = "
operator|+
name|requestContext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|responseFromWebService
operator|=
name|e
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
try|try
block|{
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// report error from close
block|}
block|}
return|return
name|responseFromWebService
return|;
block|}
block|}
end_class

end_unit

