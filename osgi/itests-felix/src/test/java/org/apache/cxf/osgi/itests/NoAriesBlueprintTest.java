begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|osgi
operator|.
name|itests
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|PaxExam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|ExamReactorStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|PerClass
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|junitBundles
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|systemProperty
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|PaxExam
operator|.
name|class
argument_list|)
annotation|@
name|ExamReactorStrategy
argument_list|(
name|PerClass
operator|.
name|class
argument_list|)
specifier|public
class|class
name|NoAriesBlueprintTest
extends|extends
name|OSGiTestSupport
block|{
comment|/**      * Make sure cxf bundles start up without aries blueprint      *       * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testCXFBundles
parameter_list|()
throws|throws
name|Exception
block|{
name|assertBundleStarted
argument_list|(
literal|"org.apache.cxf.cxf-core"
argument_list|)
expr_stmt|;
name|assertBundleStarted
argument_list|(
literal|"org.apache.cxf.cxf-rt-frontend-simple"
argument_list|)
expr_stmt|;
name|assertBundleStarted
argument_list|(
literal|"org.apache.cxf.cxf-rt-frontend-jaxws"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Configuration
specifier|public
name|Option
index|[]
name|config
parameter_list|()
block|{
name|String
name|localRepo
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"localRepository"
argument_list|)
decl_stmt|;
if|if
condition|(
name|localRepo
operator|==
literal|null
condition|)
block|{
name|localRepo
operator|=
literal|""
expr_stmt|;
block|}
return|return
operator|new
name|Option
index|[]
block|{
name|systemProperty
argument_list|(
literal|"java.awt.headless"
argument_list|)
operator|.
name|value
argument_list|(
literal|"true"
argument_list|)
block|,
name|when
argument_list|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|localRepo
argument_list|)
argument_list|)
operator|.
name|useOptions
argument_list|(
name|systemProperty
argument_list|(
literal|"org.ops4j.pax.url.mvn.localRepository"
argument_list|)
operator|.
name|value
argument_list|(
name|localRepo
argument_list|)
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.ws.xmlschema"
argument_list|,
literal|"xmlschema-core"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.servicemix.bundles"
argument_list|,
literal|"org.apache.servicemix.bundles.wsdl4j"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-core"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-wsdl"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-databinding-jaxb"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-bindings-xml"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-bindings-soap"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-frontend-simple"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"javax.servlet"
argument_list|,
literal|"javax.servlet-api"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-transports-http"
argument_list|)
block|,
name|mvnBundle
argument_list|(
literal|"org.apache.cxf"
argument_list|,
literal|"cxf-rt-frontend-jaxws"
argument_list|)
block|,
name|junitBundles
argument_list|()
block|}
return|;
block|}
block|}
end_class

end_unit

