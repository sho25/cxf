begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|sts
operator|.
name|renew
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|sts
operator|.
name|common
operator|.
name|SecurityTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|testutil
operator|.
name|common
operator|.
name|AbstractBusClientServerTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|SecurityConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|tokenstore
operator|.
name|SecurityToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|trust
operator|.
name|STSClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|WSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_comment
comment|/**  * In this test case, a CXF client requests a SAML Token from an STS and then tries to renew it.  */
end_comment

begin_class
specifier|public
class|class
name|SAMLRenewUnitTest
extends|extends
name|AbstractBusClientServerTestBase
block|{
specifier|static
specifier|final
name|String
name|STSPORT
init|=
name|allocatePort
argument_list|(
name|STSServer
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startServers
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"Server failed to launch"
argument_list|,
comment|// run the server in the same process
comment|// set this to false to fork
name|launchServer
argument_list|(
name|STSServer
operator|.
name|class
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|AfterClass
specifier|public
specifier|static
name|void
name|cleanup
parameter_list|()
throws|throws
name|Exception
block|{
name|SecurityTestUtil
operator|.
name|cleanup
argument_list|()
expr_stmt|;
name|stopAllServers
argument_list|()
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testRenewSAML1Token
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|SAMLRenewUnitTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"cxf-client-unit.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|SpringBusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|SpringBusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|wsdlLocation
init|=
literal|"https://localhost:"
operator|+
name|STSPORT
operator|+
literal|"/SecurityTokenService/Transport?wsdl"
decl_stmt|;
comment|// Request the token
name|SecurityToken
name|token
init|=
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|WSConstants
operator|.
name|WSS_SAML_TOKEN_TYPE
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
comment|// Sleep to expire the token
name|Thread
operator|.
name|sleep
argument_list|(
literal|2100
argument_list|)
expr_stmt|;
comment|// Renew the token
name|SecurityToken
name|renewedToken
init|=
name|renewSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|token
operator|.
name|equals
argument_list|(
name|renewedToken
argument_list|)
argument_list|)
expr_stmt|;
comment|// Try to validate old token -> fail.
try|try
block|{
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on trying to renew the old token"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
comment|// Validate the renewed token
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|renewedToken
argument_list|)
expr_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testRenewSAML2Token
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|SAMLRenewUnitTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"cxf-client-unit.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|SpringBusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|SpringBusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|wsdlLocation
init|=
literal|"https://localhost:"
operator|+
name|STSPORT
operator|+
literal|"/SecurityTokenService/Transport?wsdl"
decl_stmt|;
comment|// Request the token
name|SecurityToken
name|token
init|=
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|WSConstants
operator|.
name|WSS_SAML2_TOKEN_TYPE
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
comment|// Sleep to expire the token
name|Thread
operator|.
name|sleep
argument_list|(
literal|2100
argument_list|)
expr_stmt|;
comment|// Renew the token
name|SecurityToken
name|renewedToken
init|=
name|renewSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|token
operator|.
name|equals
argument_list|(
name|renewedToken
argument_list|)
argument_list|)
expr_stmt|;
comment|// Try to validate old token -> fail.
try|try
block|{
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on trying to renew the old token"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
comment|// Validate the renewed token
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|renewedToken
argument_list|)
expr_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testRenewSAML2TokenFail
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|SAMLRenewUnitTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"cxf-client-unit.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|SpringBusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|SpringBusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|wsdlLocation
init|=
literal|"https://localhost:"
operator|+
name|STSPORT
operator|+
literal|"/SecurityTokenService/Transport?wsdl"
decl_stmt|;
comment|// Request the token
name|SecurityToken
name|token
init|=
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|WSConstants
operator|.
name|WSS_SAML2_TOKEN_TYPE
argument_list|,
literal|2
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
comment|// Sleep to expire the token
name|Thread
operator|.
name|sleep
argument_list|(
literal|2100
argument_list|)
expr_stmt|;
comment|// Renew the token - this will fail as we didn't send a Renewing @OK attribute
try|try
block|{
name|renewSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on a different AppliesTo address"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testRenewValidSAML1Token
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|SAMLRenewUnitTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"cxf-client-unit.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|SpringBusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|SpringBusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|wsdlLocation
init|=
literal|"https://localhost:"
operator|+
name|STSPORT
operator|+
literal|"/SecurityTokenService/Transport?wsdl"
decl_stmt|;
comment|// Request the token
name|SecurityToken
name|token
init|=
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|WSConstants
operator|.
name|WSS_SAML_TOKEN_TYPE
argument_list|,
literal|300
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
comment|// Validate the token
name|List
argument_list|<
name|SecurityToken
argument_list|>
name|validatedTokens
init|=
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|validatedTokens
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|validatedTokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
name|token
argument_list|)
argument_list|)
expr_stmt|;
comment|// Renew the token
name|SecurityToken
name|renewedToken
init|=
name|renewSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|token
operator|.
name|equals
argument_list|(
name|renewedToken
argument_list|)
argument_list|)
expr_stmt|;
comment|// Validate the renewed token
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|renewedToken
argument_list|)
expr_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testRenewSAML2TokenDifferentAppliesTo
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|SAMLRenewUnitTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"cxf-client-unit.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|SpringBusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|SpringBusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|wsdlLocation
init|=
literal|"https://localhost:"
operator|+
name|STSPORT
operator|+
literal|"/SecurityTokenService/Transport?wsdl"
decl_stmt|;
comment|// Request the token
name|SecurityToken
name|token
init|=
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|WSConstants
operator|.
name|WSS_SAML2_TOKEN_TYPE
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
comment|// Sleep to expire the token
name|Thread
operator|.
name|sleep
argument_list|(
literal|2100
argument_list|)
expr_stmt|;
comment|// Renew the token
name|token
operator|.
name|setIssuerAddress
argument_list|(
literal|"http://www.apache.org"
argument_list|)
expr_stmt|;
try|try
block|{
name|renewSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failure expected on a different AppliesTo address"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testRenewDisabled
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|busFile
init|=
name|SAMLRenewUnitTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"cxf-client-unit.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|bf
operator|.
name|createBus
argument_list|(
name|busFile
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|SpringBusFactory
operator|.
name|setDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|SpringBusFactory
operator|.
name|setThreadDefaultBus
argument_list|(
name|bus
argument_list|)
expr_stmt|;
name|String
name|wsdlLocation
init|=
literal|"https://localhost:"
operator|+
name|STSPORT
operator|+
literal|"/SecurityTokenService/Transport?wsdl"
decl_stmt|;
comment|// Request the token
name|SecurityToken
name|token
init|=
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|WSConstants
operator|.
name|WSS_SAML_TOKEN_TYPE
argument_list|,
literal|300
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
comment|// Validate the token
name|List
argument_list|<
name|SecurityToken
argument_list|>
name|validatedTokens
init|=
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|validatedTokens
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|validatedTokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
name|token
argument_list|)
argument_list|)
expr_stmt|;
comment|// Renew the token
name|SecurityToken
name|renewedToken
init|=
name|renewSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|token
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|token
operator|.
name|equals
argument_list|(
name|renewedToken
argument_list|)
argument_list|)
expr_stmt|;
comment|// Validate the renewed token
name|validateSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|renewedToken
argument_list|)
expr_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SecurityToken
name|requestSecurityToken
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|String
name|wsdlLocation
parameter_list|,
name|String
name|tokenType
parameter_list|,
name|int
name|ttl
parameter_list|,
name|boolean
name|allowExpired
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|requestSecurityToken
argument_list|(
name|bus
argument_list|,
name|wsdlLocation
argument_list|,
name|tokenType
argument_list|,
name|ttl
argument_list|,
name|allowExpired
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|private
name|SecurityToken
name|requestSecurityToken
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|String
name|wsdlLocation
parameter_list|,
name|String
name|tokenType
parameter_list|,
name|int
name|ttl
parameter_list|,
name|boolean
name|allowExpired
parameter_list|,
name|boolean
name|sendRenewing
parameter_list|)
throws|throws
name|Exception
block|{
name|STSClient
name|stsClient
init|=
operator|new
name|STSClient
argument_list|(
name|bus
argument_list|)
decl_stmt|;
name|stsClient
operator|.
name|setWsdlLocation
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setServiceName
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}SecurityTokenService"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setEndpointName
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}Transport_Port"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setTokenType
argument_list|(
name|tokenType
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setKeyType
argument_list|(
literal|"http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|USERNAME
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|CALLBACK_HANDLER
argument_list|,
literal|"org.apache.cxf.systest.sts.common.CommonCallbackHandler"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|STS_TOKEN_PROPERTIES
argument_list|,
literal|"serviceKeystore.properties"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setTtl
argument_list|(
name|ttl
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setAllowRenewingAfterExpiry
argument_list|(
name|allowExpired
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setEnableLifetime
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setRequiresEntropy
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setKeySize
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setAddressingNamespace
argument_list|(
literal|"http://www.w3.org/2005/08/addressing"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setSendRenewing
argument_list|(
name|sendRenewing
argument_list|)
expr_stmt|;
return|return
name|stsClient
operator|.
name|requestSecurityToken
argument_list|(
literal|"https://localhost:8081/doubleit/services/doubleittransport"
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|SecurityToken
argument_list|>
name|validateSecurityToken
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|String
name|wsdlLocation
parameter_list|,
name|SecurityToken
name|securityToken
parameter_list|)
throws|throws
name|Exception
block|{
name|STSClient
name|stsClient
init|=
operator|new
name|STSClient
argument_list|(
name|bus
argument_list|)
decl_stmt|;
name|stsClient
operator|.
name|setWsdlLocation
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setServiceName
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}SecurityTokenService"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setEndpointName
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}Transport_Port"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|USERNAME
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|CALLBACK_HANDLER
argument_list|,
literal|"org.apache.cxf.systest.sts.common.CommonCallbackHandler"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|STS_TOKEN_PROPERTIES
argument_list|,
literal|"serviceKeystore.properties"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setAddressingNamespace
argument_list|(
literal|"http://www.w3.org/2005/08/addressing"
argument_list|)
expr_stmt|;
return|return
name|stsClient
operator|.
name|validateSecurityToken
argument_list|(
name|securityToken
argument_list|)
return|;
block|}
specifier|private
name|SecurityToken
name|renewSecurityToken
parameter_list|(
name|Bus
name|bus
parameter_list|,
name|String
name|wsdlLocation
parameter_list|,
name|SecurityToken
name|securityToken
parameter_list|,
name|boolean
name|enableAppliesTo
parameter_list|)
throws|throws
name|Exception
block|{
name|STSClient
name|stsClient
init|=
operator|new
name|STSClient
argument_list|(
name|bus
argument_list|)
decl_stmt|;
name|stsClient
operator|.
name|setWsdlLocation
argument_list|(
name|wsdlLocation
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setServiceName
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}SecurityTokenService"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setEndpointName
argument_list|(
literal|"{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}Transport_Port"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|USERNAME
argument_list|,
literal|"alice"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|CALLBACK_HANDLER
argument_list|,
literal|"org.apache.cxf.systest.sts.common.CommonCallbackHandler"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|SecurityConstants
operator|.
name|STS_TOKEN_PROPERTIES
argument_list|,
literal|"serviceKeystore.properties"
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setEnableAppliesTo
argument_list|(
name|enableAppliesTo
argument_list|)
expr_stmt|;
comment|// Request a token with a TTL of 60 minutes
name|stsClient
operator|.
name|setTtl
argument_list|(
literal|60
operator|*
literal|60
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setEnableLifetime
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|stsClient
operator|.
name|setAddressingNamespace
argument_list|(
literal|"http://www.w3.org/2005/08/addressing"
argument_list|)
expr_stmt|;
return|return
name|stsClient
operator|.
name|renewSecurityToken
argument_list|(
name|securityToken
argument_list|)
return|;
block|}
block|}
end_class

end_unit

