begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|sts
operator|.
name|stsclient
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|jsse
operator|.
name|TLSClientParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http
operator|.
name|HTTPConduit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|tokenstore
operator|.
name|SecurityToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|trust
operator|.
name|STSClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|trust
operator|.
name|STSTokenRetriever
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Some tests for STSClient configuration.  */
end_comment

begin_class
specifier|public
class|class
name|STSTokenRetrieverTest
extends|extends
name|AbstractSTSTokenTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testSTSAsymmetricBinding
parameter_list|()
throws|throws
name|Exception
block|{
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
decl_stmt|;
name|STSClient
name|stsClient
init|=
name|initStsClientAsymmeticBinding
argument_list|(
name|bus
argument_list|)
decl_stmt|;
name|MessageImpl
name|message
init|=
name|prepareMessage
argument_list|(
name|bus
argument_list|,
name|stsClient
argument_list|,
name|SERVICE_ENDPOINT_ASSYMETRIC
argument_list|)
decl_stmt|;
name|STSTokenRetriever
operator|.
name|TokenRequestParams
name|params
init|=
operator|new
name|STSTokenRetriever
operator|.
name|TokenRequestParams
argument_list|()
decl_stmt|;
name|SecurityToken
name|token
init|=
name|STSTokenRetriever
operator|.
name|getToken
argument_list|(
name|message
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|validateSecurityToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSTSTransportBinding
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Setup HttpsURLConnection to get STS WSDL
name|configureDefaultHttpsConnection
argument_list|()
expr_stmt|;
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getThreadDefaultBus
argument_list|()
decl_stmt|;
name|STSClient
name|stsClient
init|=
name|initStsClientTransportBinding
argument_list|(
name|bus
argument_list|)
decl_stmt|;
name|TLSClientParameters
name|tlsParams
init|=
name|prepareTLSParams
argument_list|()
decl_stmt|;
operator|(
operator|(
name|HTTPConduit
operator|)
name|stsClient
operator|.
name|getClient
argument_list|()
operator|.
name|getConduit
argument_list|()
operator|)
operator|.
name|setTlsClientParameters
argument_list|(
name|tlsParams
argument_list|)
expr_stmt|;
name|MessageImpl
name|message
init|=
name|prepareMessage
argument_list|(
name|bus
argument_list|,
name|stsClient
argument_list|,
name|SERVICE_ENDPOINT_TRANSPORT
argument_list|)
decl_stmt|;
name|STSTokenRetriever
operator|.
name|TokenRequestParams
name|params
init|=
operator|new
name|STSTokenRetriever
operator|.
name|TokenRequestParams
argument_list|()
decl_stmt|;
name|SecurityToken
name|token
init|=
name|STSTokenRetriever
operator|.
name|getToken
argument_list|(
name|message
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|validateSecurityToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

