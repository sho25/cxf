begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|systest
operator|.
name|sts
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|GeneralSecurityException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|KeyManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|configuration
operator|.
name|jsse
operator|.
name|TLSClientParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rt
operator|.
name|security
operator|.
name|crypto
operator|.
name|CryptoUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xml
operator|.
name|security
operator|.
name|utils
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|TLSClientParametersUtils
block|{
specifier|private
specifier|static
specifier|final
name|String
name|CLIENTSTORE
init|=
literal|"/keys/clientstore.jks"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|KEYSTORE_PASS
init|=
literal|"cspass"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|KEY_PASS
init|=
literal|"ckpass"
decl_stmt|;
specifier|private
name|TLSClientParametersUtils
parameter_list|()
block|{     }
specifier|public
specifier|static
name|TLSClientParameters
name|getTLSClientParameters
parameter_list|()
throws|throws
name|GeneralSecurityException
throws|,
name|IOException
block|{
specifier|final
name|TLSClientParameters
name|tlsCP
init|=
operator|new
name|TLSClientParameters
argument_list|()
decl_stmt|;
name|tlsCP
operator|.
name|setDisableCNCheck
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|KeyStore
name|keyStore
decl_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
name|CLIENTSTORE
argument_list|,
name|TLSClientParametersUtils
operator|.
name|class
argument_list|)
init|)
block|{
name|keyStore
operator|=
name|CryptoUtils
operator|.
name|loadKeyStore
argument_list|(
name|is
argument_list|,
name|KEYSTORE_PASS
operator|.
name|toCharArray
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|KeyManagerFactory
name|kmf
init|=
name|KeyManagerFactory
operator|.
name|getInstance
argument_list|(
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|kmf
operator|.
name|init
argument_list|(
name|keyStore
argument_list|,
name|KEY_PASS
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|tlsCP
operator|.
name|setKeyManagers
argument_list|(
name|kmf
operator|.
name|getKeyManagers
argument_list|()
argument_list|)
expr_stmt|;
name|TrustManagerFactory
name|tmf
init|=
name|TrustManagerFactory
operator|.
name|getInstance
argument_list|(
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|tmf
operator|.
name|init
argument_list|(
name|keyStore
argument_list|)
expr_stmt|;
name|tlsCP
operator|.
name|setTrustManagers
argument_list|(
name|tmf
operator|.
name|getTrustManagers
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tlsCP
return|;
block|}
block|}
end_class

end_unit

