begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rt
operator|.
name|security
operator|.
name|claims
operator|.
name|Claim
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|rt
operator|.
name|security
operator|.
name|claims
operator|.
name|ClaimCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ClaimTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ClaimsHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ClaimsParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ProcessedClaim
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ProcessedClaimCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|common
operator|.
name|CustomClaimParser
operator|.
name|CustomRequestClaim
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|core
operator|.
name|xml
operator|.
name|XMLObjectBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|core
operator|.
name|xml
operator|.
name|XMLObjectBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|core
operator|.
name|xml
operator|.
name|config
operator|.
name|XMLObjectProviderRegistrySupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|core
operator|.
name|xml
operator|.
name|schema
operator|.
name|XSInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opensaml
operator|.
name|saml
operator|.
name|saml2
operator|.
name|core
operator|.
name|AttributeValue
import|;
end_import

begin_comment
comment|/**  * A custom ClaimsHandler implementation for use in the tests.  */
end_comment

begin_class
specifier|public
class|class
name|CustomClaimsHandler
implements|implements
name|ClaimsHandler
block|{
specifier|private
specifier|static
name|List
argument_list|<
name|URI
argument_list|>
name|knownURIs
init|=
operator|new
name|ArrayList
argument_list|<
name|URI
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|URI
name|ROLE_CLAIM
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/role"
argument_list|)
decl_stmt|;
static|static
block|{
name|knownURIs
operator|.
name|add
argument_list|(
name|ClaimTypes
operator|.
name|FIRSTNAME
argument_list|)
expr_stmt|;
name|knownURIs
operator|.
name|add
argument_list|(
name|ClaimTypes
operator|.
name|LASTNAME
argument_list|)
expr_stmt|;
name|knownURIs
operator|.
name|add
argument_list|(
name|ClaimTypes
operator|.
name|EMAILADDRESS
argument_list|)
expr_stmt|;
name|knownURIs
operator|.
name|add
argument_list|(
name|ClaimTypes
operator|.
name|STREETADDRESS
argument_list|)
expr_stmt|;
name|knownURIs
operator|.
name|add
argument_list|(
name|ClaimTypes
operator|.
name|MOBILEPHONE
argument_list|)
expr_stmt|;
name|knownURIs
operator|.
name|add
argument_list|(
name|ROLE_CLAIM
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|URI
argument_list|>
name|getSupportedClaimTypes
parameter_list|()
block|{
return|return
name|knownURIs
return|;
block|}
specifier|public
name|ProcessedClaimCollection
name|retrieveClaimValues
parameter_list|(
name|ClaimCollection
name|claims
parameter_list|,
name|ClaimsParameters
name|parameters
parameter_list|)
block|{
if|if
condition|(
name|claims
operator|!=
literal|null
operator|&&
name|claims
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|ProcessedClaimCollection
name|claimCollection
init|=
operator|new
name|ProcessedClaimCollection
argument_list|()
decl_stmt|;
for|for
control|(
name|Claim
name|requestClaim
range|:
name|claims
control|)
block|{
name|ProcessedClaim
name|claim
init|=
operator|new
name|ProcessedClaim
argument_list|()
decl_stmt|;
name|claim
operator|.
name|setClaimType
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ClaimTypes
operator|.
name|FIRSTNAME
operator|.
name|equals
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|requestClaim
operator|instanceof
name|CustomRequestClaim
condition|)
block|{
name|CustomRequestClaim
name|customClaim
init|=
operator|(
name|CustomRequestClaim
operator|)
name|requestClaim
decl_stmt|;
name|String
name|customName
init|=
name|customClaim
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|+
literal|"@"
operator|+
name|customClaim
operator|.
name|getScope
argument_list|()
decl_stmt|;
name|claim
operator|.
name|addValue
argument_list|(
name|customName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|claim
operator|.
name|addValue
argument_list|(
literal|"alice"
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|ClaimTypes
operator|.
name|LASTNAME
operator|.
name|equals
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
condition|)
block|{
name|claim
operator|.
name|addValue
argument_list|(
literal|"doe"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ClaimTypes
operator|.
name|EMAILADDRESS
operator|.
name|equals
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
condition|)
block|{
name|claim
operator|.
name|addValue
argument_list|(
literal|"alice@cxf.apache.org"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ClaimTypes
operator|.
name|STREETADDRESS
operator|.
name|equals
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
condition|)
block|{
name|claim
operator|.
name|addValue
argument_list|(
literal|"1234 1st Street"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ClaimTypes
operator|.
name|MOBILEPHONE
operator|.
name|equals
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
condition|)
block|{
comment|// Test custom (Integer) attribute value
name|XMLObjectBuilderFactory
name|builderFactory
init|=
name|XMLObjectProviderRegistrySupport
operator|.
name|getBuilderFactory
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|XMLObjectBuilder
argument_list|<
name|XSInteger
argument_list|>
name|xsIntegerBuilder
init|=
operator|(
name|XMLObjectBuilder
argument_list|<
name|XSInteger
argument_list|>
operator|)
name|builderFactory
operator|.
name|getBuilder
argument_list|(
name|XSInteger
operator|.
name|TYPE_NAME
argument_list|)
decl_stmt|;
name|XSInteger
name|attributeValue
init|=
name|xsIntegerBuilder
operator|.
name|buildObject
argument_list|(
name|AttributeValue
operator|.
name|DEFAULT_ELEMENT_NAME
argument_list|,
name|XSInteger
operator|.
name|TYPE_NAME
argument_list|)
decl_stmt|;
name|attributeValue
operator|.
name|setValue
argument_list|(
literal|185912592
argument_list|)
expr_stmt|;
name|claim
operator|.
name|addValue
argument_list|(
name|attributeValue
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ROLE_CLAIM
operator|.
name|equals
argument_list|(
name|requestClaim
operator|.
name|getClaimType
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|requestClaim
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Object
name|requestedRole
range|:
name|requestClaim
operator|.
name|getValues
argument_list|()
control|)
block|{
if|if
condition|(
name|isUserInRole
argument_list|(
name|parameters
operator|.
name|getPrincipal
argument_list|()
argument_list|,
name|requestedRole
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|claim
operator|.
name|addValue
argument_list|(
name|requestedRole
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|claim
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
continue|continue;
block|}
block|}
else|else
block|{
comment|// If no specific role was requested return DUMMY role for user
name|claim
operator|.
name|addValue
argument_list|(
literal|"DUMMY"
argument_list|)
expr_stmt|;
block|}
block|}
name|claimCollection
operator|.
name|add
argument_list|(
name|claim
argument_list|)
expr_stmt|;
block|}
return|return
name|claimCollection
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|boolean
name|isUserInRole
parameter_list|(
name|Principal
name|principal
parameter_list|,
name|String
name|requestedRole
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

