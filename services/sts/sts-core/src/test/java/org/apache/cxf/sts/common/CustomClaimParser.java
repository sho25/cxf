begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ClaimsParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|RequestClaim
import|;
end_import

begin_class
specifier|public
class|class
name|CustomClaimParser
implements|implements
name|ClaimsParser
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CLAIMS_DIALECT
init|=
literal|"http://my.custom.org/my/custom/namespace"
decl_stmt|;
specifier|public
name|RequestClaim
name|parse
parameter_list|(
name|Element
name|claim
parameter_list|)
block|{
name|String
name|claimLocalName
init|=
name|claim
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
name|String
name|claimNS
init|=
name|claim
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
if|if
condition|(
name|CLAIMS_DIALECT
operator|.
name|equals
argument_list|(
name|claimNS
argument_list|)
operator|&&
literal|"MyElement"
operator|.
name|equals
argument_list|(
name|claimLocalName
argument_list|)
condition|)
block|{
name|String
name|claimTypeUri
init|=
name|claim
operator|.
name|getAttribute
argument_list|(
literal|"Uri"
argument_list|)
decl_stmt|;
name|CustomRequestClaim
name|response
init|=
operator|new
name|CustomRequestClaim
argument_list|()
decl_stmt|;
name|response
operator|.
name|setClaimType
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|claimTypeUri
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|claimValue
init|=
name|claim
operator|.
name|getAttribute
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|response
operator|.
name|setClaimValue
argument_list|(
name|claimValue
argument_list|)
expr_stmt|;
name|String
name|scope
init|=
name|claim
operator|.
name|getAttribute
argument_list|(
literal|"scope"
argument_list|)
decl_stmt|;
name|response
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getSupportedDialect
parameter_list|()
block|{
return|return
name|CLAIMS_DIALECT
return|;
block|}
comment|/**      * Extends RequestClaim class to add additional attributes      */
specifier|public
class|class
name|CustomRequestClaim
extends|extends
name|RequestClaim
block|{
specifier|private
name|String
name|scope
decl_stmt|;
specifier|public
name|String
name|getScope
parameter_list|()
block|{
return|return
name|scope
return|;
block|}
specifier|public
name|void
name|setScope
parameter_list|(
name|String
name|scope
parameter_list|)
block|{
name|this
operator|.
name|scope
operator|=
name|scope
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

