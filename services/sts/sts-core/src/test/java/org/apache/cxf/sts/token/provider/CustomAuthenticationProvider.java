begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|bean
operator|.
name|AuthenticationStatementBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|bean
operator|.
name|SubjectLocalityBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|builder
operator|.
name|SAML1Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|builder
operator|.
name|SAML2Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|dom
operator|.
name|WSConstants
import|;
end_import

begin_comment
comment|/**  * A custom AuthenticationStatementProvider implementation for use in the tests.  */
end_comment

begin_class
specifier|public
class|class
name|CustomAuthenticationProvider
implements|implements
name|AuthenticationStatementProvider
block|{
comment|/**      * Get an AuthenticationStatementBean using the given parameters.      */
specifier|public
name|AuthenticationStatementBean
name|getStatement
parameter_list|(
name|TokenProviderParameters
name|providerParameters
parameter_list|)
block|{
name|AuthenticationStatementBean
name|authBean
init|=
operator|new
name|AuthenticationStatementBean
argument_list|()
decl_stmt|;
name|SubjectLocalityBean
name|subjectLocality
init|=
operator|new
name|SubjectLocalityBean
argument_list|()
decl_stmt|;
name|subjectLocality
operator|.
name|setIpAddress
argument_list|(
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
name|authBean
operator|.
name|setSubjectLocality
argument_list|(
name|subjectLocality
argument_list|)
expr_stmt|;
if|if
condition|(
name|WSConstants
operator|.
name|WSS_SAML_TOKEN_TYPE
operator|.
name|equals
argument_list|(
name|providerParameters
operator|.
name|getTokenRequirements
argument_list|()
operator|.
name|getTokenType
argument_list|()
argument_list|)
condition|)
block|{
name|authBean
operator|.
name|setAuthenticationMethod
argument_list|(
name|SAML1Constants
operator|.
name|AUTH_METHOD_X509
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|authBean
operator|.
name|setAuthenticationMethod
argument_list|(
name|SAML2Constants
operator|.
name|AUTH_CONTEXT_CLASS_REF_X509
argument_list|)
expr_stmt|;
block|}
return|return
name|authBean
return|;
block|}
block|}
end_class

end_unit

