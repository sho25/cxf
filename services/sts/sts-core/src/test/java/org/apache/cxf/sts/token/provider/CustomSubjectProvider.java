begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|STSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|request
operator|.
name|KeyRequirements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|request
operator|.
name|TokenRequirements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|WSS4JConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|bean
operator|.
name|SubjectBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|builder
operator|.
name|SAML1Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|wss4j
operator|.
name|common
operator|.
name|saml
operator|.
name|builder
operator|.
name|SAML2Constants
import|;
end_import

begin_comment
comment|/**  * A test implementation of SubjectProvider.  */
end_comment

begin_class
specifier|public
class|class
name|CustomSubjectProvider
implements|implements
name|SubjectProvider
block|{
specifier|private
name|String
name|subjectNameQualifier
init|=
literal|"http://cxf.apache.org/sts/custom"
decl_stmt|;
comment|/**      * Get a SubjectBean object.      */
specifier|public
name|SubjectBean
name|getSubject
parameter_list|(
name|SubjectProviderParameters
name|subjectProviderParameters
parameter_list|)
block|{
name|TokenProviderParameters
name|providerParameters
init|=
name|subjectProviderParameters
operator|.
name|getProviderParameters
argument_list|()
decl_stmt|;
name|TokenRequirements
name|tokenRequirements
init|=
name|providerParameters
operator|.
name|getTokenRequirements
argument_list|()
decl_stmt|;
name|KeyRequirements
name|keyRequirements
init|=
name|providerParameters
operator|.
name|getKeyRequirements
argument_list|()
decl_stmt|;
name|String
name|tokenType
init|=
name|tokenRequirements
operator|.
name|getTokenType
argument_list|()
decl_stmt|;
name|String
name|keyType
init|=
name|keyRequirements
operator|.
name|getKeyType
argument_list|()
decl_stmt|;
name|String
name|confirmationMethod
init|=
name|getSubjectConfirmationMethod
argument_list|(
name|tokenType
argument_list|,
name|keyType
argument_list|)
decl_stmt|;
name|Principal
name|principal
init|=
name|providerParameters
operator|.
name|getPrincipal
argument_list|()
decl_stmt|;
return|return
operator|new
name|SubjectBean
argument_list|(
name|principal
operator|.
name|getName
argument_list|()
argument_list|,
name|subjectNameQualifier
argument_list|,
name|confirmationMethod
argument_list|)
return|;
block|}
comment|/**      * Get the SubjectConfirmation method given a tokenType and keyType      */
specifier|private
name|String
name|getSubjectConfirmationMethod
parameter_list|(
name|String
name|tokenType
parameter_list|,
name|String
name|keyType
parameter_list|)
block|{
if|if
condition|(
name|WSS4JConstants
operator|.
name|WSS_SAML2_TOKEN_TYPE
operator|.
name|equals
argument_list|(
name|tokenType
argument_list|)
operator|||
name|WSS4JConstants
operator|.
name|SAML2_NS
operator|.
name|equals
argument_list|(
name|tokenType
argument_list|)
condition|)
block|{
if|if
condition|(
name|STSConstants
operator|.
name|SYMMETRIC_KEY_KEYTYPE
operator|.
name|equals
argument_list|(
name|keyType
argument_list|)
operator|||
name|STSConstants
operator|.
name|PUBLIC_KEY_KEYTYPE
operator|.
name|equals
argument_list|(
name|keyType
argument_list|)
condition|)
block|{
return|return
name|SAML2Constants
operator|.
name|CONF_HOLDER_KEY
return|;
block|}
return|return
name|SAML2Constants
operator|.
name|CONF_BEARER
return|;
block|}
return|return
name|extracted
argument_list|(
name|keyType
argument_list|)
return|;
block|}
specifier|private
name|String
name|extracted
parameter_list|(
name|String
name|keyType
parameter_list|)
block|{
if|if
condition|(
name|STSConstants
operator|.
name|SYMMETRIC_KEY_KEYTYPE
operator|.
name|equals
argument_list|(
name|keyType
argument_list|)
operator|||
name|STSConstants
operator|.
name|PUBLIC_KEY_KEYTYPE
operator|.
name|equals
argument_list|(
name|keyType
argument_list|)
condition|)
block|{
return|return
name|SAML1Constants
operator|.
name|CONF_HOLDER_KEY
return|;
block|}
return|return
name|SAML1Constants
operator|.
name|CONF_BEARER
return|;
block|}
block|}
end_class

end_unit

