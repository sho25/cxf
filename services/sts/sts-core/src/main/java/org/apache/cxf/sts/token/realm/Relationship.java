begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|realm
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|IdentityMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ClaimsMapper
import|;
end_import

begin_comment
comment|/**  * This class holds the parameters that will be required to define  * a one-way relationship between a source and target realm.  * Two types of relationships are supported: FederatedIdentity and FederatedClaims  * If the realm of received token in the RST differs with the target realm either  * the configured IdentityMapper of ClaimsMapper are called depending on the type of relationship.  */
end_comment

begin_class
specifier|public
class|class
name|Relationship
block|{
specifier|public
specifier|static
specifier|final
name|String
name|FED_TYPE_IDENTITY
init|=
literal|"FederatedIdentity"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|FED_TYPE_CLAIMS
init|=
literal|"FederatedClaims"
decl_stmt|;
specifier|private
name|String
name|sourceRealm
decl_stmt|;
specifier|private
name|String
name|targetRealm
decl_stmt|;
specifier|private
name|IdentityMapper
name|identityMapper
decl_stmt|;
specifier|private
name|ClaimsMapper
name|claimsMapper
decl_stmt|;
specifier|private
name|String
name|type
decl_stmt|;
specifier|public
name|void
name|setSourceRealm
parameter_list|(
name|String
name|sourceRealm
parameter_list|)
block|{
name|this
operator|.
name|sourceRealm
operator|=
name|sourceRealm
expr_stmt|;
block|}
specifier|public
name|String
name|getSourceRealm
parameter_list|()
block|{
return|return
name|sourceRealm
return|;
block|}
specifier|public
name|void
name|setTargetRealm
parameter_list|(
name|String
name|targetRealm
parameter_list|)
block|{
name|this
operator|.
name|targetRealm
operator|=
name|targetRealm
expr_stmt|;
block|}
specifier|public
name|String
name|getTargetRealm
parameter_list|()
block|{
return|return
name|targetRealm
return|;
block|}
specifier|public
name|void
name|setIdentityMapper
parameter_list|(
name|IdentityMapper
name|identityMapper
parameter_list|)
block|{
name|this
operator|.
name|identityMapper
operator|=
name|identityMapper
expr_stmt|;
block|}
specifier|public
name|IdentityMapper
name|getIdentityMapper
parameter_list|()
block|{
return|return
name|identityMapper
return|;
block|}
specifier|public
name|void
name|setClaimsMapper
parameter_list|(
name|ClaimsMapper
name|claimsMapper
parameter_list|)
block|{
name|this
operator|.
name|claimsMapper
operator|=
name|claimsMapper
expr_stmt|;
block|}
specifier|public
name|ClaimsMapper
name|getClaimsMapper
parameter_list|()
block|{
return|return
name|claimsMapper
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
block|}
end_class

end_unit

