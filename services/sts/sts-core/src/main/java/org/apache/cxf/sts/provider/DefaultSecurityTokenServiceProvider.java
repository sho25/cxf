begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|STSPropertiesMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|claims
operator|.
name|ClaimsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|operation
operator|.
name|AbstractOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|operation
operator|.
name|TokenIssueOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|operation
operator|.
name|TokenRenewOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|operation
operator|.
name|TokenValidateOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|service
operator|.
name|ServiceMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|provider
operator|.
name|SAMLTokenProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|provider
operator|.
name|TokenProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|renewer
operator|.
name|SAMLTokenRenewer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|renewer
operator|.
name|TokenRenewer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|validator
operator|.
name|SAMLTokenValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|validator
operator|.
name|TokenValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|validator
operator|.
name|UsernameTokenValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|sts
operator|.
name|token
operator|.
name|validator
operator|.
name|X509TokenValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|sts
operator|.
name|provider
operator|.
name|SecurityTokenServiceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|ws
operator|.
name|security
operator|.
name|tokenstore
operator|.
name|TokenStore
import|;
end_import

begin_comment
comment|/**  * A "default" SecurityTokenServiceProvider implementation that defines the Issue and Validate  * Operations of the STS and adds support for issuing and validating SAML Assertions, and  * validating UsernameTokens and X.509 Tokens. It also defines the Renew Operation for SAML  * tokens.  */
end_comment

begin_class
specifier|public
class|class
name|DefaultSecurityTokenServiceProvider
extends|extends
name|SecurityTokenServiceProvider
block|{
specifier|private
name|STSPropertiesMBean
name|stsProperties
decl_stmt|;
specifier|private
name|boolean
name|encryptIssuedToken
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ServiceMBean
argument_list|>
name|services
decl_stmt|;
specifier|private
name|boolean
name|returnReferences
init|=
literal|true
decl_stmt|;
specifier|private
name|TokenStore
name|tokenStore
decl_stmt|;
specifier|private
name|ClaimsManager
name|claimsManager
init|=
operator|new
name|ClaimsManager
argument_list|()
decl_stmt|;
specifier|public
name|DefaultSecurityTokenServiceProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setReturnReferences
parameter_list|(
name|boolean
name|returnReferences
parameter_list|)
block|{
name|this
operator|.
name|returnReferences
operator|=
name|returnReferences
expr_stmt|;
block|}
specifier|public
name|void
name|setTokenStore
parameter_list|(
name|TokenStore
name|tokenStore
parameter_list|)
block|{
name|this
operator|.
name|tokenStore
operator|=
name|tokenStore
expr_stmt|;
block|}
specifier|public
name|void
name|setStsProperties
parameter_list|(
name|STSPropertiesMBean
name|stsProperties
parameter_list|)
block|{
name|this
operator|.
name|stsProperties
operator|=
name|stsProperties
expr_stmt|;
block|}
specifier|public
name|void
name|setEncryptIssuedToken
parameter_list|(
name|boolean
name|encryptIssuedToken
parameter_list|)
block|{
name|this
operator|.
name|encryptIssuedToken
operator|=
name|encryptIssuedToken
expr_stmt|;
block|}
specifier|public
name|void
name|setServices
parameter_list|(
name|List
argument_list|<
name|ServiceMBean
argument_list|>
name|services
parameter_list|)
block|{
name|this
operator|.
name|services
operator|=
name|services
expr_stmt|;
block|}
specifier|public
name|void
name|setClaimsManager
parameter_list|(
name|ClaimsManager
name|claimsManager
parameter_list|)
block|{
name|this
operator|.
name|claimsManager
operator|=
name|claimsManager
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Source
name|invoke
parameter_list|(
name|Source
name|request
parameter_list|)
block|{
if|if
condition|(
name|getIssueOperation
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setIssueOperation
argument_list|(
name|createTokenIssueOperation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getValidateOperation
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setValidateOperation
argument_list|(
name|createTokenValidateOperation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getRenewOperation
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setRenewOperation
argument_list|(
name|createTokenRenewOperation
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|super
operator|.
name|invoke
argument_list|(
name|request
argument_list|)
return|;
block|}
specifier|private
name|TokenIssueOperation
name|createTokenIssueOperation
parameter_list|()
block|{
name|TokenIssueOperation
name|issueOperation
init|=
operator|new
name|TokenIssueOperation
argument_list|()
decl_stmt|;
name|populateAbstractOperation
argument_list|(
name|issueOperation
argument_list|)
expr_stmt|;
return|return
name|issueOperation
return|;
block|}
specifier|private
name|TokenValidateOperation
name|createTokenValidateOperation
parameter_list|()
block|{
name|TokenValidateOperation
name|validateOperation
init|=
operator|new
name|TokenValidateOperation
argument_list|()
decl_stmt|;
name|populateAbstractOperation
argument_list|(
name|validateOperation
argument_list|)
expr_stmt|;
return|return
name|validateOperation
return|;
block|}
specifier|private
name|TokenRenewOperation
name|createTokenRenewOperation
parameter_list|()
block|{
name|TokenRenewOperation
name|renewOperation
init|=
operator|new
name|TokenRenewOperation
argument_list|()
decl_stmt|;
name|populateAbstractOperation
argument_list|(
name|renewOperation
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TokenRenewer
argument_list|>
name|tokenRenewers
init|=
operator|new
name|ArrayList
argument_list|<
name|TokenRenewer
argument_list|>
argument_list|()
decl_stmt|;
name|tokenRenewers
operator|.
name|add
argument_list|(
operator|new
name|SAMLTokenRenewer
argument_list|()
argument_list|)
expr_stmt|;
name|renewOperation
operator|.
name|setTokenRenewers
argument_list|(
name|tokenRenewers
argument_list|)
expr_stmt|;
return|return
name|renewOperation
return|;
block|}
specifier|private
name|void
name|populateAbstractOperation
parameter_list|(
name|AbstractOperation
name|abstractOperation
parameter_list|)
block|{
name|List
argument_list|<
name|TokenProvider
argument_list|>
name|tokenProviders
init|=
operator|new
name|ArrayList
argument_list|<
name|TokenProvider
argument_list|>
argument_list|()
decl_stmt|;
name|tokenProviders
operator|.
name|add
argument_list|(
operator|new
name|SAMLTokenProvider
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TokenValidator
argument_list|>
name|tokenValidators
init|=
operator|new
name|ArrayList
argument_list|<
name|TokenValidator
argument_list|>
argument_list|()
decl_stmt|;
name|tokenValidators
operator|.
name|add
argument_list|(
operator|new
name|SAMLTokenValidator
argument_list|()
argument_list|)
expr_stmt|;
name|tokenValidators
operator|.
name|add
argument_list|(
operator|new
name|UsernameTokenValidator
argument_list|()
argument_list|)
expr_stmt|;
name|tokenValidators
operator|.
name|add
argument_list|(
operator|new
name|X509TokenValidator
argument_list|()
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setTokenProviders
argument_list|(
name|tokenProviders
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setTokenValidators
argument_list|(
name|tokenValidators
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setStsProperties
argument_list|(
name|stsProperties
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setEncryptIssuedToken
argument_list|(
name|encryptIssuedToken
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setServices
argument_list|(
name|services
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setReturnReferences
argument_list|(
name|returnReferences
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setTokenStore
argument_list|(
name|tokenStore
argument_list|)
expr_stmt|;
name|abstractOperation
operator|.
name|setClaimsManager
argument_list|(
name|claimsManager
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

