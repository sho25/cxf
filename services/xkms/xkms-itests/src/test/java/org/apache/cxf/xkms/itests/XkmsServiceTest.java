begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|itests
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|options
operator|.
name|KarafDistributionOption
operator|.
name|editConfigurationFilePut
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|options
operator|.
name|KarafDistributionOption
operator|.
name|karafDistributionConfiguration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|options
operator|.
name|KarafDistributionOption
operator|.
name|logLevel
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|maven
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|scanFeatures
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|PrototypeKeyBindingType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|RegisterRequestType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|RegisterResultType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|ResultMajorEnum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|ResultMinorEnum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xmldsig
operator|.
name|KeyInfoType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|options
operator|.
name|LogLevelOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|ExamReactorStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|JUnit4TestRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|options
operator|.
name|MavenArtifactUrlReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|options
operator|.
name|MavenUrlReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|EagerSingleStagedReactorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3
operator|.
name|_2002
operator|.
name|_03
operator|.
name|xkms_wsdl
operator|.
name|XKMSPortType
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|JUnit4TestRunner
operator|.
name|class
argument_list|)
annotation|@
name|ExamReactorStrategy
argument_list|(
name|EagerSingleStagedReactorFactory
operator|.
name|class
argument_list|)
specifier|public
class|class
name|XkmsServiceTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|HTTP_PORT
init|=
literal|"9191"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|XKMS_ENDPOINT
init|=
literal|"http://localhost:"
operator|+
name|HTTP_PORT
operator|+
literal|"/cxf/XKMS"
decl_stmt|;
annotation|@
name|Inject
name|BundleContext
name|bundleContext
decl_stmt|;
annotation|@
name|Inject
name|XKMSPortType
name|xkmsService
decl_stmt|;
annotation|@
name|Configuration
specifier|public
name|Option
index|[]
name|config
parameter_list|()
block|{
name|MavenArtifactUrlReference
name|karafUrl
init|=
name|maven
argument_list|()
operator|.
name|groupId
argument_list|(
literal|"org.apache.karaf"
argument_list|)
operator|.
name|artifactId
argument_list|(
literal|"apache-karaf"
argument_list|)
operator|.
name|version
argument_list|(
literal|"2.3.0"
argument_list|)
operator|.
name|type
argument_list|(
literal|"tar.gz"
argument_list|)
decl_stmt|;
name|MavenUrlReference
name|cxfFeatures
init|=
name|maven
argument_list|()
operator|.
name|groupId
argument_list|(
literal|"org.apache.cxf.karaf"
argument_list|)
operator|.
name|artifactId
argument_list|(
literal|"apache-cxf"
argument_list|)
operator|.
name|type
argument_list|(
literal|"xml"
argument_list|)
operator|.
name|classifier
argument_list|(
literal|"features"
argument_list|)
operator|.
name|version
argument_list|(
literal|"2.7.0"
argument_list|)
decl_stmt|;
name|MavenUrlReference
name|xkmsFeatures
init|=
name|maven
argument_list|()
operator|.
name|groupId
argument_list|(
literal|"org.apache.cxf.services.xkms"
argument_list|)
operator|.
name|artifactId
argument_list|(
literal|"cxf-services-xkms-features"
argument_list|)
operator|.
name|type
argument_list|(
literal|"xml"
argument_list|)
operator|.
name|version
argument_list|(
literal|"2.7.1-SNAPSHOT"
argument_list|)
decl_stmt|;
return|return
operator|new
name|Option
index|[]
block|{
name|karafDistributionConfiguration
argument_list|()
operator|.
name|frameworkUrl
argument_list|(
name|karafUrl
argument_list|)
operator|.
name|karafVersion
argument_list|(
literal|"2.3.0"
argument_list|)
operator|.
name|name
argument_list|(
literal|"Apache Karaf"
argument_list|)
operator|.
name|unpackDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/exam"
argument_list|)
argument_list|)
block|,
name|logLevel
argument_list|(
name|LogLevelOption
operator|.
name|LogLevel
operator|.
name|INFO
argument_list|)
block|,
name|CoreOptions
operator|.
name|scanFeatures
argument_list|(
name|cxfFeatures
argument_list|,
literal|"cxf"
argument_list|)
block|,
name|scanFeatures
argument_list|(
name|xkmsFeatures
argument_list|,
literal|"cxf-xkms-service"
argument_list|,
literal|"cxf-xkms-client"
argument_list|)
operator|.
name|start
argument_list|()
block|,
name|editConfigurationFilePut
argument_list|(
literal|"etc/org.ops4j.pax.web.cfg"
argument_list|,
literal|"org.osgi.service.http.port"
argument_list|,
name|HTTP_PORT
argument_list|)
block|,
name|editConfigurationFilePut
argument_list|(
literal|"etc/org.apache.cxf.xkms.client.cfg"
argument_list|,
literal|"xkms.endpoint"
argument_list|,
name|XKMS_ENDPOINT
argument_list|)
block|,
name|editConfigurationFilePut
argument_list|(
literal|"etc/org.apache.cxf.xkms.cfg"
argument_list|,
literal|"xkms.filepersistence.storageDir"
argument_list|,
literal|"data/xkms/keys"
argument_list|)
block|,
comment|// vmOption(
comment|// "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" )
block|}
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyRegister
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|Exception
block|{
name|RegisterRequestType
name|request
init|=
operator|new
name|RegisterRequestType
argument_list|()
decl_stmt|;
name|request
operator|.
name|setId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|RegisterResultType
name|result
init|=
name|xkmsService
operator|.
name|register
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ResultMajorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_SENDER
operator|.
name|value
argument_list|()
argument_list|,
name|result
operator|.
name|getResultMajor
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ResultMinorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_FAILURE
operator|.
name|value
argument_list|()
argument_list|,
name|result
operator|.
name|getResultMinor
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegisterWithoutKey
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|Exception
block|{
name|RegisterRequestType
name|request
init|=
operator|new
name|RegisterRequestType
argument_list|()
decl_stmt|;
name|PrototypeKeyBindingType
name|binding
init|=
operator|new
name|PrototypeKeyBindingType
argument_list|()
decl_stmt|;
name|KeyInfoType
name|keyInfo
init|=
operator|new
name|KeyInfoType
argument_list|()
decl_stmt|;
name|binding
operator|.
name|setKeyInfo
argument_list|(
name|keyInfo
argument_list|)
expr_stmt|;
name|request
operator|.
name|setPrototypeKeyBinding
argument_list|(
name|binding
argument_list|)
expr_stmt|;
name|request
operator|.
name|setId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|RegisterResultType
name|result
init|=
name|xkmsService
operator|.
name|register
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ResultMajorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_SENDER
operator|.
name|value
argument_list|()
argument_list|,
name|result
operator|.
name|getResultMajor
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ResultMinorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_FAILURE
operator|.
name|value
argument_list|()
argument_list|,
name|result
operator|.
name|getResultMinor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

