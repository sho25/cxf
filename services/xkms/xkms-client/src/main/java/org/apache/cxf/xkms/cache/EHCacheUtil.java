begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|config
operator|.
name|CacheConfiguration
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|config
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|EHCacheUtil
block|{
specifier|private
specifier|static
name|Method
name|cacheManagerCreateMethodNoArg
decl_stmt|;
specifier|private
specifier|static
name|Method
name|cacheManagerCreateMethodConfigurationArg
decl_stmt|;
static|static
block|{
comment|// these methods are either completely available or absent (valid assumption from 2.5.0 to 2.7.2 so far)
try|try
block|{
comment|// from 2.5.2
name|cacheManagerCreateMethodNoArg
operator|=
name|CacheManager
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"newInstance"
argument_list|,
operator|(
name|Class
argument_list|<
name|?
argument_list|>
index|[]
operator|)
literal|null
argument_list|)
expr_stmt|;
name|cacheManagerCreateMethodConfigurationArg
operator|=
name|CacheManager
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"newInstance"
argument_list|,
name|Configuration
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|e
parameter_list|)
block|{
try|try
block|{
comment|// before 2.5.2
name|cacheManagerCreateMethodNoArg
operator|=
name|CacheManager
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"create"
argument_list|,
operator|(
name|Class
argument_list|<
name|?
argument_list|>
index|[]
operator|)
literal|null
argument_list|)
expr_stmt|;
name|cacheManagerCreateMethodConfigurationArg
operator|=
name|CacheManager
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"create"
argument_list|,
name|Configuration
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
specifier|private
name|EHCacheUtil
parameter_list|()
block|{
comment|//
block|}
specifier|public
specifier|static
name|CacheConfiguration
name|getCacheConfiguration
parameter_list|(
name|String
name|key
parameter_list|,
name|CacheManager
name|cacheManager
parameter_list|)
block|{
name|CacheConfiguration
name|cc
init|=
name|cacheManager
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getCacheConfigurations
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|cc
operator|==
literal|null
operator|&&
name|key
operator|.
name|contains
argument_list|(
literal|"-"
argument_list|)
condition|)
block|{
name|cc
operator|=
name|cacheManager
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getCacheConfigurations
argument_list|()
operator|.
name|get
argument_list|(
name|key
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|lastIndexOf
argument_list|(
literal|'-'
argument_list|)
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cc
operator|==
literal|null
condition|)
block|{
name|cc
operator|=
name|cacheManager
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getDefaultCacheConfiguration
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|cc
operator|==
literal|null
condition|)
block|{
name|cc
operator|=
operator|new
name|CacheConfiguration
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|cc
operator|=
operator|(
name|CacheConfiguration
operator|)
name|cc
operator|.
name|clone
argument_list|()
expr_stmt|;
block|}
name|cc
operator|.
name|setName
argument_list|(
name|key
argument_list|)
expr_stmt|;
return|return
name|cc
return|;
block|}
specifier|public
specifier|static
name|CacheManager
name|createCacheManager
parameter_list|()
throws|throws
name|CacheException
block|{
try|try
block|{
return|return
operator|(
name|CacheManager
operator|)
name|cacheManagerCreateMethodNoArg
operator|.
name|invoke
argument_list|(
literal|null
argument_list|,
operator|(
name|Object
index|[]
operator|)
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CacheException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|CacheManager
name|createCacheManager
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|CacheException
block|{
try|try
block|{
return|return
operator|(
name|CacheManager
operator|)
name|cacheManagerCreateMethodConfigurationArg
operator|.
name|invoke
argument_list|(
literal|null
argument_list|,
operator|new
name|Object
index|[]
block|{
name|conf
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CacheException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

