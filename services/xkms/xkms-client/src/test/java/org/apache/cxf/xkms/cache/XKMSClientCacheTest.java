begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * A test for the XKMSClientCache  */
end_comment

begin_class
specifier|public
class|class
name|XKMSClientCacheTest
block|{
specifier|private
specifier|final
name|XKMSClientCache
name|cache
decl_stmt|;
specifier|private
specifier|final
name|X509Certificate
name|alice
decl_stmt|;
specifier|private
specifier|final
name|X509Certificate
name|bob
decl_stmt|;
specifier|public
name|XKMSClientCacheTest
parameter_list|()
throws|throws
name|Exception
block|{
name|cache
operator|=
operator|new
name|EHCacheXKMSClientCache
argument_list|()
expr_stmt|;
name|KeyStore
name|keystore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
decl_stmt|;
name|keystore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/alice.jks"
argument_list|,
name|XKMSClientCacheTest
operator|.
name|class
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|alice
operator|=
operator|(
name|X509Certificate
operator|)
name|keystore
operator|.
name|getCertificate
argument_list|(
literal|"alice"
argument_list|)
expr_stmt|;
name|keystore
operator|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
expr_stmt|;
name|keystore
operator|.
name|load
argument_list|(
name|ClassLoaderUtils
operator|.
name|getResourceAsStream
argument_list|(
literal|"keys/bob.jks"
argument_list|,
name|XKMSClientCacheTest
operator|.
name|class
argument_list|)
argument_list|,
literal|"password"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|bob
operator|=
operator|(
name|X509Certificate
operator|)
name|keystore
operator|.
name|getCertificate
argument_list|(
literal|"bob"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testCache
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|alice
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bob
argument_list|)
expr_stmt|;
name|XKMSCacheToken
name|aliceToken
init|=
operator|new
name|XKMSCacheToken
argument_list|()
decl_stmt|;
name|aliceToken
operator|.
name|setX509Certificate
argument_list|(
name|alice
argument_list|)
expr_stmt|;
comment|// Put
name|storeCertificateInCache
argument_list|(
name|alice
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|storeCertificateInCache
argument_list|(
name|bob
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Get
name|XKMSCacheToken
name|cachedToken
init|=
name|cache
operator|.
name|get
argument_list|(
name|alice
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|alice
argument_list|,
name|cachedToken
operator|.
name|getX509Certificate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|cachedToken
operator|.
name|isXkmsValidated
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|get
argument_list|(
name|getKeyForIssuerSerial
argument_list|(
name|alice
operator|.
name|getIssuerX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|alice
operator|.
name|getSerialNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|alice
argument_list|,
name|cachedToken
operator|.
name|getX509Certificate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|cachedToken
operator|.
name|isXkmsValidated
argument_list|()
argument_list|)
expr_stmt|;
name|cachedToken
operator|=
name|cache
operator|.
name|get
argument_list|(
name|bob
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bob
argument_list|,
name|cachedToken
operator|.
name|getX509Certificate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|cachedToken
operator|.
name|isXkmsValidated
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|get
argument_list|(
name|getKeyForIssuerSerial
argument_list|(
name|bob
operator|.
name|getIssuerX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|bob
operator|.
name|getSerialNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bob
argument_list|,
name|cachedToken
operator|.
name|getX509Certificate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|cachedToken
operator|.
name|isXkmsValidated
argument_list|()
argument_list|)
expr_stmt|;
comment|// Validate
name|cachedToken
operator|=
name|cache
operator|.
name|get
argument_list|(
name|alice
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|cachedToken
operator|.
name|setXkmsValidated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cachedToken
operator|=
name|cache
operator|.
name|get
argument_list|(
name|alice
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cachedToken
operator|.
name|isXkmsValidated
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|get
argument_list|(
name|getKeyForIssuerSerial
argument_list|(
name|alice
operator|.
name|getIssuerX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|alice
operator|.
name|getSerialNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cachedToken
operator|.
name|isXkmsValidated
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|storeCertificateInCache
parameter_list|(
name|X509Certificate
name|certificate
parameter_list|,
name|boolean
name|validated
parameter_list|)
block|{
name|XKMSCacheToken
name|cacheToken
init|=
operator|new
name|XKMSCacheToken
argument_list|(
name|certificate
argument_list|)
decl_stmt|;
name|cacheToken
operator|.
name|setXkmsValidated
argument_list|(
name|validated
argument_list|)
expr_stmt|;
comment|// Store it using IssuerSerial
name|String
name|issuerSerialKey
init|=
name|getKeyForIssuerSerial
argument_list|(
name|certificate
operator|.
name|getIssuerX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|certificate
operator|.
name|getSerialNumber
argument_list|()
argument_list|)
decl_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|issuerSerialKey
argument_list|,
name|cacheToken
argument_list|)
expr_stmt|;
comment|// Store it using the Subject DN as well
name|String
name|subjectDNKey
init|=
name|certificate
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|subjectDNKey
argument_list|,
name|cacheToken
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getKeyForIssuerSerial
parameter_list|(
name|String
name|issuer
parameter_list|,
name|BigInteger
name|serial
parameter_list|)
block|{
return|return
name|issuer
operator|+
literal|"-"
operator|+
name|serial
operator|.
name|toString
argument_list|(
literal|16
argument_list|)
return|;
block|}
block|}
end_class

end_unit

