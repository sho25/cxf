begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|CertificateException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|UseKeyWithType
import|;
end_import

begin_class
specifier|public
class|class
name|FileRegisterHandler
extends|extends
name|AbstractX509RegisterHandler
block|{
specifier|private
specifier|final
name|File
name|storageDir
decl_stmt|;
specifier|public
name|FileRegisterHandler
parameter_list|(
name|File
name|storageDir
parameter_list|)
throws|throws
name|CertificateException
block|{
name|super
argument_list|()
expr_stmt|;
if|if
condition|(
name|storageDir
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"File Persistence: root certificate directory is not initialized"
argument_list|)
throw|;
block|}
name|this
operator|.
name|storageDir
operator|=
name|storageDir
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|saveCertificate
parameter_list|(
name|X509Certificate
name|cert
parameter_list|,
name|UseKeyWithType
name|id
parameter_list|)
block|{
name|String
name|name
init|=
name|cert
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
try|try
block|{
name|File
name|certFile
init|=
operator|new
name|File
argument_list|(
name|storageDir
argument_list|,
name|getRelativePathForSubjectDn
argument_list|(
name|id
operator|.
name|getIdentifier
argument_list|()
argument_list|,
name|cert
argument_list|)
argument_list|)
decl_stmt|;
name|certFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileOutputStream
name|fos
init|=
operator|new
name|FileOutputStream
argument_list|(
name|certFile
argument_list|)
decl_stmt|;
name|BufferedOutputStream
name|bos
init|=
operator|new
name|BufferedOutputStream
argument_list|(
name|fos
argument_list|)
decl_stmt|;
name|bos
operator|.
name|write
argument_list|(
name|cert
operator|.
name|getEncoded
argument_list|()
argument_list|)
expr_stmt|;
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
name|fos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error saving certificate "
operator|+
name|name
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|getRelativePathForSubjectDn
parameter_list|(
name|String
name|subjectDn
parameter_list|,
name|X509Certificate
name|cert
parameter_list|)
block|{
name|BigInteger
name|serialNumber
init|=
name|cert
operator|.
name|getSerialNumber
argument_list|()
decl_stmt|;
name|String
name|issuer
init|=
name|cert
operator|.
name|getIssuerX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|path
init|=
name|convertDnForFileSystem
argument_list|(
name|subjectDn
argument_list|)
operator|+
literal|"-"
operator|+
name|serialNumber
operator|.
name|toString
argument_list|()
operator|+
literal|"-"
operator|+
name|convertDnForFileSystem
argument_list|(
name|issuer
argument_list|)
operator|+
literal|".cer"
decl_stmt|;
comment|// TODO Filter for only valid and safe characters
return|return
name|path
return|;
block|}
specifier|public
name|String
name|convertDnForFileSystem
parameter_list|(
name|String
name|dn
parameter_list|)
block|{
name|String
name|result
init|=
name|dn
operator|.
name|replace
argument_list|(
literal|"="
argument_list|,
literal|"-"
argument_list|)
decl_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|", "
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|","
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|"/"
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|"\\"
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|"{"
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|"}"
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|replace
argument_list|(
literal|":"
argument_list|,
literal|"_"
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

