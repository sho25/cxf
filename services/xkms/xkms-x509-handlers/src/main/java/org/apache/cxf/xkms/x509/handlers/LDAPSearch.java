begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|CommunicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingEnumeration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|InitialDirContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|SearchControls
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|SearchResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|ldap
operator|.
name|InitialLdapContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|logging
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|exception
operator|.
name|XKMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|ResultMajorEnum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|ResultMinorEnum
import|;
end_import

begin_class
specifier|public
class|class
name|LDAPSearch
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SECURITY_AUTHENTICATION
init|=
literal|"simple"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogUtils
operator|.
name|getL7dLogger
argument_list|(
name|LDAPSearch
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|ldapuri
decl_stmt|;
specifier|private
name|String
name|bindDN
decl_stmt|;
specifier|private
name|String
name|bindPassword
decl_stmt|;
specifier|private
name|int
name|numRetries
decl_stmt|;
specifier|private
name|InitialDirContext
name|dirContext
decl_stmt|;
specifier|public
name|LDAPSearch
parameter_list|(
name|String
name|ldapuri
parameter_list|,
name|String
name|bindDN
parameter_list|,
name|String
name|bindPassword
parameter_list|,
name|int
name|numRetries
parameter_list|)
block|{
name|this
operator|.
name|ldapuri
operator|=
name|ldapuri
expr_stmt|;
name|this
operator|.
name|bindDN
operator|=
name|bindDN
expr_stmt|;
name|this
operator|.
name|bindPassword
operator|=
name|bindPassword
expr_stmt|;
name|this
operator|.
name|numRetries
operator|=
name|numRetries
expr_stmt|;
block|}
comment|//CHECKSTYLE:OFF
specifier|private
name|InitialDirContext
name|createInitialContext
parameter_list|()
throws|throws
name|NamingException
block|{
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|env
operator|.
name|put
argument_list|(
name|javax
operator|.
name|naming
operator|.
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|,
literal|"com.sun.jndi.ldap.LdapCtxFactory"
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|javax
operator|.
name|naming
operator|.
name|Context
operator|.
name|PROVIDER_URL
argument_list|,
name|ldapuri
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|javax
operator|.
name|naming
operator|.
name|Context
operator|.
name|SECURITY_AUTHENTICATION
argument_list|,
name|SECURITY_AUTHENTICATION
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|javax
operator|.
name|naming
operator|.
name|Context
operator|.
name|SECURITY_PRINCIPAL
argument_list|,
name|bindDN
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|javax
operator|.
name|naming
operator|.
name|Context
operator|.
name|SECURITY_CREDENTIALS
argument_list|,
name|bindPassword
argument_list|)
expr_stmt|;
return|return
operator|new
name|InitialLdapContext
argument_list|(
name|env
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|//CHECKSTYLE:ON
specifier|public
name|NamingEnumeration
argument_list|<
name|SearchResult
argument_list|>
name|searchSubTree
parameter_list|(
name|String
name|rootEntry
parameter_list|,
name|String
name|filter
parameter_list|)
throws|throws
name|NamingException
block|{
name|int
name|retry
init|=
literal|0
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
if|if
condition|(
name|this
operator|.
name|dirContext
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|dirContext
operator|=
name|createInitialContext
argument_list|()
expr_stmt|;
block|}
name|SearchControls
name|ctls
init|=
operator|new
name|SearchControls
argument_list|()
decl_stmt|;
name|ctls
operator|.
name|setSearchScope
argument_list|(
name|SearchControls
operator|.
name|SUBTREE_SCOPE
argument_list|)
expr_stmt|;
return|return
name|dirContext
operator|.
name|search
argument_list|(
name|rootEntry
argument_list|,
name|filter
argument_list|,
name|ctls
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|CommunicationException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"Error in ldap search: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|this
operator|.
name|dirContext
operator|=
literal|null
expr_stmt|;
name|retry
operator|++
expr_stmt|;
if|if
condition|(
name|retry
operator|>=
name|numRetries
condition|)
block|{
throw|throw
operator|new
name|XKMSException
argument_list|(
name|ResultMajorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_RECEIVER
argument_list|,
name|ResultMinorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_FAILURE
argument_list|,
literal|"Backend failure"
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|public
name|Attributes
name|getAttributes
parameter_list|(
name|String
name|dn
parameter_list|)
throws|throws
name|NamingException
block|{
name|int
name|retry
init|=
literal|0
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
if|if
condition|(
name|this
operator|.
name|dirContext
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|dirContext
operator|=
name|createInitialContext
argument_list|()
expr_stmt|;
block|}
return|return
name|dirContext
operator|.
name|getAttributes
argument_list|(
name|dn
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|CommunicationException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"Error in ldap search: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|this
operator|.
name|dirContext
operator|=
literal|null
expr_stmt|;
name|retry
operator|++
expr_stmt|;
if|if
condition|(
name|retry
operator|>=
name|numRetries
condition|)
block|{
throw|throw
operator|new
name|XKMSException
argument_list|(
name|ResultMajorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_RECEIVER
argument_list|,
name|ResultMinorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_FAILURE
argument_list|,
literal|"Backend failure"
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|public
name|Attribute
name|getAttribute
parameter_list|(
name|String
name|dn
parameter_list|,
name|String
name|attrName
parameter_list|)
throws|throws
name|NamingException
block|{
name|Attribute
name|attr
init|=
name|getAttributes
argument_list|(
name|dn
argument_list|)
operator|.
name|get
argument_list|(
name|attrName
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|!=
literal|null
condition|)
block|{
return|return
name|attr
return|;
block|}
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Did not find a matching attribute for dn: "
operator|+
name|dn
operator|+
literal|" attributeName: "
operator|+
name|attrName
argument_list|)
throw|;
block|}
specifier|public
name|Attributes
name|findAttributes
parameter_list|(
name|String
name|rootDN
parameter_list|,
name|String
name|filter
parameter_list|)
throws|throws
name|NamingException
block|{
name|NamingEnumeration
argument_list|<
name|SearchResult
argument_list|>
name|answer
init|=
name|searchSubTree
argument_list|(
name|rootDN
argument_list|,
name|filter
argument_list|)
decl_stmt|;
if|if
condition|(
name|answer
operator|.
name|hasMore
argument_list|()
condition|)
block|{
name|SearchResult
name|sr
init|=
name|answer
operator|.
name|next
argument_list|()
decl_stmt|;
return|return
name|sr
operator|.
name|getAttributes
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|Attribute
name|findAttribute
parameter_list|(
name|String
name|rootDN
parameter_list|,
name|String
name|filter
parameter_list|,
name|String
name|attrName
parameter_list|)
throws|throws
name|NamingException
block|{
name|Attributes
name|attrs
init|=
name|findAttributes
argument_list|(
name|rootDN
argument_list|,
name|filter
argument_list|)
decl_stmt|;
if|if
condition|(
name|attrs
operator|!=
literal|null
condition|)
block|{
name|Attribute
name|attr
init|=
name|attrs
operator|.
name|get
argument_list|(
name|attrName
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Did not find a matching attribute for root: "
operator|+
name|rootDN
operator|+
literal|" filter: "
operator|+
name|filter
operator|+
literal|" attributeName: "
operator|+
name|attrName
argument_list|)
throw|;
block|}
return|return
name|attr
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|bind
parameter_list|(
name|String
name|dn
parameter_list|,
name|Attributes
name|attribs
parameter_list|)
throws|throws
name|NamingException
block|{
name|int
name|retry
init|=
literal|0
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
if|if
condition|(
name|this
operator|.
name|dirContext
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|dirContext
operator|=
name|createInitialContext
argument_list|()
expr_stmt|;
block|}
name|dirContext
operator|.
name|bind
argument_list|(
name|dn
argument_list|,
literal|null
argument_list|,
name|attribs
argument_list|)
expr_stmt|;
return|return;
block|}
catch|catch
parameter_list|(
name|CommunicationException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|log
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
literal|"Error in ldap search: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|this
operator|.
name|dirContext
operator|=
literal|null
expr_stmt|;
name|retry
operator|++
expr_stmt|;
if|if
condition|(
name|retry
operator|>=
name|numRetries
condition|)
block|{
throw|throw
operator|new
name|XKMSException
argument_list|(
name|ResultMajorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_RECEIVER
argument_list|,
name|ResultMinorEnum
operator|.
name|HTTP_WWW_W_3_ORG_2002_03_XKMS_FAILURE
argument_list|,
literal|"Backend failure"
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

