begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|CertificateException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|BasicAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|BasicAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|UseKeyWithType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|utils
operator|.
name|X509Utils
import|;
end_import

begin_class
specifier|public
class|class
name|LdapRegisterHandler
extends|extends
name|AbstractX509RegisterHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ATTR_OBJECT_CLASS
init|=
literal|"objectClass"
decl_stmt|;
specifier|private
specifier|final
name|LdapSearch
name|ldapSearch
decl_stmt|;
specifier|private
specifier|final
name|LdapSchemaConfig
name|ldapConfig
decl_stmt|;
specifier|private
specifier|final
name|String
name|rootDN
decl_stmt|;
specifier|public
name|LdapRegisterHandler
parameter_list|(
name|LdapSearch
name|ldapSearch
parameter_list|,
name|LdapSchemaConfig
name|ldapConfig
parameter_list|,
name|String
name|rootDN
parameter_list|)
throws|throws
name|CertificateException
block|{
name|this
operator|.
name|ldapSearch
operator|=
name|ldapSearch
expr_stmt|;
name|this
operator|.
name|ldapConfig
operator|=
name|ldapConfig
expr_stmt|;
name|this
operator|.
name|rootDN
operator|=
name|rootDN
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|saveCertificate
parameter_list|(
name|X509Certificate
name|cert
parameter_list|,
name|UseKeyWithType
name|id
parameter_list|)
block|{
name|Attributes
name|attribs
init|=
operator|new
name|BasicAttributes
argument_list|()
decl_stmt|;
name|attribs
operator|.
name|put
argument_list|(
operator|new
name|BasicAttribute
argument_list|(
name|ATTR_OBJECT_CLASS
argument_list|,
name|ldapConfig
operator|.
name|getCertObjectClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|attribs
operator|.
name|put
argument_list|(
operator|new
name|BasicAttribute
argument_list|(
name|ldapConfig
operator|.
name|getAttrUID
argument_list|()
argument_list|,
name|cert
operator|.
name|getSubjectX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|attribs
operator|.
name|put
argument_list|(
operator|new
name|BasicAttribute
argument_list|(
name|ldapConfig
operator|.
name|getAttrIssuerID
argument_list|()
argument_list|,
name|cert
operator|.
name|getIssuerX500Principal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|attribs
operator|.
name|put
argument_list|(
operator|new
name|BasicAttribute
argument_list|(
name|ldapConfig
operator|.
name|getAttrSerialNumber
argument_list|()
argument_list|,
name|cert
operator|.
name|getSerialNumber
argument_list|()
operator|.
name|toString
argument_list|(
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addConstantAttributes
argument_list|(
name|ldapConfig
operator|.
name|getConstAttrNamesCSV
argument_list|()
argument_list|,
name|ldapConfig
operator|.
name|getConstAttrValuesCSV
argument_list|()
argument_list|,
name|attribs
argument_list|)
expr_stmt|;
try|try
block|{
name|attribs
operator|.
name|put
argument_list|(
operator|new
name|BasicAttribute
argument_list|(
name|ldapConfig
operator|.
name|getAttrCrtBinary
argument_list|()
argument_list|,
name|cert
operator|.
name|getEncoded
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|dn
init|=
name|X509Utils
operator|.
name|getDN
argument_list|(
name|id
operator|.
name|getApplication
argument_list|()
argument_list|,
name|id
operator|.
name|getIdentifier
argument_list|()
argument_list|,
name|ldapConfig
operator|.
name|getServiceCertRDNTemplate
argument_list|()
argument_list|,
name|rootDN
argument_list|)
decl_stmt|;
name|ldapSearch
operator|.
name|bind
argument_list|(
name|dn
argument_list|,
name|attribs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|addConstantAttributes
parameter_list|(
name|String
name|names
parameter_list|,
name|String
name|values
parameter_list|,
name|Attributes
name|attribs
parameter_list|)
block|{
name|String
index|[]
name|arrNames
init|=
name|names
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
name|String
index|[]
name|arrValues
init|=
name|values
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
if|if
condition|(
name|arrNames
operator|.
name|length
operator|!=
name|arrValues
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Inconsintent constant attributes: %s; %s"
argument_list|,
name|names
argument_list|,
name|values
argument_list|)
argument_list|)
throw|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|arrNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|attribs
operator|.
name|put
argument_list|(
operator|new
name|BasicAttribute
argument_list|(
name|arrNames
index|[
name|i
index|]
argument_list|,
name|arrValues
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

