begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|CertificateException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|client
operator|.
name|X509AppId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|handlers
operator|.
name|Applications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|handlers
operator|.
name|XKMSConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|LocateRequestType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|MessageAbstractType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|QueryKeyBindingType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|UnverifiedKeyBindingType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|UseKeyWithType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|repo
operator|.
name|CertificateRepo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|repo
operator|.
name|ldap
operator|.
name|LdapCertificateRepo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|repo
operator|.
name|ldap
operator|.
name|LdapSchemaConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|x509
operator|.
name|repo
operator|.
name|ldap
operator|.
name|LdapSearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test needs a real LDAP server.  */
end_comment

begin_class
specifier|public
class|class
name|X509LocatorTest
block|{
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|ObjectFactory
name|XKMS_OF
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|xkms
operator|.
name|model
operator|.
name|xkms
operator|.
name|ObjectFactory
argument_list|()
decl_stmt|;
name|CertificateRepo
name|certRepo
decl_stmt|;
name|X509Locator
name|locator
decl_stmt|;
annotation|@
name|Ignore
annotation|@
name|Before
specifier|public
name|void
name|setUpLdapRepo
parameter_list|()
throws|throws
name|CertificateException
block|{
name|LdapSearch
name|ldapSearch
init|=
operator|new
name|LdapSearch
argument_list|(
literal|"ldap://localhost:2389"
argument_list|,
literal|"cn=Directory Manager,dc=example,dc=com"
argument_list|,
literal|"test"
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|LdapSchemaConfig
name|ldapConfig
init|=
operator|new
name|LdapSchemaConfig
argument_list|()
decl_stmt|;
name|ldapConfig
operator|.
name|setAttrCrtBinary
argument_list|(
literal|"userCertificate;binary"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setAttrIssuerID
argument_list|(
literal|"manager"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setAttrSerialNumber
argument_list|(
literal|"employeeNumber"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setAttrUID
argument_list|(
literal|"uid"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setCertObjectClass
argument_list|(
literal|"inetOrgPerson"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setConstAttrNamesCSV
argument_list|(
literal|"sn"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setConstAttrValuesCSV
argument_list|(
literal|"X509 certificate"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setIntermediateFilter
argument_list|(
literal|"(objectClass=*)"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setServiceCertRDNTemplate
argument_list|(
literal|"cn=%s,ou=services"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setServiceCertUIDTemplate
argument_list|(
literal|"cn=%s"
argument_list|)
expr_stmt|;
name|ldapConfig
operator|.
name|setTrustedAuthorityFilter
argument_list|(
literal|"(&(objectClass=inetOrgPerson)(ou:dn:=CAs))"
argument_list|)
expr_stmt|;
name|certRepo
operator|=
operator|new
name|LdapCertificateRepo
argument_list|(
name|ldapSearch
argument_list|,
name|ldapConfig
argument_list|,
literal|"dc=example,dc=com"
argument_list|)
expr_stmt|;
name|locator
operator|=
operator|new
name|X509Locator
argument_list|(
name|certRepo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|locate
parameter_list|()
block|{
name|List
argument_list|<
name|X509AppId
argument_list|>
name|ids
init|=
operator|new
name|ArrayList
argument_list|<
name|X509AppId
argument_list|>
argument_list|()
decl_stmt|;
name|X509AppId
name|id
init|=
operator|new
name|X509AppId
argument_list|(
name|Applications
operator|.
name|PKIX
argument_list|,
literal|"alice"
argument_list|)
decl_stmt|;
name|ids
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|LocateRequestType
name|request
init|=
name|prepareLocateXKMSRequest
argument_list|(
name|ids
argument_list|)
decl_stmt|;
name|UnverifiedKeyBindingType
name|result
init|=
name|locator
operator|.
name|locate
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|result
operator|.
name|getKeyInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|LocateRequestType
name|prepareLocateXKMSRequest
parameter_list|(
name|List
argument_list|<
name|X509AppId
argument_list|>
name|ids
parameter_list|)
block|{
name|QueryKeyBindingType
name|queryKeyBindingType
init|=
name|XKMS_OF
operator|.
name|createQueryKeyBindingType
argument_list|()
decl_stmt|;
for|for
control|(
name|X509AppId
name|id
range|:
name|ids
control|)
block|{
name|UseKeyWithType
name|useKeyWithType
init|=
name|XKMS_OF
operator|.
name|createUseKeyWithType
argument_list|()
decl_stmt|;
name|useKeyWithType
operator|.
name|setIdentifier
argument_list|(
name|id
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|useKeyWithType
operator|.
name|setApplication
argument_list|(
name|id
operator|.
name|getApplication
argument_list|()
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
name|queryKeyBindingType
operator|.
name|getUseKeyWith
argument_list|()
operator|.
name|add
argument_list|(
name|useKeyWithType
argument_list|)
expr_stmt|;
block|}
name|LocateRequestType
name|locateRequestType
init|=
name|XKMS_OF
operator|.
name|createLocateRequestType
argument_list|()
decl_stmt|;
name|locateRequestType
operator|.
name|setQueryKeyBinding
argument_list|(
name|queryKeyBindingType
argument_list|)
expr_stmt|;
name|setGenericRequestParams
argument_list|(
name|locateRequestType
argument_list|)
expr_stmt|;
return|return
name|locateRequestType
return|;
block|}
specifier|private
name|void
name|setGenericRequestParams
parameter_list|(
name|MessageAbstractType
name|request
parameter_list|)
block|{
name|request
operator|.
name|setService
argument_list|(
name|XKMSConstants
operator|.
name|XKMS_ENDPOINT_NAME
argument_list|)
expr_stmt|;
name|request
operator|.
name|setId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

