begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebMethod
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|b_2
operator|.
name|InvalidTopicExpressionFaultType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|b_2
operator|.
name|NotificationMessageHolderType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|b_2
operator|.
name|TopicExpressionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|br_2
operator|.
name|DestroyRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|br_2
operator|.
name|DestroyRegistrationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|br_2
operator|.
name|PublisherRegistrationFailedFaultType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|br_2
operator|.
name|RegisterPublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|br_2
operator|.
name|ResourceNotDestroyedFaultType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|brw_2
operator|.
name|PublisherRegistrationFailedFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|brw_2
operator|.
name|PublisherRegistrationManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|brw_2
operator|.
name|PublisherRegistrationRejectedFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|brw_2
operator|.
name|ResourceNotDestroyedFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|bw_2
operator|.
name|InvalidTopicExpressionFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|bw_2
operator|.
name|TopicNotSupportedFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsrf
operator|.
name|rw_2
operator|.
name|ResourceUnknownFault
import|;
end_import

begin_class
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.oasis_open.docs.wsn.brw_2.PublisherRegistrationManager"
argument_list|)
specifier|public
specifier|abstract
class|class
name|AbstractPublisher
extends|extends
name|AbstractEndpoint
implements|implements
name|PublisherRegistrationManager
block|{
specifier|protected
name|W3CEndpointReference
name|publisherReference
decl_stmt|;
specifier|protected
name|boolean
name|demand
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|TopicExpressionType
argument_list|>
name|topic
decl_stmt|;
specifier|public
name|AbstractPublisher
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|W3CEndpointReference
name|getPublisherReference
parameter_list|()
block|{
return|return
name|publisherReference
return|;
block|}
comment|/**      *      * @param destroyRegistrationRequest      * @return returns org.oasis_open.docs.wsn.br_1.DestroyResponse      * @throws ResourceNotDestroyedFault      * @throws ResourceUnknownFault      */
annotation|@
name|WebMethod
argument_list|(
name|operationName
operator|=
literal|"DestroyRegistration"
argument_list|)
annotation|@
name|WebResult
argument_list|(
name|name
operator|=
literal|"DestroyRegistrationResponse"
argument_list|,
name|targetNamespace
operator|=
literal|"http://docs.oasis-open.org/wsn/br-2"
argument_list|,
name|partName
operator|=
literal|"DestroyRegistrationResponse"
argument_list|)
specifier|public
name|DestroyRegistrationResponse
name|destroyRegistration
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|name
operator|=
literal|"DestroyRegistration"
argument_list|,
name|targetNamespace
operator|=
literal|"http://docs.oasis-open.org/wsn/br-2"
argument_list|,
name|partName
operator|=
literal|"DestroyRegistrationRequest"
argument_list|)
name|DestroyRegistration
name|destroyRegistrationRequest
parameter_list|)
throws|throws
name|ResourceNotDestroyedFault
throws|,
name|ResourceUnknownFault
block|{
name|destroy
argument_list|()
expr_stmt|;
return|return
operator|new
name|DestroyRegistrationResponse
argument_list|()
return|;
block|}
specifier|public
specifier|abstract
name|void
name|notify
parameter_list|(
name|NotificationMessageHolderType
name|messageHolder
parameter_list|)
function_decl|;
specifier|protected
name|void
name|destroy
parameter_list|()
throws|throws
name|ResourceNotDestroyedFault
block|{
try|try
block|{
name|unregister
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EndpointRegistrationException
name|e
parameter_list|)
block|{
name|ResourceNotDestroyedFaultType
name|fault
init|=
operator|new
name|ResourceNotDestroyedFaultType
argument_list|()
decl_stmt|;
throw|throw
operator|new
name|ResourceNotDestroyedFault
argument_list|(
literal|"Error unregistering endpoint"
argument_list|,
name|fault
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|create
parameter_list|(
name|RegisterPublisher
name|registerPublisherRequest
parameter_list|)
throws|throws
name|InvalidTopicExpressionFault
throws|,
name|PublisherRegistrationFailedFault
throws|,
name|PublisherRegistrationRejectedFault
throws|,
name|ResourceUnknownFault
throws|,
name|TopicNotSupportedFault
block|{
name|validatePublisher
argument_list|(
name|registerPublisherRequest
argument_list|)
expr_stmt|;
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|validatePublisher
parameter_list|(
name|RegisterPublisher
name|registerPublisherRequest
parameter_list|)
throws|throws
name|InvalidTopicExpressionFault
throws|,
name|PublisherRegistrationFailedFault
throws|,
name|PublisherRegistrationRejectedFault
throws|,
name|ResourceUnknownFault
throws|,
name|TopicNotSupportedFault
block|{
comment|// Check consumer reference
name|publisherReference
operator|=
name|registerPublisherRequest
operator|.
name|getPublisherReference
argument_list|()
expr_stmt|;
comment|// Check topic
name|topic
operator|=
name|registerPublisherRequest
operator|.
name|getTopic
argument_list|()
expr_stmt|;
comment|// Check demand based
name|demand
operator|=
name|registerPublisherRequest
operator|.
name|isDemand
argument_list|()
operator|!=
literal|null
operator|&&
name|registerPublisherRequest
operator|.
name|isDemand
argument_list|()
operator|.
name|booleanValue
argument_list|()
expr_stmt|;
comment|// Check all parameters
if|if
condition|(
name|publisherReference
operator|==
literal|null
operator|&&
name|demand
condition|)
block|{
name|PublisherRegistrationFailedFaultType
name|fault
init|=
operator|new
name|PublisherRegistrationFailedFaultType
argument_list|()
decl_stmt|;
throw|throw
operator|new
name|PublisherRegistrationFailedFault
argument_list|(
literal|"Invalid PublisherReference: null"
argument_list|,
name|fault
argument_list|)
throw|;
block|}
if|if
condition|(
name|demand
operator|&&
operator|(
name|topic
operator|==
literal|null
operator|||
name|topic
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
name|InvalidTopicExpressionFaultType
name|fault
init|=
operator|new
name|InvalidTopicExpressionFaultType
argument_list|()
decl_stmt|;
throw|throw
operator|new
name|InvalidTopicExpressionFault
argument_list|(
literal|"Must specify at least one topic for demand-based publishing"
argument_list|,
name|fault
argument_list|)
throw|;
block|}
block|}
specifier|protected
specifier|abstract
name|void
name|start
parameter_list|()
throws|throws
name|PublisherRegistrationFailedFault
function_decl|;
block|}
end_class

end_unit

