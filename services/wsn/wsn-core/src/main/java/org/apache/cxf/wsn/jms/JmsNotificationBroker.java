begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
operator|.
name|AbstractNotificationBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
operator|.
name|AbstractPublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
operator|.
name|AbstractSubscription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsrf
operator|.
name|rp_2
operator|.
name|GetResourcePropertyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsrf
operator|.
name|rpw_2
operator|.
name|InvalidResourcePropertyQNameFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsrf
operator|.
name|rw_2
operator|.
name|ResourceUnavailableFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsrf
operator|.
name|rw_2
operator|.
name|ResourceUnknownFault
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|JmsNotificationBroker
extends|extends
name|AbstractNotificationBroker
block|{
specifier|private
name|ConnectionFactory
name|connectionFactory
decl_stmt|;
specifier|private
name|Connection
name|connection
decl_stmt|;
specifier|public
name|JmsNotificationBroker
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JmsNotificationBroker
parameter_list|(
name|String
name|name
parameter_list|,
name|ConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|connection
operator|==
literal|null
condition|)
block|{
name|connection
operator|=
name|connectionFactory
operator|.
name|createConnection
argument_list|()
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|init
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|destroy
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|AbstractPublisher
name|createPublisher
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|JmsPublisher
name|publisher
init|=
name|createJmsPublisher
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|publisher
operator|.
name|setAddress
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|getAddress
argument_list|()
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"registrations/"
operator|+
name|name
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|publisher
operator|.
name|setManager
argument_list|(
name|getManager
argument_list|()
argument_list|)
expr_stmt|;
name|publisher
operator|.
name|setConnection
argument_list|(
name|connection
argument_list|)
expr_stmt|;
return|return
name|publisher
return|;
block|}
annotation|@
name|Override
specifier|protected
name|AbstractSubscription
name|createSubscription
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|JmsSubscription
name|subscription
init|=
name|createJmsSubscription
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|subscription
operator|.
name|setAddress
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|getAddress
argument_list|()
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"subscriptions/"
operator|+
name|name
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|subscription
operator|.
name|setManager
argument_list|(
name|getManager
argument_list|()
argument_list|)
expr_stmt|;
name|subscription
operator|.
name|setConnection
argument_list|(
name|connection
argument_list|)
expr_stmt|;
return|return
name|subscription
return|;
block|}
specifier|protected
specifier|abstract
name|JmsSubscription
name|createJmsSubscription
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
specifier|protected
specifier|abstract
name|JmsPublisher
name|createJmsPublisher
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
specifier|public
name|ConnectionFactory
name|getConnectionFactory
parameter_list|()
block|{
return|return
name|connectionFactory
return|;
block|}
specifier|public
name|void
name|setConnectionFactory
parameter_list|(
name|ConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
block|}
specifier|protected
name|GetResourcePropertyResponse
name|handleGetResourceProperty
parameter_list|(
name|QName
name|property
parameter_list|)
throws|throws
name|ResourceUnavailableFault
throws|,
name|ResourceUnknownFault
throws|,
name|InvalidResourcePropertyQNameFault
block|{
if|if
condition|(
name|TOPIC_EXPRESSION_QNAME
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
block|{
comment|// TODO
block|}
elseif|else
if|if
condition|(
name|FIXED_TOPIC_SET_QNAME
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
block|{
comment|// TODO
block|}
elseif|else
if|if
condition|(
name|TOPIC_EXPRESSION_DIALECT_QNAME
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|GetResourcePropertyResponse
name|r
init|=
operator|new
name|GetResourcePropertyResponse
argument_list|()
decl_stmt|;
name|r
operator|.
name|getAny
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JAXBElement
argument_list|(
name|TOPIC_EXPRESSION_DIALECT_QNAME
argument_list|,
name|URI
operator|.
name|class
argument_list|,
name|JmsTopicExpressionConverter
operator|.
name|SIMPLE_DIALECT
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
elseif|else
if|if
condition|(
name|TOPIC_SET_QNAME
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
block|{
comment|// TODO
block|}
return|return
name|super
operator|.
name|handleGetResourceProperty
argument_list|(
name|property
argument_list|)
return|;
block|}
block|}
end_class

end_unit

