begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied. See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
operator|.
name|client
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jws
operator|.
name|WebService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|wsaddressing
operator|.
name|W3CEndpointReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|wsn
operator|.
name|util
operator|.
name|WSNHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|b_2
operator|.
name|NotificationMessageHolderType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|b_2
operator|.
name|Notify
import|;
end_import

begin_import
import|import
name|org
operator|.
name|oasis_open
operator|.
name|docs
operator|.
name|wsn
operator|.
name|bw_2
operator|.
name|NotificationConsumer
import|;
end_import

begin_class
annotation|@
name|WebService
argument_list|(
name|endpointInterface
operator|=
literal|"org.oasis_open.docs.wsn.bw_2.NotificationConsumer"
argument_list|)
specifier|public
class|class
name|Consumer
implements|implements
name|NotificationConsumer
implements|,
name|Referencable
block|{
specifier|public
interface|interface
name|Callback
block|{
name|void
name|notify
parameter_list|(
name|NotificationMessageHolderType
name|message
parameter_list|)
function_decl|;
block|}
specifier|private
specifier|final
name|Callback
name|callback
decl_stmt|;
specifier|private
specifier|final
name|Endpoint
name|endpoint
decl_stmt|;
specifier|private
specifier|final
name|JAXBContext
name|context
decl_stmt|;
specifier|public
name|Consumer
parameter_list|(
name|Callback
name|callback
parameter_list|,
name|String
name|address
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|extraClasses
parameter_list|)
block|{
name|this
operator|.
name|callback
operator|=
name|callback
expr_stmt|;
name|WSNHelper
name|helper
init|=
name|WSNHelper
operator|.
name|getInstance
argument_list|()
decl_stmt|;
if|if
condition|(
name|helper
operator|.
name|supportsExtraClasses
argument_list|()
condition|)
block|{
name|this
operator|.
name|endpoint
operator|=
name|helper
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|this
argument_list|,
name|extraClasses
argument_list|)
expr_stmt|;
name|this
operator|.
name|context
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|endpoint
operator|=
name|helper
operator|.
name|publish
argument_list|(
name|address
argument_list|,
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|extraClasses
operator|!=
literal|null
operator|&&
name|extraClasses
operator|.
name|length
operator|>
literal|0
condition|)
block|{
try|try
block|{
name|this
operator|.
name|context
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|extraClasses
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
else|else
block|{
name|this
operator|.
name|context
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|this
operator|.
name|endpoint
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|public
name|W3CEndpointReference
name|getEpr
parameter_list|()
block|{
return|return
name|this
operator|.
name|endpoint
operator|.
name|getEndpointReference
argument_list|(
name|W3CEndpointReference
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|void
name|notify
parameter_list|(
annotation|@
name|WebParam
argument_list|(
name|partName
operator|=
literal|"Notify"
argument_list|,
name|name
operator|=
literal|"Notify"
argument_list|,
name|targetNamespace
operator|=
literal|"http://docs.oasis-open.org/wsn/b-2"
argument_list|)
name|Notify
name|notify
parameter_list|)
block|{
for|for
control|(
name|NotificationMessageHolderType
name|message
range|:
name|notify
operator|.
name|getNotificationMessage
argument_list|()
control|)
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|Object
name|o
init|=
name|message
operator|.
name|getMessage
argument_list|()
operator|.
name|getAny
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|Element
condition|)
block|{
try|try
block|{
name|o
operator|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
operator|.
name|unmarshal
argument_list|(
operator|(
name|Element
operator|)
name|o
argument_list|)
expr_stmt|;
name|message
operator|.
name|getMessage
argument_list|()
operator|.
name|setAny
argument_list|(
name|o
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
comment|//ignore, leave as a DOM
block|}
block|}
block|}
name|this
operator|.
name|callback
operator|.
name|notify
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

